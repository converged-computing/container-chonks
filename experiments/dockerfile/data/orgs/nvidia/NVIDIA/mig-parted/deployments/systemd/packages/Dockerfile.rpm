# Copyright (c) 2021, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# build go binary
ARG BASE_IMAGE=undefined
ARG GOLANG_VERSION=undefined
FROM ${BASE_IMAGE} as go-build

RUN yum install -y \
        ca-certificates \
        gcc \
        wget \
        git \
        make \
        rpm-build && \
    rm -rf /var/cache/yum/*

ARG GOLANG_VERSION=0.0.0
RUN set -eux; \
    \
    arch="$(uname -m)"; \
    case "${arch##*-}" in \
        x86_64 | amd64) ARCH='amd64' ;; \
        ppc64el | ppc64le) ARCH='ppc64le' ;; \
        aarch64 | arm64) ARCH='arm64' ;; \
        *) echo "unsupported architecture"; exit 1 ;; \
    esac; \
    wget -nv -O - https://storage.googleapis.com/golang/go${GOLANG_VERSION}.linux-${ARCH}.tar.gz \
    | tar -C /usr/local -xz

ENV GOPATH /go
ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH

WORKDIR /build
COPY . .

RUN mkdir /artifacts
ARG VERSION="N/A"
ARG GIT_COMMIT="unknown"
RUN make PREFIX=/artifacts cmds

# build package
FROM ${BASE_IMAGE}
RUN yum install -y rpm-build

# envs for packaging
ARG PACKAGE_NAME=undefined
ARG PACKAGE_VERSION=undefined
ARG PACKAGE_REVISION=undefined
ENV PACKAGE_NAME ${PACKAGE_NAME}
ENV PACKAGE_VERSION ${PACKAGE_VERSION}
ENV PACKAGE_REVISION ${PACKAGE_REVISION}
ENV PACKAGE_VERSION_STRING "${PACKAGE_VERSION}-${PACKAGE_REVISION}"

# working directory
WORKDIR /tmp/${PACKAGE_NAME}-${PACKAGE_VERSION_STRING}

# specs
RUN mkdir -p ./SPECS
COPY ./deployments/systemd/packages/rpm/SPECS ./SPECS

# sources
RUN mkdir -p ./SOURCES
COPY ./LICENSE ./SOURCES
COPY --from=go-build /artifacts/nvidia-mig-parted ./SOURCES
COPY ./deployments/systemd ./SOURCES

# envs for rpmbuild
ENV DIST_DIR=${PWD}/SOURCES

# output directory
RUN mkdir -p /dist

# build command
CMD arch=$(uname -m) && \
    rpmbuild --clean --target=$arch -bb \
             -D "_topdir ${PWD}" \
             -D "version ${PACKAGE_VERSION}" \
             -D "revision ${PACKAGE_REVISION}" \
             -D "git_commit ${GIT_COMMIT}" \
             -D "release_date $(date +'%a %b %d %Y')" \
             SPECS/${PACKAGE_NAME}.spec && \
    mv RPMS/$arch/*.rpm /dist
