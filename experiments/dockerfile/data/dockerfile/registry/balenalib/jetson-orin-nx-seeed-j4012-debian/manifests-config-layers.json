{
    "manifests": {
        "20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e927e5ecc422394cfa06d5c5360670a3f614f8e27adb639edaa94dd35a06ffc5",
                "size": 8358
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2149d6f4e3fb542c669bff24796e40aa7cf995916bc195bf844138d81f64e58a",
                    "size": 14278884
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9927d8f8cbfab0a18fd5ae74f2dd9c0798e0dff475b09f3e69ac816527ca120",
                    "size": 473
                }
            ]
        },
        "20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:484e9660e8167ecac44dc4cfdd201eaf32d066e86a07c328683329ec0ecbe0c2",
                "size": 9047
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79c3ba6adda4e77727f944ef759fa768b6de11aa7afc5e39c4d9d9c339edd3ad",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f69d467da32c948b4d5c98dbdcb05856d3ecbdf27baec3d931a72b8e18650fd",
                    "size": 14278700
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1589054c5f4aa700f7e5cdce9ee60a2682c6ce7e7400f6df85286f1ff5df22b",
                    "size": 473
                }
            ]
        },
        "20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:296de75b88662b6c1ce2d16641180b0e80919070abeccfa7c50de1af80f4e70e",
                "size": 9043
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3b02ff1abe5dfe9791505936f93c8316422232986a64a09149fe3aabb8be2d9",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:759907076afe713c4234fb5987290ccfa61dd49daebced99e301665b885062d3",
                    "size": 12975152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d19c37c9190edbe13b45b66a2b8056c396ee43a72916ba1d9ca757dc398c27d",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdba65c7a86f749c1d475ca45f2a65c80d5ad0525db04e84db2da8803614bc1b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9f4c9bf8626165f2f2e675cc143ca800c95ac74558ce5c1cdc0928136b2a45b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33c9823ab36b119e618993bd63dbbc9cfebe37d67ba4ce036ffe5203e4de0be7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd83e03f85224ec03d743a072160fb9deddd86af0bf9cd2e7b6a4f2dbe221b58",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a42f72c7f4eb3e1399bfe85d2f32518ba7277a04b897820a0030797b4825d57",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5324c9bc68271cfdebc5291757fad42a9cd8e644ccef3fa6b3820e6dc0e61cd6",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53c1ea87a6a881a89e145cbd3e147fd9afe4a9f1ec9a8eef5d41c8c63791882e",
                    "size": 4354
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:36abaffc965899044fa98f3763721cc53c963360527eb255c3663bbbc471c07f",
                    "size": 12066177
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7930fe0608215cb271e2c63af870e56f3f6a0f113732cf41262767d5c71a3303",
                    "size": 470
                }
            ]
        },
        "20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:604601b43d47bc7ae07443a79c5a3af96323a9d09f14b3fad392560f9bb5d778",
                "size": 9045
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4e883aee71b5ef97bf1ffdfd139669e73ef006c560365d29cabde27caa6b13b",
                    "size": 12975050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f03e14fe93efd751580a2d51cb4489a57eac27b5db895225befd9a2299711fd",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef2a23d56797032756a4a8e8bd01b2c71a198c10e4e75e46bb3508b707d88d5",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de945cb97c6374ff7ea085bcb2edf737114d2f71f921c9a5a72c2168a40dfaad",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f482a15b31fc59f209b49b1e3bb7a58f1c350c673db22910a5cfdc4dc3ae6685",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9571608af5da43a8c78a43bfb08a829b5fcafda5e8292e393472cabbf0f804f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9614d73f006a2cb00875772e38550a822b7ee1914fa1a3a9ca724b0f0acb02aa",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55d55aad7abd855b5bd072003c07952d0f3605bcd5c55718c85dfbe5501b78bc",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92bc401a1e1b26ffde9f671ea641347a5ce4f5cae81e66a0533e2281c2b72dfe",
                    "size": 4348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7deb7f45590d0fd876ecc8428e3085a5efc0d65017f21b5b085725602a5aedd0",
                    "size": 12066139
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:665f1b57a385a25fbe1819fe1d331dbcc2b13888d7416f65c029cf44d25e1b9b",
                    "size": 471
                }
            ]
        },
        "20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5412e39ae855704a094461bd6b1d18808779a011bc7cd0408a8fa6b655cdedd6",
                "size": 9032
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd08d71f9e4be4f65e14231b96b47eba749b90731d6ac89a6b122102497f0520",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ced2846c7ce7b5358d8d1ca581b422091108201a9283aa8f845b5b6acf13b45",
                    "size": 12975074
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc714b302c222d2337d2a96a68bd0f8e2f6e8b6141b063613b4201f1b9bf88ff",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91059ecb4797f7ed53ba6123bc3708c97ed915820284c6e9ab28d76f72973580",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10793d475cc903a3e7298e67feaaaa5b1ab39b699349227473a13d747c7bebd1",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7e5860cbb43236bbbe750bd6abf586a8856e076ee2e1c38f33fb4bc6cc9129f",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3528b47aa83bdaf2eca21dffd496e9b26a4c6c17e7ef544f7a136ea69eb5b829",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8d887e8d98a1d19fda084161bdcdc428bc666757604d237cc331b3e96e3773b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c42376533b2b7356cd47d1c5d2930bb9f16c8bcf09939ec53070c484056a89",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46d42b86d83acc3c85e0cd9d3619e52d2f71bb1012554ba439b8130c268c400e",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ae6e9928d2f3fb57e1bf87b3826ef4e62de0c2429e070a926692ebd6ded16cb",
                    "size": 12066219
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dcf0f9ac43287600032b6fdb0fd23473501d9ce0bb1b530e9b75357cf3083d2",
                    "size": 472
                }
            ]
        },
        "20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5d2c8ee2403be9a704471859ceeaf5552dd327e4000753b257984e8e54e7b302",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a0e48841b8e49c36f6b1a8ad4efb4d37c6e10ef8dde5cd91f4dc437d1d8405",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55a1946130ccc17b581e6b524cf631bab9e5fcee60de01f0d39244a87686b92b",
                    "size": 12974885
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9858c7c5616b7ed0d90d6fd0d87ceef7f797f9d35758625edeb82f9e028aec60",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efe8622a8e40ac44137b3b5fd0dc0f14ad5e810e0338dc547f692d8b6a35c977",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c78e7355e42143ed74045da95e7de3ad92272199e0776d1b7228a150a65f47",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75b07c5fa13c3200be81dc39d20abbff29122ce62e20ebfe91047e7eaf0fbfb2",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a595d9ac359dba0005931f718e650d9edb7c0a1e3f6d9d8acce991fa76ed260",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95af7d2de70e46a0ae3136c3e62f38101bc59d80d433aa5f5bbde3da44a6280d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15bfc11c903d27a21ce686bae35210aa061831dd4dbc80e0104e5cc4ac5d9643",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6120ccb46ec7e859461fc3b627f8990feba50718c40e5d2514cdf5003b3b209f",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f7945167d47fd27f19952205115bf19585854eb8334ebdacc29a10770a0898c",
                    "size": 12066011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6df31fa7fc0063789e872ee0f3065f93a31cd2968f2cc85c5d4933b868ddaa1",
                    "size": 471
                }
            ]
        },
        "20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c9657028c75f7c4fd7622eab2d613897e821c9eb50f06ddb6e4a45d9d5ccb03",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92d71e77360b6b88836dbda2a6f21ffcc3338fbb8a977bb0b4473d74a583a847",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0ae8832f513d2ba418d3608195baacfd0d7e510b94e834eaa6fe33bcdb44d30",
                    "size": 12063939
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f842e85cd5eee36f0819ba2a6ba662f2e139e0ca6e16b13df3535e291c67182",
                    "size": 469
                }
            ]
        },
        "bookworm": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f8d8e29c9c966cae731117fc0612dddbf5f5477b0fad6f6bbed7f0a7074b9ce3",
                "size": 9029
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d97f6a5d13532e867231d23d92620a81874d51a456196be50154eeb32edc08",
                    "size": 29179935
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08716b5fa8a8dac5841f12bdc0f31f54a3da830bf70141133f8b255f449333be",
                    "size": 17295027
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707b3d6c371920b46276983c9a35f9680115a8ad4a7f82225ed6cf6c76b8d41b",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31a3dc6ecf78d0ebc1a862ebfeccbdb6939c1a0cf8ab2b8037d0aca0f2437f3b",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f660eb8a77d80d8a5a87d71e115c39cd0576f6873d9bd48a8b6793b854175762",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:816d20494215f3bff15f5cd2965cec4a1413966bec1ff4ec002dc9a679cae73b",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:970ed101c6a8f4095e4e06be742d325311d65ad843eff671ab7de983a7f96cc3",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1327e46d226352fe2f149d16f29321beb31604d092f1f1749320db5badc17a4",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fd33dd779ac3b2106c4698d36c170f69458794dd9cd587e87a5846d4c1e49e6",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b6c266bf65d962faf38ae880746517b842c5047f9303acf9bd17257b0d9f8cb",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:882fea0319c56dba0e15bbbcbddf8f8f226a66b8281868a64d26475bce5a4990",
                    "size": 12458514
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ff7f17f667ebbabb9286de872e2fcd70dd8775518c00b4a86d0a6048fd07642",
                    "size": 471
                }
            ]
        },
        "bookworm-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1c7e48a9a33fd4223d16e054fbc5562a597c12ca8040fd1051c747c29ba2558d",
                "size": 8358
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d3892798f8b99159e3c1136799bfed560027ce451b50d57d961f4f02577ff5",
                    "size": 29180832
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22069614d8d2b1e1dafd01c41d152b132c654b98ba235d377a890142ff429b66",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f1e5cf9e00a7902e00b008334219b4dae959090af2b16675f3f2f720532deb7",
                    "size": 17273540
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4c4da917d07212eb3e7f85700575e40991d76315cb22f1805cbfbfa85b662b6",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e5bc3830aef79da8b1044f04713b4788900bb31cff4f080f19351b9bfd86b8b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a0744c44cf23afb818633a88bdb1ddcbb9ccf74d19f52e7e193f28395b5d511",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:084eadd63883d9b6ca3449d2f98a6ea2d0f1bf317880dbbf30103967fa9cacf5",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ffe3db22496cffe06e688fb7689a5d391fd57d5b4ba6102ceb2d1128baaebd4",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46e10719b76d682284f64b11ad7447c82d5cdecb3ffb5ee720779a55ab7d60ce",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0674ad36c00d191ad5d966d21d2566ff273b95573cddc81b7f7fd537f899f35c",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9bfe42a4ed1614b5546f5a7437a682717602ff02095fce65714b5b9bc3711b33",
                    "size": 12458371
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9dcd26437122e0c8ce7a3ef584bf25709c1e73849f548f1fb5ce4b2bc4cf124",
                    "size": 473
                }
            ]
        },
        "bookworm-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6cce782105ca38e5d68299e63255b17fe87f579cc01133aab3879daba1d6d873",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d3892798f8b99159e3c1136799bfed560027ce451b50d57d961f4f02577ff5",
                    "size": 29180832
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22069614d8d2b1e1dafd01c41d152b132c654b98ba235d377a890142ff429b66",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f1e5cf9e00a7902e00b008334219b4dae959090af2b16675f3f2f720532deb7",
                    "size": 17273540
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4c4da917d07212eb3e7f85700575e40991d76315cb22f1805cbfbfa85b662b6",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e5bc3830aef79da8b1044f04713b4788900bb31cff4f080f19351b9bfd86b8b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a0744c44cf23afb818633a88bdb1ddcbb9ccf74d19f52e7e193f28395b5d511",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:084eadd63883d9b6ca3449d2f98a6ea2d0f1bf317880dbbf30103967fa9cacf5",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ffe3db22496cffe06e688fb7689a5d391fd57d5b4ba6102ceb2d1128baaebd4",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46e10719b76d682284f64b11ad7447c82d5cdecb3ffb5ee720779a55ab7d60ce",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0674ad36c00d191ad5d966d21d2566ff273b95573cddc81b7f7fd537f899f35c",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a94b120074a6d18e8f89789b5266044d8fa05844ff91bfc9e196d9955d9a752f",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25731c9a0575cea1dfdd5dd73b8a771a22793ebe5164f206926c4ed531dde646",
                    "size": 12458347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85699debf9958e8fdbef81c2daa6b567708a8a239df85a7e14d67fef8f60d741",
                    "size": 474
                }
            ]
        },
        "bookworm-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cbbcba07dd1edcc0df52cec53564742ee21ad58d1a990047737ccebb75f2ec13",
                "size": 9044
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f546e941f15b76df3d982d56985432b05bc065e3923fb35be25a4d33d5c0f911",
                    "size": 29156363
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8440b90072f5ddf2b3a5cc44aa712305ddaaa3a499515c126bf7897cae869963",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7429e5f92c211b44f138a644afb74ccaa1475b6f1a4f95e870dc47eaf805336a",
                    "size": 17291102
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:28b55e040c13344e0180fe961d66474a7a824da112b5b04a9efe022ad7b8cbe4",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ff418b76b81ced646377e5144cb3c6e64855ad72a8094924a4adff2d55b8cf4",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32ce0e96c33ce0b25fa917bdaee0892501cc39098d254878ef647809ad250f12",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16f62a7d423456619f8e8f6ee4fefd83ab831b40ddc35bd276bf11fc71552839",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9eb1f910289b61fefe4c7145e16e9859c20895ac646dcc3b40c0918f734ae17",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5b70e90f9506e910bc421205adc0c978b3c3389bbcd0858c5c9b44421a52c6be",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78efa179cf8468ff2e8295822c76e8828a09bf51493689655ac9d74dc722684b",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c7159fdd1fca6279f5a4efac14edd52040e62cdfc48be4d46e058be7ecd1977",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d40906522c57549d2bff98aa185e1a721c49230d816fc1bd0caf2c87f71026c",
                    "size": 12458518
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:120f80cf5149bec5b0d0f87b94235e8bf9ac9e7b34ac3cd7eabc0f7184eb4d7b",
                    "size": 469
                }
            ]
        },
        "bookworm-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b6b22cd4a626364cf7db8c9f5c8456003ba4e9f60d7b0e5f4dc80e68f2438e4b",
                "size": 9046
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f546e941f15b76df3d982d56985432b05bc065e3923fb35be25a4d33d5c0f911",
                    "size": 29156363
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e800a85078ae7f67f3aa27d4f7232ccefe892223ec61bb36f7afd7f90bcc45c",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32309a8011bc1274781616b4be13eefa5499c77cf8bfc6f3076ce3e0ddfd917b",
                    "size": 17291043
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:97d7090362df78d466f9190e06bd71fcc237a681dec956b3621a20b1e415c65c",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:67510a8ec989165dd38736bcbb8c1840ccf684a59e5c3b2fc13a3aeb32275b31",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:907cde37128c833ba7004720ffb574fef7fbfc3d404664e2a53a530bd663a6a4",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc358e5ff00366d28275b125563e5006feb44ad171f01d734000d8c65fda4c74",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc5e95871931dc2b21adcc9684eab6071e5f29b3a96403eccba366756f469421",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c223d83464ff8f9a3c5441e15ef4ba9161f078a757682e057abdbca6c20a01e",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a157128dc3d8e991b45944b6188a163c93dccf448c830ac310f07ebad350165",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c017503abc7251a0e840749f41cad57cc9f0011942d009c528eb91cd33357cb",
                    "size": 4350
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c39fa3bb322d37ea59fbe37e6a088a4ed9d5261177003debb57cea2fe69ecc0",
                    "size": 12458496
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1f7881872ec47bde51c1b59b80cc5e197742114194ee40045ee4a9ecc279ea3",
                    "size": 470
                }
            ]
        },
        "bookworm-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ec5d6a7e3c308ff1b41227d85b5dbfa337aa3151754f9ab3e920204705a4d2ba",
                "size": 9034
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f5764b1f6d170ea07ca424965974024a14970ff826e9ffa3489c90dc040c24",
                    "size": 29156434
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91450bce0ec14ebc0a122b25141e10506f4769bca9e06f74ee4089baed5340ef",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b78547d2411f55322cb033b89fe4d30349d950b0505e6766c92d76fe032e446e",
                    "size": 17291107
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5fc3f1f26f8b59cddf39ac0a0e8fdeae71593ab5936f9b3d06973e02ec4b19ad",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:488f4edf6c1cfaf874f5b398ac0fb9ecfd19f3d1420ab593aef8497d19611a22",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc36d679b21baae7c2264d50eb37360ae1e0b470779a8788cbecd70ea09e574f",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:019760aa07be10ca58cd3576aed2e432ff9e599e9b5c90dc07943b7bfdaea7ff",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f42f6e9fbc5b750e5fe424587cbcafc4d4bb185dc62678ab031d04e27cf4d271",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c44ab3b6ef2c95d5f7a2794f49df47e851805fe0b0c88f18fe4745dcd05de83",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e710365fac4f74ff84332ccb7510beb82edc7e05c4be21dc53fb84626f505e1f",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6427a0130041dad922fa574dc30b5ff0e5b5aa20da9bdf5a308d8d50aaeda99",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:996d44372b20c7d2ca6ce77934508b5789cd93a0b1e2919ffb6e5ab09cf3bdf8",
                    "size": 12458553
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:127b615afe25e0a22f04a58c56722d80bd9a85422d2bda5aee11d56bc17fd7d9",
                    "size": 472
                }
            ]
        },
        "bookworm-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c4ba91f06dfd24e18d3429936e11653764dac9bd80db41d8acba9ef00fc7a9d9",
                "size": 9031
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f5764b1f6d170ea07ca424965974024a14970ff826e9ffa3489c90dc040c24",
                    "size": 29156434
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d25f96231021b5dcdfc6f17458892f12f71c910cc88f63f29dc071efbfb8f8a2",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb18e33e1cafb6f9d6e42633acb9b3d88bde59039fa9eea07a6d1721ed717087",
                    "size": 17291138
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d20bfb20cea478be56142533eb3913cc4926be97a8bb8d6f3aa1f4216e31495",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e19e63a023809499cf82eb5d5f248663666dd33b9ef2cfde3de11eebc66d034e",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86ebbdeb7b51b2170c1d43b47068820392ed517076b670147107730a7aa51c44",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:479634a3547768dd871b09166a515e995681aa46371ad1e429a3d6a91da463f5",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcab80059af90d56875c035653f2e3fbeb918fc69bdcced6433c73df985ac152",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5442132ede36f409d268414f7237498b5c1216b1411e94801666fd83c68ecfe4",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3ce9eb5ac756f15aca1e8e0c4f39a4db2bef4fdc12880d2cc39e0e81af3bd9b",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8de4e3756b45ccb721eab0271f1fdf73454bc6795f40651407e4915b70922ac5",
                    "size": 4350
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56cc140e410b98a44411f344ad526308c7c98b2174bba2cde52981cb68ac61cb",
                    "size": 12458649
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dfa4c2f7db51002462db67b94e4d64a3443f4fbfc60bf70950c3ec9e5e7e79ff",
                    "size": 472
                }
            ]
        },
        "bookworm-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f8d8e29c9c966cae731117fc0612dddbf5f5477b0fad6f6bbed7f0a7074b9ce3",
                "size": 9029
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d97f6a5d13532e867231d23d92620a81874d51a456196be50154eeb32edc08",
                    "size": 29179935
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08716b5fa8a8dac5841f12bdc0f31f54a3da830bf70141133f8b255f449333be",
                    "size": 17295027
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707b3d6c371920b46276983c9a35f9680115a8ad4a7f82225ed6cf6c76b8d41b",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31a3dc6ecf78d0ebc1a862ebfeccbdb6939c1a0cf8ab2b8037d0aca0f2437f3b",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f660eb8a77d80d8a5a87d71e115c39cd0576f6873d9bd48a8b6793b854175762",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:816d20494215f3bff15f5cd2965cec4a1413966bec1ff4ec002dc9a679cae73b",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:970ed101c6a8f4095e4e06be742d325311d65ad843eff671ab7de983a7f96cc3",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1327e46d226352fe2f149d16f29321beb31604d092f1f1749320db5badc17a4",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fd33dd779ac3b2106c4698d36c170f69458794dd9cd587e87a5846d4c1e49e6",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b6c266bf65d962faf38ae880746517b842c5047f9303acf9bd17257b0d9f8cb",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:882fea0319c56dba0e15bbbcbddf8f8f226a66b8281868a64d26475bce5a4990",
                    "size": 12458514
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ff7f17f667ebbabb9286de872e2fcd70dd8775518c00b4a86d0a6048fd07642",
                    "size": 471
                }
            ]
        },
        "bookworm-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ab97823b4b03d18501eaf334eafb562162017e0c1d71d09c8ad40a8f8eb6a14d",
                "size": 10003
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d97f6a5d13532e867231d23d92620a81874d51a456196be50154eeb32edc08",
                    "size": 29179935
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:808423f49e64d17ef6b295f72e203353559e27a632d6cc0c0bdff99024a0cca4",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c39dec34bc2c5aed1bf661eafec40178bacde431c055357adb5f208c652f441",
                    "size": 17295095
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8df9f86e854b5f331d6b082bf72d029678a866b2f0b7b2a1083b1a56d4b2729",
                    "size": 235017563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac0d073a69c158df65f9a9f80abaab3372b5e1fdf3240d69f8b4b13d21f47af4",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:284ef30e3160a6ea3e296c3574ff5153d441febf4015d8030e0cf3e21aeee912",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f415827183e08da6837e069146285665e860787daa8c7a79ddc0b11663207415",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab0d0c5a6253847fbf508b52647cd500afa441300588b0a752f1ef9a93196c6e",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f82a4b9b283623f9d283f79e12b2cae49850a51b4d70e6cf1f004f4df2c61d81",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a2ab8a049f67ffed970a5cccc56dffb288443f37980937840b02432755e1e94",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7cb121812cf852cf05746939c05eba760e654cd434baaa8ed3e3e69f296f3620",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf9e4f7814df264835c74ad2e21a6d5ae35fd3f958592fdd8f9d1a2ba1ba872c",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44cf7214e294b0aa75ec822642cf15936916a9d4e6e8c15296cc504f501a4acc",
                    "size": 1177908
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a523072b657e369eebfd6bb46da6e29fabf44ba866fc1e566be9417eb085713",
                    "size": 471
                }
            ]
        },
        "bookworm-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c9cbc77d138a23256cf1ccaceb278a6fb692b31d2eca3e8d7b6af4232c22a7fb",
                "size": 9334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d3892798f8b99159e3c1136799bfed560027ce451b50d57d961f4f02577ff5",
                    "size": 29180832
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22069614d8d2b1e1dafd01c41d152b132c654b98ba235d377a890142ff429b66",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66347343106088351a16e07b492f2033e8faf8542b82791d6ac8cca23afaac1c",
                    "size": 17273507
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09a3a1e94ea04a826ddc0ce63493eb99923768d4c7f29a20b1d489711fae172e",
                    "size": 229229406
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b20e38a8193f0aeb12d6ac5e9b52b9cd32729cc6c489d6ec187e8fde5be0572",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aeec2d3b1227a243fcb201cf66d1c85c7eb66596477be0aa3bfa7df7cbbbbc83",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3af674f03068129934029ed6b31ae5add0e5210e3770a002ae5c5d9c0cd74adc",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85cb7fa8b533ce087bafbb0becd0a58fb36151e5040ee20ca0cc62b532a9cdc3",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:107ffc46127bd35ca0381c88a3f2fb4a3ecb03036dcf0974e718fce5b3c33e27",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7b5278932798885d4922c426e9a2f2506d531fef000848e774519fa47df6fac",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb47b4ea91a9083e66c7e5ce8b123e88af334101fc31d3c09f6e51785fc4b937",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46cfadf8090f2347626095ea8b1029c4e6e2d2dbf0c87d584cf9a7523302535c",
                    "size": 1177166
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aa835cf979770460c194a860ce7a7d6ab8d99aab65288f8e7760f88274323cc5",
                    "size": 474
                }
            ]
        },
        "bookworm-build-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3a1858675d5c6caeea74f245e6e0004e92485a24487b62ff3c64455db4027872",
                "size": 10023
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d3892798f8b99159e3c1136799bfed560027ce451b50d57d961f4f02577ff5",
                    "size": 29180832
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22069614d8d2b1e1dafd01c41d152b132c654b98ba235d377a890142ff429b66",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66347343106088351a16e07b492f2033e8faf8542b82791d6ac8cca23afaac1c",
                    "size": 17273507
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09a3a1e94ea04a826ddc0ce63493eb99923768d4c7f29a20b1d489711fae172e",
                    "size": 229229406
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b20e38a8193f0aeb12d6ac5e9b52b9cd32729cc6c489d6ec187e8fde5be0572",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aeec2d3b1227a243fcb201cf66d1c85c7eb66596477be0aa3bfa7df7cbbbbc83",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3af674f03068129934029ed6b31ae5add0e5210e3770a002ae5c5d9c0cd74adc",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85cb7fa8b533ce087bafbb0becd0a58fb36151e5040ee20ca0cc62b532a9cdc3",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:107ffc46127bd35ca0381c88a3f2fb4a3ecb03036dcf0974e718fce5b3c33e27",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7b5278932798885d4922c426e9a2f2506d531fef000848e774519fa47df6fac",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb47b4ea91a9083e66c7e5ce8b123e88af334101fc31d3c09f6e51785fc4b937",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bebda453561ddddfc161c5cf71809eef89907507a28e0ccd31daf71c7f98713a",
                    "size": 4353
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:846157079f6330b1c4bc1fdaf17f3f8e3c6973695563d8e8801690712d8c769f",
                    "size": 1177196
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:328a036b74bf7aeaab1f1427c569771960d7be38d925003688e7ab8ac95af7b6",
                    "size": 474
                }
            ]
        },
        "bookworm-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:be243d1c1f8cac791c3625d8bd2d306ea24e288f5f6b9ca1c7cc5a9760040b6e",
                "size": 10023
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f546e941f15b76df3d982d56985432b05bc065e3923fb35be25a4d33d5c0f911",
                    "size": 29156363
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10158869648bba4ab22fe71fffd940c1526ecc20bdd01c533ff36825e5ec95fd",
                    "size": 2592216
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1de25cab7f01661221356f745a81b66df6ea503f9d3c4d09c372b19cf1d1852",
                    "size": 17291255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0487ad88fe75223e784271134fc7820764e5b0d191cbb8f5dfbd436c450fd815",
                    "size": 229238598
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2aa8212993bc54985488a64ddd274286dceaf86efb8e7148b592f278d88c4620",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01f811ce1874bcd8ab99ecb61949119f8725c5ec1fc6ff4af7cfdbd63e11b266",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c31e988a5b008efafd64f9baab9639a27dcc22f714ea40825fb7a3f28c312feb",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b69a5bdd70edfdb1dd8681c22af3b62328b9b8d683bf8ceb80e89cc91ca5c8e5",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ffdac86cd97ac841b0566abaeaf53eaf0eaf31c7f32c0802a7cac820cba4d28",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa00a1b9731245ce6b5e954912bf3bc13b652aab00e591f3afb4c1ea20ead10c",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4820af98bd74884c1861f2adfa9f8d5186a9698b4c56efd13704b718658d0879",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b393501f82fd4af75287e944dd093f2b4b920b35d1dba11a6213e764499774d",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b10b07672f7ce0a091da3d285730b23dbec5ec06a01d2dad19f9c48a6cf9f0cc",
                    "size": 1177385
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c83bf00a8f1d1a28c6e9bc3c0015e976f78443144f837a0d359e452bcd10d357",
                    "size": 471
                }
            ]
        },
        "bookworm-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:810c7d2e741979cd86e8d86891ca4061454064b6f2192e441c6671a28016fe19",
                "size": 10021
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f546e941f15b76df3d982d56985432b05bc065e3923fb35be25a4d33d5c0f911",
                    "size": 29156363
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7fb4092ed45f90f756e5616373ba9f1b371f83653aec14f40f8c4f898004c9d9",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37b94fe7973eb4190eb1eea9a6bab9809067b86d40a1303e07f7bef54513b46e",
                    "size": 17291096
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39e017d2f8cc21b026845424cbf4b979fb7e1f0466e45ff78d5943a35958780f",
                    "size": 229238744
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9138cc4c084667120af9bcb0bb3f36876559e26732ab8b17553d142dde900576",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4712502da27ca7b8f805ed307245ba4c77b5d5e74459968ef59d522feca9676b",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c88124fea14316c882b6807bd55cf64b582f8302ee7c45b80a42d5f381e6a4b9",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f22a4b7b7dffdf8c613d78c62c28f881708e3894f19ad9a6ce9651225996993",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:60b2b2ab5bfe45c22594e1356a956c0b62a0eab765bb4774fa1acbb91595fe19",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdd70c9bfbbc490040b46495baabcfa2206d33850a71707990b8e4a82d8daa1a",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd068792a3916adfc505c16be110d9d3c1aaa19f47b37e2e6a2d2e2156ccec35",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a4161ab4e7431f1e812b16c0aec95f36d2633ae63451a775e48e891cacd4ef5",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74433f6179c607ff93e2ccbaa60addc852e6898255530d5c2d5d061f0bc73452",
                    "size": 1177411
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16c3d9481a9a0acf9f17c055a8f21f6323b093290c7f444baad444199b6fd6fa",
                    "size": 470
                }
            ]
        },
        "bookworm-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:40b1e950fb25760ec6e556af101c9dd4d68918abcd4a289a294dd524babfee69",
                "size": 10008
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f5764b1f6d170ea07ca424965974024a14970ff826e9ffa3489c90dc040c24",
                    "size": 29156434
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33da92ea60e23811a87625226b9e600a8bc0127ca64388a40010dc94470328c6",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6c0b4cd12f501a494916ae968cec58fa7b22db3b28300928b809a4c3fa18d09",
                    "size": 17291183
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7be111a8a531d01aaaa6d3f4c797d2ca72ed282b4ccd182eb6449b1d1927799c",
                    "size": 232258017
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d625a78e3e3dac079cc6a56b3c95eeba9b4cb55fcb0cbf56824471a2c580f90e",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8acadf268d79f3c2316c257697ffa60fa8457a87a62be1e76b33b1b24c80766",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c843d3190475faeaa4c874e8c7c86e18ac89972ec2f9bd7440b099eae3125a4",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a873bacb6591769e6db43053949da608f480b308f090dbf68c1a8fe8a351298",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00027e804f079f4c3a482625568ce7765a920620543c425656cd5a2122102556",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a03cc2997998e6e60eb2bb472631ae80662cb3348a4642d4fe0cef0f5c861504",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cc5491651050fedf7bb34f3ca3e36f2cb936c1635cd06a24755e362913716aa",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3fb129f8c5afd250553f43fe7e0e81501015f284ae660d5ca1426184394b62b5",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f2cd574ab7929052968f1cba90dc0b13c49faec57292ac53017909aa762e105",
                    "size": 1178309
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6044d00d6e648016967ff68fd18fe2e0df9d5e0c8497d7708880caad473260bd",
                    "size": 473
                }
            ]
        },
        "bookworm-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:10a61d6ed785660299c6b7cef84a5c79aa692de14a10a25b1a91ccdad3583f7b",
                "size": 10006
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f5764b1f6d170ea07ca424965974024a14970ff826e9ffa3489c90dc040c24",
                    "size": 29156434
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bdfbb4fb728f6794c23ee8d5ba2722743cae1ad303f64fc933068d748f5c445",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7145248d2af1b8f7c4c2277e38b0a3ee949422ab3b686073028c47482e0d065",
                    "size": 17291179
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:06b5eb7f4e0fd95aaae0bb3b6e39651e2b19d67e0496d87bde2cd288d0d29db7",
                    "size": 232257717
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5565731500a80296519b60eb00a21a114ba0cc388d1006b84db7a683d4990137",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38d97d9fa042c6b3707691c915c2dfe482e63cae34ff8c416aded5a59689779e",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5e6ae6a61551024092c08cdf53390f3b415e395700eec097939f1dc1033a3c3",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:414b96251c92e123c79e97904a2be1a14a4dad7960270cb8da0f10dc9f9d751d",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1d1fd9f3f7a0484bbf636984b08a6c8bce8cdac318137ee46cdce5dea4469e6",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f30f2bfa377f86d951d358135fe4c23b05ae32c403bd80a3662d31b0c4912dbe",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d682904173d00a6f756226f9c8bf600b1e04c8f2c8cd9b7fe51947bc0864b32",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cad487bb5e41b18fb3e5abb2358532ef309406d9048c6bf47273ebf572db2e87",
                    "size": 4348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65ac86aa56cf6ae10940ff61e7d6553b890cfb7d5fea7f744ec47bc84cbe8185",
                    "size": 1178247
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d946ad0d6b4b7e87064ea96fffe0f71cb745b82a1f2ae917abb8a2eb7438480e",
                    "size": 472
                }
            ]
        },
        "bookworm-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ab97823b4b03d18501eaf334eafb562162017e0c1d71d09c8ad40a8f8eb6a14d",
                "size": 10003
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d97f6a5d13532e867231d23d92620a81874d51a456196be50154eeb32edc08",
                    "size": 29179935
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:808423f49e64d17ef6b295f72e203353559e27a632d6cc0c0bdff99024a0cca4",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c39dec34bc2c5aed1bf661eafec40178bacde431c055357adb5f208c652f441",
                    "size": 17295095
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8df9f86e854b5f331d6b082bf72d029678a866b2f0b7b2a1083b1a56d4b2729",
                    "size": 235017563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac0d073a69c158df65f9a9f80abaab3372b5e1fdf3240d69f8b4b13d21f47af4",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:284ef30e3160a6ea3e296c3574ff5153d441febf4015d8030e0cf3e21aeee912",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f415827183e08da6837e069146285665e860787daa8c7a79ddc0b11663207415",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab0d0c5a6253847fbf508b52647cd500afa441300588b0a752f1ef9a93196c6e",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f82a4b9b283623f9d283f79e12b2cae49850a51b4d70e6cf1f004f4df2c61d81",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a2ab8a049f67ffed970a5cccc56dffb288443f37980937840b02432755e1e94",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7cb121812cf852cf05746939c05eba760e654cd434baaa8ed3e3e69f296f3620",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf9e4f7814df264835c74ad2e21a6d5ae35fd3f958592fdd8f9d1a2ba1ba872c",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44cf7214e294b0aa75ec822642cf15936916a9d4e6e8c15296cc504f501a4acc",
                    "size": 1177908
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a523072b657e369eebfd6bb46da6e29fabf44ba866fc1e566be9417eb085713",
                    "size": 471
                }
            ]
        },
        "bookworm-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f8d8e29c9c966cae731117fc0612dddbf5f5477b0fad6f6bbed7f0a7074b9ce3",
                "size": 9029
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d97f6a5d13532e867231d23d92620a81874d51a456196be50154eeb32edc08",
                    "size": 29179935
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08716b5fa8a8dac5841f12bdc0f31f54a3da830bf70141133f8b255f449333be",
                    "size": 17295027
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707b3d6c371920b46276983c9a35f9680115a8ad4a7f82225ed6cf6c76b8d41b",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31a3dc6ecf78d0ebc1a862ebfeccbdb6939c1a0cf8ab2b8037d0aca0f2437f3b",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f660eb8a77d80d8a5a87d71e115c39cd0576f6873d9bd48a8b6793b854175762",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:816d20494215f3bff15f5cd2965cec4a1413966bec1ff4ec002dc9a679cae73b",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:970ed101c6a8f4095e4e06be742d325311d65ad843eff671ab7de983a7f96cc3",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1327e46d226352fe2f149d16f29321beb31604d092f1f1749320db5badc17a4",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fd33dd779ac3b2106c4698d36c170f69458794dd9cd587e87a5846d4c1e49e6",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b6c266bf65d962faf38ae880746517b842c5047f9303acf9bd17257b0d9f8cb",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:882fea0319c56dba0e15bbbcbddf8f8f226a66b8281868a64d26475bce5a4990",
                    "size": 12458514
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ff7f17f667ebbabb9286de872e2fcd70dd8775518c00b4a86d0a6048fd07642",
                    "size": 471
                }
            ]
        },
        "bookworm-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1c7e48a9a33fd4223d16e054fbc5562a597c12ca8040fd1051c747c29ba2558d",
                "size": 8358
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d3892798f8b99159e3c1136799bfed560027ce451b50d57d961f4f02577ff5",
                    "size": 29180832
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22069614d8d2b1e1dafd01c41d152b132c654b98ba235d377a890142ff429b66",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f1e5cf9e00a7902e00b008334219b4dae959090af2b16675f3f2f720532deb7",
                    "size": 17273540
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4c4da917d07212eb3e7f85700575e40991d76315cb22f1805cbfbfa85b662b6",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e5bc3830aef79da8b1044f04713b4788900bb31cff4f080f19351b9bfd86b8b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a0744c44cf23afb818633a88bdb1ddcbb9ccf74d19f52e7e193f28395b5d511",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:084eadd63883d9b6ca3449d2f98a6ea2d0f1bf317880dbbf30103967fa9cacf5",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ffe3db22496cffe06e688fb7689a5d391fd57d5b4ba6102ceb2d1128baaebd4",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46e10719b76d682284f64b11ad7447c82d5cdecb3ffb5ee720779a55ab7d60ce",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0674ad36c00d191ad5d966d21d2566ff273b95573cddc81b7f7fd537f899f35c",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9bfe42a4ed1614b5546f5a7437a682717602ff02095fce65714b5b9bc3711b33",
                    "size": 12458371
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9dcd26437122e0c8ce7a3ef584bf25709c1e73849f548f1fb5ce4b2bc4cf124",
                    "size": 473
                }
            ]
        },
        "bookworm-run-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6cce782105ca38e5d68299e63255b17fe87f579cc01133aab3879daba1d6d873",
                "size": 9049
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d3892798f8b99159e3c1136799bfed560027ce451b50d57d961f4f02577ff5",
                    "size": 29180832
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22069614d8d2b1e1dafd01c41d152b132c654b98ba235d377a890142ff429b66",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f1e5cf9e00a7902e00b008334219b4dae959090af2b16675f3f2f720532deb7",
                    "size": 17273540
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4c4da917d07212eb3e7f85700575e40991d76315cb22f1805cbfbfa85b662b6",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e5bc3830aef79da8b1044f04713b4788900bb31cff4f080f19351b9bfd86b8b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a0744c44cf23afb818633a88bdb1ddcbb9ccf74d19f52e7e193f28395b5d511",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:084eadd63883d9b6ca3449d2f98a6ea2d0f1bf317880dbbf30103967fa9cacf5",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ffe3db22496cffe06e688fb7689a5d391fd57d5b4ba6102ceb2d1128baaebd4",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46e10719b76d682284f64b11ad7447c82d5cdecb3ffb5ee720779a55ab7d60ce",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0674ad36c00d191ad5d966d21d2566ff273b95573cddc81b7f7fd537f899f35c",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a94b120074a6d18e8f89789b5266044d8fa05844ff91bfc9e196d9955d9a752f",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25731c9a0575cea1dfdd5dd73b8a771a22793ebe5164f206926c4ed531dde646",
                    "size": 12458347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85699debf9958e8fdbef81c2daa6b567708a8a239df85a7e14d67fef8f60d741",
                    "size": 474
                }
            ]
        },
        "bookworm-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cbbcba07dd1edcc0df52cec53564742ee21ad58d1a990047737ccebb75f2ec13",
                "size": 9044
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f546e941f15b76df3d982d56985432b05bc065e3923fb35be25a4d33d5c0f911",
                    "size": 29156363
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8440b90072f5ddf2b3a5cc44aa712305ddaaa3a499515c126bf7897cae869963",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7429e5f92c211b44f138a644afb74ccaa1475b6f1a4f95e870dc47eaf805336a",
                    "size": 17291102
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:28b55e040c13344e0180fe961d66474a7a824da112b5b04a9efe022ad7b8cbe4",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ff418b76b81ced646377e5144cb3c6e64855ad72a8094924a4adff2d55b8cf4",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32ce0e96c33ce0b25fa917bdaee0892501cc39098d254878ef647809ad250f12",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16f62a7d423456619f8e8f6ee4fefd83ab831b40ddc35bd276bf11fc71552839",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9eb1f910289b61fefe4c7145e16e9859c20895ac646dcc3b40c0918f734ae17",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5b70e90f9506e910bc421205adc0c978b3c3389bbcd0858c5c9b44421a52c6be",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78efa179cf8468ff2e8295822c76e8828a09bf51493689655ac9d74dc722684b",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c7159fdd1fca6279f5a4efac14edd52040e62cdfc48be4d46e058be7ecd1977",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d40906522c57549d2bff98aa185e1a721c49230d816fc1bd0caf2c87f71026c",
                    "size": 12458518
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:120f80cf5149bec5b0d0f87b94235e8bf9ac9e7b34ac3cd7eabc0f7184eb4d7b",
                    "size": 469
                }
            ]
        },
        "bookworm-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b6b22cd4a626364cf7db8c9f5c8456003ba4e9f60d7b0e5f4dc80e68f2438e4b",
                "size": 9046
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f546e941f15b76df3d982d56985432b05bc065e3923fb35be25a4d33d5c0f911",
                    "size": 29156363
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e800a85078ae7f67f3aa27d4f7232ccefe892223ec61bb36f7afd7f90bcc45c",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32309a8011bc1274781616b4be13eefa5499c77cf8bfc6f3076ce3e0ddfd917b",
                    "size": 17291043
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:97d7090362df78d466f9190e06bd71fcc237a681dec956b3621a20b1e415c65c",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:67510a8ec989165dd38736bcbb8c1840ccf684a59e5c3b2fc13a3aeb32275b31",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:907cde37128c833ba7004720ffb574fef7fbfc3d404664e2a53a530bd663a6a4",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc358e5ff00366d28275b125563e5006feb44ad171f01d734000d8c65fda4c74",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc5e95871931dc2b21adcc9684eab6071e5f29b3a96403eccba366756f469421",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c223d83464ff8f9a3c5441e15ef4ba9161f078a757682e057abdbca6c20a01e",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a157128dc3d8e991b45944b6188a163c93dccf448c830ac310f07ebad350165",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c017503abc7251a0e840749f41cad57cc9f0011942d009c528eb91cd33357cb",
                    "size": 4350
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c39fa3bb322d37ea59fbe37e6a088a4ed9d5261177003debb57cea2fe69ecc0",
                    "size": 12458496
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1f7881872ec47bde51c1b59b80cc5e197742114194ee40045ee4a9ecc279ea3",
                    "size": 470
                }
            ]
        },
        "bookworm-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ec5d6a7e3c308ff1b41227d85b5dbfa337aa3151754f9ab3e920204705a4d2ba",
                "size": 9034
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f5764b1f6d170ea07ca424965974024a14970ff826e9ffa3489c90dc040c24",
                    "size": 29156434
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91450bce0ec14ebc0a122b25141e10506f4769bca9e06f74ee4089baed5340ef",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b78547d2411f55322cb033b89fe4d30349d950b0505e6766c92d76fe032e446e",
                    "size": 17291107
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5fc3f1f26f8b59cddf39ac0a0e8fdeae71593ab5936f9b3d06973e02ec4b19ad",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:488f4edf6c1cfaf874f5b398ac0fb9ecfd19f3d1420ab593aef8497d19611a22",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc36d679b21baae7c2264d50eb37360ae1e0b470779a8788cbecd70ea09e574f",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:019760aa07be10ca58cd3576aed2e432ff9e599e9b5c90dc07943b7bfdaea7ff",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f42f6e9fbc5b750e5fe424587cbcafc4d4bb185dc62678ab031d04e27cf4d271",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c44ab3b6ef2c95d5f7a2794f49df47e851805fe0b0c88f18fe4745dcd05de83",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e710365fac4f74ff84332ccb7510beb82edc7e05c4be21dc53fb84626f505e1f",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6427a0130041dad922fa574dc30b5ff0e5b5aa20da9bdf5a308d8d50aaeda99",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:996d44372b20c7d2ca6ce77934508b5789cd93a0b1e2919ffb6e5ab09cf3bdf8",
                    "size": 12458553
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:127b615afe25e0a22f04a58c56722d80bd9a85422d2bda5aee11d56bc17fd7d9",
                    "size": 472
                }
            ]
        },
        "bookworm-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c4ba91f06dfd24e18d3429936e11653764dac9bd80db41d8acba9ef00fc7a9d9",
                "size": 9031
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f5764b1f6d170ea07ca424965974024a14970ff826e9ffa3489c90dc040c24",
                    "size": 29156434
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d25f96231021b5dcdfc6f17458892f12f71c910cc88f63f29dc071efbfb8f8a2",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb18e33e1cafb6f9d6e42633acb9b3d88bde59039fa9eea07a6d1721ed717087",
                    "size": 17291138
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d20bfb20cea478be56142533eb3913cc4926be97a8bb8d6f3aa1f4216e31495",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e19e63a023809499cf82eb5d5f248663666dd33b9ef2cfde3de11eebc66d034e",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86ebbdeb7b51b2170c1d43b47068820392ed517076b670147107730a7aa51c44",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:479634a3547768dd871b09166a515e995681aa46371ad1e429a3d6a91da463f5",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcab80059af90d56875c035653f2e3fbeb918fc69bdcced6433c73df985ac152",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5442132ede36f409d268414f7237498b5c1216b1411e94801666fd83c68ecfe4",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3ce9eb5ac756f15aca1e8e0c4f39a4db2bef4fdc12880d2cc39e0e81af3bd9b",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8de4e3756b45ccb721eab0271f1fdf73454bc6795f40651407e4915b70922ac5",
                    "size": 4350
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56cc140e410b98a44411f344ad526308c7c98b2174bba2cde52981cb68ac61cb",
                    "size": 12458649
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dfa4c2f7db51002462db67b94e4d64a3443f4fbfc60bf70950c3ec9e5e7e79ff",
                    "size": 472
                }
            ]
        },
        "bookworm-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f8d8e29c9c966cae731117fc0612dddbf5f5477b0fad6f6bbed7f0a7074b9ce3",
                "size": 9029
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d97f6a5d13532e867231d23d92620a81874d51a456196be50154eeb32edc08",
                    "size": 29179935
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08716b5fa8a8dac5841f12bdc0f31f54a3da830bf70141133f8b255f449333be",
                    "size": 17295027
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707b3d6c371920b46276983c9a35f9680115a8ad4a7f82225ed6cf6c76b8d41b",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31a3dc6ecf78d0ebc1a862ebfeccbdb6939c1a0cf8ab2b8037d0aca0f2437f3b",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f660eb8a77d80d8a5a87d71e115c39cd0576f6873d9bd48a8b6793b854175762",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:816d20494215f3bff15f5cd2965cec4a1413966bec1ff4ec002dc9a679cae73b",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:970ed101c6a8f4095e4e06be742d325311d65ad843eff671ab7de983a7f96cc3",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1327e46d226352fe2f149d16f29321beb31604d092f1f1749320db5badc17a4",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fd33dd779ac3b2106c4698d36c170f69458794dd9cd587e87a5846d4c1e49e6",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b6c266bf65d962faf38ae880746517b842c5047f9303acf9bd17257b0d9f8cb",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:882fea0319c56dba0e15bbbcbddf8f8f226a66b8281868a64d26475bce5a4990",
                    "size": 12458514
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ff7f17f667ebbabb9286de872e2fcd70dd8775518c00b4a86d0a6048fd07642",
                    "size": 471
                }
            ]
        },
        "build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:44493022c19832218dd81d591b2b9dec8c6178416142bd04591d63f9cfbdf0ff",
                "size": 10002
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e679cebe0849bfa7cb31bc37c02c65ff1e2ba1af6c7610130ef4a0662642da9",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8018fd0de9417ceff54d5e970ffba51a3bd4381b66ff525be5a1b8c5ca7763e",
                    "size": 12976453
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a7e897f2afcd8ba780ee63974b25f8796cdaeff7b3253da3c3a8dc54e841c49",
                    "size": 202407153
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d232fe9fe2541d304164f5c0df34e5f68fe7099328fb3de15e15b02e89a54a07",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08abf86fab1b55cb6405a9f9e324ff6f48ef08200bbf35f8d8189e0db23960f9",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1aeaee01325f1a632dcd37d0732234af47f4f122e8a845d01854a7caf4264961",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363f1af776176365556af6c9c3ff5817d8675e57829101a6a0f3779325b85f6",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be1d5d2ac84db3d2f73bccd4820102bf030a95bfca47a780431f6bff75d934fa",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd25f72f3d784a43ae14ac9f58af7e1b42eca095bd0e4697ffbfbd3e7def3e17",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff19cd906c274030a179f0f967ebcb4ba25f4a57a5d79d2777f3591891e59cb",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ae9fc0ab010050fbd2d8882357603d10168615d702990a7790a4d802fd20d8f",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c427262c0499d6b0b5bc104da5a13065c12bb28003c69101a1699ff3c0ac46b",
                    "size": 1157661
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1222253a9a228c6bf4f135ac0d1faf2e5a6502695a11d7b246ffee966233b135",
                    "size": 468
                }
            ]
        },
        "build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f6c58a5d57fd48ac70f138bef628569b6864571c2c95aa5d41dadd0512d6e74f",
                "size": 9332
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84642ed2f5842e77f6ce5b7f04d267c1d999850b7464bc250930f7fd81198663",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18b6f561d414a7fa5d738b1fea176f906742ede82ffbc4fbadca42ea8da00ab8",
                    "size": 12976765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aecc55ca63d63ea52a00d80a4095c0f16fc39e85a3f1cf79f8df391d3ccb3f94",
                    "size": 198248312
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:030eeff4d1ac1b1b9917e3b089c69df05f6efe48cf505703a4cb63782ec5a56b",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ecf8e349dc4b765d6364166adaff7550943ad9eeaffefca4316ac625ff4a7a5",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfc66336b9ad79402a7cf71cabb33b9456c5e145f9a23723e1d849021404c057",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d697352f61ac44c0070abc2678af71534abf040b05ea7130dcc922c022cd5898",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df627d84b57294a6988ae9668cc0c13d6f0abf5a02dc7e7ce41ea92ef3d7e05d",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9842b82317c431cd0b82234e40c31821fa2f99d0b114f0e16bc2e95d1097331c",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f381b65dee23d18d5f7a3ecd6e7e78172fb7fca7276fad534ac20d294b552211",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ceaf17916c987003bb3ca4d4027eae0f6f477a007bd74469ea28eb2429e89c4",
                    "size": 1153868
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e90544b08df2ca7031b63a0cde792cf57a1f91c2dba7c84785f8525eebf1b556",
                    "size": 472
                }
            ]
        },
        "build-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:15a40102962cd9e7bbeb28dd3a7187f61b85dc154e4ddf97e3631b6644f766bb",
                "size": 10020
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84642ed2f5842e77f6ce5b7f04d267c1d999850b7464bc250930f7fd81198663",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18b6f561d414a7fa5d738b1fea176f906742ede82ffbc4fbadca42ea8da00ab8",
                    "size": 12976765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aecc55ca63d63ea52a00d80a4095c0f16fc39e85a3f1cf79f8df391d3ccb3f94",
                    "size": 198248312
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:030eeff4d1ac1b1b9917e3b089c69df05f6efe48cf505703a4cb63782ec5a56b",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ecf8e349dc4b765d6364166adaff7550943ad9eeaffefca4316ac625ff4a7a5",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfc66336b9ad79402a7cf71cabb33b9456c5e145f9a23723e1d849021404c057",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d697352f61ac44c0070abc2678af71534abf040b05ea7130dcc922c022cd5898",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df627d84b57294a6988ae9668cc0c13d6f0abf5a02dc7e7ce41ea92ef3d7e05d",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9842b82317c431cd0b82234e40c31821fa2f99d0b114f0e16bc2e95d1097331c",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f381b65dee23d18d5f7a3ecd6e7e78172fb7fca7276fad534ac20d294b552211",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f3e86ff68336261aa15d795da8944444a8ff76195f4365aeda0c097da7304cb",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a39e7878abeae8075ea0c4d8882917ea0de6314aa8608949a1ad153356483d2",
                    "size": 1153883
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f6ffe73d9587b09b8410db5040a7a2066726531631adb76f296e1d1319c25c8",
                    "size": 473
                }
            ]
        },
        "build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:37853373a584d494fb6090d942c645983ef8703ba8bd72c6de05c4d2cb2f6064",
                "size": 10021
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e6d2876027888d3ee57d853179c6ae4108810c0a1e8ea542ccd2e772cbdf72de",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46d4ee457740b37623f08bbcbd1b02947925c0c192b88f9de41e105b213f3037",
                    "size": 12975118
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a6b14450d604ab6bb7341457c11b5c4e501f9e3701f9e81c495327141b20945",
                    "size": 198237483
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c5bb2387dea7477d9b0a9474c920b1f83e2de84b2118bbe5533ccb5d6810d9a",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e5ec705e490c3943e6f9ed2dc00d2002ab2cf4f0e92e7e2b25ff6443139eae3",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c69ff9177e27b334300cd4a305ec82f2ee6a9ce2b4a69158589c4fe38c836ce",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:277c46c61d7fba09b1d3e5f33c8dd6f3f8950716b93f695d08009cba37045d74",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64f544d305b2294bd574c661a7cbe2e8737d2f5736c0fb92e88f66897a9c537d",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b1364ac1dfefc426e60f0a8f6f6ac2ca41ad9da5c8f4b032b22f0267af4d867",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0dc6fa7fe1b76c096420ed4c5b6ffbdaa17115c327660124752324da781f220",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4da889e9c52899f06bd2f0986e35a6aeb26f0e79b5020f3d848db242ad2f9018",
                    "size": 4346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7769137a5c4d7af3bcf8f51859ec85fc484a8ecfaa57efdcd2fe3c5124296546",
                    "size": 1153861
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d75758ca1dde1c299c5c443499bd6a259d5501d524d5f4c820f584198830a98",
                    "size": 470
                }
            ]
        },
        "build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a6895365644257971bab37d5f946e808dc351dd87664fbdb283bb5aa3565acde",
                "size": 10012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e002e62693644c1b7d6e4f47f7eff0f4b07447854f1a354762c5faa8407710ca",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a9b01329934717e99144a7efaa632c6c80243af996f43d870a12ffe3ba463a6",
                    "size": 12974968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:872fdfb1a4b78cad02f72565e6b5df8fb9d395d99c7b9571df6778fa5ab1e640",
                    "size": 198238960
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6048c8b8684c8f4fb651632b9fa013a8526964e3f8abab3a969dc6f1cb68d9ae",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:269df0faa1899a56ca4217248617e058791dcba067437ef71356ae68960ce716",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:929b77287b8d44f9ca3348277249579589d6630e4e790d3427b783f0dd9325e4",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c866449afa453b0eed477471bdb56140bd2bce6b088e5583c628196c7cddd98",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10e8e21417f2bcfc41f184882e2b9aa6ac0e37ddd424ebd1c0ccd3dc2554c0fc",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:843f45cce595e7bc1ce03c2311718eb90fc2500ef2ea503b3496747efa80ee26",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:404603e2a43c44ed8901f778799a084d038b1064663c406f1e0a228ab46d7006",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77f0961d5599ef8c4b78c7e2329daadcfef0b61aaaf16fe3ac1e1e998bd72e6a",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:35e80d54ab05ff0444119df7bdce70c2aa86cd55ba3f4a615b2bf36f78f6e52c",
                    "size": 1153971
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a13b0b6c957774160bebe9890778de05dfd9df938f5a17a55a29ad7f9b6782cd",
                    "size": 471
                }
            ]
        },
        "build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6302acf561cdbac0ea3bb1432a064270690e52e4b662a2ecf5aa949e407acef1",
                "size": 10007
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcba2f78391733a47fa6301e4aaa906cd31b5772535c1582562079b78c5f5ae8",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c258bcf90db36e2970a505ee6e14dc01fd96af73aa4051879fbf892fbb7cf0b",
                    "size": 12975045
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d305429230d5b47f1cede9ff9171605bf960fc0f07ecf3d5f0be446a9ab480dd",
                    "size": 198574000
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d85d43053080c4587c7856378ffb4165e3f60437c56d535c40fb60e2b71249f7",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7d3c5e68f9537b5e91a334f71a210c2aeaf92c14ccdc35996d2a5ba8f2878b0",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00a29b6223ba1cfb59486affcb2a59771c561cca23b716b1aafb0732c34f1e94",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db231b5fdcb87d43878f52d15271bd9810030c4478e9fd27ba42275124d6a245",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4529c36f3a81a1a33876b8be756716bce7e469a6e8bbe7256a68aa7baf11b7b",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e69b17c2ab37f3b7c6850e5e51e9b8a2f027e059aaae5edd9bdb1fe4db2a9a61",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c54e551e3da7490bde6cb993af0bf12073e9059bec98783a7ac1b1ef92675cb5",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cea6a93cb60db8b87ef9ed57f926d22118692942417d2208343da32673cea9f7",
                    "size": 4342
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b619ad0fcd5ff893fb54c60cddb222a2bacc7e6104e80f1b0fe724e83fd61ce4",
                    "size": 1154217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec3b84c3cf95d3f17fb4078b301c2c961cad736f8a63bb0aa88e6b9a7a5dc43f",
                    "size": 472
                }
            ]
        },
        "build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a1246aaecff7668fa2556bba63730ca51a37e00eefd609853a68a214b99812c7",
                "size": 10001
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e30d3bfa043a37234529256a2ddbafcb7d76b87fc53ce2ee153cd303fda2d6ae",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d22075c9bb7061f6b7a8955728b997b57b08a406bf3c98dd569b2822de3796a0",
                    "size": 12974924
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7e9c0263de6c0544a8417547a1595cb696b2b910a0174db6ccb5fc99e656246",
                    "size": 198573136
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dde5e8304a334dc4b9a1dbeb79713473361114d34c14a984ad0e76839ce179c2",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56cd23d43464d40481e4fbb571c2d9872a49b9b692af94b9f5d66090c16c54e6",
                    "size": 257
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f577bbc75fd07fa7b71b7ed4314155d827c4c786ca8b91ebce3e6ae99fcf70b2",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f08c256037939d84637466f41bf6d4269ac0af747c3d79ed3e62d9d34e4eb21c",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c1e7798cf49b6bda92f33efe657ceafae3fe1aecf8040704916f42a83fff8c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de486aee6a55011bdfd9cf642f227a6d2d45c2d8b825f45b46429307fa683b2f",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f57bb210d903b265ac8af7d74783fd1353f301da5e2d63b68caa267c2e44d01",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b56cf62595ed195bd869703aa6e5d2ae57323820e33445193a39dff52a375bd9",
                    "size": 4348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07091421cdf3164d15303e7a7e3ef4285c2877501f7d7fbce1f38623200f4ba1",
                    "size": 1154206
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0a79bf03effc56cd5b918f05b08c2d38e981a29b87cfcd0e6bbd3bd789a7b46",
                    "size": 471
                }
            ]
        },
        "build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:44493022c19832218dd81d591b2b9dec8c6178416142bd04591d63f9cfbdf0ff",
                "size": 10002
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e679cebe0849bfa7cb31bc37c02c65ff1e2ba1af6c7610130ef4a0662642da9",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8018fd0de9417ceff54d5e970ffba51a3bd4381b66ff525be5a1b8c5ca7763e",
                    "size": 12976453
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a7e897f2afcd8ba780ee63974b25f8796cdaeff7b3253da3c3a8dc54e841c49",
                    "size": 202407153
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d232fe9fe2541d304164f5c0df34e5f68fe7099328fb3de15e15b02e89a54a07",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08abf86fab1b55cb6405a9f9e324ff6f48ef08200bbf35f8d8189e0db23960f9",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1aeaee01325f1a632dcd37d0732234af47f4f122e8a845d01854a7caf4264961",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363f1af776176365556af6c9c3ff5817d8675e57829101a6a0f3779325b85f6",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be1d5d2ac84db3d2f73bccd4820102bf030a95bfca47a780431f6bff75d934fa",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd25f72f3d784a43ae14ac9f58af7e1b42eca095bd0e4697ffbfbd3e7def3e17",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff19cd906c274030a179f0f967ebcb4ba25f4a57a5d79d2777f3591891e59cb",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ae9fc0ab010050fbd2d8882357603d10168615d702990a7790a4d802fd20d8f",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c427262c0499d6b0b5bc104da5a13065c12bb28003c69101a1699ff3c0ac46b",
                    "size": 1157661
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1222253a9a228c6bf4f135ac0d1faf2e5a6502695a11d7b246ffee966233b135",
                    "size": 468
                }
            ]
        },
        "bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c9657028c75f7c4fd7622eab2d613897e821c9eb50f06ddb6e4a45d9d5ccb03",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92d71e77360b6b88836dbda2a6f21ffcc3338fbb8a977bb0b4473d74a583a847",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0ae8832f513d2ba418d3608195baacfd0d7e510b94e834eaa6fe33bcdb44d30",
                    "size": 12063939
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f842e85cd5eee36f0819ba2a6ba662f2e139e0ca6e16b13df3535e291c67182",
                    "size": 469
                }
            ]
        },
        "bullseye-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e927e5ecc422394cfa06d5c5360670a3f614f8e27adb639edaa94dd35a06ffc5",
                "size": 8358
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2149d6f4e3fb542c669bff24796e40aa7cf995916bc195bf844138d81f64e58a",
                    "size": 14278884
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9927d8f8cbfab0a18fd5ae74f2dd9c0798e0dff475b09f3e69ac816527ca120",
                    "size": 473
                }
            ]
        },
        "bullseye-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:484e9660e8167ecac44dc4cfdd201eaf32d066e86a07c328683329ec0ecbe0c2",
                "size": 9047
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79c3ba6adda4e77727f944ef759fa768b6de11aa7afc5e39c4d9d9c339edd3ad",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f69d467da32c948b4d5c98dbdcb05856d3ecbdf27baec3d931a72b8e18650fd",
                    "size": 14278700
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1589054c5f4aa700f7e5cdce9ee60a2682c6ce7e7400f6df85286f1ff5df22b",
                    "size": 473
                }
            ]
        },
        "bullseye-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:296de75b88662b6c1ce2d16641180b0e80919070abeccfa7c50de1af80f4e70e",
                "size": 9043
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3b02ff1abe5dfe9791505936f93c8316422232986a64a09149fe3aabb8be2d9",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:759907076afe713c4234fb5987290ccfa61dd49daebced99e301665b885062d3",
                    "size": 12975152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d19c37c9190edbe13b45b66a2b8056c396ee43a72916ba1d9ca757dc398c27d",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdba65c7a86f749c1d475ca45f2a65c80d5ad0525db04e84db2da8803614bc1b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9f4c9bf8626165f2f2e675cc143ca800c95ac74558ce5c1cdc0928136b2a45b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33c9823ab36b119e618993bd63dbbc9cfebe37d67ba4ce036ffe5203e4de0be7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd83e03f85224ec03d743a072160fb9deddd86af0bf9cd2e7b6a4f2dbe221b58",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a42f72c7f4eb3e1399bfe85d2f32518ba7277a04b897820a0030797b4825d57",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5324c9bc68271cfdebc5291757fad42a9cd8e644ccef3fa6b3820e6dc0e61cd6",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53c1ea87a6a881a89e145cbd3e147fd9afe4a9f1ec9a8eef5d41c8c63791882e",
                    "size": 4354
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:36abaffc965899044fa98f3763721cc53c963360527eb255c3663bbbc471c07f",
                    "size": 12066177
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7930fe0608215cb271e2c63af870e56f3f6a0f113732cf41262767d5c71a3303",
                    "size": 470
                }
            ]
        },
        "bullseye-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:604601b43d47bc7ae07443a79c5a3af96323a9d09f14b3fad392560f9bb5d778",
                "size": 9045
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4e883aee71b5ef97bf1ffdfd139669e73ef006c560365d29cabde27caa6b13b",
                    "size": 12975050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f03e14fe93efd751580a2d51cb4489a57eac27b5db895225befd9a2299711fd",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef2a23d56797032756a4a8e8bd01b2c71a198c10e4e75e46bb3508b707d88d5",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de945cb97c6374ff7ea085bcb2edf737114d2f71f921c9a5a72c2168a40dfaad",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f482a15b31fc59f209b49b1e3bb7a58f1c350c673db22910a5cfdc4dc3ae6685",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9571608af5da43a8c78a43bfb08a829b5fcafda5e8292e393472cabbf0f804f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9614d73f006a2cb00875772e38550a822b7ee1914fa1a3a9ca724b0f0acb02aa",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55d55aad7abd855b5bd072003c07952d0f3605bcd5c55718c85dfbe5501b78bc",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92bc401a1e1b26ffde9f671ea641347a5ce4f5cae81e66a0533e2281c2b72dfe",
                    "size": 4348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7deb7f45590d0fd876ecc8428e3085a5efc0d65017f21b5b085725602a5aedd0",
                    "size": 12066139
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:665f1b57a385a25fbe1819fe1d331dbcc2b13888d7416f65c029cf44d25e1b9b",
                    "size": 471
                }
            ]
        },
        "bullseye-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5412e39ae855704a094461bd6b1d18808779a011bc7cd0408a8fa6b655cdedd6",
                "size": 9032
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd08d71f9e4be4f65e14231b96b47eba749b90731d6ac89a6b122102497f0520",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ced2846c7ce7b5358d8d1ca581b422091108201a9283aa8f845b5b6acf13b45",
                    "size": 12975074
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc714b302c222d2337d2a96a68bd0f8e2f6e8b6141b063613b4201f1b9bf88ff",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91059ecb4797f7ed53ba6123bc3708c97ed915820284c6e9ab28d76f72973580",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10793d475cc903a3e7298e67feaaaa5b1ab39b699349227473a13d747c7bebd1",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7e5860cbb43236bbbe750bd6abf586a8856e076ee2e1c38f33fb4bc6cc9129f",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3528b47aa83bdaf2eca21dffd496e9b26a4c6c17e7ef544f7a136ea69eb5b829",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8d887e8d98a1d19fda084161bdcdc428bc666757604d237cc331b3e96e3773b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c42376533b2b7356cd47d1c5d2930bb9f16c8bcf09939ec53070c484056a89",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46d42b86d83acc3c85e0cd9d3619e52d2f71bb1012554ba439b8130c268c400e",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ae6e9928d2f3fb57e1bf87b3826ef4e62de0c2429e070a926692ebd6ded16cb",
                    "size": 12066219
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dcf0f9ac43287600032b6fdb0fd23473501d9ce0bb1b530e9b75357cf3083d2",
                    "size": 472
                }
            ]
        },
        "bullseye-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5d2c8ee2403be9a704471859ceeaf5552dd327e4000753b257984e8e54e7b302",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a0e48841b8e49c36f6b1a8ad4efb4d37c6e10ef8dde5cd91f4dc437d1d8405",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55a1946130ccc17b581e6b524cf631bab9e5fcee60de01f0d39244a87686b92b",
                    "size": 12974885
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9858c7c5616b7ed0d90d6fd0d87ceef7f797f9d35758625edeb82f9e028aec60",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efe8622a8e40ac44137b3b5fd0dc0f14ad5e810e0338dc547f692d8b6a35c977",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c78e7355e42143ed74045da95e7de3ad92272199e0776d1b7228a150a65f47",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75b07c5fa13c3200be81dc39d20abbff29122ce62e20ebfe91047e7eaf0fbfb2",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a595d9ac359dba0005931f718e650d9edb7c0a1e3f6d9d8acce991fa76ed260",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95af7d2de70e46a0ae3136c3e62f38101bc59d80d433aa5f5bbde3da44a6280d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15bfc11c903d27a21ce686bae35210aa061831dd4dbc80e0104e5cc4ac5d9643",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6120ccb46ec7e859461fc3b627f8990feba50718c40e5d2514cdf5003b3b209f",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f7945167d47fd27f19952205115bf19585854eb8334ebdacc29a10770a0898c",
                    "size": 12066011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6df31fa7fc0063789e872ee0f3065f93a31cd2968f2cc85c5d4933b868ddaa1",
                    "size": 471
                }
            ]
        },
        "bullseye-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c9657028c75f7c4fd7622eab2d613897e821c9eb50f06ddb6e4a45d9d5ccb03",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92d71e77360b6b88836dbda2a6f21ffcc3338fbb8a977bb0b4473d74a583a847",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0ae8832f513d2ba418d3608195baacfd0d7e510b94e834eaa6fe33bcdb44d30",
                    "size": 12063939
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f842e85cd5eee36f0819ba2a6ba662f2e139e0ca6e16b13df3535e291c67182",
                    "size": 469
                }
            ]
        },
        "bullseye-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:44493022c19832218dd81d591b2b9dec8c6178416142bd04591d63f9cfbdf0ff",
                "size": 10002
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e679cebe0849bfa7cb31bc37c02c65ff1e2ba1af6c7610130ef4a0662642da9",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8018fd0de9417ceff54d5e970ffba51a3bd4381b66ff525be5a1b8c5ca7763e",
                    "size": 12976453
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a7e897f2afcd8ba780ee63974b25f8796cdaeff7b3253da3c3a8dc54e841c49",
                    "size": 202407153
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d232fe9fe2541d304164f5c0df34e5f68fe7099328fb3de15e15b02e89a54a07",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08abf86fab1b55cb6405a9f9e324ff6f48ef08200bbf35f8d8189e0db23960f9",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1aeaee01325f1a632dcd37d0732234af47f4f122e8a845d01854a7caf4264961",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363f1af776176365556af6c9c3ff5817d8675e57829101a6a0f3779325b85f6",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be1d5d2ac84db3d2f73bccd4820102bf030a95bfca47a780431f6bff75d934fa",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd25f72f3d784a43ae14ac9f58af7e1b42eca095bd0e4697ffbfbd3e7def3e17",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff19cd906c274030a179f0f967ebcb4ba25f4a57a5d79d2777f3591891e59cb",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ae9fc0ab010050fbd2d8882357603d10168615d702990a7790a4d802fd20d8f",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c427262c0499d6b0b5bc104da5a13065c12bb28003c69101a1699ff3c0ac46b",
                    "size": 1157661
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1222253a9a228c6bf4f135ac0d1faf2e5a6502695a11d7b246ffee966233b135",
                    "size": 468
                }
            ]
        },
        "bullseye-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f6c58a5d57fd48ac70f138bef628569b6864571c2c95aa5d41dadd0512d6e74f",
                "size": 9332
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84642ed2f5842e77f6ce5b7f04d267c1d999850b7464bc250930f7fd81198663",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18b6f561d414a7fa5d738b1fea176f906742ede82ffbc4fbadca42ea8da00ab8",
                    "size": 12976765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aecc55ca63d63ea52a00d80a4095c0f16fc39e85a3f1cf79f8df391d3ccb3f94",
                    "size": 198248312
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:030eeff4d1ac1b1b9917e3b089c69df05f6efe48cf505703a4cb63782ec5a56b",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ecf8e349dc4b765d6364166adaff7550943ad9eeaffefca4316ac625ff4a7a5",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfc66336b9ad79402a7cf71cabb33b9456c5e145f9a23723e1d849021404c057",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d697352f61ac44c0070abc2678af71534abf040b05ea7130dcc922c022cd5898",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df627d84b57294a6988ae9668cc0c13d6f0abf5a02dc7e7ce41ea92ef3d7e05d",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9842b82317c431cd0b82234e40c31821fa2f99d0b114f0e16bc2e95d1097331c",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f381b65dee23d18d5f7a3ecd6e7e78172fb7fca7276fad534ac20d294b552211",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ceaf17916c987003bb3ca4d4027eae0f6f477a007bd74469ea28eb2429e89c4",
                    "size": 1153868
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e90544b08df2ca7031b63a0cde792cf57a1f91c2dba7c84785f8525eebf1b556",
                    "size": 472
                }
            ]
        },
        "bullseye-build-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:15a40102962cd9e7bbeb28dd3a7187f61b85dc154e4ddf97e3631b6644f766bb",
                "size": 10020
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84642ed2f5842e77f6ce5b7f04d267c1d999850b7464bc250930f7fd81198663",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18b6f561d414a7fa5d738b1fea176f906742ede82ffbc4fbadca42ea8da00ab8",
                    "size": 12976765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aecc55ca63d63ea52a00d80a4095c0f16fc39e85a3f1cf79f8df391d3ccb3f94",
                    "size": 198248312
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:030eeff4d1ac1b1b9917e3b089c69df05f6efe48cf505703a4cb63782ec5a56b",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ecf8e349dc4b765d6364166adaff7550943ad9eeaffefca4316ac625ff4a7a5",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfc66336b9ad79402a7cf71cabb33b9456c5e145f9a23723e1d849021404c057",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d697352f61ac44c0070abc2678af71534abf040b05ea7130dcc922c022cd5898",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df627d84b57294a6988ae9668cc0c13d6f0abf5a02dc7e7ce41ea92ef3d7e05d",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9842b82317c431cd0b82234e40c31821fa2f99d0b114f0e16bc2e95d1097331c",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f381b65dee23d18d5f7a3ecd6e7e78172fb7fca7276fad534ac20d294b552211",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f3e86ff68336261aa15d795da8944444a8ff76195f4365aeda0c097da7304cb",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a39e7878abeae8075ea0c4d8882917ea0de6314aa8608949a1ad153356483d2",
                    "size": 1153883
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f6ffe73d9587b09b8410db5040a7a2066726531631adb76f296e1d1319c25c8",
                    "size": 473
                }
            ]
        },
        "bullseye-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:37853373a584d494fb6090d942c645983ef8703ba8bd72c6de05c4d2cb2f6064",
                "size": 10021
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e6d2876027888d3ee57d853179c6ae4108810c0a1e8ea542ccd2e772cbdf72de",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46d4ee457740b37623f08bbcbd1b02947925c0c192b88f9de41e105b213f3037",
                    "size": 12975118
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a6b14450d604ab6bb7341457c11b5c4e501f9e3701f9e81c495327141b20945",
                    "size": 198237483
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c5bb2387dea7477d9b0a9474c920b1f83e2de84b2118bbe5533ccb5d6810d9a",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e5ec705e490c3943e6f9ed2dc00d2002ab2cf4f0e92e7e2b25ff6443139eae3",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c69ff9177e27b334300cd4a305ec82f2ee6a9ce2b4a69158589c4fe38c836ce",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:277c46c61d7fba09b1d3e5f33c8dd6f3f8950716b93f695d08009cba37045d74",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64f544d305b2294bd574c661a7cbe2e8737d2f5736c0fb92e88f66897a9c537d",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b1364ac1dfefc426e60f0a8f6f6ac2ca41ad9da5c8f4b032b22f0267af4d867",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0dc6fa7fe1b76c096420ed4c5b6ffbdaa17115c327660124752324da781f220",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4da889e9c52899f06bd2f0986e35a6aeb26f0e79b5020f3d848db242ad2f9018",
                    "size": 4346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7769137a5c4d7af3bcf8f51859ec85fc484a8ecfaa57efdcd2fe3c5124296546",
                    "size": 1153861
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d75758ca1dde1c299c5c443499bd6a259d5501d524d5f4c820f584198830a98",
                    "size": 470
                }
            ]
        },
        "bullseye-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a6895365644257971bab37d5f946e808dc351dd87664fbdb283bb5aa3565acde",
                "size": 10012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e002e62693644c1b7d6e4f47f7eff0f4b07447854f1a354762c5faa8407710ca",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a9b01329934717e99144a7efaa632c6c80243af996f43d870a12ffe3ba463a6",
                    "size": 12974968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:872fdfb1a4b78cad02f72565e6b5df8fb9d395d99c7b9571df6778fa5ab1e640",
                    "size": 198238960
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6048c8b8684c8f4fb651632b9fa013a8526964e3f8abab3a969dc6f1cb68d9ae",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:269df0faa1899a56ca4217248617e058791dcba067437ef71356ae68960ce716",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:929b77287b8d44f9ca3348277249579589d6630e4e790d3427b783f0dd9325e4",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c866449afa453b0eed477471bdb56140bd2bce6b088e5583c628196c7cddd98",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10e8e21417f2bcfc41f184882e2b9aa6ac0e37ddd424ebd1c0ccd3dc2554c0fc",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:843f45cce595e7bc1ce03c2311718eb90fc2500ef2ea503b3496747efa80ee26",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:404603e2a43c44ed8901f778799a084d038b1064663c406f1e0a228ab46d7006",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77f0961d5599ef8c4b78c7e2329daadcfef0b61aaaf16fe3ac1e1e998bd72e6a",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:35e80d54ab05ff0444119df7bdce70c2aa86cd55ba3f4a615b2bf36f78f6e52c",
                    "size": 1153971
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a13b0b6c957774160bebe9890778de05dfd9df938f5a17a55a29ad7f9b6782cd",
                    "size": 471
                }
            ]
        },
        "bullseye-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6302acf561cdbac0ea3bb1432a064270690e52e4b662a2ecf5aa949e407acef1",
                "size": 10007
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcba2f78391733a47fa6301e4aaa906cd31b5772535c1582562079b78c5f5ae8",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c258bcf90db36e2970a505ee6e14dc01fd96af73aa4051879fbf892fbb7cf0b",
                    "size": 12975045
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d305429230d5b47f1cede9ff9171605bf960fc0f07ecf3d5f0be446a9ab480dd",
                    "size": 198574000
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d85d43053080c4587c7856378ffb4165e3f60437c56d535c40fb60e2b71249f7",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7d3c5e68f9537b5e91a334f71a210c2aeaf92c14ccdc35996d2a5ba8f2878b0",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00a29b6223ba1cfb59486affcb2a59771c561cca23b716b1aafb0732c34f1e94",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db231b5fdcb87d43878f52d15271bd9810030c4478e9fd27ba42275124d6a245",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4529c36f3a81a1a33876b8be756716bce7e469a6e8bbe7256a68aa7baf11b7b",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e69b17c2ab37f3b7c6850e5e51e9b8a2f027e059aaae5edd9bdb1fe4db2a9a61",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c54e551e3da7490bde6cb993af0bf12073e9059bec98783a7ac1b1ef92675cb5",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cea6a93cb60db8b87ef9ed57f926d22118692942417d2208343da32673cea9f7",
                    "size": 4342
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b619ad0fcd5ff893fb54c60cddb222a2bacc7e6104e80f1b0fe724e83fd61ce4",
                    "size": 1154217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec3b84c3cf95d3f17fb4078b301c2c961cad736f8a63bb0aa88e6b9a7a5dc43f",
                    "size": 472
                }
            ]
        },
        "bullseye-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a1246aaecff7668fa2556bba63730ca51a37e00eefd609853a68a214b99812c7",
                "size": 10001
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e30d3bfa043a37234529256a2ddbafcb7d76b87fc53ce2ee153cd303fda2d6ae",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d22075c9bb7061f6b7a8955728b997b57b08a406bf3c98dd569b2822de3796a0",
                    "size": 12974924
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7e9c0263de6c0544a8417547a1595cb696b2b910a0174db6ccb5fc99e656246",
                    "size": 198573136
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dde5e8304a334dc4b9a1dbeb79713473361114d34c14a984ad0e76839ce179c2",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56cd23d43464d40481e4fbb571c2d9872a49b9b692af94b9f5d66090c16c54e6",
                    "size": 257
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f577bbc75fd07fa7b71b7ed4314155d827c4c786ca8b91ebce3e6ae99fcf70b2",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f08c256037939d84637466f41bf6d4269ac0af747c3d79ed3e62d9d34e4eb21c",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c1e7798cf49b6bda92f33efe657ceafae3fe1aecf8040704916f42a83fff8c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de486aee6a55011bdfd9cf642f227a6d2d45c2d8b825f45b46429307fa683b2f",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f57bb210d903b265ac8af7d74783fd1353f301da5e2d63b68caa267c2e44d01",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b56cf62595ed195bd869703aa6e5d2ae57323820e33445193a39dff52a375bd9",
                    "size": 4348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07091421cdf3164d15303e7a7e3ef4285c2877501f7d7fbce1f38623200f4ba1",
                    "size": 1154206
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0a79bf03effc56cd5b918f05b08c2d38e981a29b87cfcd0e6bbd3bd789a7b46",
                    "size": 471
                }
            ]
        },
        "bullseye-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:44493022c19832218dd81d591b2b9dec8c6178416142bd04591d63f9cfbdf0ff",
                "size": 10002
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e679cebe0849bfa7cb31bc37c02c65ff1e2ba1af6c7610130ef4a0662642da9",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8018fd0de9417ceff54d5e970ffba51a3bd4381b66ff525be5a1b8c5ca7763e",
                    "size": 12976453
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a7e897f2afcd8ba780ee63974b25f8796cdaeff7b3253da3c3a8dc54e841c49",
                    "size": 202407153
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d232fe9fe2541d304164f5c0df34e5f68fe7099328fb3de15e15b02e89a54a07",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08abf86fab1b55cb6405a9f9e324ff6f48ef08200bbf35f8d8189e0db23960f9",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1aeaee01325f1a632dcd37d0732234af47f4f122e8a845d01854a7caf4264961",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363f1af776176365556af6c9c3ff5817d8675e57829101a6a0f3779325b85f6",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be1d5d2ac84db3d2f73bccd4820102bf030a95bfca47a780431f6bff75d934fa",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd25f72f3d784a43ae14ac9f58af7e1b42eca095bd0e4697ffbfbd3e7def3e17",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff19cd906c274030a179f0f967ebcb4ba25f4a57a5d79d2777f3591891e59cb",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ae9fc0ab010050fbd2d8882357603d10168615d702990a7790a4d802fd20d8f",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c427262c0499d6b0b5bc104da5a13065c12bb28003c69101a1699ff3c0ac46b",
                    "size": 1157661
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1222253a9a228c6bf4f135ac0d1faf2e5a6502695a11d7b246ffee966233b135",
                    "size": 468
                }
            ]
        },
        "bullseye-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c9657028c75f7c4fd7622eab2d613897e821c9eb50f06ddb6e4a45d9d5ccb03",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92d71e77360b6b88836dbda2a6f21ffcc3338fbb8a977bb0b4473d74a583a847",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0ae8832f513d2ba418d3608195baacfd0d7e510b94e834eaa6fe33bcdb44d30",
                    "size": 12063939
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f842e85cd5eee36f0819ba2a6ba662f2e139e0ca6e16b13df3535e291c67182",
                    "size": 469
                }
            ]
        },
        "bullseye-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e927e5ecc422394cfa06d5c5360670a3f614f8e27adb639edaa94dd35a06ffc5",
                "size": 8358
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2149d6f4e3fb542c669bff24796e40aa7cf995916bc195bf844138d81f64e58a",
                    "size": 14278884
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9927d8f8cbfab0a18fd5ae74f2dd9c0798e0dff475b09f3e69ac816527ca120",
                    "size": 473
                }
            ]
        },
        "bullseye-run-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:484e9660e8167ecac44dc4cfdd201eaf32d066e86a07c328683329ec0ecbe0c2",
                "size": 9047
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79c3ba6adda4e77727f944ef759fa768b6de11aa7afc5e39c4d9d9c339edd3ad",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f69d467da32c948b4d5c98dbdcb05856d3ecbdf27baec3d931a72b8e18650fd",
                    "size": 14278700
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1589054c5f4aa700f7e5cdce9ee60a2682c6ce7e7400f6df85286f1ff5df22b",
                    "size": 473
                }
            ]
        },
        "bullseye-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:296de75b88662b6c1ce2d16641180b0e80919070abeccfa7c50de1af80f4e70e",
                "size": 9043
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3b02ff1abe5dfe9791505936f93c8316422232986a64a09149fe3aabb8be2d9",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:759907076afe713c4234fb5987290ccfa61dd49daebced99e301665b885062d3",
                    "size": 12975152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d19c37c9190edbe13b45b66a2b8056c396ee43a72916ba1d9ca757dc398c27d",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdba65c7a86f749c1d475ca45f2a65c80d5ad0525db04e84db2da8803614bc1b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9f4c9bf8626165f2f2e675cc143ca800c95ac74558ce5c1cdc0928136b2a45b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33c9823ab36b119e618993bd63dbbc9cfebe37d67ba4ce036ffe5203e4de0be7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd83e03f85224ec03d743a072160fb9deddd86af0bf9cd2e7b6a4f2dbe221b58",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a42f72c7f4eb3e1399bfe85d2f32518ba7277a04b897820a0030797b4825d57",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5324c9bc68271cfdebc5291757fad42a9cd8e644ccef3fa6b3820e6dc0e61cd6",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53c1ea87a6a881a89e145cbd3e147fd9afe4a9f1ec9a8eef5d41c8c63791882e",
                    "size": 4354
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:36abaffc965899044fa98f3763721cc53c963360527eb255c3663bbbc471c07f",
                    "size": 12066177
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7930fe0608215cb271e2c63af870e56f3f6a0f113732cf41262767d5c71a3303",
                    "size": 470
                }
            ]
        },
        "bullseye-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:604601b43d47bc7ae07443a79c5a3af96323a9d09f14b3fad392560f9bb5d778",
                "size": 9045
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4e883aee71b5ef97bf1ffdfd139669e73ef006c560365d29cabde27caa6b13b",
                    "size": 12975050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f03e14fe93efd751580a2d51cb4489a57eac27b5db895225befd9a2299711fd",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef2a23d56797032756a4a8e8bd01b2c71a198c10e4e75e46bb3508b707d88d5",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de945cb97c6374ff7ea085bcb2edf737114d2f71f921c9a5a72c2168a40dfaad",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f482a15b31fc59f209b49b1e3bb7a58f1c350c673db22910a5cfdc4dc3ae6685",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9571608af5da43a8c78a43bfb08a829b5fcafda5e8292e393472cabbf0f804f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9614d73f006a2cb00875772e38550a822b7ee1914fa1a3a9ca724b0f0acb02aa",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55d55aad7abd855b5bd072003c07952d0f3605bcd5c55718c85dfbe5501b78bc",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92bc401a1e1b26ffde9f671ea641347a5ce4f5cae81e66a0533e2281c2b72dfe",
                    "size": 4348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7deb7f45590d0fd876ecc8428e3085a5efc0d65017f21b5b085725602a5aedd0",
                    "size": 12066139
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:665f1b57a385a25fbe1819fe1d331dbcc2b13888d7416f65c029cf44d25e1b9b",
                    "size": 471
                }
            ]
        },
        "bullseye-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5412e39ae855704a094461bd6b1d18808779a011bc7cd0408a8fa6b655cdedd6",
                "size": 9032
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd08d71f9e4be4f65e14231b96b47eba749b90731d6ac89a6b122102497f0520",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ced2846c7ce7b5358d8d1ca581b422091108201a9283aa8f845b5b6acf13b45",
                    "size": 12975074
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc714b302c222d2337d2a96a68bd0f8e2f6e8b6141b063613b4201f1b9bf88ff",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91059ecb4797f7ed53ba6123bc3708c97ed915820284c6e9ab28d76f72973580",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10793d475cc903a3e7298e67feaaaa5b1ab39b699349227473a13d747c7bebd1",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7e5860cbb43236bbbe750bd6abf586a8856e076ee2e1c38f33fb4bc6cc9129f",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3528b47aa83bdaf2eca21dffd496e9b26a4c6c17e7ef544f7a136ea69eb5b829",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8d887e8d98a1d19fda084161bdcdc428bc666757604d237cc331b3e96e3773b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c42376533b2b7356cd47d1c5d2930bb9f16c8bcf09939ec53070c484056a89",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46d42b86d83acc3c85e0cd9d3619e52d2f71bb1012554ba439b8130c268c400e",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ae6e9928d2f3fb57e1bf87b3826ef4e62de0c2429e070a926692ebd6ded16cb",
                    "size": 12066219
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dcf0f9ac43287600032b6fdb0fd23473501d9ce0bb1b530e9b75357cf3083d2",
                    "size": 472
                }
            ]
        },
        "bullseye-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5d2c8ee2403be9a704471859ceeaf5552dd327e4000753b257984e8e54e7b302",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a0e48841b8e49c36f6b1a8ad4efb4d37c6e10ef8dde5cd91f4dc437d1d8405",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55a1946130ccc17b581e6b524cf631bab9e5fcee60de01f0d39244a87686b92b",
                    "size": 12974885
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9858c7c5616b7ed0d90d6fd0d87ceef7f797f9d35758625edeb82f9e028aec60",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efe8622a8e40ac44137b3b5fd0dc0f14ad5e810e0338dc547f692d8b6a35c977",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c78e7355e42143ed74045da95e7de3ad92272199e0776d1b7228a150a65f47",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75b07c5fa13c3200be81dc39d20abbff29122ce62e20ebfe91047e7eaf0fbfb2",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a595d9ac359dba0005931f718e650d9edb7c0a1e3f6d9d8acce991fa76ed260",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95af7d2de70e46a0ae3136c3e62f38101bc59d80d433aa5f5bbde3da44a6280d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15bfc11c903d27a21ce686bae35210aa061831dd4dbc80e0104e5cc4ac5d9643",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6120ccb46ec7e859461fc3b627f8990feba50718c40e5d2514cdf5003b3b209f",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f7945167d47fd27f19952205115bf19585854eb8334ebdacc29a10770a0898c",
                    "size": 12066011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6df31fa7fc0063789e872ee0f3065f93a31cd2968f2cc85c5d4933b868ddaa1",
                    "size": 471
                }
            ]
        },
        "bullseye-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c9657028c75f7c4fd7622eab2d613897e821c9eb50f06ddb6e4a45d9d5ccb03",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92d71e77360b6b88836dbda2a6f21ffcc3338fbb8a977bb0b4473d74a583a847",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0ae8832f513d2ba418d3608195baacfd0d7e510b94e834eaa6fe33bcdb44d30",
                    "size": 12063939
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f842e85cd5eee36f0819ba2a6ba662f2e139e0ca6e16b13df3535e291c67182",
                    "size": 469
                }
            ]
        },
        "buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e20ee2ed5ff0d6419bbe6c0697be10c4dac85dbbdfb5714c7e0137c9dd8d8a5",
                "size": 9026
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57c62469eb2b8cb9a971714401ad24a78c171e2f6dab20314e1c5f0dab7a8639",
                    "size": 26109830
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e0bb71a28101cf306dd8881cd70e9a4329c88416ccaa856c03ad9f9ca462ea3b",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1343c8f62d7a213a4930891b9baedd3f3ab886611cc27846d85c5246f94a49ed",
                    "size": 13787230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30ded8f6bc7cfab3b4ccb02253af6eeedc1e98e88792c947e85ea66f754d4cc5",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16863032851663607ec44c74acdcd212bad9be0dbafde21651224c30f0338706",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b03f96647417e9b3795ce838e1234352b11f3b4a7fd408fdcd918525c030ff92",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2b9ad58d32576f6320b1311e8b06b1d6b84debc3887d8b5499942a6e0dd7618",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db2996727ca5de868ff60e02b328fe3c9d5ce02636c01786f86a24aecf6a14e6",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:264f0f924d769ba932e84f3d4273647bc58656a3681b61adc89b2aef4de6ffb0",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f4e9f1a997a9e61cad6d9293b5b625cc689b1208964dce5ef22daf6ba21aee9",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a9321a67f474d7f4d5ae77c1328688549d4491569a67c72befefa394fb93647",
                    "size": 4350
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:956f0b15c8c92b76e0d39347589d4b71cd07a9f2850d5e872bf194f179b9b905",
                    "size": 11980675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:06aa52700337be79bd7c8a99d2a20408176c0c53f8b58360f7d68ed9beff9994",
                    "size": 470
                }
            ]
        },
        "buster-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b6aaff1a2f826a063093f0c111cff373b900f401151687d1f958fca7cc9f6f7f",
                "size": 8351
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42641f7bf1512c205041cf7899e52e2185e49bcd6cfa0cb8ebfc73e3009221b7",
                    "size": 25970227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57b8ca8795ea3525df68884dc1353235f41f0b92d484c800bf530c394c0c967a",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6832d277252d211a660640d1d5e9c20bbe8faca2bff9163e354b4bc794de895f",
                    "size": 13794162
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c5f3bf6f60652d1f328e1e3aa1fc9424296a285826f662a12a4c3d1d7da9421",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdde8f39801f263d0cc1e30a05653ca37b0853515bbfed52e4fde92d72546f63",
                    "size": 11980688
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad50a745958e4e708abdbe37a607f1ea34bdc3149fe931c18c899c290eba9835",
                    "size": 473
                }
            ]
        },
        "buster-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e85a34cbfc21e03f597e7c812467ff73edecef9ef045530035ae0e061dbc7ab7",
                "size": 9042
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42641f7bf1512c205041cf7899e52e2185e49bcd6cfa0cb8ebfc73e3009221b7",
                    "size": 25970227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57b8ca8795ea3525df68884dc1353235f41f0b92d484c800bf530c394c0c967a",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6832d277252d211a660640d1d5e9c20bbe8faca2bff9163e354b4bc794de895f",
                    "size": 13794162
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c5f3bf6f60652d1f328e1e3aa1fc9424296a285826f662a12a4c3d1d7da9421",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e51ef86b5b1d3f2b6cad55712784e516e58352c50d3250582b649bd08ca2d383",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c4b1fe962e293dffb7cc799140e7c54cadd4854e7b48f7d017bb17a953d99072",
                    "size": 11980669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca45a3b66898788a209ba1081bf73ba5ef0f2ceade9bd891f64d436b5aece700",
                    "size": 472
                }
            ]
        },
        "buster-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b65f645ce0b675fbee9091e9d6bacb6b667ea26692fb10ff9276828cb05f2169",
                "size": 9034
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4e871d0a0087a92c664052d6406ee23eeb537f0b5f01894052aa0363fed45e3",
                    "size": 25969810
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3408cf0654b3237e979a6f98bd2c1293fa533c0e3284426abfc5c37ea65aa18a",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc8a85340147c980d1d12ed45dd25196bb6d91b8772a7f634d87105497713eff",
                    "size": 13787386
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dbedab5dbdfe90ff516594719861f8b7d778273a4f51c0fc58fdc0637e04f745",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f1da5a75eea7746f7564decfec8c1780d0ba5d49bc3af68c979fbb6be8a235b",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88e86113901b173ce46d3437be0827a9f0f5538eb7ea9accd5539ebe5dcdf017",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c83c281a7aad5abee2d68ef46d8bb48b71b0fc1a5e24e12354a4eedbcc89881",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9171c0dba9f720dff8f7560cfbf33056df356883558264c7ccc5337c7044e113",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b4d697de5ee1d679d59dbac6ec3efdd8c04bcb996b92cd3f5e9382365dbcf06",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:194088ddc4656d2af60a599cafabd7825bc242897aee87038c7e9fdeaea93e45",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5ebf7ad0f923e6c73f6046269e408a4df2ee9c8199fe74a28302ab4415fbae9",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bdbd3426c2e801f0b1ebc7ed2aea53120fecd360f5628ee49eb0b09fde04121",
                    "size": 11980735
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e48d4cc61f5f8b19937f2b201c5169f753e5b449fe41c38868c1797d68e3017",
                    "size": 468
                }
            ]
        },
        "buster-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:daa51991ef24a021e24edc04136efec44b06c3cb55c8078f93df57856aaea708",
                "size": 9031
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4e871d0a0087a92c664052d6406ee23eeb537f0b5f01894052aa0363fed45e3",
                    "size": 25969810
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc2593b81e6002b446e57d403e4313dfde7b1864343454b05828f75ac5e58570",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cd66c164fad1a100844f09ac316c9b58d0c0429ee69b6101aa3b8e5702f78a7",
                    "size": 13787299
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c3ef740b19e8d1d0a22329b303a60f75adef9a93447c117a675dd91484b635e",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5458f2dfeb4bd25eb72b87347acccbed8d946dff2e81f89980c7d8aca599a8d",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc380240689ae213391343329edccadbdf83e6b9806166531d01dd1e0b25c9ef",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d84784c737442573131b8013985380c0be522e8cbe636aafe7e3503bf78f54d2",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54a3bc9876f925bb6cccb1bc8065730d39491f57de8dd07d0f74646af9c31cd2",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f2bac34ff1ad1fa4e4142bb273e1e49066afad7c637b47ee2f92c820cc6cc54",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88dd3ca849a28b1be975e39196aebefb6b7a5130f164805ad99b4c295970608c",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ea01edb45c35e4465682c48764348862449b9a921c9627f1171eb5b74194248",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e691fa284b5b883709b468058d8e30345fc8c2dfe6c94934159944c784584141",
                    "size": 11980696
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37a8f153de9ec2e890e04b0d289e48da2e6e1bb170add6d473513be5ee050d7f",
                    "size": 469
                }
            ]
        },
        "buster-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bce0ab1741db9da4e8137ceeb376bb6440300dd30b5be78c4d996fcaeeb74093",
                "size": 9025
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f109bca8a22fa25fc80b89d2ad693f6f3e7832d4386218a35d068f3b37b0e808",
                    "size": 25970589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e85a59048b7cb66113b0f480f58b21f5d0fa8f5908909f090bc738b798e598c5",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e9d9f709bc526d8baead724514e3b5cd7f1e09a2c90db9921ec63becea49e50",
                    "size": 13787329
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7be450c33d23e41a869346c998e02aff90cbfe4abaff69368a2451eaabda21e",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bbc7b87b6f47438d9b1332daaf933dc60c63690ffae1e739d51410a8121213d2",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e38cb2313a8eeb0fba081fa80ef2948e1b8d339b1506b66d73ff061b434123e9",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5459bd8d4bc1fac5b1c18b332f5444657aab6de5a7504b70b0b629714a47c7f",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a26352b57f444f2a5ef4522f64eb0da35869249d23bfc4fc4dc8a726954dd11b",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b693524238e40e6bb351e67ddd6f413edd74d4dbe5ccb26e9ed8ca464b7b998",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f16db6e1fe504eef9d3ced46c271598dde07812625ba8533d109fc35a23c9488",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2a38d2116b01b1246a530744ba66d349c3cca156407cf79d7958bad18d31440",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2540c765470f833cb132dcb36c88434ed9662cbdf1425cea0bb6f50fee805cdd",
                    "size": 11980657
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bdb424cbcc6ae60db11203caf664861c3c114e0116d685c038edc34af973f970",
                    "size": 472
                }
            ]
        },
        "buster-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6464a72881bdc0b3cdfb0d4b94fae765e727b5985e4671af83a347e63b329312",
                "size": 9017
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f109bca8a22fa25fc80b89d2ad693f6f3e7832d4386218a35d068f3b37b0e808",
                    "size": 25970589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76c0c721f5260280c88130a75b94b5e0f6270a3b339701621f97e14b30aca983",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5409131516c7e4003811eb609650f2bc519f5e5990bdf94e8cacd171aa6f2db",
                    "size": 13787420
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4d6d887c52c0bf00dda419045f8df10efc63313d30f32734fdafa9c612cd304",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:898e9c6bd0a197d56887b5989b9fd1a4be63708f5c7419033b1dd502a45eb3df",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6f011ad87a34c177466fe95434b492422a7ee10c6f58f6d53f38e0bd82c4a9b",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:321eff095c69a9e69a638fe51770656cd4303a2d519b6b3e66788fd51672b5b7",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ec28374d0328a01cea7e09a456a118a4a8573927e31f0129ec6bc5117eaab20",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c2c4ed3c0748136c2e67d89449db5ea6b1453f0cc4e78ecdffa9267f1497d9c",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:046e6edc01bf85b207d8ce299dbfe9b3069ecd7adedd15ebb361591b5e6657bc",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dabc4dfcde122e2a0d83cced90cde7d93c28bc261cd0959f9fc73b5ae049b84b",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ecb57e18d12f41ae37a4769b16202c0f21e7aedc2239faf0fabc0f967ef76d",
                    "size": 11980681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6f6ae5b6eb3bdafe91a2ae7eab1df8b167fbd487032bf0001cfa6d0d07cb2b8",
                    "size": 470
                }
            ]
        },
        "buster-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e20ee2ed5ff0d6419bbe6c0697be10c4dac85dbbdfb5714c7e0137c9dd8d8a5",
                "size": 9026
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57c62469eb2b8cb9a971714401ad24a78c171e2f6dab20314e1c5f0dab7a8639",
                    "size": 26109830
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e0bb71a28101cf306dd8881cd70e9a4329c88416ccaa856c03ad9f9ca462ea3b",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1343c8f62d7a213a4930891b9baedd3f3ab886611cc27846d85c5246f94a49ed",
                    "size": 13787230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30ded8f6bc7cfab3b4ccb02253af6eeedc1e98e88792c947e85ea66f754d4cc5",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16863032851663607ec44c74acdcd212bad9be0dbafde21651224c30f0338706",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b03f96647417e9b3795ce838e1234352b11f3b4a7fd408fdcd918525c030ff92",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2b9ad58d32576f6320b1311e8b06b1d6b84debc3887d8b5499942a6e0dd7618",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db2996727ca5de868ff60e02b328fe3c9d5ce02636c01786f86a24aecf6a14e6",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:264f0f924d769ba932e84f3d4273647bc58656a3681b61adc89b2aef4de6ffb0",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f4e9f1a997a9e61cad6d9293b5b625cc689b1208964dce5ef22daf6ba21aee9",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a9321a67f474d7f4d5ae77c1328688549d4491569a67c72befefa394fb93647",
                    "size": 4350
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:956f0b15c8c92b76e0d39347589d4b71cd07a9f2850d5e872bf194f179b9b905",
                    "size": 11980675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:06aa52700337be79bd7c8a99d2a20408176c0c53f8b58360f7d68ed9beff9994",
                    "size": 470
                }
            ]
        },
        "buster-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0326f1406d4f3639d6a78b2cd4e66713a7f5a88fff6dede576c9e6580757e20a",
                "size": 10000
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57c62469eb2b8cb9a971714401ad24a78c171e2f6dab20314e1c5f0dab7a8639",
                    "size": 26109830
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:21ce456ad17579b821e2dbe65920d0d791a2f27b300de63338b23ba1b0426936",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78151996c382cbaa935a37336e3626182c68440c500f9a98ccaf6c264c897fd9",
                    "size": 13787164
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5145cc84456a8ffad969cf2d59e6da0f6853153360d6a0281a5d12b57b29539d",
                    "size": 188996038
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:020c4cf177be60f72a47ce8a5ca0cf07aed6d846fdb94cff0660a5c00aa6bc99",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e582c4aa877a817e4d6c75a344d5e910a17b9027af5cd2bb9ab80306130e0079",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:943f9e7d8ad42391ff4d82e061ad3f3136de3eac249815042746a7b4b6160494",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bac7fb09bbbe937617acd4aa8a1727184ec11b74250e3d9cfd7f5c70d66f6e7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b1d61dec9b52b5164bf809e8b6b47cd82fa7fa2072619f071b6acb9b1712898",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae35eb9c1ed36b2f69c5c50f089de63051c092cb435349be9898a0a304ad7b5a",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c852d8f94f09eba7b61719dcdf0af09fae45e4b32cfdaf89f58506c27c0a920",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:764024c03975eb7d4b8748fca7e3d60e201b3ea9596ecf58768cd08e301719ce",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a3be18988a644533e930b1086d2ee9c09cb62ea5af624b9a9c8c394dc627d0",
                    "size": 1285761
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9399156b814ad1d5c75a3168d9da4a72948fe14cf5be46ed5f3a16a0acd390d9",
                    "size": 468
                }
            ]
        },
        "buster-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4e983aab8febb8f1fa3b851f006b494695e7f1ae4737b5b9cd57aaa267549454",
                "size": 9326
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42641f7bf1512c205041cf7899e52e2185e49bcd6cfa0cb8ebfc73e3009221b7",
                    "size": 25970227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32179b96bd48f3dcf2a19c4b5e207ab251e34d59e8934aa535ec0e143bd31962",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5bf9329269d889403c0ce89ffb091c631b6b4ce6c7f2cff8f6489ef1b645abd1",
                    "size": 13794227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5dc6c3c94a84d415b32d4583eb17245af906ab059b278ae33e15661280ab94e",
                    "size": 184734167
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:887954d8dd959ac0647a9ff7ad9eea6e03fb8c87cb186909f270aa9cfefbdd22",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9dba9f56ac8bf268247ec5ae003685c8c161bcffd69a085bf184cc6eb482e138",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3954ac88d33ad9a0d87fa1ee8a0d47f0a5cf49c1d3cc09d4153b73cd089e030a",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:388c344f2bf77b19d0ea4aaf4867274ae10c7d21d5c244b1821acff77b519f8e",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:300f8abe4b19fc96239455dbe124d0e51fd3d6c39a1aa02491241d68fae0353c",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6465c3c4c8aef3458dd7fd9c5a48266113c344e5fed89df5a0772ccf7e3e14d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:910934ed4e8d778d89ff70a3f4c1a9fc077c52f841ffbf1a018c0f3ca256622a",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7dbcf017e50d304f011e964515b193825167e9b7c3a36b904ce8e2b98670b7c4",
                    "size": 1285560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1d32cf3491d9adbbd5fc5c0ff172158b30ed8ba9f5bf6cc67dae7dc82fe239e",
                    "size": 470
                }
            ]
        },
        "buster-build-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:93d6a077861e9212a4c95589d99fe3eb9a41d792618ad444e4ea8d51dd5f0098",
                "size": 10015
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42641f7bf1512c205041cf7899e52e2185e49bcd6cfa0cb8ebfc73e3009221b7",
                    "size": 25970227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32179b96bd48f3dcf2a19c4b5e207ab251e34d59e8934aa535ec0e143bd31962",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5bf9329269d889403c0ce89ffb091c631b6b4ce6c7f2cff8f6489ef1b645abd1",
                    "size": 13794227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5dc6c3c94a84d415b32d4583eb17245af906ab059b278ae33e15661280ab94e",
                    "size": 184734167
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:887954d8dd959ac0647a9ff7ad9eea6e03fb8c87cb186909f270aa9cfefbdd22",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9dba9f56ac8bf268247ec5ae003685c8c161bcffd69a085bf184cc6eb482e138",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3954ac88d33ad9a0d87fa1ee8a0d47f0a5cf49c1d3cc09d4153b73cd089e030a",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:388c344f2bf77b19d0ea4aaf4867274ae10c7d21d5c244b1821acff77b519f8e",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:300f8abe4b19fc96239455dbe124d0e51fd3d6c39a1aa02491241d68fae0353c",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6465c3c4c8aef3458dd7fd9c5a48266113c344e5fed89df5a0772ccf7e3e14d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:910934ed4e8d778d89ff70a3f4c1a9fc077c52f841ffbf1a018c0f3ca256622a",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6956490023d30366acf5f24360f46087ff7dd8091abef0a5c1413200593711e9",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0cd62e0e21fc5dc385cddf70ee554c11818783e69169a85bedf600304e84f0d4",
                    "size": 1285569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c46d692cf49ca4ff252f1a0c000599a0dcd10edbca7c2acbb8d6a7a1ae7d470",
                    "size": 472
                }
            ]
        },
        "buster-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:00979dc1db6452c54fee674a5593f68254b9b96dfa18188366c9d1174aa9c6f6",
                "size": 10014
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4e871d0a0087a92c664052d6406ee23eeb537f0b5f01894052aa0363fed45e3",
                    "size": 25969810
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:788c7684bd41ddf7d908ce8acac08235cadb3785d71996c5720303ae3ca76cc3",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96b6fde737cfdd9e327a5244c6c025d200366a5496a68aa13b67ef1047ae7217",
                    "size": 13787319
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32c4006a6bdacda5cd7ca114b802a8838475da9e65f92fa2a1b783ceedbc548a",
                    "size": 185550593
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:016066669cd24f2b1ff7c65c794bafddd4a822520c50565819f722b269ab9227",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dda0fc11f4b2a9dcaec2e2973ec6e470582f260c057a2273c3993865abe43e4",
                    "size": 258
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:327516ac6034d3dc744a55a5e0935665a99ccb2c605761640e0e5540cc733fe6",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e127435085df8ef75b33b2540c2d6efc3c91fd471167f0bb5e7aaf11205a832",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04341a2e42e73d0db1eac20c18ad8d44c6549f0941498f27c96e4f7771f45821",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1deee9e012b644a4f01e3b632ffdb0b49a8fcc12b6829693bc3431c573e153a",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7b57a41f4dc37c578311c580de41d8ab3c9ba8d5e141980d6d14cbbd8212e69",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31e1f4d57a265efc3e7d26af3fc10574aa3f0b054de1414fe7f73b23999369fe",
                    "size": 4350
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ff06b7ed19148a77c763f85f9a0316328ce7b9ebfa66fb054824f3d36771a34",
                    "size": 1285716
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e6670a379156dc02e0640fc5dfedeb9d22a514bd8ab1e97283101c943f986a21",
                    "size": 467
                }
            ]
        },
        "buster-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:af7a0b843a52e612c1dee44dc3e5cc4cb714d77c5e263dec03f94005f15c0f26",
                "size": 10014
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4e871d0a0087a92c664052d6406ee23eeb537f0b5f01894052aa0363fed45e3",
                    "size": 25969810
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce9db97bc5a6de34061387816c6b6db87997125c9375a1d7be51030acafe3d6e",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2439b5b8639f5e60f8a001fd1c6490e762120cd20c823ab5bfa457c0fa984416",
                    "size": 13787311
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:105d15c8eb20b26ff5a286f131b6369f25328220d6b60726664e151e5a88724d",
                    "size": 185550948
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1404c64f3367426679c5ad0b9558b5107b8bcaf9172a2411a9eb7d8bd01d452c",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af5e3eb9996de7c86b2728342d07edd7069e2f0c9b10c984814a16d52879ea3b",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:05b702b4260f52df9bf3baf344a5b1f715829eefc026522aa41d14e5a7495901",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b620cda6d9198a406774eb4a04b9a3bd0db93bc971caf2fc96188eeb2856ccf",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ce97d65d5d839b40e9ca84320e692955fddd97715816ffef83362f9f331f319",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc3b354e9b23036170208c9e6abefc52b0dc7df9fe06a58ca8f1a6cab1591027",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9824f50cf50521bcacd6504eae5d25322dea7366c621783cfd186bd015bd2c7",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98990951bae957277b80c5f1c0fe02d6cebce9afd78d10c1be279656ae978a35",
                    "size": 4352
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1ef8b7126b2a0d9755d3af018ce595f07550e37c389b45a523bd2625e5d3df4",
                    "size": 1285746
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bbb547654bf87209cdf5d5bfce6aaa9b00e13bea0fa2cb314891c8178845b0bc",
                    "size": 468
                }
            ]
        },
        "buster-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:37451d6d8229797c106cab01654251220b97167e3c7de82b7fada01dd75bc395",
                "size": 10001
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f109bca8a22fa25fc80b89d2ad693f6f3e7832d4386218a35d068f3b37b0e808",
                    "size": 25970589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f29092138407893e1c356eaba7e9b9b697dbbf18735600426272e547ae0231c",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:371978941d0dd43bdcaaf065e9cb6c81c6a0a319ff8176d4d336b7c3a4549061",
                    "size": 13787285
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e214b9ab24d8902d97128ec18e58420ece94e564df2c9f8c086572518594bbe8",
                    "size": 184793931
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c901444f1872cef7f686393cfbae560bf12de0704da80eeb8e05b3d0262b012",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e22138e38c99fc63e889a44b83ab03b81781b44e7791d6a8db40339209123daf",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1fa5477d5629f19944bbf2420ca7660994053cf04a14d94d985f46e9b6642a30",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a54303cb2624dc49d0d6bf3a1fdbe5223e3538f26e9821e05acd49edc2e77676",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9aa0bdc480ed066a117c4f2cadcbcf293f21f51280c1850281fbf287848f1286",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b41c0cf125e41ffea372c28496b1910de75037748b4aaff78b6217e36b92de69",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da116d2092210714b674370f8e3fa0e2c05c9bb75c293e25d10d47709904bca1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:47cfa4776060234f053cd4a2e3a3db9f385506a6437f096b2e5aa870f7b21266",
                    "size": 4348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dabef854d32c21b7b09ad7a8f26c00d384e6dc0a409e46616f8a62cd9e401bc",
                    "size": 1285641
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5c31b8f3b76e2054ce6cf8fa4011f1d4729dce811e70adee79bfddeabda8e84",
                    "size": 470
                }
            ]
        },
        "buster-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6a6790b365298e2327e6d0a3e1697bc6d2eb304c3660d011644799e1e40aa9e1",
                "size": 9996
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f109bca8a22fa25fc80b89d2ad693f6f3e7832d4386218a35d068f3b37b0e808",
                    "size": 25970589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1ee6201cc3c329e4b18c796de9708c112ae1754f184e26d4de82919eb8208cf",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43cf170448befc9e85e79eeeaf44096d61f7ea5484f87990bda86a836622e29a",
                    "size": 13787381
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b877bdf8592a7b62dc3d77c0d78a7e3cd3e3ac8d1b8ebdca401afd095a443756",
                    "size": 185134643
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b164aa1f2dc7dfbb35e6e4f35f7e198a40f1896abe800da5f6d2fb5213edbe8",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31aee53fe6f28b75505108d7fc52ea0e338e3ed693d71c937a61b47513cb1cdc",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8fbbfbf4a8d0bfff06731bb0b92ba9fd70eda666b9105d3c6f2d0cf4b51d6f8",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c06a7344aac835cc8ede308cf6e1f1c7ddbadbde06f8ee1e97c516706ee26bbe",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:089fdcd4cccce1f09a18c9a88cc9b5948d2b42fbf0000d70d705a688a5b2a1d6",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f2fddee653ada4478e29094d1c1e6e511a375d4635bfa6afb07a53e1aa54cd5",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dcab320be46214715959df4889b54961a60bdebff53004f4524bde5f99bb2a4",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7613124712e04c31807cc72b06a8450a22c2c3fd48127ed61a80b59166463c2d",
                    "size": 4350
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b28b127dc8d5d227e24a4b6c688a8d53a85a44456ab0818cfaa18c337c5a9d0",
                    "size": 1286037
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b28d65480c610cc3f89c87019a699d69a38b8ca45d53030372d4b29b913ea074",
                    "size": 470
                }
            ]
        },
        "buster-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0326f1406d4f3639d6a78b2cd4e66713a7f5a88fff6dede576c9e6580757e20a",
                "size": 10000
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57c62469eb2b8cb9a971714401ad24a78c171e2f6dab20314e1c5f0dab7a8639",
                    "size": 26109830
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:21ce456ad17579b821e2dbe65920d0d791a2f27b300de63338b23ba1b0426936",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78151996c382cbaa935a37336e3626182c68440c500f9a98ccaf6c264c897fd9",
                    "size": 13787164
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5145cc84456a8ffad969cf2d59e6da0f6853153360d6a0281a5d12b57b29539d",
                    "size": 188996038
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:020c4cf177be60f72a47ce8a5ca0cf07aed6d846fdb94cff0660a5c00aa6bc99",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e582c4aa877a817e4d6c75a344d5e910a17b9027af5cd2bb9ab80306130e0079",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:943f9e7d8ad42391ff4d82e061ad3f3136de3eac249815042746a7b4b6160494",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bac7fb09bbbe937617acd4aa8a1727184ec11b74250e3d9cfd7f5c70d66f6e7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b1d61dec9b52b5164bf809e8b6b47cd82fa7fa2072619f071b6acb9b1712898",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae35eb9c1ed36b2f69c5c50f089de63051c092cb435349be9898a0a304ad7b5a",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c852d8f94f09eba7b61719dcdf0af09fae45e4b32cfdaf89f58506c27c0a920",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:764024c03975eb7d4b8748fca7e3d60e201b3ea9596ecf58768cd08e301719ce",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a3be18988a644533e930b1086d2ee9c09cb62ea5af624b9a9c8c394dc627d0",
                    "size": 1285761
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9399156b814ad1d5c75a3168d9da4a72948fe14cf5be46ed5f3a16a0acd390d9",
                    "size": 468
                }
            ]
        },
        "buster-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e20ee2ed5ff0d6419bbe6c0697be10c4dac85dbbdfb5714c7e0137c9dd8d8a5",
                "size": 9026
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57c62469eb2b8cb9a971714401ad24a78c171e2f6dab20314e1c5f0dab7a8639",
                    "size": 26109830
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e0bb71a28101cf306dd8881cd70e9a4329c88416ccaa856c03ad9f9ca462ea3b",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1343c8f62d7a213a4930891b9baedd3f3ab886611cc27846d85c5246f94a49ed",
                    "size": 13787230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30ded8f6bc7cfab3b4ccb02253af6eeedc1e98e88792c947e85ea66f754d4cc5",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16863032851663607ec44c74acdcd212bad9be0dbafde21651224c30f0338706",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b03f96647417e9b3795ce838e1234352b11f3b4a7fd408fdcd918525c030ff92",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2b9ad58d32576f6320b1311e8b06b1d6b84debc3887d8b5499942a6e0dd7618",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db2996727ca5de868ff60e02b328fe3c9d5ce02636c01786f86a24aecf6a14e6",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:264f0f924d769ba932e84f3d4273647bc58656a3681b61adc89b2aef4de6ffb0",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f4e9f1a997a9e61cad6d9293b5b625cc689b1208964dce5ef22daf6ba21aee9",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a9321a67f474d7f4d5ae77c1328688549d4491569a67c72befefa394fb93647",
                    "size": 4350
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:956f0b15c8c92b76e0d39347589d4b71cd07a9f2850d5e872bf194f179b9b905",
                    "size": 11980675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:06aa52700337be79bd7c8a99d2a20408176c0c53f8b58360f7d68ed9beff9994",
                    "size": 470
                }
            ]
        },
        "buster-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b6aaff1a2f826a063093f0c111cff373b900f401151687d1f958fca7cc9f6f7f",
                "size": 8351
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42641f7bf1512c205041cf7899e52e2185e49bcd6cfa0cb8ebfc73e3009221b7",
                    "size": 25970227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57b8ca8795ea3525df68884dc1353235f41f0b92d484c800bf530c394c0c967a",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6832d277252d211a660640d1d5e9c20bbe8faca2bff9163e354b4bc794de895f",
                    "size": 13794162
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c5f3bf6f60652d1f328e1e3aa1fc9424296a285826f662a12a4c3d1d7da9421",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdde8f39801f263d0cc1e30a05653ca37b0853515bbfed52e4fde92d72546f63",
                    "size": 11980688
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad50a745958e4e708abdbe37a607f1ea34bdc3149fe931c18c899c290eba9835",
                    "size": 473
                }
            ]
        },
        "buster-run-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e85a34cbfc21e03f597e7c812467ff73edecef9ef045530035ae0e061dbc7ab7",
                "size": 9042
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42641f7bf1512c205041cf7899e52e2185e49bcd6cfa0cb8ebfc73e3009221b7",
                    "size": 25970227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57b8ca8795ea3525df68884dc1353235f41f0b92d484c800bf530c394c0c967a",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6832d277252d211a660640d1d5e9c20bbe8faca2bff9163e354b4bc794de895f",
                    "size": 13794162
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c5f3bf6f60652d1f328e1e3aa1fc9424296a285826f662a12a4c3d1d7da9421",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e51ef86b5b1d3f2b6cad55712784e516e58352c50d3250582b649bd08ca2d383",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c4b1fe962e293dffb7cc799140e7c54cadd4854e7b48f7d017bb17a953d99072",
                    "size": 11980669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca45a3b66898788a209ba1081bf73ba5ef0f2ceade9bd891f64d436b5aece700",
                    "size": 472
                }
            ]
        },
        "buster-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b65f645ce0b675fbee9091e9d6bacb6b667ea26692fb10ff9276828cb05f2169",
                "size": 9034
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4e871d0a0087a92c664052d6406ee23eeb537f0b5f01894052aa0363fed45e3",
                    "size": 25969810
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3408cf0654b3237e979a6f98bd2c1293fa533c0e3284426abfc5c37ea65aa18a",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc8a85340147c980d1d12ed45dd25196bb6d91b8772a7f634d87105497713eff",
                    "size": 13787386
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dbedab5dbdfe90ff516594719861f8b7d778273a4f51c0fc58fdc0637e04f745",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f1da5a75eea7746f7564decfec8c1780d0ba5d49bc3af68c979fbb6be8a235b",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88e86113901b173ce46d3437be0827a9f0f5538eb7ea9accd5539ebe5dcdf017",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c83c281a7aad5abee2d68ef46d8bb48b71b0fc1a5e24e12354a4eedbcc89881",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9171c0dba9f720dff8f7560cfbf33056df356883558264c7ccc5337c7044e113",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b4d697de5ee1d679d59dbac6ec3efdd8c04bcb996b92cd3f5e9382365dbcf06",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:194088ddc4656d2af60a599cafabd7825bc242897aee87038c7e9fdeaea93e45",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5ebf7ad0f923e6c73f6046269e408a4df2ee9c8199fe74a28302ab4415fbae9",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bdbd3426c2e801f0b1ebc7ed2aea53120fecd360f5628ee49eb0b09fde04121",
                    "size": 11980735
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e48d4cc61f5f8b19937f2b201c5169f753e5b449fe41c38868c1797d68e3017",
                    "size": 468
                }
            ]
        },
        "buster-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:daa51991ef24a021e24edc04136efec44b06c3cb55c8078f93df57856aaea708",
                "size": 9031
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4e871d0a0087a92c664052d6406ee23eeb537f0b5f01894052aa0363fed45e3",
                    "size": 25969810
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc2593b81e6002b446e57d403e4313dfde7b1864343454b05828f75ac5e58570",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cd66c164fad1a100844f09ac316c9b58d0c0429ee69b6101aa3b8e5702f78a7",
                    "size": 13787299
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c3ef740b19e8d1d0a22329b303a60f75adef9a93447c117a675dd91484b635e",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5458f2dfeb4bd25eb72b87347acccbed8d946dff2e81f89980c7d8aca599a8d",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc380240689ae213391343329edccadbdf83e6b9806166531d01dd1e0b25c9ef",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d84784c737442573131b8013985380c0be522e8cbe636aafe7e3503bf78f54d2",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54a3bc9876f925bb6cccb1bc8065730d39491f57de8dd07d0f74646af9c31cd2",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f2bac34ff1ad1fa4e4142bb273e1e49066afad7c637b47ee2f92c820cc6cc54",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88dd3ca849a28b1be975e39196aebefb6b7a5130f164805ad99b4c295970608c",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ea01edb45c35e4465682c48764348862449b9a921c9627f1171eb5b74194248",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e691fa284b5b883709b468058d8e30345fc8c2dfe6c94934159944c784584141",
                    "size": 11980696
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37a8f153de9ec2e890e04b0d289e48da2e6e1bb170add6d473513be5ee050d7f",
                    "size": 469
                }
            ]
        },
        "buster-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bce0ab1741db9da4e8137ceeb376bb6440300dd30b5be78c4d996fcaeeb74093",
                "size": 9025
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f109bca8a22fa25fc80b89d2ad693f6f3e7832d4386218a35d068f3b37b0e808",
                    "size": 25970589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e85a59048b7cb66113b0f480f58b21f5d0fa8f5908909f090bc738b798e598c5",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e9d9f709bc526d8baead724514e3b5cd7f1e09a2c90db9921ec63becea49e50",
                    "size": 13787329
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7be450c33d23e41a869346c998e02aff90cbfe4abaff69368a2451eaabda21e",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bbc7b87b6f47438d9b1332daaf933dc60c63690ffae1e739d51410a8121213d2",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e38cb2313a8eeb0fba081fa80ef2948e1b8d339b1506b66d73ff061b434123e9",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5459bd8d4bc1fac5b1c18b332f5444657aab6de5a7504b70b0b629714a47c7f",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a26352b57f444f2a5ef4522f64eb0da35869249d23bfc4fc4dc8a726954dd11b",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b693524238e40e6bb351e67ddd6f413edd74d4dbe5ccb26e9ed8ca464b7b998",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f16db6e1fe504eef9d3ced46c271598dde07812625ba8533d109fc35a23c9488",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2a38d2116b01b1246a530744ba66d349c3cca156407cf79d7958bad18d31440",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2540c765470f833cb132dcb36c88434ed9662cbdf1425cea0bb6f50fee805cdd",
                    "size": 11980657
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bdb424cbcc6ae60db11203caf664861c3c114e0116d685c038edc34af973f970",
                    "size": 472
                }
            ]
        },
        "buster-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6464a72881bdc0b3cdfb0d4b94fae765e727b5985e4671af83a347e63b329312",
                "size": 9017
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f109bca8a22fa25fc80b89d2ad693f6f3e7832d4386218a35d068f3b37b0e808",
                    "size": 25970589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76c0c721f5260280c88130a75b94b5e0f6270a3b339701621f97e14b30aca983",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5409131516c7e4003811eb609650f2bc519f5e5990bdf94e8cacd171aa6f2db",
                    "size": 13787420
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4d6d887c52c0bf00dda419045f8df10efc63313d30f32734fdafa9c612cd304",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:898e9c6bd0a197d56887b5989b9fd1a4be63708f5c7419033b1dd502a45eb3df",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6f011ad87a34c177466fe95434b492422a7ee10c6f58f6d53f38e0bd82c4a9b",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:321eff095c69a9e69a638fe51770656cd4303a2d519b6b3e66788fd51672b5b7",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ec28374d0328a01cea7e09a456a118a4a8573927e31f0129ec6bc5117eaab20",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c2c4ed3c0748136c2e67d89449db5ea6b1453f0cc4e78ecdffa9267f1497d9c",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:046e6edc01bf85b207d8ce299dbfe9b3069ecd7adedd15ebb361591b5e6657bc",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dabc4dfcde122e2a0d83cced90cde7d93c28bc261cd0959f9fc73b5ae049b84b",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ecb57e18d12f41ae37a4769b16202c0f21e7aedc2239faf0fabc0f967ef76d",
                    "size": 11980681
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6f6ae5b6eb3bdafe91a2ae7eab1df8b167fbd487032bf0001cfa6d0d07cb2b8",
                    "size": 470
                }
            ]
        },
        "buster-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e20ee2ed5ff0d6419bbe6c0697be10c4dac85dbbdfb5714c7e0137c9dd8d8a5",
                "size": 9026
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57c62469eb2b8cb9a971714401ad24a78c171e2f6dab20314e1c5f0dab7a8639",
                    "size": 26109830
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e0bb71a28101cf306dd8881cd70e9a4329c88416ccaa856c03ad9f9ca462ea3b",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1343c8f62d7a213a4930891b9baedd3f3ab886611cc27846d85c5246f94a49ed",
                    "size": 13787230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30ded8f6bc7cfab3b4ccb02253af6eeedc1e98e88792c947e85ea66f754d4cc5",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16863032851663607ec44c74acdcd212bad9be0dbafde21651224c30f0338706",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b03f96647417e9b3795ce838e1234352b11f3b4a7fd408fdcd918525c030ff92",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2b9ad58d32576f6320b1311e8b06b1d6b84debc3887d8b5499942a6e0dd7618",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db2996727ca5de868ff60e02b328fe3c9d5ce02636c01786f86a24aecf6a14e6",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:264f0f924d769ba932e84f3d4273647bc58656a3681b61adc89b2aef4de6ffb0",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f4e9f1a997a9e61cad6d9293b5b625cc689b1208964dce5ef22daf6ba21aee9",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a9321a67f474d7f4d5ae77c1328688549d4491569a67c72befefa394fb93647",
                    "size": 4350
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:956f0b15c8c92b76e0d39347589d4b71cd07a9f2850d5e872bf194f179b9b905",
                    "size": 11980675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:06aa52700337be79bd7c8a99d2a20408176c0c53f8b58360f7d68ed9beff9994",
                    "size": 470
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c9657028c75f7c4fd7622eab2d613897e821c9eb50f06ddb6e4a45d9d5ccb03",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92d71e77360b6b88836dbda2a6f21ffcc3338fbb8a977bb0b4473d74a583a847",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0ae8832f513d2ba418d3608195baacfd0d7e510b94e834eaa6fe33bcdb44d30",
                    "size": 12063939
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f842e85cd5eee36f0819ba2a6ba662f2e139e0ca6e16b13df3535e291c67182",
                    "size": 469
                }
            ]
        },
        "latest-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e927e5ecc422394cfa06d5c5360670a3f614f8e27adb639edaa94dd35a06ffc5",
                "size": 8358
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2149d6f4e3fb542c669bff24796e40aa7cf995916bc195bf844138d81f64e58a",
                    "size": 14278884
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9927d8f8cbfab0a18fd5ae74f2dd9c0798e0dff475b09f3e69ac816527ca120",
                    "size": 473
                }
            ]
        },
        "latest-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:484e9660e8167ecac44dc4cfdd201eaf32d066e86a07c328683329ec0ecbe0c2",
                "size": 9047
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79c3ba6adda4e77727f944ef759fa768b6de11aa7afc5e39c4d9d9c339edd3ad",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f69d467da32c948b4d5c98dbdcb05856d3ecbdf27baec3d931a72b8e18650fd",
                    "size": 14278700
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1589054c5f4aa700f7e5cdce9ee60a2682c6ce7e7400f6df85286f1ff5df22b",
                    "size": 473
                }
            ]
        },
        "latest-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:296de75b88662b6c1ce2d16641180b0e80919070abeccfa7c50de1af80f4e70e",
                "size": 9043
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3b02ff1abe5dfe9791505936f93c8316422232986a64a09149fe3aabb8be2d9",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:759907076afe713c4234fb5987290ccfa61dd49daebced99e301665b885062d3",
                    "size": 12975152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d19c37c9190edbe13b45b66a2b8056c396ee43a72916ba1d9ca757dc398c27d",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdba65c7a86f749c1d475ca45f2a65c80d5ad0525db04e84db2da8803614bc1b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9f4c9bf8626165f2f2e675cc143ca800c95ac74558ce5c1cdc0928136b2a45b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33c9823ab36b119e618993bd63dbbc9cfebe37d67ba4ce036ffe5203e4de0be7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd83e03f85224ec03d743a072160fb9deddd86af0bf9cd2e7b6a4f2dbe221b58",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a42f72c7f4eb3e1399bfe85d2f32518ba7277a04b897820a0030797b4825d57",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5324c9bc68271cfdebc5291757fad42a9cd8e644ccef3fa6b3820e6dc0e61cd6",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53c1ea87a6a881a89e145cbd3e147fd9afe4a9f1ec9a8eef5d41c8c63791882e",
                    "size": 4354
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:36abaffc965899044fa98f3763721cc53c963360527eb255c3663bbbc471c07f",
                    "size": 12066177
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7930fe0608215cb271e2c63af870e56f3f6a0f113732cf41262767d5c71a3303",
                    "size": 470
                }
            ]
        },
        "latest-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:604601b43d47bc7ae07443a79c5a3af96323a9d09f14b3fad392560f9bb5d778",
                "size": 9045
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4e883aee71b5ef97bf1ffdfd139669e73ef006c560365d29cabde27caa6b13b",
                    "size": 12975050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f03e14fe93efd751580a2d51cb4489a57eac27b5db895225befd9a2299711fd",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef2a23d56797032756a4a8e8bd01b2c71a198c10e4e75e46bb3508b707d88d5",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de945cb97c6374ff7ea085bcb2edf737114d2f71f921c9a5a72c2168a40dfaad",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f482a15b31fc59f209b49b1e3bb7a58f1c350c673db22910a5cfdc4dc3ae6685",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9571608af5da43a8c78a43bfb08a829b5fcafda5e8292e393472cabbf0f804f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9614d73f006a2cb00875772e38550a822b7ee1914fa1a3a9ca724b0f0acb02aa",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55d55aad7abd855b5bd072003c07952d0f3605bcd5c55718c85dfbe5501b78bc",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92bc401a1e1b26ffde9f671ea641347a5ce4f5cae81e66a0533e2281c2b72dfe",
                    "size": 4348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7deb7f45590d0fd876ecc8428e3085a5efc0d65017f21b5b085725602a5aedd0",
                    "size": 12066139
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:665f1b57a385a25fbe1819fe1d331dbcc2b13888d7416f65c029cf44d25e1b9b",
                    "size": 471
                }
            ]
        },
        "latest-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5412e39ae855704a094461bd6b1d18808779a011bc7cd0408a8fa6b655cdedd6",
                "size": 9032
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd08d71f9e4be4f65e14231b96b47eba749b90731d6ac89a6b122102497f0520",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ced2846c7ce7b5358d8d1ca581b422091108201a9283aa8f845b5b6acf13b45",
                    "size": 12975074
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc714b302c222d2337d2a96a68bd0f8e2f6e8b6141b063613b4201f1b9bf88ff",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91059ecb4797f7ed53ba6123bc3708c97ed915820284c6e9ab28d76f72973580",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10793d475cc903a3e7298e67feaaaa5b1ab39b699349227473a13d747c7bebd1",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7e5860cbb43236bbbe750bd6abf586a8856e076ee2e1c38f33fb4bc6cc9129f",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3528b47aa83bdaf2eca21dffd496e9b26a4c6c17e7ef544f7a136ea69eb5b829",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8d887e8d98a1d19fda084161bdcdc428bc666757604d237cc331b3e96e3773b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c42376533b2b7356cd47d1c5d2930bb9f16c8bcf09939ec53070c484056a89",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46d42b86d83acc3c85e0cd9d3619e52d2f71bb1012554ba439b8130c268c400e",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ae6e9928d2f3fb57e1bf87b3826ef4e62de0c2429e070a926692ebd6ded16cb",
                    "size": 12066219
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dcf0f9ac43287600032b6fdb0fd23473501d9ce0bb1b530e9b75357cf3083d2",
                    "size": 472
                }
            ]
        },
        "latest-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5d2c8ee2403be9a704471859ceeaf5552dd327e4000753b257984e8e54e7b302",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a0e48841b8e49c36f6b1a8ad4efb4d37c6e10ef8dde5cd91f4dc437d1d8405",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55a1946130ccc17b581e6b524cf631bab9e5fcee60de01f0d39244a87686b92b",
                    "size": 12974885
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9858c7c5616b7ed0d90d6fd0d87ceef7f797f9d35758625edeb82f9e028aec60",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efe8622a8e40ac44137b3b5fd0dc0f14ad5e810e0338dc547f692d8b6a35c977",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c78e7355e42143ed74045da95e7de3ad92272199e0776d1b7228a150a65f47",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75b07c5fa13c3200be81dc39d20abbff29122ce62e20ebfe91047e7eaf0fbfb2",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a595d9ac359dba0005931f718e650d9edb7c0a1e3f6d9d8acce991fa76ed260",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95af7d2de70e46a0ae3136c3e62f38101bc59d80d433aa5f5bbde3da44a6280d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15bfc11c903d27a21ce686bae35210aa061831dd4dbc80e0104e5cc4ac5d9643",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6120ccb46ec7e859461fc3b627f8990feba50718c40e5d2514cdf5003b3b209f",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f7945167d47fd27f19952205115bf19585854eb8334ebdacc29a10770a0898c",
                    "size": 12066011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6df31fa7fc0063789e872ee0f3065f93a31cd2968f2cc85c5d4933b868ddaa1",
                    "size": 471
                }
            ]
        },
        "latest-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c9657028c75f7c4fd7622eab2d613897e821c9eb50f06ddb6e4a45d9d5ccb03",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92d71e77360b6b88836dbda2a6f21ffcc3338fbb8a977bb0b4473d74a583a847",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0ae8832f513d2ba418d3608195baacfd0d7e510b94e834eaa6fe33bcdb44d30",
                    "size": 12063939
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f842e85cd5eee36f0819ba2a6ba662f2e139e0ca6e16b13df3535e291c67182",
                    "size": 469
                }
            ]
        },
        "latest-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:44493022c19832218dd81d591b2b9dec8c6178416142bd04591d63f9cfbdf0ff",
                "size": 10002
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e679cebe0849bfa7cb31bc37c02c65ff1e2ba1af6c7610130ef4a0662642da9",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8018fd0de9417ceff54d5e970ffba51a3bd4381b66ff525be5a1b8c5ca7763e",
                    "size": 12976453
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a7e897f2afcd8ba780ee63974b25f8796cdaeff7b3253da3c3a8dc54e841c49",
                    "size": 202407153
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d232fe9fe2541d304164f5c0df34e5f68fe7099328fb3de15e15b02e89a54a07",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08abf86fab1b55cb6405a9f9e324ff6f48ef08200bbf35f8d8189e0db23960f9",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1aeaee01325f1a632dcd37d0732234af47f4f122e8a845d01854a7caf4264961",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363f1af776176365556af6c9c3ff5817d8675e57829101a6a0f3779325b85f6",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be1d5d2ac84db3d2f73bccd4820102bf030a95bfca47a780431f6bff75d934fa",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd25f72f3d784a43ae14ac9f58af7e1b42eca095bd0e4697ffbfbd3e7def3e17",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff19cd906c274030a179f0f967ebcb4ba25f4a57a5d79d2777f3591891e59cb",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ae9fc0ab010050fbd2d8882357603d10168615d702990a7790a4d802fd20d8f",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c427262c0499d6b0b5bc104da5a13065c12bb28003c69101a1699ff3c0ac46b",
                    "size": 1157661
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1222253a9a228c6bf4f135ac0d1faf2e5a6502695a11d7b246ffee966233b135",
                    "size": 468
                }
            ]
        },
        "latest-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f6c58a5d57fd48ac70f138bef628569b6864571c2c95aa5d41dadd0512d6e74f",
                "size": 9332
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84642ed2f5842e77f6ce5b7f04d267c1d999850b7464bc250930f7fd81198663",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18b6f561d414a7fa5d738b1fea176f906742ede82ffbc4fbadca42ea8da00ab8",
                    "size": 12976765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aecc55ca63d63ea52a00d80a4095c0f16fc39e85a3f1cf79f8df391d3ccb3f94",
                    "size": 198248312
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:030eeff4d1ac1b1b9917e3b089c69df05f6efe48cf505703a4cb63782ec5a56b",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ecf8e349dc4b765d6364166adaff7550943ad9eeaffefca4316ac625ff4a7a5",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfc66336b9ad79402a7cf71cabb33b9456c5e145f9a23723e1d849021404c057",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d697352f61ac44c0070abc2678af71534abf040b05ea7130dcc922c022cd5898",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df627d84b57294a6988ae9668cc0c13d6f0abf5a02dc7e7ce41ea92ef3d7e05d",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9842b82317c431cd0b82234e40c31821fa2f99d0b114f0e16bc2e95d1097331c",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f381b65dee23d18d5f7a3ecd6e7e78172fb7fca7276fad534ac20d294b552211",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ceaf17916c987003bb3ca4d4027eae0f6f477a007bd74469ea28eb2429e89c4",
                    "size": 1153868
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e90544b08df2ca7031b63a0cde792cf57a1f91c2dba7c84785f8525eebf1b556",
                    "size": 472
                }
            ]
        },
        "latest-build-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:15a40102962cd9e7bbeb28dd3a7187f61b85dc154e4ddf97e3631b6644f766bb",
                "size": 10020
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84642ed2f5842e77f6ce5b7f04d267c1d999850b7464bc250930f7fd81198663",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18b6f561d414a7fa5d738b1fea176f906742ede82ffbc4fbadca42ea8da00ab8",
                    "size": 12976765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aecc55ca63d63ea52a00d80a4095c0f16fc39e85a3f1cf79f8df391d3ccb3f94",
                    "size": 198248312
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:030eeff4d1ac1b1b9917e3b089c69df05f6efe48cf505703a4cb63782ec5a56b",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ecf8e349dc4b765d6364166adaff7550943ad9eeaffefca4316ac625ff4a7a5",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfc66336b9ad79402a7cf71cabb33b9456c5e145f9a23723e1d849021404c057",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d697352f61ac44c0070abc2678af71534abf040b05ea7130dcc922c022cd5898",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df627d84b57294a6988ae9668cc0c13d6f0abf5a02dc7e7ce41ea92ef3d7e05d",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9842b82317c431cd0b82234e40c31821fa2f99d0b114f0e16bc2e95d1097331c",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f381b65dee23d18d5f7a3ecd6e7e78172fb7fca7276fad534ac20d294b552211",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f3e86ff68336261aa15d795da8944444a8ff76195f4365aeda0c097da7304cb",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a39e7878abeae8075ea0c4d8882917ea0de6314aa8608949a1ad153356483d2",
                    "size": 1153883
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f6ffe73d9587b09b8410db5040a7a2066726531631adb76f296e1d1319c25c8",
                    "size": 473
                }
            ]
        },
        "latest-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:37853373a584d494fb6090d942c645983ef8703ba8bd72c6de05c4d2cb2f6064",
                "size": 10021
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e6d2876027888d3ee57d853179c6ae4108810c0a1e8ea542ccd2e772cbdf72de",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46d4ee457740b37623f08bbcbd1b02947925c0c192b88f9de41e105b213f3037",
                    "size": 12975118
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a6b14450d604ab6bb7341457c11b5c4e501f9e3701f9e81c495327141b20945",
                    "size": 198237483
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c5bb2387dea7477d9b0a9474c920b1f83e2de84b2118bbe5533ccb5d6810d9a",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e5ec705e490c3943e6f9ed2dc00d2002ab2cf4f0e92e7e2b25ff6443139eae3",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c69ff9177e27b334300cd4a305ec82f2ee6a9ce2b4a69158589c4fe38c836ce",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:277c46c61d7fba09b1d3e5f33c8dd6f3f8950716b93f695d08009cba37045d74",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64f544d305b2294bd574c661a7cbe2e8737d2f5736c0fb92e88f66897a9c537d",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b1364ac1dfefc426e60f0a8f6f6ac2ca41ad9da5c8f4b032b22f0267af4d867",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0dc6fa7fe1b76c096420ed4c5b6ffbdaa17115c327660124752324da781f220",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4da889e9c52899f06bd2f0986e35a6aeb26f0e79b5020f3d848db242ad2f9018",
                    "size": 4346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7769137a5c4d7af3bcf8f51859ec85fc484a8ecfaa57efdcd2fe3c5124296546",
                    "size": 1153861
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d75758ca1dde1c299c5c443499bd6a259d5501d524d5f4c820f584198830a98",
                    "size": 470
                }
            ]
        },
        "latest-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a6895365644257971bab37d5f946e808dc351dd87664fbdb283bb5aa3565acde",
                "size": 10012
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e002e62693644c1b7d6e4f47f7eff0f4b07447854f1a354762c5faa8407710ca",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a9b01329934717e99144a7efaa632c6c80243af996f43d870a12ffe3ba463a6",
                    "size": 12974968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:872fdfb1a4b78cad02f72565e6b5df8fb9d395d99c7b9571df6778fa5ab1e640",
                    "size": 198238960
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6048c8b8684c8f4fb651632b9fa013a8526964e3f8abab3a969dc6f1cb68d9ae",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:269df0faa1899a56ca4217248617e058791dcba067437ef71356ae68960ce716",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:929b77287b8d44f9ca3348277249579589d6630e4e790d3427b783f0dd9325e4",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c866449afa453b0eed477471bdb56140bd2bce6b088e5583c628196c7cddd98",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10e8e21417f2bcfc41f184882e2b9aa6ac0e37ddd424ebd1c0ccd3dc2554c0fc",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:843f45cce595e7bc1ce03c2311718eb90fc2500ef2ea503b3496747efa80ee26",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:404603e2a43c44ed8901f778799a084d038b1064663c406f1e0a228ab46d7006",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77f0961d5599ef8c4b78c7e2329daadcfef0b61aaaf16fe3ac1e1e998bd72e6a",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:35e80d54ab05ff0444119df7bdce70c2aa86cd55ba3f4a615b2bf36f78f6e52c",
                    "size": 1153971
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a13b0b6c957774160bebe9890778de05dfd9df938f5a17a55a29ad7f9b6782cd",
                    "size": 471
                }
            ]
        },
        "latest-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6302acf561cdbac0ea3bb1432a064270690e52e4b662a2ecf5aa949e407acef1",
                "size": 10007
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcba2f78391733a47fa6301e4aaa906cd31b5772535c1582562079b78c5f5ae8",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c258bcf90db36e2970a505ee6e14dc01fd96af73aa4051879fbf892fbb7cf0b",
                    "size": 12975045
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d305429230d5b47f1cede9ff9171605bf960fc0f07ecf3d5f0be446a9ab480dd",
                    "size": 198574000
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d85d43053080c4587c7856378ffb4165e3f60437c56d535c40fb60e2b71249f7",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7d3c5e68f9537b5e91a334f71a210c2aeaf92c14ccdc35996d2a5ba8f2878b0",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00a29b6223ba1cfb59486affcb2a59771c561cca23b716b1aafb0732c34f1e94",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db231b5fdcb87d43878f52d15271bd9810030c4478e9fd27ba42275124d6a245",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4529c36f3a81a1a33876b8be756716bce7e469a6e8bbe7256a68aa7baf11b7b",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e69b17c2ab37f3b7c6850e5e51e9b8a2f027e059aaae5edd9bdb1fe4db2a9a61",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c54e551e3da7490bde6cb993af0bf12073e9059bec98783a7ac1b1ef92675cb5",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cea6a93cb60db8b87ef9ed57f926d22118692942417d2208343da32673cea9f7",
                    "size": 4342
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b619ad0fcd5ff893fb54c60cddb222a2bacc7e6104e80f1b0fe724e83fd61ce4",
                    "size": 1154217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec3b84c3cf95d3f17fb4078b301c2c961cad736f8a63bb0aa88e6b9a7a5dc43f",
                    "size": 472
                }
            ]
        },
        "latest-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a1246aaecff7668fa2556bba63730ca51a37e00eefd609853a68a214b99812c7",
                "size": 10001
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e30d3bfa043a37234529256a2ddbafcb7d76b87fc53ce2ee153cd303fda2d6ae",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d22075c9bb7061f6b7a8955728b997b57b08a406bf3c98dd569b2822de3796a0",
                    "size": 12974924
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7e9c0263de6c0544a8417547a1595cb696b2b910a0174db6ccb5fc99e656246",
                    "size": 198573136
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dde5e8304a334dc4b9a1dbeb79713473361114d34c14a984ad0e76839ce179c2",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56cd23d43464d40481e4fbb571c2d9872a49b9b692af94b9f5d66090c16c54e6",
                    "size": 257
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f577bbc75fd07fa7b71b7ed4314155d827c4c786ca8b91ebce3e6ae99fcf70b2",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f08c256037939d84637466f41bf6d4269ac0af747c3d79ed3e62d9d34e4eb21c",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c1e7798cf49b6bda92f33efe657ceafae3fe1aecf8040704916f42a83fff8c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de486aee6a55011bdfd9cf642f227a6d2d45c2d8b825f45b46429307fa683b2f",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f57bb210d903b265ac8af7d74783fd1353f301da5e2d63b68caa267c2e44d01",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b56cf62595ed195bd869703aa6e5d2ae57323820e33445193a39dff52a375bd9",
                    "size": 4348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07091421cdf3164d15303e7a7e3ef4285c2877501f7d7fbce1f38623200f4ba1",
                    "size": 1154206
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0a79bf03effc56cd5b918f05b08c2d38e981a29b87cfcd0e6bbd3bd789a7b46",
                    "size": 471
                }
            ]
        },
        "latest-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:44493022c19832218dd81d591b2b9dec8c6178416142bd04591d63f9cfbdf0ff",
                "size": 10002
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e679cebe0849bfa7cb31bc37c02c65ff1e2ba1af6c7610130ef4a0662642da9",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8018fd0de9417ceff54d5e970ffba51a3bd4381b66ff525be5a1b8c5ca7763e",
                    "size": 12976453
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a7e897f2afcd8ba780ee63974b25f8796cdaeff7b3253da3c3a8dc54e841c49",
                    "size": 202407153
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d232fe9fe2541d304164f5c0df34e5f68fe7099328fb3de15e15b02e89a54a07",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08abf86fab1b55cb6405a9f9e324ff6f48ef08200bbf35f8d8189e0db23960f9",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1aeaee01325f1a632dcd37d0732234af47f4f122e8a845d01854a7caf4264961",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363f1af776176365556af6c9c3ff5817d8675e57829101a6a0f3779325b85f6",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be1d5d2ac84db3d2f73bccd4820102bf030a95bfca47a780431f6bff75d934fa",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd25f72f3d784a43ae14ac9f58af7e1b42eca095bd0e4697ffbfbd3e7def3e17",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff19cd906c274030a179f0f967ebcb4ba25f4a57a5d79d2777f3591891e59cb",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ae9fc0ab010050fbd2d8882357603d10168615d702990a7790a4d802fd20d8f",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c427262c0499d6b0b5bc104da5a13065c12bb28003c69101a1699ff3c0ac46b",
                    "size": 1157661
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1222253a9a228c6bf4f135ac0d1faf2e5a6502695a11d7b246ffee966233b135",
                    "size": 468
                }
            ]
        },
        "latest-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c9657028c75f7c4fd7622eab2d613897e821c9eb50f06ddb6e4a45d9d5ccb03",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92d71e77360b6b88836dbda2a6f21ffcc3338fbb8a977bb0b4473d74a583a847",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0ae8832f513d2ba418d3608195baacfd0d7e510b94e834eaa6fe33bcdb44d30",
                    "size": 12063939
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f842e85cd5eee36f0819ba2a6ba662f2e139e0ca6e16b13df3535e291c67182",
                    "size": 469
                }
            ]
        },
        "latest-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e927e5ecc422394cfa06d5c5360670a3f614f8e27adb639edaa94dd35a06ffc5",
                "size": 8358
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2149d6f4e3fb542c669bff24796e40aa7cf995916bc195bf844138d81f64e58a",
                    "size": 14278884
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9927d8f8cbfab0a18fd5ae74f2dd9c0798e0dff475b09f3e69ac816527ca120",
                    "size": 473
                }
            ]
        },
        "latest-run-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:484e9660e8167ecac44dc4cfdd201eaf32d066e86a07c328683329ec0ecbe0c2",
                "size": 9047
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79c3ba6adda4e77727f944ef759fa768b6de11aa7afc5e39c4d9d9c339edd3ad",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f69d467da32c948b4d5c98dbdcb05856d3ecbdf27baec3d931a72b8e18650fd",
                    "size": 14278700
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1589054c5f4aa700f7e5cdce9ee60a2682c6ce7e7400f6df85286f1ff5df22b",
                    "size": 473
                }
            ]
        },
        "latest-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:296de75b88662b6c1ce2d16641180b0e80919070abeccfa7c50de1af80f4e70e",
                "size": 9043
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3b02ff1abe5dfe9791505936f93c8316422232986a64a09149fe3aabb8be2d9",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:759907076afe713c4234fb5987290ccfa61dd49daebced99e301665b885062d3",
                    "size": 12975152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d19c37c9190edbe13b45b66a2b8056c396ee43a72916ba1d9ca757dc398c27d",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdba65c7a86f749c1d475ca45f2a65c80d5ad0525db04e84db2da8803614bc1b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9f4c9bf8626165f2f2e675cc143ca800c95ac74558ce5c1cdc0928136b2a45b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33c9823ab36b119e618993bd63dbbc9cfebe37d67ba4ce036ffe5203e4de0be7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd83e03f85224ec03d743a072160fb9deddd86af0bf9cd2e7b6a4f2dbe221b58",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a42f72c7f4eb3e1399bfe85d2f32518ba7277a04b897820a0030797b4825d57",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5324c9bc68271cfdebc5291757fad42a9cd8e644ccef3fa6b3820e6dc0e61cd6",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53c1ea87a6a881a89e145cbd3e147fd9afe4a9f1ec9a8eef5d41c8c63791882e",
                    "size": 4354
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:36abaffc965899044fa98f3763721cc53c963360527eb255c3663bbbc471c07f",
                    "size": 12066177
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7930fe0608215cb271e2c63af870e56f3f6a0f113732cf41262767d5c71a3303",
                    "size": 470
                }
            ]
        },
        "latest-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:604601b43d47bc7ae07443a79c5a3af96323a9d09f14b3fad392560f9bb5d778",
                "size": 9045
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4e883aee71b5ef97bf1ffdfd139669e73ef006c560365d29cabde27caa6b13b",
                    "size": 12975050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f03e14fe93efd751580a2d51cb4489a57eac27b5db895225befd9a2299711fd",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef2a23d56797032756a4a8e8bd01b2c71a198c10e4e75e46bb3508b707d88d5",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de945cb97c6374ff7ea085bcb2edf737114d2f71f921c9a5a72c2168a40dfaad",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f482a15b31fc59f209b49b1e3bb7a58f1c350c673db22910a5cfdc4dc3ae6685",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9571608af5da43a8c78a43bfb08a829b5fcafda5e8292e393472cabbf0f804f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9614d73f006a2cb00875772e38550a822b7ee1914fa1a3a9ca724b0f0acb02aa",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55d55aad7abd855b5bd072003c07952d0f3605bcd5c55718c85dfbe5501b78bc",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92bc401a1e1b26ffde9f671ea641347a5ce4f5cae81e66a0533e2281c2b72dfe",
                    "size": 4348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7deb7f45590d0fd876ecc8428e3085a5efc0d65017f21b5b085725602a5aedd0",
                    "size": 12066139
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:665f1b57a385a25fbe1819fe1d331dbcc2b13888d7416f65c029cf44d25e1b9b",
                    "size": 471
                }
            ]
        },
        "latest-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5412e39ae855704a094461bd6b1d18808779a011bc7cd0408a8fa6b655cdedd6",
                "size": 9032
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd08d71f9e4be4f65e14231b96b47eba749b90731d6ac89a6b122102497f0520",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ced2846c7ce7b5358d8d1ca581b422091108201a9283aa8f845b5b6acf13b45",
                    "size": 12975074
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc714b302c222d2337d2a96a68bd0f8e2f6e8b6141b063613b4201f1b9bf88ff",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91059ecb4797f7ed53ba6123bc3708c97ed915820284c6e9ab28d76f72973580",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10793d475cc903a3e7298e67feaaaa5b1ab39b699349227473a13d747c7bebd1",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7e5860cbb43236bbbe750bd6abf586a8856e076ee2e1c38f33fb4bc6cc9129f",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3528b47aa83bdaf2eca21dffd496e9b26a4c6c17e7ef544f7a136ea69eb5b829",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8d887e8d98a1d19fda084161bdcdc428bc666757604d237cc331b3e96e3773b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c42376533b2b7356cd47d1c5d2930bb9f16c8bcf09939ec53070c484056a89",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46d42b86d83acc3c85e0cd9d3619e52d2f71bb1012554ba439b8130c268c400e",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ae6e9928d2f3fb57e1bf87b3826ef4e62de0c2429e070a926692ebd6ded16cb",
                    "size": 12066219
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dcf0f9ac43287600032b6fdb0fd23473501d9ce0bb1b530e9b75357cf3083d2",
                    "size": 472
                }
            ]
        },
        "latest-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5d2c8ee2403be9a704471859ceeaf5552dd327e4000753b257984e8e54e7b302",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a0e48841b8e49c36f6b1a8ad4efb4d37c6e10ef8dde5cd91f4dc437d1d8405",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55a1946130ccc17b581e6b524cf631bab9e5fcee60de01f0d39244a87686b92b",
                    "size": 12974885
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9858c7c5616b7ed0d90d6fd0d87ceef7f797f9d35758625edeb82f9e028aec60",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efe8622a8e40ac44137b3b5fd0dc0f14ad5e810e0338dc547f692d8b6a35c977",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c78e7355e42143ed74045da95e7de3ad92272199e0776d1b7228a150a65f47",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75b07c5fa13c3200be81dc39d20abbff29122ce62e20ebfe91047e7eaf0fbfb2",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a595d9ac359dba0005931f718e650d9edb7c0a1e3f6d9d8acce991fa76ed260",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95af7d2de70e46a0ae3136c3e62f38101bc59d80d433aa5f5bbde3da44a6280d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15bfc11c903d27a21ce686bae35210aa061831dd4dbc80e0104e5cc4ac5d9643",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6120ccb46ec7e859461fc3b627f8990feba50718c40e5d2514cdf5003b3b209f",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f7945167d47fd27f19952205115bf19585854eb8334ebdacc29a10770a0898c",
                    "size": 12066011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6df31fa7fc0063789e872ee0f3065f93a31cd2968f2cc85c5d4933b868ddaa1",
                    "size": 471
                }
            ]
        },
        "latest-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c9657028c75f7c4fd7622eab2d613897e821c9eb50f06ddb6e4a45d9d5ccb03",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92d71e77360b6b88836dbda2a6f21ffcc3338fbb8a977bb0b4473d74a583a847",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0ae8832f513d2ba418d3608195baacfd0d7e510b94e834eaa6fe33bcdb44d30",
                    "size": 12063939
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f842e85cd5eee36f0819ba2a6ba662f2e139e0ca6e16b13df3535e291c67182",
                    "size": 469
                }
            ]
        },
        "run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c9657028c75f7c4fd7622eab2d613897e821c9eb50f06ddb6e4a45d9d5ccb03",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92d71e77360b6b88836dbda2a6f21ffcc3338fbb8a977bb0b4473d74a583a847",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0ae8832f513d2ba418d3608195baacfd0d7e510b94e834eaa6fe33bcdb44d30",
                    "size": 12063939
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f842e85cd5eee36f0819ba2a6ba662f2e139e0ca6e16b13df3535e291c67182",
                    "size": 469
                }
            ]
        },
        "run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e927e5ecc422394cfa06d5c5360670a3f614f8e27adb639edaa94dd35a06ffc5",
                "size": 8358
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2149d6f4e3fb542c669bff24796e40aa7cf995916bc195bf844138d81f64e58a",
                    "size": 14278884
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9927d8f8cbfab0a18fd5ae74f2dd9c0798e0dff475b09f3e69ac816527ca120",
                    "size": 473
                }
            ]
        },
        "run-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:484e9660e8167ecac44dc4cfdd201eaf32d066e86a07c328683329ec0ecbe0c2",
                "size": 9047
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79c3ba6adda4e77727f944ef759fa768b6de11aa7afc5e39c4d9d9c339edd3ad",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f69d467da32c948b4d5c98dbdcb05856d3ecbdf27baec3d931a72b8e18650fd",
                    "size": 14278700
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1589054c5f4aa700f7e5cdce9ee60a2682c6ce7e7400f6df85286f1ff5df22b",
                    "size": 473
                }
            ]
        },
        "run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:296de75b88662b6c1ce2d16641180b0e80919070abeccfa7c50de1af80f4e70e",
                "size": 9043
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3b02ff1abe5dfe9791505936f93c8316422232986a64a09149fe3aabb8be2d9",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:759907076afe713c4234fb5987290ccfa61dd49daebced99e301665b885062d3",
                    "size": 12975152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d19c37c9190edbe13b45b66a2b8056c396ee43a72916ba1d9ca757dc398c27d",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdba65c7a86f749c1d475ca45f2a65c80d5ad0525db04e84db2da8803614bc1b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9f4c9bf8626165f2f2e675cc143ca800c95ac74558ce5c1cdc0928136b2a45b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33c9823ab36b119e618993bd63dbbc9cfebe37d67ba4ce036ffe5203e4de0be7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd83e03f85224ec03d743a072160fb9deddd86af0bf9cd2e7b6a4f2dbe221b58",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a42f72c7f4eb3e1399bfe85d2f32518ba7277a04b897820a0030797b4825d57",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5324c9bc68271cfdebc5291757fad42a9cd8e644ccef3fa6b3820e6dc0e61cd6",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53c1ea87a6a881a89e145cbd3e147fd9afe4a9f1ec9a8eef5d41c8c63791882e",
                    "size": 4354
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:36abaffc965899044fa98f3763721cc53c963360527eb255c3663bbbc471c07f",
                    "size": 12066177
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7930fe0608215cb271e2c63af870e56f3f6a0f113732cf41262767d5c71a3303",
                    "size": 470
                }
            ]
        },
        "run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:604601b43d47bc7ae07443a79c5a3af96323a9d09f14b3fad392560f9bb5d778",
                "size": 9045
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4e883aee71b5ef97bf1ffdfd139669e73ef006c560365d29cabde27caa6b13b",
                    "size": 12975050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f03e14fe93efd751580a2d51cb4489a57eac27b5db895225befd9a2299711fd",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef2a23d56797032756a4a8e8bd01b2c71a198c10e4e75e46bb3508b707d88d5",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de945cb97c6374ff7ea085bcb2edf737114d2f71f921c9a5a72c2168a40dfaad",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f482a15b31fc59f209b49b1e3bb7a58f1c350c673db22910a5cfdc4dc3ae6685",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9571608af5da43a8c78a43bfb08a829b5fcafda5e8292e393472cabbf0f804f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9614d73f006a2cb00875772e38550a822b7ee1914fa1a3a9ca724b0f0acb02aa",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55d55aad7abd855b5bd072003c07952d0f3605bcd5c55718c85dfbe5501b78bc",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92bc401a1e1b26ffde9f671ea641347a5ce4f5cae81e66a0533e2281c2b72dfe",
                    "size": 4348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7deb7f45590d0fd876ecc8428e3085a5efc0d65017f21b5b085725602a5aedd0",
                    "size": 12066139
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:665f1b57a385a25fbe1819fe1d331dbcc2b13888d7416f65c029cf44d25e1b9b",
                    "size": 471
                }
            ]
        },
        "run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5412e39ae855704a094461bd6b1d18808779a011bc7cd0408a8fa6b655cdedd6",
                "size": 9032
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd08d71f9e4be4f65e14231b96b47eba749b90731d6ac89a6b122102497f0520",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ced2846c7ce7b5358d8d1ca581b422091108201a9283aa8f845b5b6acf13b45",
                    "size": 12975074
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc714b302c222d2337d2a96a68bd0f8e2f6e8b6141b063613b4201f1b9bf88ff",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91059ecb4797f7ed53ba6123bc3708c97ed915820284c6e9ab28d76f72973580",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10793d475cc903a3e7298e67feaaaa5b1ab39b699349227473a13d747c7bebd1",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7e5860cbb43236bbbe750bd6abf586a8856e076ee2e1c38f33fb4bc6cc9129f",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3528b47aa83bdaf2eca21dffd496e9b26a4c6c17e7ef544f7a136ea69eb5b829",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8d887e8d98a1d19fda084161bdcdc428bc666757604d237cc331b3e96e3773b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c42376533b2b7356cd47d1c5d2930bb9f16c8bcf09939ec53070c484056a89",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46d42b86d83acc3c85e0cd9d3619e52d2f71bb1012554ba439b8130c268c400e",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ae6e9928d2f3fb57e1bf87b3826ef4e62de0c2429e070a926692ebd6ded16cb",
                    "size": 12066219
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dcf0f9ac43287600032b6fdb0fd23473501d9ce0bb1b530e9b75357cf3083d2",
                    "size": 472
                }
            ]
        },
        "run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5d2c8ee2403be9a704471859ceeaf5552dd327e4000753b257984e8e54e7b302",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a0e48841b8e49c36f6b1a8ad4efb4d37c6e10ef8dde5cd91f4dc437d1d8405",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55a1946130ccc17b581e6b524cf631bab9e5fcee60de01f0d39244a87686b92b",
                    "size": 12974885
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9858c7c5616b7ed0d90d6fd0d87ceef7f797f9d35758625edeb82f9e028aec60",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efe8622a8e40ac44137b3b5fd0dc0f14ad5e810e0338dc547f692d8b6a35c977",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c78e7355e42143ed74045da95e7de3ad92272199e0776d1b7228a150a65f47",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75b07c5fa13c3200be81dc39d20abbff29122ce62e20ebfe91047e7eaf0fbfb2",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a595d9ac359dba0005931f718e650d9edb7c0a1e3f6d9d8acce991fa76ed260",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95af7d2de70e46a0ae3136c3e62f38101bc59d80d433aa5f5bbde3da44a6280d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15bfc11c903d27a21ce686bae35210aa061831dd4dbc80e0104e5cc4ac5d9643",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6120ccb46ec7e859461fc3b627f8990feba50718c40e5d2514cdf5003b3b209f",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f7945167d47fd27f19952205115bf19585854eb8334ebdacc29a10770a0898c",
                    "size": 12066011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6df31fa7fc0063789e872ee0f3065f93a31cd2968f2cc85c5d4933b868ddaa1",
                    "size": 471
                }
            ]
        },
        "run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c9657028c75f7c4fd7622eab2d613897e821c9eb50f06ddb6e4a45d9d5ccb03",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92d71e77360b6b88836dbda2a6f21ffcc3338fbb8a977bb0b4473d74a583a847",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b0ae8832f513d2ba418d3608195baacfd0d7e510b94e834eaa6fe33bcdb44d30",
                    "size": 12063939
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f842e85cd5eee36f0819ba2a6ba662f2e139e0ca6e16b13df3535e291c67182",
                    "size": 469
                }
            ]
        },
        "sid": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:540547c758f22e05e8ecdb187fa26dde15424ab2014365e2cd7645ba7482c90c",
                "size": 9016
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af4776df7d2dde797cda1f9c09fd884c9486c06066ea1352185e2484bb248500",
                    "size": 32165878
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:444a92c23835aa49d30fc1cf6510849ab0aa505180c4011203d923bf6bfebc24",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5546108d7162a39f8417c4829fa5b31ed364e722057e7a4e78f10e2b7df267b3",
                    "size": 25488372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07ccd9567bcf8f64a218d167746a94cf16d4b927ece15e7f29a65612fa4a814a",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0243d4ca56617203e53026968094f79305a0cc058508e62080966554e1460a93",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ed20117a9444fad6261db6998729094a7fca99da1830d61d8d560e72a608a2d",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a60c47a987638fd95f213f1714c066a6c7fd9d50bbdd24d67733421a916f363",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:329ec75c3172e40d8def6f4d43f6fcbdce3b4c4121fa0f0f49e8fe463d1e468e",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98ec53c8ff19e1279330ff7959072234ea9158e809230b49d40a795e9942b132",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:050171365b2ac3debc9ee1320d0b9b7057e5bc0653097d546c63f565c83aa513",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b595107d3ccc30cff6ca285913e64d01f02c05f4aa2e24a595317c001f48ed0",
                    "size": 4344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b18a6ea83ab673a55d90e3fcd6ec853bcf126063eed9056f9773584f69f93778",
                    "size": 21313102
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42b5ef736a26f69de3e51c838a55bce331b57ac0f06a1be23c3ddee9d5192f35",
                    "size": 466
                }
            ]
        },
        "sid-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0d9560bb69a7e1ef6a8032e12f17a53dbff8c9066849e678039cf1d8ed946b9f",
                "size": 8344
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30808830f2bb5ebcfa2b816291fb89c02602e3e95c4b8fe3b0a2ad5f4d536254",
                    "size": 31560383
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:338fc5ddb609095b885737af0ed38ebbcce0bf4412ed49f8fad940dfe7a1e09d",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:138f99b21ce44952d50add5903c3981cc528d00a74af8f53bba549f9476f6ff7",
                    "size": 21975365
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc1fa143db5b92e83dabe22a04035d7859ac77ce643c96871cc64a4e8addf6c8",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63d1df0414c2a7d6316af8db4aa24527c8b9e57fba2261307cbcb345d2c8343b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:423e8bc663fee5af7389ae65eae17c96c50ed8e3f9b711ec056216555562fab6",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f16c49ee0e6b1c48886bbc64da9e25435032d493a58b132b48635e5e15c0800",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54b4125da3f0ee89d60f37093f73f2094f24ad103f1d1ca5a3ab6a33640331bc",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc3330f45ede079f24228b8c3e19a8511b6e0ea817760c1add98336a6886fd41",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8815277c03cf7f918350821c5767870b49474a62804fd1a16d03e063aa9f26a3",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74990aaebd448dfc7391d7000dde1c40f8c7d95b5edfa12b4eb3791bbdcaccf6",
                    "size": 12841382
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff45d091536e9568893b06f8ca014c3cb7d2aa78beb1161924b5304191ae198d",
                    "size": 467
                }
            ]
        },
        "sid-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3ae2b13a208625878c5fb23bf1a634f76c121da4abf100db83657b037a12a74c",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30808830f2bb5ebcfa2b816291fb89c02602e3e95c4b8fe3b0a2ad5f4d536254",
                    "size": 31560383
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:338fc5ddb609095b885737af0ed38ebbcce0bf4412ed49f8fad940dfe7a1e09d",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:138f99b21ce44952d50add5903c3981cc528d00a74af8f53bba549f9476f6ff7",
                    "size": 21975365
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc1fa143db5b92e83dabe22a04035d7859ac77ce643c96871cc64a4e8addf6c8",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63d1df0414c2a7d6316af8db4aa24527c8b9e57fba2261307cbcb345d2c8343b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:423e8bc663fee5af7389ae65eae17c96c50ed8e3f9b711ec056216555562fab6",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f16c49ee0e6b1c48886bbc64da9e25435032d493a58b132b48635e5e15c0800",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54b4125da3f0ee89d60f37093f73f2094f24ad103f1d1ca5a3ab6a33640331bc",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc3330f45ede079f24228b8c3e19a8511b6e0ea817760c1add98336a6886fd41",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8815277c03cf7f918350821c5767870b49474a62804fd1a16d03e063aa9f26a3",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:106eb1ff43be1d5077465c169e1e716e3ac3fcb4f76a3f3342aa0a5eff594826",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87995e1c419b7a210fbeb14e2371d98c1a0730353729a6415d328c030aa7ce90",
                    "size": 12841222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:107464be7e8148b97368da5a690b0f9fa264253ebf6ac4a16a395f5074ad5219",
                    "size": 469
                }
            ]
        },
        "sid-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d26e85ba3908f5fa3514ce3c7ea0d9e5da6cbc78d70493c150873c698ec092f6",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:156e7d847b11e9e8afa2923514f31c593525f51fa2451f1794ceec19f79f5943",
                    "size": 31560755
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5cc77ed921173e0630e7ab45ab6a73133d3fb34d11c36fb327d225532669dab6",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8487993f66d4e19b0267a0b800f697214e6f9c7128dd873605693d38d221411c",
                    "size": 27929468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf376f2efd3380c87c5bed26a3515b2887952e7c510f89b5f42f3781fdc6528d",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46fee49d372d8dd1919f855ce6d1c0b433d2684b9e8b416ac2248ddfaecd7cad",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c263ca0ab0d98ceec572564742461502509a313e4ae6c05c5c38225de3a70ceb",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:376213124b8071dd80cdeac59566b17c50512691083ffafbeaf4c03bc7ad5c44",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd5401d65a09308d5c3568b5df96fbb68024916fb739c544d9a923b121edfbfa",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27f47a786cb34e4b48d75fa567fd49e761a0afeb09fd637dacd907765601163b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5960b9df1a6bfdf6c317dc2c1f7dd4e8ee87e364b9021801bdf9b063271db9b2",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53f488910b8887067ae08af5056994e3355b4817c7acc0089e6f9aeeb25d242e",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:11ce2719b2b8ef8f38445c3f46c8fa67a6c9f67110f8bd355e8c31368f248768",
                    "size": 12796919
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea8985ef830fbedef42c5f68ff3d68f854f8a0d305e19feda6be7fce559f901f",
                    "size": 466
                }
            ]
        },
        "sid-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:07376d065ddfb4eee3a9ac60c93d39706bbe4fe653af3513b286483063c076af",
                "size": 9032
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:156e7d847b11e9e8afa2923514f31c593525f51fa2451f1794ceec19f79f5943",
                    "size": 31560755
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fed2ebb8774b84650707f8e99c4e5137c05e35918e120a9259e1210e6f72ca7",
                    "size": 28702762
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e47836198904efdafbafa8848308674105b90406818ad6490d173184626b0924",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9d37a30d71afece4c3257ff3ae87f0f74a3a56c42a90f8b69e1105ef70c5718",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bc0753d504ff27f7533d92ae9bda43939e4ad7f15f7fd871222007848d1013",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bf794e1ec756f73a1b16119acc2b7bda4a82ccc2bc5f054493b16c53d115547",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38cceb9adb2494a293857b5270f2bd1390fa3bc9261c9a41ed064e6f51a37959",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e8130e8c509bd4af79178ba802d93cdf525556c911368c2249ffef30bad8fba",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00d3d609fdf9eb35fb470bd535c17acbb099bb436a284b406680753529d73272",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1643181e66cb756e236a66c6b99af933b6ac2d0c0583077d33a36d04a2d290a1",
                    "size": 4346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38874305197a837c7b9f21bc43db2089f18230b80d6d65c8668f5636438947be",
                    "size": 12797963
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:742a9242092bab6f17b1e2792aa150c57cffd0cda82992af065e235483a8e6f2",
                    "size": 465
                }
            ]
        },
        "sid-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5b1ee0be6d499ea05863c01f66d43280560511def73504f5b1312a00c8a18b5d",
                "size": 9018
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5addb9bcb0c706774be98b1416ef8e6f19c67290a713bd9b197c7da4875cd073",
                    "size": 30726503
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:606addce47d756f75710c9127014c091a361d7082000d2aa4647a934d0b6a032",
                    "size": 2592216
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbf59b915ef7e00f3a28eddd01e281b963eb5651eb99fa7186f6610478259459",
                    "size": 22886466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d18adb59af4096465955e4848e100f8912fc39827cb555d1dc2e93f76621d2a9",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55c8fb96fd0ff56cd40952020adec20474970bf9a58d9fda51b197794aab0aa3",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba23e4e6ee5801f02701ed3302596a405bbf73892b23ac1a9befa6720cc1cd83",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fde0c1acd3c5218963c7bfaec46449db10a039416ead95b5d0644aea74a75a39",
                    "size": 1004
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42c113dcd6bec16c39b642a91785a49ae109cab57c613a7c89f5bfc78d3e142e",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0559b238bbbf8b0656f0d98828f621586662a73483ed6e7ae2a3cedbddf8a186",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef95abd3bc018607c606fde7ab299d4a43862a6edab5cfda83b9fe6b8c39de2",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d63267fc820ac5d02231c11fb74eeff32c538b0a7d3e4912d2985d2f29536191",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4867df2b52f0ceda4cbcabca9f53a97c2fcb7447ec49cea6b30f9e0147a8803",
                    "size": 12801268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:966b2f2fc5e223a3b1a512098aed73d3045d9639470eccb33a88c8d0c4228661",
                    "size": 468
                }
            ]
        },
        "sid-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:60143a1f02ddd3053a5038e57eec56c5d0f73bc8f2a2e33840cd789a942c290e",
                "size": 9018
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5addb9bcb0c706774be98b1416ef8e6f19c67290a713bd9b197c7da4875cd073",
                    "size": 30726503
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ead7e6cc20b4dc02f74e6b6e84736275d0244df7863c1df24d49b94112341681",
                    "size": 2592215
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbe5750a166857f965c56bc09c46e7ff5ce450e1eb09d9d089beb35892811cf6",
                    "size": 28830496
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f3f255520a0b3a5dac6033ebc2da5bb7bf4e99ea67717d5e85731b683a762f3",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e3c6882e720888d80b98ee45b55f9a6d84b5efdce17e9adba19d4664b3d99ac",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec9ff89a437f373356a30f406aa3ca24453a4a761c7b301958a03fbfd11b151b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1f5ed35ab3cc9cc5d96133100047986b20f86fd2d1898a26cf6bdbed7e58adf",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d523bb1d4de808a083e762d17c8df0845b723c38cb99ac9e02cb8076bd5049e2",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69054fa98365991dc957f6d80c23af72c934be0043b4c3359b9134f8468b2dfe",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8163b91cb135af8c1f25ac6e881d07fe9ca21faeec189c2efe48a50dd2f9064c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88a1a1723d24248bdb8dceec254449b94ce1c46841fc865448883e146547331b",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c68b80719f41b14dced7dbbb0a894462fb01430934efb35d64ea2dc65c3a9cdf",
                    "size": 15099794
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4562e06de5491db6c3ea1a99b19e758fc305281ecb4f10e615b12102301ad534",
                    "size": 466
                }
            ]
        },
        "sid-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:540547c758f22e05e8ecdb187fa26dde15424ab2014365e2cd7645ba7482c90c",
                "size": 9016
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af4776df7d2dde797cda1f9c09fd884c9486c06066ea1352185e2484bb248500",
                    "size": 32165878
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:444a92c23835aa49d30fc1cf6510849ab0aa505180c4011203d923bf6bfebc24",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5546108d7162a39f8417c4829fa5b31ed364e722057e7a4e78f10e2b7df267b3",
                    "size": 25488372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07ccd9567bcf8f64a218d167746a94cf16d4b927ece15e7f29a65612fa4a814a",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0243d4ca56617203e53026968094f79305a0cc058508e62080966554e1460a93",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ed20117a9444fad6261db6998729094a7fca99da1830d61d8d560e72a608a2d",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a60c47a987638fd95f213f1714c066a6c7fd9d50bbdd24d67733421a916f363",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:329ec75c3172e40d8def6f4d43f6fcbdce3b4c4121fa0f0f49e8fe463d1e468e",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98ec53c8ff19e1279330ff7959072234ea9158e809230b49d40a795e9942b132",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:050171365b2ac3debc9ee1320d0b9b7057e5bc0653097d546c63f565c83aa513",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b595107d3ccc30cff6ca285913e64d01f02c05f4aa2e24a595317c001f48ed0",
                    "size": 4344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b18a6ea83ab673a55d90e3fcd6ec853bcf126063eed9056f9773584f69f93778",
                    "size": 21313102
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42b5ef736a26f69de3e51c838a55bce331b57ac0f06a1be23c3ddee9d5192f35",
                    "size": 466
                }
            ]
        },
        "sid-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7f85bdc68920938f03c0e4921d6394634a2661e4669aecd30099330c4b320ab0",
                "size": 9991
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af4776df7d2dde797cda1f9c09fd884c9486c06066ea1352185e2484bb248500",
                    "size": 32165878
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:726210592f711f05f053eec35e125752f18287fa26d921d3139b7e18163b8e9d",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5817abbd60da9db1e306e372857944073d1de28c0c79f6dc7fa63d1dacaf6fab",
                    "size": 25488429
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a90c1361feb03cfc5734081a25d7a940c76431d3fcc0a4a2ee996f0e6232981e",
                    "size": 274495446
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04836d7babd8c3df142fedb38d0d5a7a800fbf5979b08ceffe2e7d792c556e6d",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0115213fd5c10bce9849a4e354ace163ed461123d7b8361c3b23f30f5d3f972",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee3428549ca5eebb2f8d89f59cc7a91a7081ceed31d1d60d2b73fe1483dccac0",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab28e3f005507258b1b23b270eb362c1bc1e359d6b11beebc8285668f533e1e6",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56b8f9963dd076c25a8cf1d4f3d2f1e230952af1c356671b2d6362f05747d2eb",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb6841562431e18b69b21b0c075481d9008bf840def7aa697ffe4e40f3e7b403",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f604a1d6278415b070a444d249b9c764ad0544468f77c3c1ae769c86c4b406d",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30531f0832b8dfe5cc39cdad37af2ad8b59752be3e415f5224c18d6222dc4e04",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc4adc8b9029a0e4db019a6d7775b7a6c6071735c3fe1f06eb957741836a3143",
                    "size": 1222451
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:176d3cb799088d105b1791d82d14994968f20ef3569a6a36c25eb61092cd6c0c",
                    "size": 466
                }
            ]
        },
        "sid-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8851f4244a624b1408244baa2df24098d47394a2ebaa08a38938a46225c1ecde",
                "size": 9319
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30808830f2bb5ebcfa2b816291fb89c02602e3e95c4b8fe3b0a2ad5f4d536254",
                    "size": 31560383
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e665ab656bfa447d62fce5ba068d1f583b0048cb4055d146fff2e7ccc361a15",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8c4d07f97985a96acd2b9776f46bb35ac538c92bcd8136b091ec72a5ec1079c",
                    "size": 21975360
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f12dcce10c6f09ae4ec98bd7c7d008a0bca46b4b7bbacc80d7283875e14c33d8",
                    "size": 291768736
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77b9660367be58f2617cb230f9d496e0a67ac6fb9c623157f74d85eb34380d41",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b272b6c0ada829957879fd50e6aeca336378fb3ad2d75cce3b1bb8fb4364108",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ec894948f8906cdd15045fb80c2102b649b094fd3d7d5f9d54374f3dbae979b",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70a712641a569d5a8c194c8edf6c39d406bd06671bcfca2675e5ba0db679cc0d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4faa61d563f57aa2c3b9cb1eb47b865e49a5f5e6aeccd2b48368b0ee17a89964",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:662629ef2653a468ebd8455576e8f4e79e72b3d5eeaf6e1cc4dd4a5a6a395e76",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d67cdf0074b12d5abdb177cfe6e3b39fc0d7ae50a51d87a5679461cf13ea8de",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9b92494e23d402a345a6592983c5407b42398aecf98c0c7ec997ac9f1dd73f7",
                    "size": 1252801
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94c0209b5816ddba2aed462eadc36a6b316da2ffdfc837f4618b7cc4c42c848c",
                    "size": 470
                }
            ]
        },
        "sid-build-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:be7e6e8babf53b0bf26ebdaeb014529107aaf6f933166b1c913797211cf1976b",
                "size": 10008
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30808830f2bb5ebcfa2b816291fb89c02602e3e95c4b8fe3b0a2ad5f4d536254",
                    "size": 31560383
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e665ab656bfa447d62fce5ba068d1f583b0048cb4055d146fff2e7ccc361a15",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8c4d07f97985a96acd2b9776f46bb35ac538c92bcd8136b091ec72a5ec1079c",
                    "size": 21975360
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f12dcce10c6f09ae4ec98bd7c7d008a0bca46b4b7bbacc80d7283875e14c33d8",
                    "size": 291768736
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77b9660367be58f2617cb230f9d496e0a67ac6fb9c623157f74d85eb34380d41",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b272b6c0ada829957879fd50e6aeca336378fb3ad2d75cce3b1bb8fb4364108",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ec894948f8906cdd15045fb80c2102b649b094fd3d7d5f9d54374f3dbae979b",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70a712641a569d5a8c194c8edf6c39d406bd06671bcfca2675e5ba0db679cc0d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4faa61d563f57aa2c3b9cb1eb47b865e49a5f5e6aeccd2b48368b0ee17a89964",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:662629ef2653a468ebd8455576e8f4e79e72b3d5eeaf6e1cc4dd4a5a6a395e76",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d67cdf0074b12d5abdb177cfe6e3b39fc0d7ae50a51d87a5679461cf13ea8de",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c954e7ec402fce6835d4c64fa4e2a2ab914250a04455af8261715899f264874",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec6e4b1c49000dc63d3e50229c1ad7257d5bd8685d4a41ce601fd3d906590eaf",
                    "size": 1252773
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a5c10a51e836bf32fbe1d798b6fafa1dd280eee0dce22ef3f0c169e406d7fc7",
                    "size": 468
                }
            ]
        },
        "sid-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2ddb445cdf00ec44c2f000a7553ea8d9117b4ebceff6cfe161e1fcc68b0a960d",
                "size": 10008
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:156e7d847b11e9e8afa2923514f31c593525f51fa2451f1794ceec19f79f5943",
                    "size": 31560755
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:740c9ad1cb4702c732569d5e523e44ec9e9776f987928915221e52a82694d84f",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6aac0d3a0604e3d241005be25005e206ff31dcdb05123e0f53fdeac7f1dacce2",
                    "size": 27929451
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c5a912791049973571c5757b35672dc2cb554f8fb91c88f961134d170c040b36",
                    "size": 290328626
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b85278e98e75abc61e7edd06814f06ce506315982fab5fd7602a653cb8cf7f69",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df8aeefd6c9046f712c76cad40ab12b16f884baacbe2e00dc9617d5f3251527d",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c233d1b5db88a991aee70b2e6908aecfe9ff2a53b5fbc31ddc25aa2bda896a8a",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cddb28f1a66c408fa313eb98a439c20e929a347cf61f7212d010b237cbc8500a",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01bce86f549996da598c0c28fc789b2f18bdf7f0ce0c4cda3f135faa5ae8db2e",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9dff427991ea61e73ab8019965ee2245c5fee48c22876123247c83995facf4ef",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b1ed12eb61d608bc6b7334185c64617b17c1602cb896bc9b63772bf031d38c7",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9003918940a212f773c18d5e74c7cd48f67c0ae03dc556127313418e35d42b1b",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5824bcd9c36d27c310fbabf61265443f825df767578f40fc4591f3853df559a",
                    "size": 1204028
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89c0ac4458567dd1588be5db24dd47842c09a6f5a8b9d479b513eb7527c12cfa",
                    "size": 466
                }
            ]
        },
        "sid-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8e4dea3af017694c660ee444c539ca4de460a96bed720fd0516b2eeb25b3fbb7",
                "size": 10000
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:156e7d847b11e9e8afa2923514f31c593525f51fa2451f1794ceec19f79f5943",
                    "size": 31560755
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ec95040402c9c346bb636975cbea6ed712aa5f9b6b8a228b874c60e293419cd",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9442f557c4017168bd48066ce1fe546d18779a978745978e2b4a57f173d34c7a",
                    "size": 28702776
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d549d102abdc748edb003077841908b0f82f7b67290d54e1e9c200d2923e1041",
                    "size": 295666304
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fcc7b43d9c1fc91ffa2a7416a1ed23955420fc5b801962c912be841be94fd9af",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:572b8278b7bdbdb72cf64ed44893aa692fa87db60ec5ca34217ba8aed35c2b75",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:299ac018f72074ffe5a72e68ea4ab57c3db22a2a63419cc25ced3b08faa04510",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a5c8dd2a9108ec7fc812aac9a0ea374537f1b6da7f683726349a95209669c8f",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fcc5d19d7d13b363aa5f54b4bc56e5d9768cffe011ad61140ef746d0846c5826",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:824f57120b0f6ee7e3c2d843ec7df964905d3bb0f7e8f95565cce4387d62361a",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c757193fff4fcce5978535a5c79ea69e5afeb92ef3a508c1bcd02137bfb409f8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5af1e683360d6bddcd4284bed2c338d224c58374efe45e46e7a2ff4e59dc760e",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dea91cbdd849325809838d372fbc9f8dcf673d63631b72d4ae6ab782c30d6f73",
                    "size": 1204797
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c93874d6556612b23b79889edeaf4451b6b9e70585e1b6086c4bde02cbb4d84",
                    "size": 467
                }
            ]
        },
        "sid-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:01d593c8cc5e079e50032aebaa28878618edfa9e0010fbcaf08612dfc8c459c6",
                "size": 9993
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5addb9bcb0c706774be98b1416ef8e6f19c67290a713bd9b197c7da4875cd073",
                    "size": 30726503
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cfd81996cca1bc5737b917f62a1f790493f5b1545a0ea937ec8ee58ae533ace8",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3d46331af4753aa3a9c360344f62931db4bd83de6fbed8be0002f9a2f8ba9d0",
                    "size": 22886500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98fe6071d6ae25380c4e2e6ccdbd7a30225b27fb6c4d743a5c0d2a1d9b916836",
                    "size": 264518956
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91dc198278b0447fe3ef8b82cac8025d3f6e4071331a0881ed4620a008668536",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d85b5bf912e202a4d455c76c88578233013d557e574d345777aa55ea364f14aa",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ef015e1f844f983f1efbc237d325ef6c7d641e628534cebd595e16b5b73049e",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a4350a8cd29443edfd945bd42c19557a4d4e6b6d9bfedb18319c529f1052fa6",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ac053386fcd9b925f64d5fe9ac3f4fd2ab366d5f24e5c209e4726306643551b",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:601e9900a2b7239156fbd66df4c30d699ff146de602a0ddfd2a7e68eb7b659a4",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ecbcc73422f2fa13c0f9f41443e464eb65c8c00a7cfaeb1309ea8c70db4181e",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed570f11f497e544acf197180acde7b028b96145b9c53345c2dc7d3de6cebb20",
                    "size": 4348
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c12f331a6dd51e8b8bd6e015c6ee13d062d527aaa37ac70151c8c4e7f93643e",
                    "size": 1202281
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9906425443519bc21555f70ebcec48bfda293ad4431f919778b83a06a06f4b47",
                    "size": 466
                }
            ]
        },
        "sid-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:dc571469f6bf787ad408621013ce6263d91fc64a5d924fe807c8f71bd4ecb332",
                "size": 9991
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5addb9bcb0c706774be98b1416ef8e6f19c67290a713bd9b197c7da4875cd073",
                    "size": 30726503
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95e9b283c28b65bf0ddb332ad301504259858dc9d810d91003438fa5c331db6f",
                    "size": 2592216
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e6df4e73c06d58f83b69b6ac3c009041d50a2cae299f5433f376a97c532f877",
                    "size": 28830532
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5adefacf6a9d83b121d86ce4047859d9d66816bf66ea65808591f674a08ff092",
                    "size": 267795525
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e470bcf5d43f8f12407ee1b6dca1c9071cd0abab3fde4d5321caeb94c9860f3f",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:72efe018d769e9d978e29b634279045c956dd7574360feec17d6fff6ea164cfc",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ceba9923ab4cbab8adea819078a2c2c69b8d23a13266f9255a09450aea18f0f6",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:577a596f7856d02c40885e9c2beecf65c1e8072a0114d1391f15def82d45de29",
                    "size": 1004
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d2a7689c21caea467c926b8747edeffa96e7d6daebe32327ca76fce2d7e5cf1",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fa61cbca082cb82a07aba9a93a9c0de706939a2017e76a3dc11259138001c29",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ee9f273e50457952b93fab6f28b08c74b98b11fc4b6bdad86929bafd60ee591",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b0699f89c7f41ce8bfefa4118a34ce7114dca4b688c90c6dd39d50137c6bc01",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da13464bfaeb7d412a426eafae0ce50ca218dedd76fb59f8f041ff05b14c26ac",
                    "size": 1202882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:222696fcb7e12de6e99b3ec918757ec00dfc086f9b7ecef2acd75b83bcdea0cc",
                    "size": 465
                }
            ]
        },
        "sid-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7f85bdc68920938f03c0e4921d6394634a2661e4669aecd30099330c4b320ab0",
                "size": 9991
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af4776df7d2dde797cda1f9c09fd884c9486c06066ea1352185e2484bb248500",
                    "size": 32165878
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:726210592f711f05f053eec35e125752f18287fa26d921d3139b7e18163b8e9d",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5817abbd60da9db1e306e372857944073d1de28c0c79f6dc7fa63d1dacaf6fab",
                    "size": 25488429
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a90c1361feb03cfc5734081a25d7a940c76431d3fcc0a4a2ee996f0e6232981e",
                    "size": 274495446
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04836d7babd8c3df142fedb38d0d5a7a800fbf5979b08ceffe2e7d792c556e6d",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0115213fd5c10bce9849a4e354ace163ed461123d7b8361c3b23f30f5d3f972",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee3428549ca5eebb2f8d89f59cc7a91a7081ceed31d1d60d2b73fe1483dccac0",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab28e3f005507258b1b23b270eb362c1bc1e359d6b11beebc8285668f533e1e6",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56b8f9963dd076c25a8cf1d4f3d2f1e230952af1c356671b2d6362f05747d2eb",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb6841562431e18b69b21b0c075481d9008bf840def7aa697ffe4e40f3e7b403",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f604a1d6278415b070a444d249b9c764ad0544468f77c3c1ae769c86c4b406d",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30531f0832b8dfe5cc39cdad37af2ad8b59752be3e415f5224c18d6222dc4e04",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc4adc8b9029a0e4db019a6d7775b7a6c6071735c3fe1f06eb957741836a3143",
                    "size": 1222451
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:176d3cb799088d105b1791d82d14994968f20ef3569a6a36c25eb61092cd6c0c",
                    "size": 466
                }
            ]
        },
        "sid-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:540547c758f22e05e8ecdb187fa26dde15424ab2014365e2cd7645ba7482c90c",
                "size": 9016
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af4776df7d2dde797cda1f9c09fd884c9486c06066ea1352185e2484bb248500",
                    "size": 32165878
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:444a92c23835aa49d30fc1cf6510849ab0aa505180c4011203d923bf6bfebc24",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5546108d7162a39f8417c4829fa5b31ed364e722057e7a4e78f10e2b7df267b3",
                    "size": 25488372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07ccd9567bcf8f64a218d167746a94cf16d4b927ece15e7f29a65612fa4a814a",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0243d4ca56617203e53026968094f79305a0cc058508e62080966554e1460a93",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ed20117a9444fad6261db6998729094a7fca99da1830d61d8d560e72a608a2d",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a60c47a987638fd95f213f1714c066a6c7fd9d50bbdd24d67733421a916f363",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:329ec75c3172e40d8def6f4d43f6fcbdce3b4c4121fa0f0f49e8fe463d1e468e",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98ec53c8ff19e1279330ff7959072234ea9158e809230b49d40a795e9942b132",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:050171365b2ac3debc9ee1320d0b9b7057e5bc0653097d546c63f565c83aa513",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b595107d3ccc30cff6ca285913e64d01f02c05f4aa2e24a595317c001f48ed0",
                    "size": 4344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b18a6ea83ab673a55d90e3fcd6ec853bcf126063eed9056f9773584f69f93778",
                    "size": 21313102
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42b5ef736a26f69de3e51c838a55bce331b57ac0f06a1be23c3ddee9d5192f35",
                    "size": 466
                }
            ]
        },
        "sid-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0d9560bb69a7e1ef6a8032e12f17a53dbff8c9066849e678039cf1d8ed946b9f",
                "size": 8344
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30808830f2bb5ebcfa2b816291fb89c02602e3e95c4b8fe3b0a2ad5f4d536254",
                    "size": 31560383
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:338fc5ddb609095b885737af0ed38ebbcce0bf4412ed49f8fad940dfe7a1e09d",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:138f99b21ce44952d50add5903c3981cc528d00a74af8f53bba549f9476f6ff7",
                    "size": 21975365
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc1fa143db5b92e83dabe22a04035d7859ac77ce643c96871cc64a4e8addf6c8",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63d1df0414c2a7d6316af8db4aa24527c8b9e57fba2261307cbcb345d2c8343b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:423e8bc663fee5af7389ae65eae17c96c50ed8e3f9b711ec056216555562fab6",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f16c49ee0e6b1c48886bbc64da9e25435032d493a58b132b48635e5e15c0800",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54b4125da3f0ee89d60f37093f73f2094f24ad103f1d1ca5a3ab6a33640331bc",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc3330f45ede079f24228b8c3e19a8511b6e0ea817760c1add98336a6886fd41",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8815277c03cf7f918350821c5767870b49474a62804fd1a16d03e063aa9f26a3",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74990aaebd448dfc7391d7000dde1c40f8c7d95b5edfa12b4eb3791bbdcaccf6",
                    "size": 12841382
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff45d091536e9568893b06f8ca014c3cb7d2aa78beb1161924b5304191ae198d",
                    "size": 467
                }
            ]
        },
        "sid-run-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3ae2b13a208625878c5fb23bf1a634f76c121da4abf100db83657b037a12a74c",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30808830f2bb5ebcfa2b816291fb89c02602e3e95c4b8fe3b0a2ad5f4d536254",
                    "size": 31560383
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:338fc5ddb609095b885737af0ed38ebbcce0bf4412ed49f8fad940dfe7a1e09d",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:138f99b21ce44952d50add5903c3981cc528d00a74af8f53bba549f9476f6ff7",
                    "size": 21975365
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc1fa143db5b92e83dabe22a04035d7859ac77ce643c96871cc64a4e8addf6c8",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63d1df0414c2a7d6316af8db4aa24527c8b9e57fba2261307cbcb345d2c8343b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:423e8bc663fee5af7389ae65eae17c96c50ed8e3f9b711ec056216555562fab6",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f16c49ee0e6b1c48886bbc64da9e25435032d493a58b132b48635e5e15c0800",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54b4125da3f0ee89d60f37093f73f2094f24ad103f1d1ca5a3ab6a33640331bc",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc3330f45ede079f24228b8c3e19a8511b6e0ea817760c1add98336a6886fd41",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8815277c03cf7f918350821c5767870b49474a62804fd1a16d03e063aa9f26a3",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:106eb1ff43be1d5077465c169e1e716e3ac3fcb4f76a3f3342aa0a5eff594826",
                    "size": 4349
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87995e1c419b7a210fbeb14e2371d98c1a0730353729a6415d328c030aa7ce90",
                    "size": 12841222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:107464be7e8148b97368da5a690b0f9fa264253ebf6ac4a16a395f5074ad5219",
                    "size": 469
                }
            ]
        },
        "sid-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d26e85ba3908f5fa3514ce3c7ea0d9e5da6cbc78d70493c150873c698ec092f6",
                "size": 9033
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:156e7d847b11e9e8afa2923514f31c593525f51fa2451f1794ceec19f79f5943",
                    "size": 31560755
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5cc77ed921173e0630e7ab45ab6a73133d3fb34d11c36fb327d225532669dab6",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8487993f66d4e19b0267a0b800f697214e6f9c7128dd873605693d38d221411c",
                    "size": 27929468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf376f2efd3380c87c5bed26a3515b2887952e7c510f89b5f42f3781fdc6528d",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46fee49d372d8dd1919f855ce6d1c0b433d2684b9e8b416ac2248ddfaecd7cad",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c263ca0ab0d98ceec572564742461502509a313e4ae6c05c5c38225de3a70ceb",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:376213124b8071dd80cdeac59566b17c50512691083ffafbeaf4c03bc7ad5c44",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd5401d65a09308d5c3568b5df96fbb68024916fb739c544d9a923b121edfbfa",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27f47a786cb34e4b48d75fa567fd49e761a0afeb09fd637dacd907765601163b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5960b9df1a6bfdf6c317dc2c1f7dd4e8ee87e364b9021801bdf9b063271db9b2",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53f488910b8887067ae08af5056994e3355b4817c7acc0089e6f9aeeb25d242e",
                    "size": 4345
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:11ce2719b2b8ef8f38445c3f46c8fa67a6c9f67110f8bd355e8c31368f248768",
                    "size": 12796919
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea8985ef830fbedef42c5f68ff3d68f854f8a0d305e19feda6be7fce559f901f",
                    "size": 466
                }
            ]
        },
        "sid-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:07376d065ddfb4eee3a9ac60c93d39706bbe4fe653af3513b286483063c076af",
                "size": 9032
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:156e7d847b11e9e8afa2923514f31c593525f51fa2451f1794ceec19f79f5943",
                    "size": 31560755
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fed2ebb8774b84650707f8e99c4e5137c05e35918e120a9259e1210e6f72ca7",
                    "size": 28702762
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e47836198904efdafbafa8848308674105b90406818ad6490d173184626b0924",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9d37a30d71afece4c3257ff3ae87f0f74a3a56c42a90f8b69e1105ef70c5718",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bc0753d504ff27f7533d92ae9bda43939e4ad7f15f7fd871222007848d1013",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bf794e1ec756f73a1b16119acc2b7bda4a82ccc2bc5f054493b16c53d115547",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38cceb9adb2494a293857b5270f2bd1390fa3bc9261c9a41ed064e6f51a37959",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e8130e8c509bd4af79178ba802d93cdf525556c911368c2249ffef30bad8fba",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00d3d609fdf9eb35fb470bd535c17acbb099bb436a284b406680753529d73272",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1643181e66cb756e236a66c6b99af933b6ac2d0c0583077d33a36d04a2d290a1",
                    "size": 4346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38874305197a837c7b9f21bc43db2089f18230b80d6d65c8668f5636438947be",
                    "size": 12797963
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:742a9242092bab6f17b1e2792aa150c57cffd0cda82992af065e235483a8e6f2",
                    "size": 465
                }
            ]
        },
        "sid-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5b1ee0be6d499ea05863c01f66d43280560511def73504f5b1312a00c8a18b5d",
                "size": 9018
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5addb9bcb0c706774be98b1416ef8e6f19c67290a713bd9b197c7da4875cd073",
                    "size": 30726503
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:606addce47d756f75710c9127014c091a361d7082000d2aa4647a934d0b6a032",
                    "size": 2592216
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbf59b915ef7e00f3a28eddd01e281b963eb5651eb99fa7186f6610478259459",
                    "size": 22886466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d18adb59af4096465955e4848e100f8912fc39827cb555d1dc2e93f76621d2a9",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55c8fb96fd0ff56cd40952020adec20474970bf9a58d9fda51b197794aab0aa3",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba23e4e6ee5801f02701ed3302596a405bbf73892b23ac1a9befa6720cc1cd83",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fde0c1acd3c5218963c7bfaec46449db10a039416ead95b5d0644aea74a75a39",
                    "size": 1004
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42c113dcd6bec16c39b642a91785a49ae109cab57c613a7c89f5bfc78d3e142e",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0559b238bbbf8b0656f0d98828f621586662a73483ed6e7ae2a3cedbddf8a186",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef95abd3bc018607c606fde7ab299d4a43862a6edab5cfda83b9fe6b8c39de2",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d63267fc820ac5d02231c11fb74eeff32c538b0a7d3e4912d2985d2f29536191",
                    "size": 4347
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4867df2b52f0ceda4cbcabca9f53a97c2fcb7447ec49cea6b30f9e0147a8803",
                    "size": 12801268
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:966b2f2fc5e223a3b1a512098aed73d3045d9639470eccb33a88c8d0c4228661",
                    "size": 468
                }
            ]
        },
        "sid-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:60143a1f02ddd3053a5038e57eec56c5d0f73bc8f2a2e33840cd789a942c290e",
                "size": 9018
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5addb9bcb0c706774be98b1416ef8e6f19c67290a713bd9b197c7da4875cd073",
                    "size": 30726503
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ead7e6cc20b4dc02f74e6b6e84736275d0244df7863c1df24d49b94112341681",
                    "size": 2592215
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbe5750a166857f965c56bc09c46e7ff5ce450e1eb09d9d089beb35892811cf6",
                    "size": 28830496
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f3f255520a0b3a5dac6033ebc2da5bb7bf4e99ea67717d5e85731b683a762f3",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e3c6882e720888d80b98ee45b55f9a6d84b5efdce17e9adba19d4664b3d99ac",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec9ff89a437f373356a30f406aa3ca24453a4a761c7b301958a03fbfd11b151b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1f5ed35ab3cc9cc5d96133100047986b20f86fd2d1898a26cf6bdbed7e58adf",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d523bb1d4de808a083e762d17c8df0845b723c38cb99ac9e02cb8076bd5049e2",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69054fa98365991dc957f6d80c23af72c934be0043b4c3359b9134f8468b2dfe",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8163b91cb135af8c1f25ac6e881d07fe9ca21faeec189c2efe48a50dd2f9064c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88a1a1723d24248bdb8dceec254449b94ce1c46841fc865448883e146547331b",
                    "size": 4343
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c68b80719f41b14dced7dbbb0a894462fb01430934efb35d64ea2dc65c3a9cdf",
                    "size": 15099794
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4562e06de5491db6c3ea1a99b19e758fc305281ecb4f10e615b12102301ad534",
                    "size": 466
                }
            ]
        },
        "sid-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:540547c758f22e05e8ecdb187fa26dde15424ab2014365e2cd7645ba7482c90c",
                "size": 9016
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af4776df7d2dde797cda1f9c09fd884c9486c06066ea1352185e2484bb248500",
                    "size": 32165878
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:444a92c23835aa49d30fc1cf6510849ab0aa505180c4011203d923bf6bfebc24",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5546108d7162a39f8417c4829fa5b31ed364e722057e7a4e78f10e2b7df267b3",
                    "size": 25488372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07ccd9567bcf8f64a218d167746a94cf16d4b927ece15e7f29a65612fa4a814a",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0243d4ca56617203e53026968094f79305a0cc058508e62080966554e1460a93",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ed20117a9444fad6261db6998729094a7fca99da1830d61d8d560e72a608a2d",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a60c47a987638fd95f213f1714c066a6c7fd9d50bbdd24d67733421a916f363",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:329ec75c3172e40d8def6f4d43f6fcbdce3b4c4121fa0f0f49e8fe463d1e468e",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98ec53c8ff19e1279330ff7959072234ea9158e809230b49d40a795e9942b132",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:050171365b2ac3debc9ee1320d0b9b7057e5bc0653097d546c63f565c83aa513",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b595107d3ccc30cff6ca285913e64d01f02c05f4aa2e24a595317c001f48ed0",
                    "size": 4344
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b18a6ea83ab673a55d90e3fcd6ec853bcf126063eed9056f9773584f69f93778",
                    "size": 21313102
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42b5ef736a26f69de3e51c838a55bce331b57ac0f06a1be23c3ddee9d5192f35",
                    "size": 466
                }
            ]
        }
    },
    "tags": [
        "20240201",
        "20240226",
        "20240227",
        "20240304",
        "20240401",
        "20240408",
        "20240429",
        "bookworm",
        "bookworm-20240201",
        "bookworm-20240226",
        "bookworm-20240227",
        "bookworm-20240304",
        "bookworm-20240401",
        "bookworm-20240408",
        "bookworm-20240429",
        "bookworm-build",
        "bookworm-build-20240201",
        "bookworm-build-20240226",
        "bookworm-build-20240227",
        "bookworm-build-20240304",
        "bookworm-build-20240401",
        "bookworm-build-20240408",
        "bookworm-build-20240429",
        "bookworm-run",
        "bookworm-run-20240201",
        "bookworm-run-20240226",
        "bookworm-run-20240227",
        "bookworm-run-20240304",
        "bookworm-run-20240401",
        "bookworm-run-20240408",
        "bookworm-run-20240429",
        "build",
        "build-20240201",
        "build-20240226",
        "build-20240227",
        "build-20240304",
        "build-20240401",
        "build-20240408",
        "build-20240429",
        "bullseye",
        "bullseye-20240201",
        "bullseye-20240226",
        "bullseye-20240227",
        "bullseye-20240304",
        "bullseye-20240401",
        "bullseye-20240408",
        "bullseye-20240429",
        "bullseye-build",
        "bullseye-build-20240201",
        "bullseye-build-20240226",
        "bullseye-build-20240227",
        "bullseye-build-20240304",
        "bullseye-build-20240401",
        "bullseye-build-20240408",
        "bullseye-build-20240429",
        "bullseye-run",
        "bullseye-run-20240201",
        "bullseye-run-20240226",
        "bullseye-run-20240227",
        "bullseye-run-20240304",
        "bullseye-run-20240401",
        "bullseye-run-20240408",
        "bullseye-run-20240429",
        "buster",
        "buster-20240201",
        "buster-20240226",
        "buster-20240227",
        "buster-20240304",
        "buster-20240401",
        "buster-20240408",
        "buster-20240429",
        "buster-build",
        "buster-build-20240201",
        "buster-build-20240226",
        "buster-build-20240227",
        "buster-build-20240304",
        "buster-build-20240401",
        "buster-build-20240408",
        "buster-build-20240429",
        "buster-run",
        "buster-run-20240201",
        "buster-run-20240226",
        "buster-run-20240227",
        "buster-run-20240304",
        "buster-run-20240401",
        "buster-run-20240408",
        "buster-run-20240429",
        "latest",
        "latest-20240201",
        "latest-20240226",
        "latest-20240227",
        "latest-20240304",
        "latest-20240401",
        "latest-20240408",
        "latest-20240429",
        "latest-build",
        "latest-build-20240201",
        "latest-build-20240226",
        "latest-build-20240227",
        "latest-build-20240304",
        "latest-build-20240401",
        "latest-build-20240408",
        "latest-build-20240429",
        "latest-run",
        "latest-run-20240201",
        "latest-run-20240226",
        "latest-run-20240227",
        "latest-run-20240304",
        "latest-run-20240401",
        "latest-run-20240408",
        "latest-run-20240429",
        "run",
        "run-20240201",
        "run-20240226",
        "run-20240227",
        "run-20240304",
        "run-20240401",
        "run-20240408",
        "run-20240429",
        "sid",
        "sid-20240201",
        "sid-20240226",
        "sid-20240227",
        "sid-20240304",
        "sid-20240401",
        "sid-20240408",
        "sid-20240429",
        "sid-build",
        "sid-build-20240201",
        "sid-build-20240226",
        "sid-build-20240227",
        "sid-build-20240304",
        "sid-build-20240401",
        "sid-build-20240408",
        "sid-build-20240429",
        "sid-run",
        "sid-run-20240201",
        "sid-run-20240226",
        "sid-run-20240227",
        "sid-run-20240304",
        "sid-run-20240401",
        "sid-run-20240408",
        "sid-run-20240429"
    ],
    "configs": {
        "20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:18:44.882230645Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:44.770203593Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:18:44.770203593Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:44.882230645Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:fce71d005ef1399b88bba5c1a2e99ea28a0ce90e97c8986fab0819ada0f2f5c8",
                    "sha256:dc83caa3065b51fa87d3869d88a7a7a04bb2784eb40d46dab9f5883940b0831c"
                ]
            },
            "variant": "v8"
        },
        "20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T06:47:42.570096393Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:06.300803927Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T06:47:06.300803927Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:42.463708144Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:42.570096393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:64590090797bd58dea1d90f9e1915ab439819132db9dc65018f0bf614a53b415",
                    "sha256:8643a63c5adf2211238885138dff45c347168404cdfa26b871ba4f6fcb3a12a4",
                    "sha256:e9068358b42039f502a659f8f321f5491648754089737d95ea2b4a04c50a00b5"
                ]
            },
            "variant": "v8"
        },
        "20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:10:02.845968819Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:37.612406454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.235239371Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.327380141Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.444407777Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.455821747Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.489249886Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:39.054577625Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:39.175091463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:28.547589138Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:09:28.547589138Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:02.717733624Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:02.845968819Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:3667705b92b777b9857445986385fa3544fe745de824ed9e48b74d48e233a73b",
                    "sha256:a8f393213fd8f42444b9081c3d25da37b97dbec4b8639fe0f0e3a7589d5440fd",
                    "sha256:9e491949c039a6555bfc9e8d7edc810a1157e4de0e5a1c481e4a9da99f8dc49f",
                    "sha256:9d1103a6c6fb53d9a95de8b92fef5116bca54e0566ab3c9ba1697738c9c49934",
                    "sha256:34b6b50b96caed9ea8b06be9b87ec63932717d466f5059fcce4e49d0b8b1fe0a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:648567a88a80c3aedc7a65bfa28ed87413bf435dc5a1cb88738e3c5896c0c076",
                    "sha256:03d885cb57438349695f4729f2c71f343028df5dbb15b096c1d538eabb3058bd",
                    "sha256:d10c87bc3a1b034fb2d7a2b64156472e0744796c40aa33beedccda60556fa259",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d88ebe737a29be3e76f6b02f3591509f373fd4b840fb08406f33169dcd0cd78f",
                    "sha256:4e544689242b1ddfee0117efdb7784dd9f0d5a5229d50288e5ffe9093f5a3ddd",
                    "sha256:5f41562b508a5eb8852deaf68926bc8844a7fa67c46994326de693c002312c2e",
                    "sha256:cfc9295bad57e7a83e9d63812f222fdd1b91afd46e8e18ace4d1bfc465ac0af3"
                ]
            },
            "variant": "v8"
        },
        "20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:04.610475913Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.151462719Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.83609249Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.924579316Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.040114112Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.053934176Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.066241153Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:19.805586345Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.93208375Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:30.855836474Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:30.855836474Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:04.515184311Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:04.610475913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:0f12b4245fa0a3cc547f2a1e523735b954a9327e222c9499e29df367c992fc25",
                    "sha256:e718ad40e3c90a1cd1ecacf3a26fab120e1dea3923670a16a4c8ca50b6aa9d15",
                    "sha256:94c43fe224b59dec6cae014ab2c49387ad78dc326e460a610de6fc06495c0c1e",
                    "sha256:fe063efa4d53e9a11ecb850c83c6dd1b8b9cf17ec889889f949361d332a5b185",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f767c7f76af4a12cb0e1199b0fc93840a3e5a2f502f98489563422b710c7c82",
                    "sha256:eebaafdb21b5c124a4063b6c1f0639260a303dd72ba00c9ec5ad78515f70a2e1",
                    "sha256:8c39f39f8c6773437573033b4459016bd870d9bd6b9034b07c451bd5a636ff53",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:88062171c3eea1172e399dc542b1a51a8e61572ea372e1516f5b57248db85766",
                    "sha256:df991eaf76a1fb8207d621cf3ffb74ec9ab6750ec29fcb80a0d403b662089a35",
                    "sha256:911dc17feaa8a263b4acfc67851af4dcb67ff5042cfcf99d42b030ec8d7cfc9d",
                    "sha256:f8cb85032dd53f27f80a699d5ffc9261c0dc49b754f56a138ad5fed44e5874e4"
                ]
            },
            "variant": "v8"
        },
        "20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:44.164293131Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:13.879662253Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.586745871Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.670518036Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.790637458Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.799775231Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.830003625Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:15.53078113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:15.644511102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:10.092781961Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:10.092781961Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:44.054935167Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:44.164293131Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:ed4cf4bf4b8884bdd10c62b3d9f3f64dcad62f08c9184d6e8c4e3edd498d6ae7",
                    "sha256:e3ff77460733b5c70568a050c25cbfbba938cfb55a53dd793006cf80ce8cc1fd",
                    "sha256:769ee8ef4da51e9377ca4f5d7e5b438c1bac43f38546dfe5b6ddb3ae5fc17d03",
                    "sha256:2faf27c705413cfe35a57bebf1d6dc6e5fed15c26b907de4e87eb462c4c8203f",
                    "sha256:c057d9490c0d6264b7858e1b24696718ce0623763d48f86d0eab46db57cc6697",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7333a928fdb22e11f1eb14ab19de0aeece67b74f04ae6800a48f3626b6204619",
                    "sha256:7d1b2cfc6f4a702dbc3c9da3af6ce40ed072aea5b43739a0f749f0f5a410074a",
                    "sha256:1faec101bbd8a81f2c905ae2146f8736e838f567a8b2f856533f8c07e083cc3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1dc00d63c3226fece7e9b01c6df138f48bb6914b96abf29daae86c6c2331068e",
                    "sha256:7367ec19d8e9d3c036ac8c6b9b3f287f23f2bd038bea49482767206e46d5f753",
                    "sha256:44e1b05b27c7e40e9598b54e414e10f77f050990dd61b5214482b950a504a0e7",
                    "sha256:e948e987fda113363c940b0836b970ed56b2a1b736211caa5424ddc12512ef42"
                ]
            },
            "variant": "v8"
        },
        "20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:13.305582148Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.743482327Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.498252335Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.585989395Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.739473042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.787312463Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.797563821Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:22.394772002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:22.511272459Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:39.689825419Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:15:39.689825419Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:13.205414786Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:13.305582148Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:d04befff2a5273eded40c865c563f0d50276b31e32180679474e889fe080da1d",
                    "sha256:7b0c6c50c04ed7bf4b021ee99132e0366bf6ae4768e6a29e52e27fb6a1569aa3",
                    "sha256:2b57aa920cc2cddb5cf11eac876be5662fcb346e000afb2b1ced7b1295ed5a3d",
                    "sha256:9ad61a9af1dc63ddeb51e6fe9bbc82df2e37f1d0b967166d78ee356b54e2e32f",
                    "sha256:2011ae045dbd2ec46399c6e0e93d9cbef0dc64a181ee72a298737b86a13cadc1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71dc71c4129f2ba46a54c086463f9f61a15ea4ed70e3ad2fbf06fefc3ebda46e",
                    "sha256:46974ccfee6d4c0f3231897a3366bb38c4424b87355d0e626e0ae0d9fa0b7224",
                    "sha256:222ca016ec867e88cf844f487bab87a5460e34afed1ce08d1e7db271a366db23",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2af796bc84c5e90eb57e23c8d3adbf9050db0d14fa44a31e95248234ea6447a2",
                    "sha256:a86e4381ec328012fdc5825ec799cd4e80269f0996ef1b13d3cec9e194ade507",
                    "sha256:74bf467e78a3b612f36d62ee1ea8074fd962a4dd1ec7ff295193869bc0dafd68",
                    "sha256:81648437fd272fdfa048135a6611583de8e44ae6967fd03ff79b4a035de0e254"
                ]
            },
            "variant": "v8"
        },
        "20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:08.087614205Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:34.112858146Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:34.112858146Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:07.988069734Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:08.087614205Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:d4bbcc8f869a75e833ac37295683ff757885b657ae796bc98357210980095594",
                    "sha256:29b1c7656d519adc330ddcbc2913b0307fa73e5096583d1e912738f7d85f2fc2",
                    "sha256:d1d34c64d649bbd1a1d72a9f117dfd5d1e2e4b4a60d2a74feda727cd4a56a412"
                ]
            },
            "variant": "v8"
        },
        "bookworm": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:02.961887086Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:39.225233998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea7004fb788ab5cf1604d6e71153c48d99b75fbd1810e78a8c79faff11fe6771 in / "
                },
                {
                    "created": "2024-04-24T04:10:39.576455849Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.077169061Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.937506347Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.032206671Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.147404774Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.156696765Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.19232306Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:27.143425379Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:27.300338572Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:29.672531151Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:29.672531151Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:02.858265949Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:02.961887086Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8560597d922ca8edaeea533c482a61b9cd840e55ae55cedd31b0087547e2933d",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:9a005735f93905c21dc34196459faebd252a5a10844a40eb5669aea32a39b95e",
                    "sha256:9350569411433d56e3852e0e2f4dc7decdd70009dff9cdba44d38f3f0489ebc0",
                    "sha256:117df0ceb231b578228599b6c142e4a34d84255be2688624757ba3bc4fd54808",
                    "sha256:baeab47a7671e653f8642536495730b0dbdeb9dd349f8a4115323039cdadf7b4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2825038c2a7d86110024c37372d227e96be6a954e7832622c439a54202fbfd98",
                    "sha256:827328bf11abc52b030cdb4ba699a6c85d3cad277623b1976866d8b07085d730",
                    "sha256:16b6beffaaaa1f3065b11eb80f19c72e494acc002063f47532eef5f093ff36d6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:07a1bf4ade3080f15be99893c80bc6afa2a1fadbcfcd18ebd5df49e6968d0998",
                    "sha256:2a3f8444f2028e3b60199f4e42c12a327ff421c71dcddf937beddc677d62c5f9",
                    "sha256:3f7afb01dbe51f97558e90aa562d3cfce9f47a7c9d2184f5a2623b31de50d1df",
                    "sha256:7176a3f08f68495a0145e1089ecc2a30087c73b72c3a242e3c3267784c56d3d7"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:18:45.99115425Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:26.747674813Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef6f078c1e72fcfafb9bfeeff0c1c771219dc2efe34650963106f63d32183b49 in / "
                },
                {
                    "created": "2024-01-31T22:44:27.282481747Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.132956744Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.824027123Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.904196572Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.026957698Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.052032457Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.100053829Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.110090904Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.110090904Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:04.069731664Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:04.194924962Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:45.877905941Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:18:45.877905941Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:45.99115425Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:02eecd1b8ebb27cc1f576804168486c4c5c3180d22c50048fdaa546b581adec9",
                    "sha256:cee7b8a73f6b00a0d52ec5065907a069f7b04a5578c47d4485f9a3dcf21db778",
                    "sha256:ff31527bbefa947c97500000c0c7e8517cb22118b5c55889d061cebcf6c2b74d",
                    "sha256:1f90403ae42b2000913e0d46e4fb2072bfa14380a045260a54e4c6862579c16f",
                    "sha256:44093a65e83dd09b01084543e7f3afc720fca84bc85d5f357868110d76c34b97",
                    "sha256:5f2d388a034ef179a1e573a911c5ecea074ff5ba4cc97d47dfbaf1129438b7d8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bce06f7a82b98ceae70c933512d01a4581ebf3db6d2985361e91c1ee33cb1bac",
                    "sha256:1cb4945369b8ef77b4a81e2abb101c1aafd5048038e82d80c003ab3746a0cebd",
                    "sha256:b7c4f8f7859c5bbdcba94b1a2756854dd399fd133fc95bf8a1721f9247c38b68",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:25bc8c210c56622b3ca6c875d6c28158ff1a9dbff62c643cfc32267bbe70d592",
                    "sha256:b6bca51586ee310a1da4c203344f52c98a7621526a19fbd9354b4d8041433802",
                    "sha256:26a442a8408c7e44835a3e71e2f8366ed7b6acfaa4800ffb96cec8719a4fa76c"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T06:47:37.235060094Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:26.747674813Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef6f078c1e72fcfafb9bfeeff0c1c771219dc2efe34650963106f63d32183b49 in / "
                },
                {
                    "created": "2024-01-31T22:44:27.282481747Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.132956744Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.824027123Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.904196572Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.026957698Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.052032457Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.100053829Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.110090904Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.110090904Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:04.069731664Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:04.194924962Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:02.967029074Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T06:47:02.967029074Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:37.135956447Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:37.235060094Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:02eecd1b8ebb27cc1f576804168486c4c5c3180d22c50048fdaa546b581adec9",
                    "sha256:cee7b8a73f6b00a0d52ec5065907a069f7b04a5578c47d4485f9a3dcf21db778",
                    "sha256:ff31527bbefa947c97500000c0c7e8517cb22118b5c55889d061cebcf6c2b74d",
                    "sha256:1f90403ae42b2000913e0d46e4fb2072bfa14380a045260a54e4c6862579c16f",
                    "sha256:44093a65e83dd09b01084543e7f3afc720fca84bc85d5f357868110d76c34b97",
                    "sha256:5f2d388a034ef179a1e573a911c5ecea074ff5ba4cc97d47dfbaf1129438b7d8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bce06f7a82b98ceae70c933512d01a4581ebf3db6d2985361e91c1ee33cb1bac",
                    "sha256:1cb4945369b8ef77b4a81e2abb101c1aafd5048038e82d80c003ab3746a0cebd",
                    "sha256:b7c4f8f7859c5bbdcba94b1a2756854dd399fd133fc95bf8a1721f9247c38b68",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:25bc8c210c56622b3ca6c875d6c28158ff1a9dbff62c643cfc32267bbe70d592",
                    "sha256:40393080d4f4d31ad2c1f3fdbabcce1369533935cfa4907f640a25f024620839",
                    "sha256:2eec0a2bb1592fb0b98fd0a04eea818b062a8b35c24db8e2491c2bbb0811b2e5",
                    "sha256:817f9b99d922a2f76ca21625226089676d1274fc6fcf42f9f38c49f778a63c76"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:10:12.813927316Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:20.454374088Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a3e4f94158c3515dc70de5aa81c136a9f7daf5adcac636a15c237097cb454140 in / "
                },
                {
                    "created": "2024-02-13T00:41:20.920485425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:59.42481027Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:59.42481027Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:59.42481027Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:39.930352302Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:40.681119982Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.768938384Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.890357763Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.922301492Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.931927895Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.942199841Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.942199841Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:41.888179766Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:42.017213443Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:36.46201971Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:09:36.46201971Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:12.694170853Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:12.813927316Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:644fed2a38987e9c2e23a98fbd38f898ab6ab64c8473b9123bdd970bb77c1437",
                    "sha256:819afa784c3e2987aef1409e05047cb7a110fcfa980ed6cab9de540fdc82f9cb",
                    "sha256:fa841c5bde2c582d4ad9966a24638ed552c5b89121feb59693bee2a1973c5750",
                    "sha256:af58095d0c29e3e0c6524925e61b55a80e862f78f072b56faac3218958e9e5da",
                    "sha256:5b5306a15e3de2fcdb1e8e5ce2d01ca5719a2f38ea79dbd382def80995d703b6",
                    "sha256:1f829424482353ffeffb2fa28ee8f61964dfcd38e52dc91ad7da0a95a2792747",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7497f5f0860673c8b3718f168710de4ddc6e095bdb37f44f3ebdb9777ab20696",
                    "sha256:09125f579dcf295dc3d0b26be9296c54bd7bbeec45aeeeb039f42e518cb7ef2c",
                    "sha256:e99946c74f0e6583d3369df6e398ecd62d8f229a44314ce82623c9977c2ddea7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fe5e57825de0fc482adf233a74b9e5821669479c5e91a12081d7d7ab4744e9a5",
                    "sha256:b8b07d9ebd72e80772fb93ac322ce8dc0fe032bc88e226499c81533457b6736b",
                    "sha256:0ff9ae852bdb6e4b5710abbe77eb4ba7147fc1d5dfcf13b327e67751c57b448b",
                    "sha256:0098b02946372b60837bff88392ff422233f92b6db8d8e1bc32fc27750050192"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:04.103827739Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:20.454374088Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a3e4f94158c3515dc70de5aa81c136a9f7daf5adcac636a15c237097cb454140 in / "
                },
                {
                    "created": "2024-02-13T00:41:20.920485425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:49.05841767Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:49.05841767Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:49.05841767Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:30.292139599Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:31.438460441Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.523001967Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.636541653Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.662793126Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.734763532Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.745132046Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.745132046Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:32.835165297Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:32.953884027Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:30.485405125Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:30.485405125Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:04.007138143Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:04.103827739Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:644fed2a38987e9c2e23a98fbd38f898ab6ab64c8473b9123bdd970bb77c1437",
                    "sha256:83d700c544e1d388547184b0b58966790d564912d1572a471504bc5c89498e56",
                    "sha256:11cf76cefeaf1112139de1045639cbccd3a57a547ac337fdc588235c7d65e35f",
                    "sha256:ebafff57fd7c429daf8be6dfca41e50fe3a0b3ac7246b7fa0cf6fbbc0420b765",
                    "sha256:75b833b595252828ac5698120664faed2e15081d34a86dd73185948e45afa5ba",
                    "sha256:79788cb6c25987d985dd1de111876e880eb7490a1973770f4c240b5c1d01204e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c1bf4235489d8a8aadbcb887e1272aaaa0612c18a23ca3935f00b05861807a92",
                    "sha256:aa75a553a1713912a3a007aa0fb6a8094e45dd3d27ea17974a9aaa469e251f51",
                    "sha256:a240e6900a65724d931acc7625d592d1290f8995ad3b55dced088e079a9df1c8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2398f14f78d5851947025b83db3fe6bc7d6c917d203549c127e9a243d25794f6",
                    "sha256:4effc5367bb85388e6045d99f5454053b80cf1b455c2b0bae6f6e1357f22a8bf",
                    "sha256:0656c372d7bcfbf82c4dd8b8b57e91f66a858dc0fd813db5a63198288818883c",
                    "sha256:be5f1364940c703c685a23819eee4bc2bbc35f0f622f1478e1e055db4ccb5c5f"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:39.482869362Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:36.854724565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85e3f04235f949795629380f3a50ca566471f0258cd4322937c8b1e0648a69ae in / "
                },
                {
                    "created": "2024-03-12T00:45:37.299748802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:24.342771025Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:24.342771025Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:24.342771025Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:06.406197917Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:07.095814844Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.198030688Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.323577194Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.337495487Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.373912066Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.386293885Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.386293885Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:08.344650615Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:08.473198876Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:05.191395927Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:05.191395927Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:39.377176401Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:39.482869362Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d64c46ff900ce5a646435f2232e9bdd0c551cc61e727d4d9502d48ce9dcefd25",
                    "sha256:de0acc254098be57b25b3573d9774773ef65a4fcaa06db4ced68df3d464b75ae",
                    "sha256:6fd16f9591b7e75eda7aa82ad9ca2f2883f73c745b4ae7900094fde6f5f3a182",
                    "sha256:32c191e36568ad3e3b83655eefea02dbfd5d6e6780af68021bf9dc226b7c72b5",
                    "sha256:cacb9e9cf2327e21af2d985de21c7398d4efd1d6ed68736983f3b2dce0ac2cf6",
                    "sha256:de0414d61c5298f55bbbf238cb165da20d3deef342ea10b1027726fc4c2ead29",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e6e89d7feb3328bcaee2f80f75581617e21fbefe70715097f78ca83acd939305",
                    "sha256:cc8007c4d44b0595626af5145ab4533af8050e14119ca2a75277de4aa8970ec9",
                    "sha256:5ee8ee93e17be888a2050990ae5264d65232f283f2197e2abf5f0d94eab3b592",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:119847f5856d27cd4e043cc362634527f7860270820fef41527fd4295815a8f1",
                    "sha256:cbff6f90ecf6fced0eb73067bab41b902b72d3f910a39e34bc33525b8a3b5539",
                    "sha256:232d5184fa465e7a9b2bf559ae84bfcf814f2d6b3c16ec302ab04a42c922fcfe",
                    "sha256:6b4d5d45735cf9700ac63a29cd902e522443d5c1c84bb7d8fa0ab382468318ee"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:12.53414744Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:36.854724565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85e3f04235f949795629380f3a50ca566471f0258cd4322937c8b1e0648a69ae in / "
                },
                {
                    "created": "2024-03-12T00:45:37.299748802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.461029064Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.461029064Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.461029064Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:22.645447635Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:23.313658027Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.402635934Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.53747386Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.561498047Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.571843507Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.583043144Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.583043144Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:24.547695956Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:24.675471591Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:39.073030671Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:15:39.073030671Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:12.434083536Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:12.53414744Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d64c46ff900ce5a646435f2232e9bdd0c551cc61e727d4d9502d48ce9dcefd25",
                    "sha256:0f23ba39c0652dc1e8f4c7ecc5e21333a0b55fa4db5f1a6a4fb06b005ebe3bcf",
                    "sha256:ff9efbdec5ea3692c38d94cdaf146dc648591772e6309be77b19f6f2a69acd12",
                    "sha256:7fd47df956546e21f9a46974ff89a2e1520dce1b18794d1e46813d6061b62158",
                    "sha256:bb6473d71d44395d7a777fc12fcaa0f41bfb272b57bba4b8c3a96e64e660589c",
                    "sha256:8851df102d3ee94ff51037b8135be86234001503f550b1aa4a51c45708974ea0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2cdf830e7f05f8c6abcdcda9f6a2c69c99ad3dae43534d683fae8b1f927d71df",
                    "sha256:7cb1fd1921fc228059ef7088e8836717999f3d42789694598ebbb1861e7d1724",
                    "sha256:e624c62faad1811af0276668a17c9f2593a4e92140c11f89ff8cf9bcfa8bb73b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:16f1112eda98e42d16b34cd4bfed296e8573ed72263e18f0012ff1134c4a7602",
                    "sha256:caa1275353e62e11d67b9672dda950d1cfe66a25bd7f05ff05de2d496808978b",
                    "sha256:6ce2591e8970a37e2493793bbede3b5ab35d388f7968082d6b0fcea10413d31a",
                    "sha256:ade0e72de88015e4622619649ae48bbe6b729b904e4256021514e4922626ed9b"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:02.961887086Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:39.225233998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea7004fb788ab5cf1604d6e71153c48d99b75fbd1810e78a8c79faff11fe6771 in / "
                },
                {
                    "created": "2024-04-24T04:10:39.576455849Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.077169061Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.937506347Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.032206671Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.147404774Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.156696765Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.19232306Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:27.143425379Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:27.300338572Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:29.672531151Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:29.672531151Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:02.858265949Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:02.961887086Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8560597d922ca8edaeea533c482a61b9cd840e55ae55cedd31b0087547e2933d",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:9a005735f93905c21dc34196459faebd252a5a10844a40eb5669aea32a39b95e",
                    "sha256:9350569411433d56e3852e0e2f4dc7decdd70009dff9cdba44d38f3f0489ebc0",
                    "sha256:117df0ceb231b578228599b6c142e4a34d84255be2688624757ba3bc4fd54808",
                    "sha256:baeab47a7671e653f8642536495730b0dbdeb9dd349f8a4115323039cdadf7b4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2825038c2a7d86110024c37372d227e96be6a954e7832622c439a54202fbfd98",
                    "sha256:827328bf11abc52b030cdb4ba699a6c85d3cad277623b1976866d8b07085d730",
                    "sha256:16b6beffaaaa1f3065b11eb80f19c72e494acc002063f47532eef5f093ff36d6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:07a1bf4ade3080f15be99893c80bc6afa2a1fadbcfcd18ebd5df49e6968d0998",
                    "sha256:2a3f8444f2028e3b60199f4e42c12a327ff421c71dcddf937beddc677d62c5f9",
                    "sha256:3f7afb01dbe51f97558e90aa562d3cfce9f47a7c9d2184f5a2623b31de50d1df",
                    "sha256:7176a3f08f68495a0145e1089ecc2a30087c73b72c3a242e3c3267784c56d3d7"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:06.33463206Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:39.225233998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea7004fb788ab5cf1604d6e71153c48d99b75fbd1810e78a8c79faff11fe6771 in / "
                },
                {
                    "created": "2024-04-24T04:10:39.576455849Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:40.637182331Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:40.637182331Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:40.637182331Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:20.641319513Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:54.810673851Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:55.550777756Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.643711244Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.75756289Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.770162739Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.819007638Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.831626609Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.831626609Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:56.7808915Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:56.909990889Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:37.163261728Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:37.163261728Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:06.252237483Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:06.33463206Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8560597d922ca8edaeea533c482a61b9cd840e55ae55cedd31b0087547e2933d",
                    "sha256:28d4e208a7a00b359594125dd821af14aa8f202a8ec604e2e7da4bec1888529a",
                    "sha256:174f2361902e2846e389337bb3303cc4a8a7345d7adf74bd1e5dd8fdcab0197a",
                    "sha256:607ba54df1c61c1e364e4894a43eaa9e200a3380fa1c25941b9633f5cdf1bf7d",
                    "sha256:26ef1631f9bc0161ddcbd62cb40e71a79b44bf255d7e6a65264edae1987a1729",
                    "sha256:bb0a9b183b38a2276f2829317f6886c6f498d6e5c76c85228f2521da544ace8d",
                    "sha256:3736f03f6d85824da841726d8605393e73b4e677a9f550f10807b0d505161894",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e68f2c2c4acd87cec5fafd4c8914e7a2a49b05afc1d0f44b0adef78d69f7ec8",
                    "sha256:73af136dd09f5932e6899b694d0041ca6b32bfca42409e77577b14c6635fdd7e",
                    "sha256:c81b8a5b064118bf193606a219c626cea60ae2ae1eab3ab9c316a81fdc322f59",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fab48beffc82031db3f779a212eb8f136c7e3ab604526698128e420f2bb20a47",
                    "sha256:b58da0e546d4b8142cd752331635e646f28b9019edf123e81cf9f7afd5cbdfd8",
                    "sha256:6735c4d354304202a277dd719de9bddf1c8470e4ea78874c9e0a224066efb6dd",
                    "sha256:8a14b6faa7f5bc0ad54018d9b248e582431a5a6c2cbdbc184f06befc288340b8"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:18:47.695199492Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:26.747674813Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef6f078c1e72fcfafb9bfeeff0c1c771219dc2efe34650963106f63d32183b49 in / "
                },
                {
                    "created": "2024-01-31T22:44:27.282481747Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.620457976Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.620457976Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.620457976Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:01.883578278Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:28.737071441Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.419399791Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.419399791Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:32:29.419399791Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:32:29.419399791Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:32:29.496759822Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.576356588Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.719563691Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.767460322Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.779045308Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.791746897Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.791746897Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:32:30.813151562Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:30.946516429Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:47.610716233Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:18:47.610716233Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:47.695199492Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:02eecd1b8ebb27cc1f576804168486c4c5c3180d22c50048fdaa546b581adec9",
                    "sha256:cee7b8a73f6b00a0d52ec5065907a069f7b04a5578c47d4485f9a3dcf21db778",
                    "sha256:ea3373be7d936f31f8207b274f73cc993c48c81c7ab8ee819f296afd3cb49a21",
                    "sha256:a9f156e3ef14a7f04151439dd0b17637fb1e3e7970856bd04f871dbf65478619",
                    "sha256:5cde9094dc536f9937a992c1cc626625359e81aab0261f5d11b1e54d83069431",
                    "sha256:695d0c30470cf9de706397b15bab4569abd2444a34988a6dc198791260f9ec0f",
                    "sha256:c346940b338e879935067a1b15113b0d822b4d959e62c844167e7b02f542d1a8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:64392c8f14539da2389d9ae096011e479a9a4748187bbc1eaa50c31ebf20f9b8",
                    "sha256:1625a1e41fbdf8112242552fa349c4d7e410fc359db2f0c8415c84202dff076c",
                    "sha256:907f4b5f48d5dc0d4475e02e983becc3af028418535b2879f11abdd41177d5b3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:805cff011e719900c41796187634af3f26ac30595fadbc8e0b980e5922abb7ef",
                    "sha256:162a807f0aee22d2005d0ad6809f52ee83c1ee24a2784aa875d9bffcc8c88487",
                    "sha256:caac864ff365c29b6474a623013ea85eb639e5d80f5d144a9ac2553b2e6133df"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T06:47:45.659302186Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:26.747674813Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef6f078c1e72fcfafb9bfeeff0c1c771219dc2efe34650963106f63d32183b49 in / "
                },
                {
                    "created": "2024-01-31T22:44:27.282481747Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.620457976Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.620457976Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.620457976Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:01.883578278Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:28.737071441Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.419399791Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.419399791Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:32:29.419399791Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:32:29.419399791Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:32:29.496759822Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.576356588Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.719563691Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.767460322Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.779045308Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.791746897Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.791746897Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:32:30.813151562Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:30.946516429Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:16.048073035Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T06:47:16.048073035Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:45.572647556Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:45.659302186Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:02eecd1b8ebb27cc1f576804168486c4c5c3180d22c50048fdaa546b581adec9",
                    "sha256:cee7b8a73f6b00a0d52ec5065907a069f7b04a5578c47d4485f9a3dcf21db778",
                    "sha256:ea3373be7d936f31f8207b274f73cc993c48c81c7ab8ee819f296afd3cb49a21",
                    "sha256:a9f156e3ef14a7f04151439dd0b17637fb1e3e7970856bd04f871dbf65478619",
                    "sha256:5cde9094dc536f9937a992c1cc626625359e81aab0261f5d11b1e54d83069431",
                    "sha256:695d0c30470cf9de706397b15bab4569abd2444a34988a6dc198791260f9ec0f",
                    "sha256:c346940b338e879935067a1b15113b0d822b4d959e62c844167e7b02f542d1a8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:64392c8f14539da2389d9ae096011e479a9a4748187bbc1eaa50c31ebf20f9b8",
                    "sha256:1625a1e41fbdf8112242552fa349c4d7e410fc359db2f0c8415c84202dff076c",
                    "sha256:907f4b5f48d5dc0d4475e02e983becc3af028418535b2879f11abdd41177d5b3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:805cff011e719900c41796187634af3f26ac30595fadbc8e0b980e5922abb7ef",
                    "sha256:d4b698c994a7be66893e847be108e58b9eef1cd46c00570f0cc8a6e960bde177",
                    "sha256:60eb067f681faad6785f519dcb97437d80d52ba9bda1ce4e89c69fc53c74e9ae",
                    "sha256:90a388e7cdbf64de784b599055de9ff73d67783d9b3a54b8511305a9544b3982"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:10:01.882886161Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:20.454374088Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a3e4f94158c3515dc70de5aa81c136a9f7daf5adcac636a15c237097cb454140 in / "
                },
                {
                    "created": "2024-02-13T00:41:20.920485425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:04.690462783Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:04.690462783Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:04.690462783Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:47.336383978Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:16.978951726Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.621608437Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.621608437Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:38:17.621608437Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:38:17.621608437Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:38:17.700652956Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.778924516Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.897048728Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.906014284Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.914170307Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.942555186Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.942555186Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:38:18.980792885Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:19.097530334Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:32.775245318Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:09:32.775245318Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:01.791719559Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:01.882886161Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:644fed2a38987e9c2e23a98fbd38f898ab6ab64c8473b9123bdd970bb77c1437",
                    "sha256:8c57cd7edcca55d07c28a956502eff98fd360cde7a1f92e156a5b9a599b340d8",
                    "sha256:42a61ad581cafa59cf88eac056dc3c381abde76415e731b9e8a285e4a0ad9e29",
                    "sha256:fc941d8900b4d16596f51f0b0674905f236fd2fa372e7f24e00c36623e3023cd",
                    "sha256:52e7634e192ea96c3c259a5ceb8c282cec2193717f8720b86f83373b4cf7ba8c",
                    "sha256:631d12ef05875e1d9b58e11a791ecc1f1eb8fc9d8f735088d9eda3ed00f4df87",
                    "sha256:a183423805df028c18538f66505ee622d027a9104241dfcbeb5b06f174e94e9b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f9fa4807439409f9f3b809c7e1d2872f471cd75aeb02dd3f5c41e28e58f67527",
                    "sha256:946454dde082ebc3fa375c26770f093cdacf096916f2dcfd500e6c5174e16975",
                    "sha256:ccdcc67bfb9f3002433f6df76faa60bdcff4e0cc4ae0fb3e539578fa0b77d769",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6ca2ffe85850f6673d0feb4baaa0138180cb85d16e07bc92c8cb639b1b7ae99d",
                    "sha256:7ea97f6ec4d115aa0fa65d8eb02f5090613e13ca8a06470a88aec990fb28373f",
                    "sha256:0ea1868aa2f9e0ed5a816105800cbae4fe16d2ceed54618a5d45df2d6680ce0e",
                    "sha256:edea6ee2ac13005d9cbff45e7a3132fd87eec497e460e2081843d9341f5ceff1"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:09.841876419Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:20.454374088Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a3e4f94158c3515dc70de5aa81c136a9f7daf5adcac636a15c237097cb454140 in / "
                },
                {
                    "created": "2024-02-13T00:41:20.920485425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:51.608651709Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:51.608651709Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:51.608651709Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:33.577608406Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:03.089896647Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.228126072Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.228126072Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:56:04.228126072Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:56:04.228126072Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:56:04.31456214Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.399893006Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.505808448Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.516552482Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.52548088Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.534980961Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.534980961Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:56:05.623952056Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:05.737883836Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:38.942389902Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:38.942389902Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:09.755319247Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:09.841876419Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:644fed2a38987e9c2e23a98fbd38f898ab6ab64c8473b9123bdd970bb77c1437",
                    "sha256:54ddc86c5d71bdaf311afa55eca9bac70d0d92d9584cf65bfe1ea3fbb34028ed",
                    "sha256:80416288105610093d7924b6d88db850228f2582e9620c8e0be874132251bdf6",
                    "sha256:ab1ff5c764221dfaba2c5ecee6449b3597c179120f44d4e1b61944c1efeba552",
                    "sha256:306cd6f03b50d4cfbec092ae62ae0a46913a4660f83c2242342be467037b7dcd",
                    "sha256:d50b53025f7c0538d03067ce9dc68b26967e9a1882dd6f0e5318e21b73e58131",
                    "sha256:886cf4629fd55232c71a11acfb8d23238dd27de35d951e9d47b8407f74853c02",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b244cd54d80702f4e50ba111b20c3331eb55340c5bcb9f70e0c4ad23d0336fb2",
                    "sha256:9fe5935d295663c172b04301031b65c77487e69a7327d36a3e96b4ccbaa73fff",
                    "sha256:c8e7435127b40c59655b99fb391b34664f48e8229d9813996e0886d97961913c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e0956307497b6c82e3c1549173ca9d48104889a6eb8d0510addd8af3857679a0",
                    "sha256:3f8bc486e43420542a63c4931859d6e7eee3cd3e15fc2fbbee58cc37936bd243",
                    "sha256:23f152d0bfa196495590fd050752697962419f965b6236010f9e62907c8898f2",
                    "sha256:c6e0f53deccdd6e434ab99bb66dda5e7042fc3955f8652109c976e3844b407d7"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:42.969672426Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:36.854724565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85e3f04235f949795629380f3a50ca566471f0258cd4322937c8b1e0648a69ae in / "
                },
                {
                    "created": "2024-03-12T00:45:37.299748802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.778534939Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.778534939Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.778534939Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:18.196344886Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:26.438076335Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.614299934Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.614299934Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:27.614299934Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:27.614299934Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:27.704292854Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.786726022Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.908081096Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.917697973Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.927079151Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.963206051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.963206051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:29.069429781Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:29.191337555Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:12.953896501Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:12.953896501Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:42.879435649Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:42.969672426Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d64c46ff900ce5a646435f2232e9bdd0c551cc61e727d4d9502d48ce9dcefd25",
                    "sha256:0da23169b8f80118d7e34f6d922b825f9133b30a474be202273a66820c98fe65",
                    "sha256:45ff4aeaf39639fd55e65f516d5474697119beda6b2cc6bff82ce6fb3b5f53b6",
                    "sha256:705a288f101f99ffcaa8cfdd23e64e04c906aa19a4ecdd94eea8afed7300e33d",
                    "sha256:23c06aa7a206e14d4a38d67d44e7627d4a3896c1e7f9532e84ca4980f3ae3567",
                    "sha256:3cf1d6bdb5dd01e6edaa341b498c87fbe62eaa016793d5d104af551a3cc48079",
                    "sha256:cac715f750dcba96e38e26c80b400c18e78145834d5495b2cdd0279d314f7a4d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aec11e4fd08e14435662965cb73742979e44f028a50a282352275fd18cd863d6",
                    "sha256:445bc6c556c8df87f1bcb914a5f01083cc72419f188e5fd827069f91a1eb5289",
                    "sha256:f37b6e7e2e4272f0c1831e42058957173f62afd92301ce79eec57a2de80b9236",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ee2c2fb5e1bd0db23673a5a73cdb89de2a229c03dc28e0edc047085c2b2687ab",
                    "sha256:a9fb092130d2da9bb0c0ca2231a9b46d2f1e3de29a4f30b58ff817dbc01f3c52",
                    "sha256:3e925468439f31fd8ee4b9eb32d118ee06b6d278dd47050cb56adee5a81c85e9",
                    "sha256:a2442ac4a5cf8bded67dca0d4acde2be66f793dba74c539438d96fde98b28482"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:16.18201109Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:36.854724565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85e3f04235f949795629380f3a50ca566471f0258cd4322937c8b1e0648a69ae in / "
                },
                {
                    "created": "2024-03-12T00:45:37.299748802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.133755224Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.133755224Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.133755224Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:31.140947884Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:06.654886178Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:07.799726197Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:07.799726197Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:42:07.799726197Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:42:07.799726197Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:42:07.889437381Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:07.992729279Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:08.123948499Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:08.160003921Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:08.172658856Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:08.186416346Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:08.186416346Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:42:09.261764614Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:09.386382885Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:47.191697008Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:15:47.191697008Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:16.085599335Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:16.18201109Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d64c46ff900ce5a646435f2232e9bdd0c551cc61e727d4d9502d48ce9dcefd25",
                    "sha256:f90064830487ba2223fd647346ed8a3be9713d707a619c8f75cbf2b5fdc17a89",
                    "sha256:4298dcd87e0db6a9d13ce10225215fdb897058c5cb683394de48f4f9a81fbdda",
                    "sha256:0ce866eec0971f64147da81363583fbf90b18575710350da22af51108665becb",
                    "sha256:f23d28580d521013ddd13f52db5cc565bef39a8357633e0cb81283e1560b5a2d",
                    "sha256:365dc53e6e260750b4ba942c6e2e8fa5dcf3f86ff2272670c0ab6f4e5c237c0e",
                    "sha256:f71ae96904ecac4e64e3df1a1315b3373be2e56a95a379c780d6a80b8ad8e096",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:82f1552ee2a7cf1a26c9bc2d2170d77c5805aae3f5b11233130997c5b20b025c",
                    "sha256:43e057a86fa5191ce8fa7209611331eaf9bdd249fd37680b8201253351b8d230",
                    "sha256:a2e021fa89fd3c74cfd4102780da299e080370d8d1781df8ac56975a0f061939",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5573749c24907937a91ab3d75389a5683587331d5166a8a983d54b42e91eb25b",
                    "sha256:f5f4d8ecab3669ccdf11ba673271d0e89473a602dd63958fca3e93ec463c5b51",
                    "sha256:78ccb3e87adeac2f2d4079a763e87bf9a8d20428d575a259980601fcde71d148",
                    "sha256:f2631e08eb1578b725cfb3461910ee71cc93184cc5f5350ade68b8e77060f56a"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:06.33463206Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:39.225233998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea7004fb788ab5cf1604d6e71153c48d99b75fbd1810e78a8c79faff11fe6771 in / "
                },
                {
                    "created": "2024-04-24T04:10:39.576455849Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:40.637182331Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:40.637182331Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:40.637182331Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:20.641319513Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:54.810673851Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:55.550777756Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.643711244Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.75756289Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.770162739Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.819007638Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.831626609Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.831626609Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:56.7808915Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:56.909990889Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:37.163261728Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:37.163261728Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:06.252237483Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:06.33463206Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8560597d922ca8edaeea533c482a61b9cd840e55ae55cedd31b0087547e2933d",
                    "sha256:28d4e208a7a00b359594125dd821af14aa8f202a8ec604e2e7da4bec1888529a",
                    "sha256:174f2361902e2846e389337bb3303cc4a8a7345d7adf74bd1e5dd8fdcab0197a",
                    "sha256:607ba54df1c61c1e364e4894a43eaa9e200a3380fa1c25941b9633f5cdf1bf7d",
                    "sha256:26ef1631f9bc0161ddcbd62cb40e71a79b44bf255d7e6a65264edae1987a1729",
                    "sha256:bb0a9b183b38a2276f2829317f6886c6f498d6e5c76c85228f2521da544ace8d",
                    "sha256:3736f03f6d85824da841726d8605393e73b4e677a9f550f10807b0d505161894",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e68f2c2c4acd87cec5fafd4c8914e7a2a49b05afc1d0f44b0adef78d69f7ec8",
                    "sha256:73af136dd09f5932e6899b694d0041ca6b32bfca42409e77577b14c6635fdd7e",
                    "sha256:c81b8a5b064118bf193606a219c626cea60ae2ae1eab3ab9c316a81fdc322f59",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fab48beffc82031db3f779a212eb8f136c7e3ab604526698128e420f2bb20a47",
                    "sha256:b58da0e546d4b8142cd752331635e646f28b9019edf123e81cf9f7afd5cbdfd8",
                    "sha256:6735c4d354304202a277dd719de9bddf1c8470e4ea78874c9e0a224066efb6dd",
                    "sha256:8a14b6faa7f5bc0ad54018d9b248e582431a5a6c2cbdbc184f06befc288340b8"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:02.961887086Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:39.225233998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea7004fb788ab5cf1604d6e71153c48d99b75fbd1810e78a8c79faff11fe6771 in / "
                },
                {
                    "created": "2024-04-24T04:10:39.576455849Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.077169061Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.937506347Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.032206671Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.147404774Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.156696765Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.19232306Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:27.143425379Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:27.300338572Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:29.672531151Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:29.672531151Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:02.858265949Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:02.961887086Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8560597d922ca8edaeea533c482a61b9cd840e55ae55cedd31b0087547e2933d",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:9a005735f93905c21dc34196459faebd252a5a10844a40eb5669aea32a39b95e",
                    "sha256:9350569411433d56e3852e0e2f4dc7decdd70009dff9cdba44d38f3f0489ebc0",
                    "sha256:117df0ceb231b578228599b6c142e4a34d84255be2688624757ba3bc4fd54808",
                    "sha256:baeab47a7671e653f8642536495730b0dbdeb9dd349f8a4115323039cdadf7b4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2825038c2a7d86110024c37372d227e96be6a954e7832622c439a54202fbfd98",
                    "sha256:827328bf11abc52b030cdb4ba699a6c85d3cad277623b1976866d8b07085d730",
                    "sha256:16b6beffaaaa1f3065b11eb80f19c72e494acc002063f47532eef5f093ff36d6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:07a1bf4ade3080f15be99893c80bc6afa2a1fadbcfcd18ebd5df49e6968d0998",
                    "sha256:2a3f8444f2028e3b60199f4e42c12a327ff421c71dcddf937beddc677d62c5f9",
                    "sha256:3f7afb01dbe51f97558e90aa562d3cfce9f47a7c9d2184f5a2623b31de50d1df",
                    "sha256:7176a3f08f68495a0145e1089ecc2a30087c73b72c3a242e3c3267784c56d3d7"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:18:45.99115425Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:26.747674813Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef6f078c1e72fcfafb9bfeeff0c1c771219dc2efe34650963106f63d32183b49 in / "
                },
                {
                    "created": "2024-01-31T22:44:27.282481747Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.132956744Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.824027123Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.904196572Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.026957698Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.052032457Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.100053829Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.110090904Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.110090904Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:04.069731664Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:04.194924962Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:45.877905941Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:18:45.877905941Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:45.99115425Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:02eecd1b8ebb27cc1f576804168486c4c5c3180d22c50048fdaa546b581adec9",
                    "sha256:cee7b8a73f6b00a0d52ec5065907a069f7b04a5578c47d4485f9a3dcf21db778",
                    "sha256:ff31527bbefa947c97500000c0c7e8517cb22118b5c55889d061cebcf6c2b74d",
                    "sha256:1f90403ae42b2000913e0d46e4fb2072bfa14380a045260a54e4c6862579c16f",
                    "sha256:44093a65e83dd09b01084543e7f3afc720fca84bc85d5f357868110d76c34b97",
                    "sha256:5f2d388a034ef179a1e573a911c5ecea074ff5ba4cc97d47dfbaf1129438b7d8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bce06f7a82b98ceae70c933512d01a4581ebf3db6d2985361e91c1ee33cb1bac",
                    "sha256:1cb4945369b8ef77b4a81e2abb101c1aafd5048038e82d80c003ab3746a0cebd",
                    "sha256:b7c4f8f7859c5bbdcba94b1a2756854dd399fd133fc95bf8a1721f9247c38b68",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:25bc8c210c56622b3ca6c875d6c28158ff1a9dbff62c643cfc32267bbe70d592",
                    "sha256:b6bca51586ee310a1da4c203344f52c98a7621526a19fbd9354b4d8041433802",
                    "sha256:26a442a8408c7e44835a3e71e2f8366ed7b6acfaa4800ffb96cec8719a4fa76c"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T06:47:37.235060094Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:26.747674813Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef6f078c1e72fcfafb9bfeeff0c1c771219dc2efe34650963106f63d32183b49 in / "
                },
                {
                    "created": "2024-01-31T22:44:27.282481747Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.132956744Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.824027123Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.904196572Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.026957698Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.052032457Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.100053829Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.110090904Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.110090904Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:04.069731664Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:04.194924962Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:02.967029074Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T06:47:02.967029074Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:37.135956447Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:37.235060094Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:02eecd1b8ebb27cc1f576804168486c4c5c3180d22c50048fdaa546b581adec9",
                    "sha256:cee7b8a73f6b00a0d52ec5065907a069f7b04a5578c47d4485f9a3dcf21db778",
                    "sha256:ff31527bbefa947c97500000c0c7e8517cb22118b5c55889d061cebcf6c2b74d",
                    "sha256:1f90403ae42b2000913e0d46e4fb2072bfa14380a045260a54e4c6862579c16f",
                    "sha256:44093a65e83dd09b01084543e7f3afc720fca84bc85d5f357868110d76c34b97",
                    "sha256:5f2d388a034ef179a1e573a911c5ecea074ff5ba4cc97d47dfbaf1129438b7d8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bce06f7a82b98ceae70c933512d01a4581ebf3db6d2985361e91c1ee33cb1bac",
                    "sha256:1cb4945369b8ef77b4a81e2abb101c1aafd5048038e82d80c003ab3746a0cebd",
                    "sha256:b7c4f8f7859c5bbdcba94b1a2756854dd399fd133fc95bf8a1721f9247c38b68",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:25bc8c210c56622b3ca6c875d6c28158ff1a9dbff62c643cfc32267bbe70d592",
                    "sha256:40393080d4f4d31ad2c1f3fdbabcce1369533935cfa4907f640a25f024620839",
                    "sha256:2eec0a2bb1592fb0b98fd0a04eea818b062a8b35c24db8e2491c2bbb0811b2e5",
                    "sha256:817f9b99d922a2f76ca21625226089676d1274fc6fcf42f9f38c49f778a63c76"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:10:12.813927316Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:20.454374088Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a3e4f94158c3515dc70de5aa81c136a9f7daf5adcac636a15c237097cb454140 in / "
                },
                {
                    "created": "2024-02-13T00:41:20.920485425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:59.42481027Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:59.42481027Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:59.42481027Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:39.930352302Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:40.681119982Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.768938384Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.890357763Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.922301492Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.931927895Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.942199841Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.942199841Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:41.888179766Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:42.017213443Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:36.46201971Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:09:36.46201971Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:12.694170853Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:12.813927316Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:644fed2a38987e9c2e23a98fbd38f898ab6ab64c8473b9123bdd970bb77c1437",
                    "sha256:819afa784c3e2987aef1409e05047cb7a110fcfa980ed6cab9de540fdc82f9cb",
                    "sha256:fa841c5bde2c582d4ad9966a24638ed552c5b89121feb59693bee2a1973c5750",
                    "sha256:af58095d0c29e3e0c6524925e61b55a80e862f78f072b56faac3218958e9e5da",
                    "sha256:5b5306a15e3de2fcdb1e8e5ce2d01ca5719a2f38ea79dbd382def80995d703b6",
                    "sha256:1f829424482353ffeffb2fa28ee8f61964dfcd38e52dc91ad7da0a95a2792747",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7497f5f0860673c8b3718f168710de4ddc6e095bdb37f44f3ebdb9777ab20696",
                    "sha256:09125f579dcf295dc3d0b26be9296c54bd7bbeec45aeeeb039f42e518cb7ef2c",
                    "sha256:e99946c74f0e6583d3369df6e398ecd62d8f229a44314ce82623c9977c2ddea7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fe5e57825de0fc482adf233a74b9e5821669479c5e91a12081d7d7ab4744e9a5",
                    "sha256:b8b07d9ebd72e80772fb93ac322ce8dc0fe032bc88e226499c81533457b6736b",
                    "sha256:0ff9ae852bdb6e4b5710abbe77eb4ba7147fc1d5dfcf13b327e67751c57b448b",
                    "sha256:0098b02946372b60837bff88392ff422233f92b6db8d8e1bc32fc27750050192"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:04.103827739Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:20.454374088Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a3e4f94158c3515dc70de5aa81c136a9f7daf5adcac636a15c237097cb454140 in / "
                },
                {
                    "created": "2024-02-13T00:41:20.920485425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:49.05841767Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:49.05841767Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:49.05841767Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:30.292139599Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:31.438460441Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.523001967Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.636541653Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.662793126Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.734763532Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.745132046Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.745132046Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:32.835165297Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:32.953884027Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:30.485405125Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:30.485405125Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:04.007138143Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:04.103827739Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:644fed2a38987e9c2e23a98fbd38f898ab6ab64c8473b9123bdd970bb77c1437",
                    "sha256:83d700c544e1d388547184b0b58966790d564912d1572a471504bc5c89498e56",
                    "sha256:11cf76cefeaf1112139de1045639cbccd3a57a547ac337fdc588235c7d65e35f",
                    "sha256:ebafff57fd7c429daf8be6dfca41e50fe3a0b3ac7246b7fa0cf6fbbc0420b765",
                    "sha256:75b833b595252828ac5698120664faed2e15081d34a86dd73185948e45afa5ba",
                    "sha256:79788cb6c25987d985dd1de111876e880eb7490a1973770f4c240b5c1d01204e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c1bf4235489d8a8aadbcb887e1272aaaa0612c18a23ca3935f00b05861807a92",
                    "sha256:aa75a553a1713912a3a007aa0fb6a8094e45dd3d27ea17974a9aaa469e251f51",
                    "sha256:a240e6900a65724d931acc7625d592d1290f8995ad3b55dced088e079a9df1c8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2398f14f78d5851947025b83db3fe6bc7d6c917d203549c127e9a243d25794f6",
                    "sha256:4effc5367bb85388e6045d99f5454053b80cf1b455c2b0bae6f6e1357f22a8bf",
                    "sha256:0656c372d7bcfbf82c4dd8b8b57e91f66a858dc0fd813db5a63198288818883c",
                    "sha256:be5f1364940c703c685a23819eee4bc2bbc35f0f622f1478e1e055db4ccb5c5f"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:39.482869362Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:36.854724565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85e3f04235f949795629380f3a50ca566471f0258cd4322937c8b1e0648a69ae in / "
                },
                {
                    "created": "2024-03-12T00:45:37.299748802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:24.342771025Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:24.342771025Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:24.342771025Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:06.406197917Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:07.095814844Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.198030688Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.323577194Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.337495487Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.373912066Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.386293885Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.386293885Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:08.344650615Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:08.473198876Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:05.191395927Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:05.191395927Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:39.377176401Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:39.482869362Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d64c46ff900ce5a646435f2232e9bdd0c551cc61e727d4d9502d48ce9dcefd25",
                    "sha256:de0acc254098be57b25b3573d9774773ef65a4fcaa06db4ced68df3d464b75ae",
                    "sha256:6fd16f9591b7e75eda7aa82ad9ca2f2883f73c745b4ae7900094fde6f5f3a182",
                    "sha256:32c191e36568ad3e3b83655eefea02dbfd5d6e6780af68021bf9dc226b7c72b5",
                    "sha256:cacb9e9cf2327e21af2d985de21c7398d4efd1d6ed68736983f3b2dce0ac2cf6",
                    "sha256:de0414d61c5298f55bbbf238cb165da20d3deef342ea10b1027726fc4c2ead29",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e6e89d7feb3328bcaee2f80f75581617e21fbefe70715097f78ca83acd939305",
                    "sha256:cc8007c4d44b0595626af5145ab4533af8050e14119ca2a75277de4aa8970ec9",
                    "sha256:5ee8ee93e17be888a2050990ae5264d65232f283f2197e2abf5f0d94eab3b592",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:119847f5856d27cd4e043cc362634527f7860270820fef41527fd4295815a8f1",
                    "sha256:cbff6f90ecf6fced0eb73067bab41b902b72d3f910a39e34bc33525b8a3b5539",
                    "sha256:232d5184fa465e7a9b2bf559ae84bfcf814f2d6b3c16ec302ab04a42c922fcfe",
                    "sha256:6b4d5d45735cf9700ac63a29cd902e522443d5c1c84bb7d8fa0ab382468318ee"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:12.53414744Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:36.854724565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85e3f04235f949795629380f3a50ca566471f0258cd4322937c8b1e0648a69ae in / "
                },
                {
                    "created": "2024-03-12T00:45:37.299748802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.461029064Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.461029064Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.461029064Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:22.645447635Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:23.313658027Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.402635934Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.53747386Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.561498047Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.571843507Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.583043144Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.583043144Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:24.547695956Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:24.675471591Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:39.073030671Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:15:39.073030671Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:12.434083536Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:12.53414744Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d64c46ff900ce5a646435f2232e9bdd0c551cc61e727d4d9502d48ce9dcefd25",
                    "sha256:0f23ba39c0652dc1e8f4c7ecc5e21333a0b55fa4db5f1a6a4fb06b005ebe3bcf",
                    "sha256:ff9efbdec5ea3692c38d94cdaf146dc648591772e6309be77b19f6f2a69acd12",
                    "sha256:7fd47df956546e21f9a46974ff89a2e1520dce1b18794d1e46813d6061b62158",
                    "sha256:bb6473d71d44395d7a777fc12fcaa0f41bfb272b57bba4b8c3a96e64e660589c",
                    "sha256:8851df102d3ee94ff51037b8135be86234001503f550b1aa4a51c45708974ea0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2cdf830e7f05f8c6abcdcda9f6a2c69c99ad3dae43534d683fae8b1f927d71df",
                    "sha256:7cb1fd1921fc228059ef7088e8836717999f3d42789694598ebbb1861e7d1724",
                    "sha256:e624c62faad1811af0276668a17c9f2593a4e92140c11f89ff8cf9bcfa8bb73b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:16f1112eda98e42d16b34cd4bfed296e8573ed72263e18f0012ff1134c4a7602",
                    "sha256:caa1275353e62e11d67b9672dda950d1cfe66a25bd7f05ff05de2d496808978b",
                    "sha256:6ce2591e8970a37e2493793bbede3b5ab35d388f7968082d6b0fcea10413d31a",
                    "sha256:ade0e72de88015e4622619649ae48bbe6b729b904e4256021514e4922626ed9b"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:02.961887086Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:39.225233998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea7004fb788ab5cf1604d6e71153c48d99b75fbd1810e78a8c79faff11fe6771 in / "
                },
                {
                    "created": "2024-04-24T04:10:39.576455849Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.077169061Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.937506347Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.032206671Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.147404774Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.156696765Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.19232306Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:27.143425379Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:27.300338572Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:29.672531151Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:29.672531151Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:02.858265949Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:02.961887086Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8560597d922ca8edaeea533c482a61b9cd840e55ae55cedd31b0087547e2933d",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:9a005735f93905c21dc34196459faebd252a5a10844a40eb5669aea32a39b95e",
                    "sha256:9350569411433d56e3852e0e2f4dc7decdd70009dff9cdba44d38f3f0489ebc0",
                    "sha256:117df0ceb231b578228599b6c142e4a34d84255be2688624757ba3bc4fd54808",
                    "sha256:baeab47a7671e653f8642536495730b0dbdeb9dd349f8a4115323039cdadf7b4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2825038c2a7d86110024c37372d227e96be6a954e7832622c439a54202fbfd98",
                    "sha256:827328bf11abc52b030cdb4ba699a6c85d3cad277623b1976866d8b07085d730",
                    "sha256:16b6beffaaaa1f3065b11eb80f19c72e494acc002063f47532eef5f093ff36d6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:07a1bf4ade3080f15be99893c80bc6afa2a1fadbcfcd18ebd5df49e6968d0998",
                    "sha256:2a3f8444f2028e3b60199f4e42c12a327ff421c71dcddf937beddc677d62c5f9",
                    "sha256:3f7afb01dbe51f97558e90aa562d3cfce9f47a7c9d2184f5a2623b31de50d1df",
                    "sha256:7176a3f08f68495a0145e1089ecc2a30087c73b72c3a242e3c3267784c56d3d7"
                ]
            },
            "variant": "v8"
        },
        "build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:01.230957056Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:16.696930741Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:34.389505442Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.127106593Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.202265303Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.322213113Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.36866875Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.384433538Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.977590429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:36.10345642Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:31.595865058Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:31.595865058Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:01.149863194Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:01.230957056Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:8118046c0c69be9888f1d9d5a1b51d47233771e8007f0fc1d1568cea72987874",
                    "sha256:6ace3ce5da9d73ad77fff9a9e1ead05c66d546a2638f8e476abc42d746fb9e0b",
                    "sha256:ba5bac65ad77adaa77dd7e72342d46e864399bb8cb963120dce00cd432062872",
                    "sha256:7c9997e72fd0e9c0f80088aa1a8c1e9ec7d5791afc6a1d64bc776e96eebf96c3",
                    "sha256:44867f45243358733796350989f5375d99bd654d3ce177454b689c8a0b5e38e5",
                    "sha256:f8c6334654e615714730d1906c472133f0569d24ad6d225d8e56acb6bad41ccb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f8af0639919c6ea8a3c94e5a9d75d4eb902a69acf123be2ff1eacefdc57e0900",
                    "sha256:b00db75f11d6652467a221628e15d27c9cf656b13d5f39b57d2ae1456c812fd9",
                    "sha256:8de1b58a8c327d1695b4465972be024744539717d676ad520eaf73e2de6c6887",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c4416f328678a4224c0b75e9b7ba68e7ccde5da7a27e3c652247e42d3c8540fa",
                    "sha256:7bdf9aa41310a07ff1a6799b252299e2bacf23b11a755b799a68c2cff50fe02a",
                    "sha256:3badcaedacc51260961d73cf4d5a546338a7031e7e09f98226d068621b32dcc6",
                    "sha256:e3737dd23c2fa033b37f7ef5d5bee5e0a8f5481e46d21338ce1ea71f6e90f0fc"
                ]
            },
            "variant": "v8"
        },
        "build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:18:46.079046127Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:27:03.918436093Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.147151639Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.895859375Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.980508392Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.112265798Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.14030823Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.15151525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:18.718999272Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.843510162Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:45.992807391Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:18:45.992807391Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:46.079046127Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:98a8b5f61ea9c06c6ca5426a9b3fe983826c3213543669a8a869eb06b13ffde9",
                    "sha256:abf88002fbe7341686bbe52b32081a56454a64faf6b1aff81f25e877ea2d1eef",
                    "sha256:cdb57f4820cf792cf321bd24ad74790c4e443c0921841c200c7b4b3c3a80777c",
                    "sha256:e048235ea6afed524c6ffee9b267b41e34b7f5f8f446a015faf4d3a2dcec118b",
                    "sha256:2abfcfd44fc60e992fd3ab15cb28b4a70a6b06ca667cfbf5cc50438649b3e70b",
                    "sha256:4864885d65cc529f1b9ddd924b1142f47f61b3842eae08cc9ef2a3b4af8149b5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:db9b57190ddc50cfcb4e2e0f8d68f83cc68587d069f1d9d7da6fa9d5c9d265ea",
                    "sha256:6fa058d45ae7200f46f6472179d216e73556d98a0a5957f483d7dd0490768611",
                    "sha256:b32903eacd2484f955709867d7a2cb449fbf9765b6b59a8140984e57fc69756f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d6750bce19b22f81e30a090e28a497287094759dbba841d427ce35f360ae3362",
                    "sha256:ae030c75332136dd78ede2dad9d13c5744d424cba2a5baa35dfa95cab19b97c7",
                    "sha256:a3d58f5a8ed4f16726c81a476a96ee4cfa131052397002288c1f3a16e7608c54"
                ]
            },
            "variant": "v8"
        },
        "build-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T06:47:39.910416837Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:27:03.918436093Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.147151639Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.895859375Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.980508392Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.112265798Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.14030823Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.15151525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:18.718999272Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.843510162Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:09.819155398Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T06:47:09.819155398Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:39.82306083Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:39.910416837Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:98a8b5f61ea9c06c6ca5426a9b3fe983826c3213543669a8a869eb06b13ffde9",
                    "sha256:abf88002fbe7341686bbe52b32081a56454a64faf6b1aff81f25e877ea2d1eef",
                    "sha256:cdb57f4820cf792cf321bd24ad74790c4e443c0921841c200c7b4b3c3a80777c",
                    "sha256:e048235ea6afed524c6ffee9b267b41e34b7f5f8f446a015faf4d3a2dcec118b",
                    "sha256:2abfcfd44fc60e992fd3ab15cb28b4a70a6b06ca667cfbf5cc50438649b3e70b",
                    "sha256:4864885d65cc529f1b9ddd924b1142f47f61b3842eae08cc9ef2a3b4af8149b5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:db9b57190ddc50cfcb4e2e0f8d68f83cc68587d069f1d9d7da6fa9d5c9d265ea",
                    "sha256:6fa058d45ae7200f46f6472179d216e73556d98a0a5957f483d7dd0490768611",
                    "sha256:b32903eacd2484f955709867d7a2cb449fbf9765b6b59a8140984e57fc69756f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d6750bce19b22f81e30a090e28a497287094759dbba841d427ce35f360ae3362",
                    "sha256:0bf2220a115bc1fe9db0e579b3b7bf340241800f8e260fe1fbafcc1aec57e83d",
                    "sha256:1658eacb46584ee5bab609e51003e4569805b1f316f109503eb46d62b97c78a2",
                    "sha256:4071becf3b80d59c15348af81bfba302d7de18100385ecfd3f99c3eed16f3bc1"
                ]
            },
            "variant": "v8"
        },
        "build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:10:06.714289637Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.852195309Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.038043115Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.780304725Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.857536001Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.973909727Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.984190839Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.039552477Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.048349925Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.048349925Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:48.621429861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.755642095Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:36.810568207Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:09:36.810568207Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:06.622305087Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:06.714289637Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:065c0c8ee90b6a88729dcedeec49c1a8f45ba003549af640e2810d4fc6ff3bba",
                    "sha256:7095239a88b7763efeed9d9b9e966c78d55dc94e12d326381f3118139e438f96",
                    "sha256:4ca5d10fb0a0db28f3e65e6dbf1cdb692555a729a52a09e593e5af2ef4b4506d",
                    "sha256:ae1f08cc91ab849fb2eede5fb48afbeab9fed4053546cae3fccc599069c44210",
                    "sha256:7464529b9f9f9be667fe699f5f15afd6d8b7a38ed1073dadedb0e860a29d4c76",
                    "sha256:4402f591566cbc4f1a643b3ee7806fa2ef88ba4bf941aeb37a165c8682ef904f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:423e14c8252e188d33a5ec559ff6d28ea1a0821f704c1475e338975276f812be",
                    "sha256:b85b0d37ae706ac760dbc383b8ec12bac3bf23e56777b00f4e4a929d7e2b8eb9",
                    "sha256:23806f2c24d9bb5468f5003446742e59aee46f2da7a644c4a87138b489baafd6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:633033d186aafd501aa9434c8d5cc3844afcc5a42062655071dcc140e45bbdfa",
                    "sha256:572ba6786850ed16b316a14628df2596ae8413724ec49ff0b12a59357ab1f84c",
                    "sha256:bee2f15aa3244c93b64487399e5c5edff6c4412f61a3e5a7fd6d3ec71fd165db",
                    "sha256:3d1b1ce56b0f687e33841ea970fa1541b5f29e995b1e59c3068107d5dd05ede9"
                ]
            },
            "variant": "v8"
        },
        "build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:02.532272585Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:26.423694552Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:38.364945598Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.086463913Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.165507188Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.277193879Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.286148976Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.294528672Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.328288018Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.328288018Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.90114596Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:40.025798109Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:32.751411021Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:32.751411021Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:02.441261564Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:02.532272585Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:e99690ff6bdf5117585c68a1f892149696d79cf3ed0c61661f9122e0a88e36e9",
                    "sha256:9a0c2b9b1cdbbc0db2dae309f62fd8631c29412d2f4d46032aa03ed409e35d36",
                    "sha256:0f1d8d6a7257621c084288626d17e7f27bd6147303a5c9158c529e401dbbed38",
                    "sha256:675bb67cb795bbe75be175fb93b12dabbc8607b96623ce313d4666b233f06a6b",
                    "sha256:e86a967f2b4a1e0de82f8149600bda5b07d3cdc443bf2a786285f5bd20df93a0",
                    "sha256:fb4b9b650fe26b6b6160d748da63edf5ac57dd26fcbfe3c63b4e7aeaf1992984",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5ebb16a9051aaf2b8497bbd9fd2f6df2355739793782a531d3de32b7328a50f9",
                    "sha256:767598c00b3c0217baf8b11080fdec7f4a087779a4c9022f53a753bba9092cf3",
                    "sha256:9e147bca8fc5daa8c6f66a786d5dbacbb9e45c22e9dd63e75c05ba9e572f0893",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8a7479558835f4c2f031e76f4929e630796da2c0bcbb6d7d10342c603b21c215",
                    "sha256:21e655419992d61803b8965428ddc342fab48c8190c017e0408665d840ccf9fc",
                    "sha256:14b9f5282d9b5349fcba51c63e1f427b8040fc72e5f23129895b58f4a2a4c817",
                    "sha256:7b9729620d6aa66b011b674349f15fa786e09543d870b8e4b9d08453bc782654"
                ]
            },
            "variant": "v8"
        },
        "build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:39.974497238Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:24.953165088Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:39.889589426Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:41.066579567Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.143975176Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.264080976Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.273232403Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.300416726Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.309131727Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.309131727Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:41.947858824Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:42.063596406Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:10.554777306Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:10.554777306Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:39.891408592Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:39.974497238Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:86b0ada2f7f14805b83f2cfb8ef1f8a73afde8caf6c3f049cc3a11383864786c",
                    "sha256:ebc7a54252402a1816bfc35b5446dce363bfd6c5935ac7904fd329ac20bedc1a",
                    "sha256:a15a838560110aaa53aa3ba5694c4e6892e26f88e6b6d56ee689f97ecedc2a8b",
                    "sha256:571583e4c8c85d43870ac914ded5e81b0379d26dbc0a89f2b103ec5b0457a6fe",
                    "sha256:43f682e9e440b8bb7a3033c22d474f4d2c8e92fee462e107968253af616969f1",
                    "sha256:071f7b191aee9717a549ccbe52d8d7c394cb2751958451d6651e70c115482c7f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b291a6c1c9db3939164fef977dd8444e55920eb727e821275ccc19fd49bf7ca3",
                    "sha256:de31973b5af7dc7fadcaff9255f7cefff4c5748e53a69443662ecb0b5016f899",
                    "sha256:f71149996de278238e180a198943d47b663a52230e4d93ca1f0bb288c786af73",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e03e0a1d273c844ac66b77716b3e146d11d30bbf606dd7112bff99a367ee4b8",
                    "sha256:4f51d0c098a0c4c3c8ac3b6c985fa5280531bc6afaca88da37c86c5c18a65820",
                    "sha256:9ef1abe918efdfd2668ea3eca2d4b7d4d31ddd8e4dbea13fb23bba3c3aafdff9",
                    "sha256:622f5750b7ab9ec3204042c6d37cf01da0e85d8ab0cfa701784d800e5e8137d4"
                ]
            },
            "variant": "v8"
        },
        "build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:14.381556338Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.291405322Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:31.999296481Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.6904503Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.771880783Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.881097501Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.892466156Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.930855119Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.942378892Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.942378892Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:33.515849881Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:33.633832814Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:44.338109945Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:15:44.338109945Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:14.291705234Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:14.381556338Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:56930b5dcad29e3311f6fb04ca615d7972a86bc1605e909dcdff8fd30258d045",
                    "sha256:756ba66bfc98a2afdf1ab75a4b6b4cfd056ccca172e3d8ee22390633659e3646",
                    "sha256:2b2f2eb87ce4100061a4f8f0873e1cfe881db0acff0d960c88765998f5c4f08e",
                    "sha256:9365ffcd553c34ba8db338105ed7643841e549d4ab9d6448ec58b0841352c1ef",
                    "sha256:b7340983b3a28dc104761b6982e5144961574b77477953b0607217311f953be6",
                    "sha256:114f170d8518dede364e1e325271c4f61d1c4f36d6ff064edd93a1069a1002c8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d7f11ca0dbf06b4b9921916c7a573d8d2da3b11a25006f08b8de60cab52656e7",
                    "sha256:3e83e4f4156b585c92569a9d80f258df9d9aaab0b3556c63e3a05e75d52b452a",
                    "sha256:aa503e523bef1a7611c8f0e03c23221df60a969fee09888e9fb791579cda1da4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f342a44a10739dfa4ae700c7f5dd38640608e5354614face55c827e5785bd034",
                    "sha256:0c3200aa34219ae2b6af150f0f4d6ffceda69d9d718a9151a41af83deea94b5b",
                    "sha256:3eea1aab6a7050afe9ebc423d1bdbdc4290ae99f8dc4aa475f3b3a62e77f7d55",
                    "sha256:411cbfdbb51f97d8930c1bb08e5781b4361f100495918d31d998c0e27cd998b1"
                ]
            },
            "variant": "v8"
        },
        "build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:01.230957056Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:16.696930741Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:34.389505442Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.127106593Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.202265303Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.322213113Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.36866875Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.384433538Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.977590429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:36.10345642Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:31.595865058Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:31.595865058Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:01.149863194Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:01.230957056Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:8118046c0c69be9888f1d9d5a1b51d47233771e8007f0fc1d1568cea72987874",
                    "sha256:6ace3ce5da9d73ad77fff9a9e1ead05c66d546a2638f8e476abc42d746fb9e0b",
                    "sha256:ba5bac65ad77adaa77dd7e72342d46e864399bb8cb963120dce00cd432062872",
                    "sha256:7c9997e72fd0e9c0f80088aa1a8c1e9ec7d5791afc6a1d64bc776e96eebf96c3",
                    "sha256:44867f45243358733796350989f5375d99bd654d3ce177454b689c8a0b5e38e5",
                    "sha256:f8c6334654e615714730d1906c472133f0569d24ad6d225d8e56acb6bad41ccb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f8af0639919c6ea8a3c94e5a9d75d4eb902a69acf123be2ff1eacefdc57e0900",
                    "sha256:b00db75f11d6652467a221628e15d27c9cf656b13d5f39b57d2ae1456c812fd9",
                    "sha256:8de1b58a8c327d1695b4465972be024744539717d676ad520eaf73e2de6c6887",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c4416f328678a4224c0b75e9b7ba68e7ccde5da7a27e3c652247e42d3c8540fa",
                    "sha256:7bdf9aa41310a07ff1a6799b252299e2bacf23b11a755b799a68c2cff50fe02a",
                    "sha256:3badcaedacc51260961d73cf4d5a546338a7031e7e09f98226d068621b32dcc6",
                    "sha256:e3737dd23c2fa033b37f7ef5d5bee5e0a8f5481e46d21338ce1ea71f6e90f0fc"
                ]
            },
            "variant": "v8"
        },
        "bullseye": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:08.087614205Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:34.112858146Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:34.112858146Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:07.988069734Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:08.087614205Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:d4bbcc8f869a75e833ac37295683ff757885b657ae796bc98357210980095594",
                    "sha256:29b1c7656d519adc330ddcbc2913b0307fa73e5096583d1e912738f7d85f2fc2",
                    "sha256:d1d34c64d649bbd1a1d72a9f117dfd5d1e2e4b4a60d2a74feda727cd4a56a412"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:18:44.882230645Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:44.770203593Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:18:44.770203593Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:44.882230645Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:fce71d005ef1399b88bba5c1a2e99ea28a0ce90e97c8986fab0819ada0f2f5c8",
                    "sha256:dc83caa3065b51fa87d3869d88a7a7a04bb2784eb40d46dab9f5883940b0831c"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T06:47:42.570096393Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:06.300803927Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T06:47:06.300803927Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:42.463708144Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:42.570096393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:64590090797bd58dea1d90f9e1915ab439819132db9dc65018f0bf614a53b415",
                    "sha256:8643a63c5adf2211238885138dff45c347168404cdfa26b871ba4f6fcb3a12a4",
                    "sha256:e9068358b42039f502a659f8f321f5491648754089737d95ea2b4a04c50a00b5"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:10:02.845968819Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:37.612406454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.235239371Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.327380141Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.444407777Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.455821747Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.489249886Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:39.054577625Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:39.175091463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:28.547589138Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:09:28.547589138Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:02.717733624Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:02.845968819Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:3667705b92b777b9857445986385fa3544fe745de824ed9e48b74d48e233a73b",
                    "sha256:a8f393213fd8f42444b9081c3d25da37b97dbec4b8639fe0f0e3a7589d5440fd",
                    "sha256:9e491949c039a6555bfc9e8d7edc810a1157e4de0e5a1c481e4a9da99f8dc49f",
                    "sha256:9d1103a6c6fb53d9a95de8b92fef5116bca54e0566ab3c9ba1697738c9c49934",
                    "sha256:34b6b50b96caed9ea8b06be9b87ec63932717d466f5059fcce4e49d0b8b1fe0a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:648567a88a80c3aedc7a65bfa28ed87413bf435dc5a1cb88738e3c5896c0c076",
                    "sha256:03d885cb57438349695f4729f2c71f343028df5dbb15b096c1d538eabb3058bd",
                    "sha256:d10c87bc3a1b034fb2d7a2b64156472e0744796c40aa33beedccda60556fa259",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d88ebe737a29be3e76f6b02f3591509f373fd4b840fb08406f33169dcd0cd78f",
                    "sha256:4e544689242b1ddfee0117efdb7784dd9f0d5a5229d50288e5ffe9093f5a3ddd",
                    "sha256:5f41562b508a5eb8852deaf68926bc8844a7fa67c46994326de693c002312c2e",
                    "sha256:cfc9295bad57e7a83e9d63812f222fdd1b91afd46e8e18ace4d1bfc465ac0af3"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:04.610475913Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.151462719Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.83609249Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.924579316Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.040114112Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.053934176Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.066241153Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:19.805586345Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.93208375Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:30.855836474Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:30.855836474Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:04.515184311Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:04.610475913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:0f12b4245fa0a3cc547f2a1e523735b954a9327e222c9499e29df367c992fc25",
                    "sha256:e718ad40e3c90a1cd1ecacf3a26fab120e1dea3923670a16a4c8ca50b6aa9d15",
                    "sha256:94c43fe224b59dec6cae014ab2c49387ad78dc326e460a610de6fc06495c0c1e",
                    "sha256:fe063efa4d53e9a11ecb850c83c6dd1b8b9cf17ec889889f949361d332a5b185",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f767c7f76af4a12cb0e1199b0fc93840a3e5a2f502f98489563422b710c7c82",
                    "sha256:eebaafdb21b5c124a4063b6c1f0639260a303dd72ba00c9ec5ad78515f70a2e1",
                    "sha256:8c39f39f8c6773437573033b4459016bd870d9bd6b9034b07c451bd5a636ff53",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:88062171c3eea1172e399dc542b1a51a8e61572ea372e1516f5b57248db85766",
                    "sha256:df991eaf76a1fb8207d621cf3ffb74ec9ab6750ec29fcb80a0d403b662089a35",
                    "sha256:911dc17feaa8a263b4acfc67851af4dcb67ff5042cfcf99d42b030ec8d7cfc9d",
                    "sha256:f8cb85032dd53f27f80a699d5ffc9261c0dc49b754f56a138ad5fed44e5874e4"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:44.164293131Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:13.879662253Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.586745871Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.670518036Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.790637458Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.799775231Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.830003625Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:15.53078113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:15.644511102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:10.092781961Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:10.092781961Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:44.054935167Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:44.164293131Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:ed4cf4bf4b8884bdd10c62b3d9f3f64dcad62f08c9184d6e8c4e3edd498d6ae7",
                    "sha256:e3ff77460733b5c70568a050c25cbfbba938cfb55a53dd793006cf80ce8cc1fd",
                    "sha256:769ee8ef4da51e9377ca4f5d7e5b438c1bac43f38546dfe5b6ddb3ae5fc17d03",
                    "sha256:2faf27c705413cfe35a57bebf1d6dc6e5fed15c26b907de4e87eb462c4c8203f",
                    "sha256:c057d9490c0d6264b7858e1b24696718ce0623763d48f86d0eab46db57cc6697",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7333a928fdb22e11f1eb14ab19de0aeece67b74f04ae6800a48f3626b6204619",
                    "sha256:7d1b2cfc6f4a702dbc3c9da3af6ce40ed072aea5b43739a0f749f0f5a410074a",
                    "sha256:1faec101bbd8a81f2c905ae2146f8736e838f567a8b2f856533f8c07e083cc3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1dc00d63c3226fece7e9b01c6df138f48bb6914b96abf29daae86c6c2331068e",
                    "sha256:7367ec19d8e9d3c036ac8c6b9b3f287f23f2bd038bea49482767206e46d5f753",
                    "sha256:44e1b05b27c7e40e9598b54e414e10f77f050990dd61b5214482b950a504a0e7",
                    "sha256:e948e987fda113363c940b0836b970ed56b2a1b736211caa5424ddc12512ef42"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:13.305582148Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.743482327Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.498252335Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.585989395Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.739473042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.787312463Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.797563821Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:22.394772002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:22.511272459Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:39.689825419Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:15:39.689825419Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:13.205414786Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:13.305582148Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:d04befff2a5273eded40c865c563f0d50276b31e32180679474e889fe080da1d",
                    "sha256:7b0c6c50c04ed7bf4b021ee99132e0366bf6ae4768e6a29e52e27fb6a1569aa3",
                    "sha256:2b57aa920cc2cddb5cf11eac876be5662fcb346e000afb2b1ced7b1295ed5a3d",
                    "sha256:9ad61a9af1dc63ddeb51e6fe9bbc82df2e37f1d0b967166d78ee356b54e2e32f",
                    "sha256:2011ae045dbd2ec46399c6e0e93d9cbef0dc64a181ee72a298737b86a13cadc1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71dc71c4129f2ba46a54c086463f9f61a15ea4ed70e3ad2fbf06fefc3ebda46e",
                    "sha256:46974ccfee6d4c0f3231897a3366bb38c4424b87355d0e626e0ae0d9fa0b7224",
                    "sha256:222ca016ec867e88cf844f487bab87a5460e34afed1ce08d1e7db271a366db23",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2af796bc84c5e90eb57e23c8d3adbf9050db0d14fa44a31e95248234ea6447a2",
                    "sha256:a86e4381ec328012fdc5825ec799cd4e80269f0996ef1b13d3cec9e194ade507",
                    "sha256:74bf467e78a3b612f36d62ee1ea8074fd962a4dd1ec7ff295193869bc0dafd68",
                    "sha256:81648437fd272fdfa048135a6611583de8e44ae6967fd03ff79b4a035de0e254"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:08.087614205Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:34.112858146Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:34.112858146Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:07.988069734Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:08.087614205Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:d4bbcc8f869a75e833ac37295683ff757885b657ae796bc98357210980095594",
                    "sha256:29b1c7656d519adc330ddcbc2913b0307fa73e5096583d1e912738f7d85f2fc2",
                    "sha256:d1d34c64d649bbd1a1d72a9f117dfd5d1e2e4b4a60d2a74feda727cd4a56a412"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:01.230957056Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:16.696930741Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:34.389505442Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.127106593Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.202265303Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.322213113Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.36866875Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.384433538Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.977590429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:36.10345642Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:31.595865058Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:31.595865058Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:01.149863194Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:01.230957056Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:8118046c0c69be9888f1d9d5a1b51d47233771e8007f0fc1d1568cea72987874",
                    "sha256:6ace3ce5da9d73ad77fff9a9e1ead05c66d546a2638f8e476abc42d746fb9e0b",
                    "sha256:ba5bac65ad77adaa77dd7e72342d46e864399bb8cb963120dce00cd432062872",
                    "sha256:7c9997e72fd0e9c0f80088aa1a8c1e9ec7d5791afc6a1d64bc776e96eebf96c3",
                    "sha256:44867f45243358733796350989f5375d99bd654d3ce177454b689c8a0b5e38e5",
                    "sha256:f8c6334654e615714730d1906c472133f0569d24ad6d225d8e56acb6bad41ccb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f8af0639919c6ea8a3c94e5a9d75d4eb902a69acf123be2ff1eacefdc57e0900",
                    "sha256:b00db75f11d6652467a221628e15d27c9cf656b13d5f39b57d2ae1456c812fd9",
                    "sha256:8de1b58a8c327d1695b4465972be024744539717d676ad520eaf73e2de6c6887",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c4416f328678a4224c0b75e9b7ba68e7ccde5da7a27e3c652247e42d3c8540fa",
                    "sha256:7bdf9aa41310a07ff1a6799b252299e2bacf23b11a755b799a68c2cff50fe02a",
                    "sha256:3badcaedacc51260961d73cf4d5a546338a7031e7e09f98226d068621b32dcc6",
                    "sha256:e3737dd23c2fa033b37f7ef5d5bee5e0a8f5481e46d21338ce1ea71f6e90f0fc"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:18:46.079046127Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:27:03.918436093Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.147151639Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.895859375Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.980508392Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.112265798Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.14030823Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.15151525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:18.718999272Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.843510162Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:45.992807391Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:18:45.992807391Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:46.079046127Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:98a8b5f61ea9c06c6ca5426a9b3fe983826c3213543669a8a869eb06b13ffde9",
                    "sha256:abf88002fbe7341686bbe52b32081a56454a64faf6b1aff81f25e877ea2d1eef",
                    "sha256:cdb57f4820cf792cf321bd24ad74790c4e443c0921841c200c7b4b3c3a80777c",
                    "sha256:e048235ea6afed524c6ffee9b267b41e34b7f5f8f446a015faf4d3a2dcec118b",
                    "sha256:2abfcfd44fc60e992fd3ab15cb28b4a70a6b06ca667cfbf5cc50438649b3e70b",
                    "sha256:4864885d65cc529f1b9ddd924b1142f47f61b3842eae08cc9ef2a3b4af8149b5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:db9b57190ddc50cfcb4e2e0f8d68f83cc68587d069f1d9d7da6fa9d5c9d265ea",
                    "sha256:6fa058d45ae7200f46f6472179d216e73556d98a0a5957f483d7dd0490768611",
                    "sha256:b32903eacd2484f955709867d7a2cb449fbf9765b6b59a8140984e57fc69756f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d6750bce19b22f81e30a090e28a497287094759dbba841d427ce35f360ae3362",
                    "sha256:ae030c75332136dd78ede2dad9d13c5744d424cba2a5baa35dfa95cab19b97c7",
                    "sha256:a3d58f5a8ed4f16726c81a476a96ee4cfa131052397002288c1f3a16e7608c54"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T06:47:39.910416837Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:27:03.918436093Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.147151639Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.895859375Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.980508392Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.112265798Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.14030823Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.15151525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:18.718999272Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.843510162Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:09.819155398Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T06:47:09.819155398Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:39.82306083Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:39.910416837Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:98a8b5f61ea9c06c6ca5426a9b3fe983826c3213543669a8a869eb06b13ffde9",
                    "sha256:abf88002fbe7341686bbe52b32081a56454a64faf6b1aff81f25e877ea2d1eef",
                    "sha256:cdb57f4820cf792cf321bd24ad74790c4e443c0921841c200c7b4b3c3a80777c",
                    "sha256:e048235ea6afed524c6ffee9b267b41e34b7f5f8f446a015faf4d3a2dcec118b",
                    "sha256:2abfcfd44fc60e992fd3ab15cb28b4a70a6b06ca667cfbf5cc50438649b3e70b",
                    "sha256:4864885d65cc529f1b9ddd924b1142f47f61b3842eae08cc9ef2a3b4af8149b5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:db9b57190ddc50cfcb4e2e0f8d68f83cc68587d069f1d9d7da6fa9d5c9d265ea",
                    "sha256:6fa058d45ae7200f46f6472179d216e73556d98a0a5957f483d7dd0490768611",
                    "sha256:b32903eacd2484f955709867d7a2cb449fbf9765b6b59a8140984e57fc69756f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d6750bce19b22f81e30a090e28a497287094759dbba841d427ce35f360ae3362",
                    "sha256:0bf2220a115bc1fe9db0e579b3b7bf340241800f8e260fe1fbafcc1aec57e83d",
                    "sha256:1658eacb46584ee5bab609e51003e4569805b1f316f109503eb46d62b97c78a2",
                    "sha256:4071becf3b80d59c15348af81bfba302d7de18100385ecfd3f99c3eed16f3bc1"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:10:06.714289637Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.852195309Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.038043115Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.780304725Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.857536001Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.973909727Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.984190839Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.039552477Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.048349925Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.048349925Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:48.621429861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.755642095Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:36.810568207Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:09:36.810568207Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:06.622305087Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:06.714289637Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:065c0c8ee90b6a88729dcedeec49c1a8f45ba003549af640e2810d4fc6ff3bba",
                    "sha256:7095239a88b7763efeed9d9b9e966c78d55dc94e12d326381f3118139e438f96",
                    "sha256:4ca5d10fb0a0db28f3e65e6dbf1cdb692555a729a52a09e593e5af2ef4b4506d",
                    "sha256:ae1f08cc91ab849fb2eede5fb48afbeab9fed4053546cae3fccc599069c44210",
                    "sha256:7464529b9f9f9be667fe699f5f15afd6d8b7a38ed1073dadedb0e860a29d4c76",
                    "sha256:4402f591566cbc4f1a643b3ee7806fa2ef88ba4bf941aeb37a165c8682ef904f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:423e14c8252e188d33a5ec559ff6d28ea1a0821f704c1475e338975276f812be",
                    "sha256:b85b0d37ae706ac760dbc383b8ec12bac3bf23e56777b00f4e4a929d7e2b8eb9",
                    "sha256:23806f2c24d9bb5468f5003446742e59aee46f2da7a644c4a87138b489baafd6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:633033d186aafd501aa9434c8d5cc3844afcc5a42062655071dcc140e45bbdfa",
                    "sha256:572ba6786850ed16b316a14628df2596ae8413724ec49ff0b12a59357ab1f84c",
                    "sha256:bee2f15aa3244c93b64487399e5c5edff6c4412f61a3e5a7fd6d3ec71fd165db",
                    "sha256:3d1b1ce56b0f687e33841ea970fa1541b5f29e995b1e59c3068107d5dd05ede9"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:02.532272585Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:26.423694552Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:38.364945598Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.086463913Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.165507188Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.277193879Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.286148976Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.294528672Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.328288018Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.328288018Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.90114596Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:40.025798109Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:32.751411021Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:32.751411021Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:02.441261564Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:02.532272585Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:e99690ff6bdf5117585c68a1f892149696d79cf3ed0c61661f9122e0a88e36e9",
                    "sha256:9a0c2b9b1cdbbc0db2dae309f62fd8631c29412d2f4d46032aa03ed409e35d36",
                    "sha256:0f1d8d6a7257621c084288626d17e7f27bd6147303a5c9158c529e401dbbed38",
                    "sha256:675bb67cb795bbe75be175fb93b12dabbc8607b96623ce313d4666b233f06a6b",
                    "sha256:e86a967f2b4a1e0de82f8149600bda5b07d3cdc443bf2a786285f5bd20df93a0",
                    "sha256:fb4b9b650fe26b6b6160d748da63edf5ac57dd26fcbfe3c63b4e7aeaf1992984",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5ebb16a9051aaf2b8497bbd9fd2f6df2355739793782a531d3de32b7328a50f9",
                    "sha256:767598c00b3c0217baf8b11080fdec7f4a087779a4c9022f53a753bba9092cf3",
                    "sha256:9e147bca8fc5daa8c6f66a786d5dbacbb9e45c22e9dd63e75c05ba9e572f0893",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8a7479558835f4c2f031e76f4929e630796da2c0bcbb6d7d10342c603b21c215",
                    "sha256:21e655419992d61803b8965428ddc342fab48c8190c017e0408665d840ccf9fc",
                    "sha256:14b9f5282d9b5349fcba51c63e1f427b8040fc72e5f23129895b58f4a2a4c817",
                    "sha256:7b9729620d6aa66b011b674349f15fa786e09543d870b8e4b9d08453bc782654"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:39.974497238Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:24.953165088Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:39.889589426Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:41.066579567Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.143975176Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.264080976Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.273232403Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.300416726Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.309131727Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.309131727Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:41.947858824Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:42.063596406Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:10.554777306Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:10.554777306Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:39.891408592Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:39.974497238Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:86b0ada2f7f14805b83f2cfb8ef1f8a73afde8caf6c3f049cc3a11383864786c",
                    "sha256:ebc7a54252402a1816bfc35b5446dce363bfd6c5935ac7904fd329ac20bedc1a",
                    "sha256:a15a838560110aaa53aa3ba5694c4e6892e26f88e6b6d56ee689f97ecedc2a8b",
                    "sha256:571583e4c8c85d43870ac914ded5e81b0379d26dbc0a89f2b103ec5b0457a6fe",
                    "sha256:43f682e9e440b8bb7a3033c22d474f4d2c8e92fee462e107968253af616969f1",
                    "sha256:071f7b191aee9717a549ccbe52d8d7c394cb2751958451d6651e70c115482c7f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b291a6c1c9db3939164fef977dd8444e55920eb727e821275ccc19fd49bf7ca3",
                    "sha256:de31973b5af7dc7fadcaff9255f7cefff4c5748e53a69443662ecb0b5016f899",
                    "sha256:f71149996de278238e180a198943d47b663a52230e4d93ca1f0bb288c786af73",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e03e0a1d273c844ac66b77716b3e146d11d30bbf606dd7112bff99a367ee4b8",
                    "sha256:4f51d0c098a0c4c3c8ac3b6c985fa5280531bc6afaca88da37c86c5c18a65820",
                    "sha256:9ef1abe918efdfd2668ea3eca2d4b7d4d31ddd8e4dbea13fb23bba3c3aafdff9",
                    "sha256:622f5750b7ab9ec3204042c6d37cf01da0e85d8ab0cfa701784d800e5e8137d4"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:14.381556338Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.291405322Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:31.999296481Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.6904503Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.771880783Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.881097501Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.892466156Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.930855119Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.942378892Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.942378892Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:33.515849881Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:33.633832814Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:44.338109945Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:15:44.338109945Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:14.291705234Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:14.381556338Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:56930b5dcad29e3311f6fb04ca615d7972a86bc1605e909dcdff8fd30258d045",
                    "sha256:756ba66bfc98a2afdf1ab75a4b6b4cfd056ccca172e3d8ee22390633659e3646",
                    "sha256:2b2f2eb87ce4100061a4f8f0873e1cfe881db0acff0d960c88765998f5c4f08e",
                    "sha256:9365ffcd553c34ba8db338105ed7643841e549d4ab9d6448ec58b0841352c1ef",
                    "sha256:b7340983b3a28dc104761b6982e5144961574b77477953b0607217311f953be6",
                    "sha256:114f170d8518dede364e1e325271c4f61d1c4f36d6ff064edd93a1069a1002c8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d7f11ca0dbf06b4b9921916c7a573d8d2da3b11a25006f08b8de60cab52656e7",
                    "sha256:3e83e4f4156b585c92569a9d80f258df9d9aaab0b3556c63e3a05e75d52b452a",
                    "sha256:aa503e523bef1a7611c8f0e03c23221df60a969fee09888e9fb791579cda1da4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f342a44a10739dfa4ae700c7f5dd38640608e5354614face55c827e5785bd034",
                    "sha256:0c3200aa34219ae2b6af150f0f4d6ffceda69d9d718a9151a41af83deea94b5b",
                    "sha256:3eea1aab6a7050afe9ebc423d1bdbdc4290ae99f8dc4aa475f3b3a62e77f7d55",
                    "sha256:411cbfdbb51f97d8930c1bb08e5781b4361f100495918d31d998c0e27cd998b1"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:01.230957056Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:16.696930741Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:34.389505442Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.127106593Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.202265303Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.322213113Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.36866875Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.384433538Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.977590429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:36.10345642Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:31.595865058Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:31.595865058Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:01.149863194Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:01.230957056Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:8118046c0c69be9888f1d9d5a1b51d47233771e8007f0fc1d1568cea72987874",
                    "sha256:6ace3ce5da9d73ad77fff9a9e1ead05c66d546a2638f8e476abc42d746fb9e0b",
                    "sha256:ba5bac65ad77adaa77dd7e72342d46e864399bb8cb963120dce00cd432062872",
                    "sha256:7c9997e72fd0e9c0f80088aa1a8c1e9ec7d5791afc6a1d64bc776e96eebf96c3",
                    "sha256:44867f45243358733796350989f5375d99bd654d3ce177454b689c8a0b5e38e5",
                    "sha256:f8c6334654e615714730d1906c472133f0569d24ad6d225d8e56acb6bad41ccb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f8af0639919c6ea8a3c94e5a9d75d4eb902a69acf123be2ff1eacefdc57e0900",
                    "sha256:b00db75f11d6652467a221628e15d27c9cf656b13d5f39b57d2ae1456c812fd9",
                    "sha256:8de1b58a8c327d1695b4465972be024744539717d676ad520eaf73e2de6c6887",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c4416f328678a4224c0b75e9b7ba68e7ccde5da7a27e3c652247e42d3c8540fa",
                    "sha256:7bdf9aa41310a07ff1a6799b252299e2bacf23b11a755b799a68c2cff50fe02a",
                    "sha256:3badcaedacc51260961d73cf4d5a546338a7031e7e09f98226d068621b32dcc6",
                    "sha256:e3737dd23c2fa033b37f7ef5d5bee5e0a8f5481e46d21338ce1ea71f6e90f0fc"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:08.087614205Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:34.112858146Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:34.112858146Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:07.988069734Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:08.087614205Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:d4bbcc8f869a75e833ac37295683ff757885b657ae796bc98357210980095594",
                    "sha256:29b1c7656d519adc330ddcbc2913b0307fa73e5096583d1e912738f7d85f2fc2",
                    "sha256:d1d34c64d649bbd1a1d72a9f117dfd5d1e2e4b4a60d2a74feda727cd4a56a412"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:18:44.882230645Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:44.770203593Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:18:44.770203593Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:44.882230645Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:fce71d005ef1399b88bba5c1a2e99ea28a0ce90e97c8986fab0819ada0f2f5c8",
                    "sha256:dc83caa3065b51fa87d3869d88a7a7a04bb2784eb40d46dab9f5883940b0831c"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T06:47:42.570096393Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:06.300803927Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T06:47:06.300803927Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:42.463708144Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:42.570096393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:64590090797bd58dea1d90f9e1915ab439819132db9dc65018f0bf614a53b415",
                    "sha256:8643a63c5adf2211238885138dff45c347168404cdfa26b871ba4f6fcb3a12a4",
                    "sha256:e9068358b42039f502a659f8f321f5491648754089737d95ea2b4a04c50a00b5"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:10:02.845968819Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:37.612406454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.235239371Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.327380141Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.444407777Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.455821747Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.489249886Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:39.054577625Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:39.175091463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:28.547589138Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:09:28.547589138Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:02.717733624Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:02.845968819Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:3667705b92b777b9857445986385fa3544fe745de824ed9e48b74d48e233a73b",
                    "sha256:a8f393213fd8f42444b9081c3d25da37b97dbec4b8639fe0f0e3a7589d5440fd",
                    "sha256:9e491949c039a6555bfc9e8d7edc810a1157e4de0e5a1c481e4a9da99f8dc49f",
                    "sha256:9d1103a6c6fb53d9a95de8b92fef5116bca54e0566ab3c9ba1697738c9c49934",
                    "sha256:34b6b50b96caed9ea8b06be9b87ec63932717d466f5059fcce4e49d0b8b1fe0a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:648567a88a80c3aedc7a65bfa28ed87413bf435dc5a1cb88738e3c5896c0c076",
                    "sha256:03d885cb57438349695f4729f2c71f343028df5dbb15b096c1d538eabb3058bd",
                    "sha256:d10c87bc3a1b034fb2d7a2b64156472e0744796c40aa33beedccda60556fa259",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d88ebe737a29be3e76f6b02f3591509f373fd4b840fb08406f33169dcd0cd78f",
                    "sha256:4e544689242b1ddfee0117efdb7784dd9f0d5a5229d50288e5ffe9093f5a3ddd",
                    "sha256:5f41562b508a5eb8852deaf68926bc8844a7fa67c46994326de693c002312c2e",
                    "sha256:cfc9295bad57e7a83e9d63812f222fdd1b91afd46e8e18ace4d1bfc465ac0af3"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:04.610475913Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.151462719Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.83609249Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.924579316Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.040114112Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.053934176Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.066241153Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:19.805586345Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.93208375Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:30.855836474Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:30.855836474Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:04.515184311Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:04.610475913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:0f12b4245fa0a3cc547f2a1e523735b954a9327e222c9499e29df367c992fc25",
                    "sha256:e718ad40e3c90a1cd1ecacf3a26fab120e1dea3923670a16a4c8ca50b6aa9d15",
                    "sha256:94c43fe224b59dec6cae014ab2c49387ad78dc326e460a610de6fc06495c0c1e",
                    "sha256:fe063efa4d53e9a11ecb850c83c6dd1b8b9cf17ec889889f949361d332a5b185",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f767c7f76af4a12cb0e1199b0fc93840a3e5a2f502f98489563422b710c7c82",
                    "sha256:eebaafdb21b5c124a4063b6c1f0639260a303dd72ba00c9ec5ad78515f70a2e1",
                    "sha256:8c39f39f8c6773437573033b4459016bd870d9bd6b9034b07c451bd5a636ff53",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:88062171c3eea1172e399dc542b1a51a8e61572ea372e1516f5b57248db85766",
                    "sha256:df991eaf76a1fb8207d621cf3ffb74ec9ab6750ec29fcb80a0d403b662089a35",
                    "sha256:911dc17feaa8a263b4acfc67851af4dcb67ff5042cfcf99d42b030ec8d7cfc9d",
                    "sha256:f8cb85032dd53f27f80a699d5ffc9261c0dc49b754f56a138ad5fed44e5874e4"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:44.164293131Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:13.879662253Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.586745871Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.670518036Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.790637458Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.799775231Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.830003625Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:15.53078113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:15.644511102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:10.092781961Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:10.092781961Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:44.054935167Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:44.164293131Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:ed4cf4bf4b8884bdd10c62b3d9f3f64dcad62f08c9184d6e8c4e3edd498d6ae7",
                    "sha256:e3ff77460733b5c70568a050c25cbfbba938cfb55a53dd793006cf80ce8cc1fd",
                    "sha256:769ee8ef4da51e9377ca4f5d7e5b438c1bac43f38546dfe5b6ddb3ae5fc17d03",
                    "sha256:2faf27c705413cfe35a57bebf1d6dc6e5fed15c26b907de4e87eb462c4c8203f",
                    "sha256:c057d9490c0d6264b7858e1b24696718ce0623763d48f86d0eab46db57cc6697",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7333a928fdb22e11f1eb14ab19de0aeece67b74f04ae6800a48f3626b6204619",
                    "sha256:7d1b2cfc6f4a702dbc3c9da3af6ce40ed072aea5b43739a0f749f0f5a410074a",
                    "sha256:1faec101bbd8a81f2c905ae2146f8736e838f567a8b2f856533f8c07e083cc3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1dc00d63c3226fece7e9b01c6df138f48bb6914b96abf29daae86c6c2331068e",
                    "sha256:7367ec19d8e9d3c036ac8c6b9b3f287f23f2bd038bea49482767206e46d5f753",
                    "sha256:44e1b05b27c7e40e9598b54e414e10f77f050990dd61b5214482b950a504a0e7",
                    "sha256:e948e987fda113363c940b0836b970ed56b2a1b736211caa5424ddc12512ef42"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:13.305582148Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.743482327Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.498252335Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.585989395Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.739473042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.787312463Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.797563821Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:22.394772002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:22.511272459Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:39.689825419Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:15:39.689825419Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:13.205414786Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:13.305582148Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:d04befff2a5273eded40c865c563f0d50276b31e32180679474e889fe080da1d",
                    "sha256:7b0c6c50c04ed7bf4b021ee99132e0366bf6ae4768e6a29e52e27fb6a1569aa3",
                    "sha256:2b57aa920cc2cddb5cf11eac876be5662fcb346e000afb2b1ced7b1295ed5a3d",
                    "sha256:9ad61a9af1dc63ddeb51e6fe9bbc82df2e37f1d0b967166d78ee356b54e2e32f",
                    "sha256:2011ae045dbd2ec46399c6e0e93d9cbef0dc64a181ee72a298737b86a13cadc1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71dc71c4129f2ba46a54c086463f9f61a15ea4ed70e3ad2fbf06fefc3ebda46e",
                    "sha256:46974ccfee6d4c0f3231897a3366bb38c4424b87355d0e626e0ae0d9fa0b7224",
                    "sha256:222ca016ec867e88cf844f487bab87a5460e34afed1ce08d1e7db271a366db23",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2af796bc84c5e90eb57e23c8d3adbf9050db0d14fa44a31e95248234ea6447a2",
                    "sha256:a86e4381ec328012fdc5825ec799cd4e80269f0996ef1b13d3cec9e194ade507",
                    "sha256:74bf467e78a3b612f36d62ee1ea8074fd962a4dd1ec7ff295193869bc0dafd68",
                    "sha256:81648437fd272fdfa048135a6611583de8e44ae6967fd03ff79b4a035de0e254"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:08.087614205Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:34.112858146Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:34.112858146Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:07.988069734Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:08.087614205Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:d4bbcc8f869a75e833ac37295683ff757885b657ae796bc98357210980095594",
                    "sha256:29b1c7656d519adc330ddcbc2913b0307fa73e5096583d1e912738f7d85f2fc2",
                    "sha256:d1d34c64d649bbd1a1d72a9f117dfd5d1e2e4b4a60d2a74feda727cd4a56a412"
                ]
            },
            "variant": "v8"
        },
        "buster": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:59.975182339Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:06.74670097Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd84662eb5c566f361c169149ba683475c50ddc528270daf67d40c8e98ed12a7 in / "
                },
                {
                    "created": "2024-04-24T04:11:07.11563544Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:19.638450997Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.549934048Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.629066055Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.741959901Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.750514997Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.758506762Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:21.457163607Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:21.592600612Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:23.218792487Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:23.218792487Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:59.875968449Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:59.975182339Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dccc8e6afcd181b24eb0b68b1c1381436dd209e768d16a34564ddac1a3fd75c9",
                    "sha256:39ca7c242be0ea6bd197d83f318c319ec9339c72dd98edd9c6be27f4c9a2336b",
                    "sha256:c5516df564cd16e10d84cf5d24b64295b1ecdaef53f8f05bea94bbd390079ae1",
                    "sha256:a549fc4249cd27572a3b3064ea14b8e909a07cfc4e9dd8d6d39100579978c1c7",
                    "sha256:716a0add12a51c3e2bd20c03b488420bb169916ea5bfaf23453afc7d132a36c9",
                    "sha256:38d69d87aac50f95e6e1c9017ed000b305bece9f2c7313144d743a110d0f8ec0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:81404df39f5b136b6e8202bc2ab80a602f8a862a0fefd3310a9f63eebbd22ca4",
                    "sha256:20b495f7e8f7f614a200a027bde0ea84be7f4242950e1e64726fba48678a1806",
                    "sha256:84668ead4d5526ea42d74565244059204af40d4212d6e322562285628824c139",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c67a9035c17fd6b4f86d70ce1ac722142ed08ff01a980a623ca86a2249de75cd",
                    "sha256:a8ec13f1edea3d99cd9e41f93d788d8ee317fc4840d066e3d32fbe7e9dc1bdc4",
                    "sha256:c6a2c66859671d272b76829b3ba065f9cabf622a2d7f5f782c1ed7f23105b68c",
                    "sha256:bb7b2f1a4b074f230192d7cb74261b2a73af192ac616468b10082c8e8386b040"
                ]
            },
            "variant": "v8"
        },
        "buster-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:14:58.603287308Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:56.988274449Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:de90e50e142aa92c29d5128e1cd025fd5c5b91f879a19a06a8b49451a4e6afb9 in / "
                },
                {
                    "created": "2024-01-31T22:44:57.403511419Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.807489748Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.478585285Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.556229271Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.68311975Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.712162198Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.763984121Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.772790466Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.772790466Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.381935653Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.506598635Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:14:58.50138296Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:14:58.50138296Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:14:58.603287308Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9d885bab887af47b9c3317a8a0e9e9af888daba2b6c8434b01c923eba48482c1",
                    "sha256:235b27c5214e3fe2bf3908b99eeaf3944e9db6c30afae6739c6e7a1ca2d98428",
                    "sha256:9bf4ba3924a9c7e50df5c96156314f1d81683e8bae5a096710f1bf4f89f966c3",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac35dd0c10fa3bfaeb1b0539aa6073cadb37522da44b0ca385cced25649dac09",
                    "sha256:1ba81ec73597fb7f098fbfc4af6e92abf114b18ac40eaf8eef6b4306ea458a17",
                    "sha256:b8c6b848f95849b94d787c742a8114ee9120ca66265da9f899a2d69182b9439e"
                ]
            },
            "variant": "v8"
        },
        "buster-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T06:47:35.363958288Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:56.988274449Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:de90e50e142aa92c29d5128e1cd025fd5c5b91f879a19a06a8b49451a4e6afb9 in / "
                },
                {
                    "created": "2024-01-31T22:44:57.403511419Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.807489748Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.478585285Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.556229271Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.68311975Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.712162198Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.763984121Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.772790466Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.772790466Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.381935653Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.506598635Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:46:59.885419045Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T06:46:59.885419045Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:35.259791165Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:35.363958288Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9d885bab887af47b9c3317a8a0e9e9af888daba2b6c8434b01c923eba48482c1",
                    "sha256:235b27c5214e3fe2bf3908b99eeaf3944e9db6c30afae6739c6e7a1ca2d98428",
                    "sha256:9bf4ba3924a9c7e50df5c96156314f1d81683e8bae5a096710f1bf4f89f966c3",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac35dd0c10fa3bfaeb1b0539aa6073cadb37522da44b0ca385cced25649dac09",
                    "sha256:b9a56aa7cd26aab22bde72e283cce780c181afa58dd43d780da12d0e419d28f0",
                    "sha256:ee6247186acec966d503de6df6646bd81e804e559fd4b85b14956c18660f7c92",
                    "sha256:5c53da8f44b62f5479e731801cd864b70fbbd58224d875d663c28386af54df1b"
                ]
            },
            "variant": "v8"
        },
        "buster-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:10:08.270088424Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:49.5791897Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:56f9fb4bf0b803f4553b7fe668c34676467e662e3ab02af10e815a93ebbde1d6 in / "
                },
                {
                    "created": "2024-02-13T00:41:49.91043912Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.185468205Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.185468205Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.185468205Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:33.341738469Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:34.06965774Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.148051312Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.255785689Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.265654245Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.283258079Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.311215271Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.311215271Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:34.921396647Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:35.056925015Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:32.105807253Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:09:32.105807253Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:08.16735658Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:08.270088424Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1d7e79c78824d3d36e78d14b1c53b639ec71e51d619cc32e58087307c7302b08",
                    "sha256:14d1b16b913edcb6e374ad911eb8a78c95fc068e5a679810dd57abc6253eb4fb",
                    "sha256:96ab9d2c17973eeef04268583375793e136fafd5eb03eea349b25f42616df5ad",
                    "sha256:5d3f391e169dbaca51d1a3a645fca5eecedfe8bfbd5180553be4546776a47ec6",
                    "sha256:aefd933866e4321e224ef844e38f5adf5a8887aaf4a9eaa98a656554bb7ff8a4",
                    "sha256:1eab6fb8eb3d730ae5093688afa5ba3ab43f046408eab222d027b66f502df98d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:398934f37feb07325fbfff2a1f0904f40919bf8d63582ddff8f1600d93d4e0a5",
                    "sha256:e9ec797cfcec4be78cec5aac408134f03bfa55c194fb540201a3d71425e896b2",
                    "sha256:705ae3611f17b2fb0cc363de116e17074a27187b8a3155e1f2a589a6f383b461",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b561a4c5da54fc916c73fa182d8dd0eb904033e917d66d4682cb445ecdddf42d",
                    "sha256:c1e7fd8023b44f9107546393ce8349be9f8a9ba319fe3064aeee79d81936c61c",
                    "sha256:2503051c55d12b79c613ab3d4459cd11bc2e1d7f6d6583d9e96d593fffa38aed",
                    "sha256:5b9504d29267b79fde6b16fbaafff3d8aa2ad62e6129faf66ab2526f202416db"
                ]
            },
            "variant": "v8"
        },
        "buster-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:04.043126699Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:49.5791897Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:56f9fb4bf0b803f4553b7fe668c34676467e662e3ab02af10e815a93ebbde1d6 in / "
                },
                {
                    "created": "2024-02-13T00:41:49.91043912Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:53.398035992Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:53.398035992Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:53.398035992Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:31.92811446Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:33.001212821Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.09994039Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.213963358Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.225289874Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.25981882Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.270035018Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.270035018Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:33.96930786Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:34.10268171Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:27.640698521Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:27.640698521Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:03.942460896Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:04.043126699Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1d7e79c78824d3d36e78d14b1c53b639ec71e51d619cc32e58087307c7302b08",
                    "sha256:959f47d59254072ce02e886b00cde7d294b2d7981aa4984cba5288cad830ba72",
                    "sha256:d17c410fa6f698a182a45cc74212055a61b521874fcef1af2f39e341ba6bdb83",
                    "sha256:0cd206a03975038b1b7bb7dd5f9cf4daac0a33a8e97a3939383e637e9a1be45c",
                    "sha256:4a9d5e6ecdaab0bf5d5768ff2bc1c0c7afcaab2873c4405bcad103e0f1e2d952",
                    "sha256:891fc4fbd97a494a81189d0a395580075c87502de3c65992e66ee690a6b370b0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:122e109ce76a1397a3342083493ebf205d24923cce42dbc32cce0516dd64fc7b",
                    "sha256:0ca013a72afe6ffa351b48a50a76ec9cf4bb516aa2cb125f4d20af4d57a9fd49",
                    "sha256:f9e1994a5e113cdad592781be8287712029653c9ddb1c9122c6422cb7128f3ee",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:27cd25e8c7f418d7b31d552410b9319e3e873281224cb5bef4e16b86692d65b3",
                    "sha256:93f03e9d40fa08eb6ec47ce21df57fdc22ffa667c6f3914d4c88229da11bd56d",
                    "sha256:d87dfe2a82bd55c5ab9f016a72c840dbcdb5f3242c96326d3baa7e911198e188",
                    "sha256:fa4d977d1b35c366044f941ea5e751ef811886d6ec9425205eb781e7e210aca2"
                ]
            },
            "variant": "v8"
        },
        "buster-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:39.421672333Z",
            "history": [
                {
                    "created": "2024-03-12T00:46:05.707971696Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:01e6303e5bd3d7bb8200a616ab1d931421cd756c837936b3f897727814cb89c3 in / "
                },
                {
                    "created": "2024-03-12T00:46:06.078462584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:56.76409807Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:56.76409807Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:56.76409807Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:35.720788962Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:36.338217232Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.432805206Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.551892522Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.562123104Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.604765219Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.615520541Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.615520541Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:37.159112058Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:37.282597476Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:02.701250616Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:02.701250616Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:39.315959869Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:39.421672333Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07bbd89cd181761fde72ddcf9318c9871c105da00bd52744d7437907c33deee0",
                    "sha256:960983cc0a3bb2f61698359bb8f9cbc8fbd2766293219d50b4354eefe3c4d3e7",
                    "sha256:29a6bcb6f166ef3ed97d319b2e9bf37a75f247e5ca1e5a847bf50ef37d9777a5",
                    "sha256:3c33bf028bcdb28b31c820c9f35fb1227bbcacc496899206b89ec914194e8cc7",
                    "sha256:c9a6c8eb8acb5842ce755b08beb4b8816f965da772c45a1f95641bb5fbc19086",
                    "sha256:95fa78911b8769bf8a9394cba57919630c544b1f8194fe33896cfeb0baa8c657",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:809baad34543e9ce78ca187c6bc44c7c886cd13966040c3350522ebd7b57c55d",
                    "sha256:7603ab81332aa002a982a0ad5a3890b62a9b0836867b7d6c5a0a9055784409d1",
                    "sha256:76772dfe739308052c1cf53ced9def39c4631cc633f8c9d7d33f4c120220479f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c58a19ddc1136bafacc7ed08d32fbf9722ffc37b641b7f79a35b9e6234d16938",
                    "sha256:1a214c3456c170bc7577a0e5fd1b339d67ec57fa0744e437aab6adbabaacbd0a",
                    "sha256:a482edfb82ff7f309abbfcd4f73fec0e9a52507c4045e74cb3f85249440fdb18",
                    "sha256:be8825ec98a7eb4f775d6c9b1a4def37009d38cef179146cff41616befdf58b0"
                ]
            },
            "variant": "v8"
        },
        "buster-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:24.12492749Z",
            "history": [
                {
                    "created": "2024-03-12T00:46:05.707971696Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:01e6303e5bd3d7bb8200a616ab1d931421cd756c837936b3f897727814cb89c3 in / "
                },
                {
                    "created": "2024-03-12T00:46:06.078462584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.01815645Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.01815645Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.01815645Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:26.479258758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:27.43638791Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.531691693Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.649243392Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.675293651Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.723390648Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.7355834Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.7355834Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:28.34054638Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:28.467024475Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:47.942206702Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:15:47.942206702Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:24.027355917Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:24.12492749Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07bbd89cd181761fde72ddcf9318c9871c105da00bd52744d7437907c33deee0",
                    "sha256:8e273a8f93effd59553a4a31f5c7229ec2e16e01444284ea97daf932ab9d0d63",
                    "sha256:8c0566b447b5ec12362ff50ba0ce88967215d95b7e9f2ad334c603ecdb8435ca",
                    "sha256:7834afd8a758b2941d565a3592f4ab65a4cd2de41f19769132d0e357e882f15f",
                    "sha256:b4ea6ac278174f2a0b223d3ccc6a797ac2f091da944936e46544b1c48318f459",
                    "sha256:cd2b62f7a338d065f76532c443babf37cc00b3a4963490a61293cc4ef1ea743a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:60ccadccf558f03e50caaf1f2a9d6d741d20f83c71e794e1a9241c6f2315ee5d",
                    "sha256:9f919f5997f4e9927817d9b057abfd137f52c6764c0cada86333097be36d4c28",
                    "sha256:0a531293b84afc04eab37e450f83f367919d1b6a7215a0166673c1684ffa35e1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2a4df97b13cdbcb05d806c48aa3c03eeb9029bbabc4129c1a532ce09894fe13f",
                    "sha256:295920771c24025862f550117211e86b8e05d9eb7a038dc55fcb8d9a6b22cbef",
                    "sha256:435e5c927ef63eabe59bfb64e90536bb31b7fc14e32e205fc1beb6f7d376dce6",
                    "sha256:847ff7c2b827c06c572dd6784f5e585748c3e58e324f1b90b65d9705da4977f7"
                ]
            },
            "variant": "v8"
        },
        "buster-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:59.975182339Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:06.74670097Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd84662eb5c566f361c169149ba683475c50ddc528270daf67d40c8e98ed12a7 in / "
                },
                {
                    "created": "2024-04-24T04:11:07.11563544Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:19.638450997Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.549934048Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.629066055Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.741959901Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.750514997Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.758506762Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:21.457163607Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:21.592600612Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:23.218792487Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:23.218792487Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:59.875968449Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:59.975182339Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dccc8e6afcd181b24eb0b68b1c1381436dd209e768d16a34564ddac1a3fd75c9",
                    "sha256:39ca7c242be0ea6bd197d83f318c319ec9339c72dd98edd9c6be27f4c9a2336b",
                    "sha256:c5516df564cd16e10d84cf5d24b64295b1ecdaef53f8f05bea94bbd390079ae1",
                    "sha256:a549fc4249cd27572a3b3064ea14b8e909a07cfc4e9dd8d6d39100579978c1c7",
                    "sha256:716a0add12a51c3e2bd20c03b488420bb169916ea5bfaf23453afc7d132a36c9",
                    "sha256:38d69d87aac50f95e6e1c9017ed000b305bece9f2c7313144d743a110d0f8ec0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:81404df39f5b136b6e8202bc2ab80a602f8a862a0fefd3310a9f63eebbd22ca4",
                    "sha256:20b495f7e8f7f614a200a027bde0ea84be7f4242950e1e64726fba48678a1806",
                    "sha256:84668ead4d5526ea42d74565244059204af40d4212d6e322562285628824c139",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c67a9035c17fd6b4f86d70ce1ac722142ed08ff01a980a623ca86a2249de75cd",
                    "sha256:a8ec13f1edea3d99cd9e41f93d788d8ee317fc4840d066e3d32fbe7e9dc1bdc4",
                    "sha256:c6a2c66859671d272b76829b3ba065f9cabf622a2d7f5f782c1ed7f23105b68c",
                    "sha256:bb7b2f1a4b074f230192d7cb74261b2a73af192ac616468b10082c8e8386b040"
                ]
            },
            "variant": "v8"
        },
        "buster-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:21.459185085Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:06.74670097Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd84662eb5c566f361c169149ba683475c50ddc528270daf67d40c8e98ed12a7 in / "
                },
                {
                    "created": "2024-04-24T04:11:07.11563544Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:45.809776659Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:45.809776659Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:45.809776659Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.066819565Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:18.920158375Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:20.089821396Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.180293941Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.297773545Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.306398153Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.314409136Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.339418308Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.339418308Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:21.093856096Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:21.208979982Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:49.240536611Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:49.240536611Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:21.377651972Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:21.459185085Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dccc8e6afcd181b24eb0b68b1c1381436dd209e768d16a34564ddac1a3fd75c9",
                    "sha256:b68528658e05ffc98d8dcfed1bc08af5f6c80aee662bacad115c6e81e646b02d",
                    "sha256:e680b67f6e2e37636a3810df963b97612febef96b17a1a83c71bd42d8fc83a46",
                    "sha256:e16849ebf7aa27328e38161674734295b43eb6b807b0c23f8c684ffc44aa4b68",
                    "sha256:280367c9a37e3236a7d439c5093ab121093a31931c3fe70f0c287ab05a9ce322",
                    "sha256:5ed22cba7aa9002c98a9a906a94aefbdee2a3d1d545f4695f6e8a6d25a81694f",
                    "sha256:2798d612330c766827116cc001cff81155fecafed480594a43c5c96eeabca015",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8eaf6f4c245a14e422c66a43cd196dcb9dd011cac75ab8772cdb502332b9326c",
                    "sha256:9738a6d816dbd2199fa0e779518f059e5052709ea0eb884d7cabe97c15c42f70",
                    "sha256:ce7c63474d5cd9357a22f6f4927b840466b27125915c27b4c1d3d1fbdfe3d909",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71880a6d135176b5ec3eaf3e468da95421047a70462246357f5a99e837607051",
                    "sha256:ce179255d7840a153ae7efdc0172adbfa1aa046ab0df45878b0d5a32629dc952",
                    "sha256:506a3212ca96adf15d62eb32ad4a2573741f4d54e4f5d73014b7f426aa4b65f2",
                    "sha256:7ed542a87d6c49903fe24a6537bad37596348fb54437843c0d65371241500a8b"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:11:57.218236772Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:56.988274449Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:de90e50e142aa92c29d5128e1cd025fd5c5b91f879a19a06a8b49451a4e6afb9 in / "
                },
                {
                    "created": "2024-01-31T22:44:57.403511419Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:24.450475977Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:24.450475977Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:24.450475977Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:27:02.080878171Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:00.730108488Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.546267528Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.546267528Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:01.546267528Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:01.546267528Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:01.6373298Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.726081355Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.843716447Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.853871198Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.889100994Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.898620738Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.898620738Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:02.518508129Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:02.641876532Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:11:57.127405263Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:11:57.127405263Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:11:57.218236772Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9d885bab887af47b9c3317a8a0e9e9af888daba2b6c8434b01c923eba48482c1",
                    "sha256:bfd3b7513138ecde418dc9c1954baef6538803a0bc918a573b2129d300beb824",
                    "sha256:619f66a8664bf98fff4ffb0925bb1bce6d84187b9b5e7c1e13781b19317c1341",
                    "sha256:27fe588fdb860fa6186c5e60633a00bdb5bd7be38ebc8cd7a14bca0d37e974e1",
                    "sha256:5ff02d000baf9397c7634a8a164e1b2faeaffe6577bb97eeb5c4293528593229",
                    "sha256:0e8e4d9ce0ce1e7018a5d960053edee92c80dcbcf3f40fc8ffe804df3f7388f9",
                    "sha256:f919ca613be98068f8e1d71170471405ebcd105a72c7652cb5224274ab40586b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:da15a00a582d89918c29e5c3af955e210fd6ca1678d4824c1cd3669ddcbb3728",
                    "sha256:9c0e56da42e0d3a0cff795c7ff8eb4d9f55974100f3bbf38bbc3a9f078695ad9",
                    "sha256:af01aaa8d6429eb082ef35ec5f868ba4c53330a4b93a05a4c2a57d1eef63a7bd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ed8825067405a4357cbcd06bed8c8424169584aa3eef730e0b6f0b50a47957c3",
                    "sha256:e748dc5dc15621648280f9cc347490f0c5e39799b1cd28c77c04c2d2eeacf9de",
                    "sha256:15f93a71b9ce8db218fc706516dc249e465560532dc225055917ab42cc57abf0"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T06:47:36.217554862Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:56.988274449Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:de90e50e142aa92c29d5128e1cd025fd5c5b91f879a19a06a8b49451a4e6afb9 in / "
                },
                {
                    "created": "2024-01-31T22:44:57.403511419Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:24.450475977Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:24.450475977Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:24.450475977Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:27:02.080878171Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:00.730108488Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.546267528Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.546267528Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:01.546267528Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:01.546267528Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:01.6373298Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.726081355Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.843716447Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.853871198Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.889100994Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.898620738Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.898620738Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:02.518508129Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:02.641876532Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:03.945902009Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T06:47:03.945902009Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:36.122088346Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:36.217554862Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9d885bab887af47b9c3317a8a0e9e9af888daba2b6c8434b01c923eba48482c1",
                    "sha256:bfd3b7513138ecde418dc9c1954baef6538803a0bc918a573b2129d300beb824",
                    "sha256:619f66a8664bf98fff4ffb0925bb1bce6d84187b9b5e7c1e13781b19317c1341",
                    "sha256:27fe588fdb860fa6186c5e60633a00bdb5bd7be38ebc8cd7a14bca0d37e974e1",
                    "sha256:5ff02d000baf9397c7634a8a164e1b2faeaffe6577bb97eeb5c4293528593229",
                    "sha256:0e8e4d9ce0ce1e7018a5d960053edee92c80dcbcf3f40fc8ffe804df3f7388f9",
                    "sha256:f919ca613be98068f8e1d71170471405ebcd105a72c7652cb5224274ab40586b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:da15a00a582d89918c29e5c3af955e210fd6ca1678d4824c1cd3669ddcbb3728",
                    "sha256:9c0e56da42e0d3a0cff795c7ff8eb4d9f55974100f3bbf38bbc3a9f078695ad9",
                    "sha256:af01aaa8d6429eb082ef35ec5f868ba4c53330a4b93a05a4c2a57d1eef63a7bd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ed8825067405a4357cbcd06bed8c8424169584aa3eef730e0b6f0b50a47957c3",
                    "sha256:0bf764ea70187e71aa3cb405a10488a41b4296c62f7c150561418c9f17ee63e4",
                    "sha256:f09b7be2cddf0dbb698c07fa9ed24c11571c17a0771a61d44157b7bbc78a747d",
                    "sha256:27d47fbb98889fad62ea77e12280b7af278af0506a8773b359b38e98f631c676"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:10:05.488612999Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:49.5791897Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:56f9fb4bf0b803f4553b7fe668c34676467e662e3ab02af10e815a93ebbde1d6 in / "
                },
                {
                    "created": "2024-02-13T00:41:49.91043912Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.407104143Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.407104143Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.407104143Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:37.623356129Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:35.285777748Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.169524006Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.169524006Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:36.169524006Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:36.169524006Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:36.248177335Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.321125203Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.435978221Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.445850901Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.485723422Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.495059969Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.495059969Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:37.112799936Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:37.232755366Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:32.475438091Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:09:32.475438091Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:05.398084637Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:05.488612999Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1d7e79c78824d3d36e78d14b1c53b639ec71e51d619cc32e58087307c7302b08",
                    "sha256:24fb88b45bc91c912b602a42d6733f0071d4a4aebea02fe430f22406b2b90a88",
                    "sha256:4999626c6eb61bd558eb5f9e19da741786584333e1d33be6c27eab10d836cc10",
                    "sha256:e34e20be7a8dbeaf385b05be7a76cd222388a96925b449c1832e788282af745a",
                    "sha256:d92db7827a3867f9f077235ba942dfdd1b107befd7e63a56f44947717009bcff",
                    "sha256:6777d12ae1fb045d6c3858d096c642c5ea8047b454260909c7274319f701c7ab",
                    "sha256:119c8f5daeac78104f977c9bc3ebbd25540df03165a93bfe60beda27a1dad449",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:43858c92eeba765c832cfd74c635694cc1fbdc84568b0564486047ab4757de55",
                    "sha256:c4036174b531f2c568d919ef7dd016f782ef2692899081723b82cdb84ec8a8ff",
                    "sha256:497a99c246d69e1b20f4acc7bdcfa574dd72726f02d6db3414e838b4b482efd2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:57fa20d8291fd47e29caecf6d5b97b4bda4b5fbab2a75520f9f7625d364a76fb",
                    "sha256:6e55ae6d139771d5d39e4b98fa1986c1531acbd680e3bcb7be7874eb2711f6b2",
                    "sha256:d514655acb56107a20199814e6da4818908a78b393697609f80bd568c9ffde44",
                    "sha256:cc6d386cdc8f420b1bc206544a74b9b1f439b455705e069f1610cd6b3dea0d81"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:02.790272145Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:49.5791897Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:56f9fb4bf0b803f4553b7fe668c34676467e662e3ab02af10e815a93ebbde1d6 in / "
                },
                {
                    "created": "2024-02-13T00:41:49.91043912Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:52.452722501Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:52.452722501Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:52.452722501Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:28.461808725Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:26.245036143Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.320901321Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.320901321Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:27.320901321Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:27.320901321Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:27.408609106Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.507560774Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.628377274Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.642286284Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.676700208Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.686697105Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.686697105Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:28.196729081Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:28.321647032Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:30.335369755Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:30.335369755Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:02.709677646Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:02.790272145Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1d7e79c78824d3d36e78d14b1c53b639ec71e51d619cc32e58087307c7302b08",
                    "sha256:9fd34b510abf214c4867027968d660bd642c08430e97cb28ccbe9cc8937e75ad",
                    "sha256:bdd37b91483a1421d57a76dddf0ed03a368aaa181732695d5406693f7326d0c0",
                    "sha256:70b1fee0c1e3684fbcf920cf7325e45bb85612e5a12224291ed59fd4b14362da",
                    "sha256:a41b7aead45637d0ee36b280f180580f345d8f3621431d99fb7e7384c48b405a",
                    "sha256:9f07c26266c466eee3306bf5b277b02724c0860a1572057f6d10045ed24c534f",
                    "sha256:3e39672680358e3c8c13a6c34c3d0f0c3fa11dc21655fe95b781d840bcff3f62",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:765814db0bfc6b36a4242de3e0ddb04e11fca9236efcf54f980149c1f28bf863",
                    "sha256:8d676623bcd3c71604dd591ada8767fc76d28a3bd5a2a75b29494f3b3e3795ce",
                    "sha256:9d9a9c94c0edbe7cdfd578737375f9abe98f50b7a05eb4b6d0262212fdcafe98",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ec137555f62c59e4f2f2cc3a849ef6c291cfc43ec6c1d4871a896431e6ecc383",
                    "sha256:b93be9e7ef5a09023769a176f64f364e331e54a371b296cabe876bc03608780a",
                    "sha256:56169ddee1a96cf48835a035cf717afc5de14f6a701a56a32494b9c3f73c7b43",
                    "sha256:bbe9bade4a25ec7cad290a1ffa2785a46ad9db128ac26ec43c41d9d498b1d60c"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:47.236696913Z",
            "history": [
                {
                    "created": "2024-03-12T00:46:05.707971696Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:01e6303e5bd3d7bb8200a616ab1d931421cd756c837936b3f897727814cb89c3 in / "
                },
                {
                    "created": "2024-03-12T00:46:06.078462584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:30.308288443Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:30.308288443Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:30.308288443Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:08.069852926Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:06.18555576Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:06.993811329Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:06.993811329Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:06.993811329Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:06.993811329Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:07.076720674Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:07.156824471Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:07.266984689Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:07.298368503Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:07.346409368Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:07.356208481Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:07.356208481Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:07.965956635Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:08.086792896Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:14.914694308Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:14.914694308Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:47.153200475Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:47.236696913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07bbd89cd181761fde72ddcf9318c9871c105da00bd52744d7437907c33deee0",
                    "sha256:d17e9b189c1a5a4c64d7870b7b9a1a0110e63eb6451629f2c92b5050c6b76690",
                    "sha256:d974555cad55706dce172322835601f67d07a2a479c94ec11d3b8e19550d8af8",
                    "sha256:381e1d974890c3063dd43e21beabc70acd6b1058fc1156025d8b92bcb2e9901e",
                    "sha256:43be4b47a746357a75b855c0bd4317711b4532de73eca21a415c89793c6a3387",
                    "sha256:d192c50f88ea8dffb41cbcb09244b4a39cf2f100adc6f3a89f426ed982043f30",
                    "sha256:b92fc39dc5c793eba74b83506c3e55b3e226e250c3119564769ea02500aea19b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6a7ca6e600a0aa1c22047176d2f31aa48e320e445cd71b1ea0038749408a161e",
                    "sha256:c3a4615cd0d94c547336c2f41f79bbab4d18713c36e57678508ec33e0fb630fd",
                    "sha256:5ae45b54aa1f320b18dfbf523afc32a85cac30397637ad69e150eb031dfa678e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:dbb22bf5e1c40b9171bce7d12bbb237ba1551d3f8e4f4ff0b25e777d10e30c32",
                    "sha256:9ce4ba3ffde1128c55273556122e23310a0148c7076182e97bf43759a098c951",
                    "sha256:9e3c25624645d70068136006c27df5a83464e887a47a14715d189d8d1f4d0f72",
                    "sha256:89a81ad7108e66435f10fb1e7e98ea76cb22084de36b6665f3b75186fe8d3f75"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:30.987958326Z",
            "history": [
                {
                    "created": "2024-03-12T00:46:05.707971696Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:01e6303e5bd3d7bb8200a616ab1d931421cd756c837936b3f897727814cb89c3 in / "
                },
                {
                    "created": "2024-03-12T00:46:06.078462584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.11531727Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.11531727Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.11531727Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:16.626552183Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.01177144Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.616768704Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.616768704Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:16.616768704Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:16.616768704Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:16.698280163Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.772235781Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.896379269Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.906740466Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.915608611Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.946554518Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.946554518Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:17.493922103Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:17.605909111Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:58.72997851Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:15:58.72997851Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:30.899881693Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:30.987958326Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07bbd89cd181761fde72ddcf9318c9871c105da00bd52744d7437907c33deee0",
                    "sha256:c2085f329c3cca62a0c600b9ba4a733a0b33d040ecbf4de1d7ce01959c479919",
                    "sha256:4c745b9e5ff78d1d9fc37d4833b50d0f9c2447dd800d3d026450c39f8ff74e4c",
                    "sha256:68f99f242f279803c6fb8d66fcd1b51cbb028ff21fe54faf44ae85b1d4743839",
                    "sha256:5b49272b856dd4b79e288a48f746ca47d706014f670b8ebf34c87e731534b4b7",
                    "sha256:119a82bcf0bb432117e542114491827ef347c71ee6c2e4e8e036bd61afd6c140",
                    "sha256:c84a449f20482b8f9ff9459a3b232db6daae72c1140cd3522fc4a5eb0ab1d82b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1bffe48d22eb41acbe7cf17bc40cf1d9dcae8f14ba4e4bcd236e9e4347cbc13b",
                    "sha256:deb495121f51277a1d6dc88c2c84e7f802ffd6fa9255654e9ebc68d60645d792",
                    "sha256:71d5320d34b1168dee5b754d0d4e2ba7da8d1ae34fb9f197ac9aa04cb5abaa72",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:59b0a66b819c5ba6adc4c076b9625c4df3ee147a8c9715e1f31b9b955e022089",
                    "sha256:3aade2f239b06d36b927309a624282e0a808765634ac965bbc9894180dc994ad",
                    "sha256:a643b2d077655d611650786eea8672ab8c5ff4045bb4572080e357b286b128bd",
                    "sha256:bf7c71a638529eb20c6ba91cd1f71c40b7130118e7f405379dd517932c7b11ef"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:21.459185085Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:06.74670097Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd84662eb5c566f361c169149ba683475c50ddc528270daf67d40c8e98ed12a7 in / "
                },
                {
                    "created": "2024-04-24T04:11:07.11563544Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:45.809776659Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:45.809776659Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:45.809776659Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.066819565Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:18.920158375Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:20.089821396Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.180293941Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.297773545Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.306398153Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.314409136Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.339418308Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.339418308Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:21.093856096Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:21.208979982Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:49.240536611Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:49.240536611Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:21.377651972Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:21.459185085Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dccc8e6afcd181b24eb0b68b1c1381436dd209e768d16a34564ddac1a3fd75c9",
                    "sha256:b68528658e05ffc98d8dcfed1bc08af5f6c80aee662bacad115c6e81e646b02d",
                    "sha256:e680b67f6e2e37636a3810df963b97612febef96b17a1a83c71bd42d8fc83a46",
                    "sha256:e16849ebf7aa27328e38161674734295b43eb6b807b0c23f8c684ffc44aa4b68",
                    "sha256:280367c9a37e3236a7d439c5093ab121093a31931c3fe70f0c287ab05a9ce322",
                    "sha256:5ed22cba7aa9002c98a9a906a94aefbdee2a3d1d545f4695f6e8a6d25a81694f",
                    "sha256:2798d612330c766827116cc001cff81155fecafed480594a43c5c96eeabca015",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8eaf6f4c245a14e422c66a43cd196dcb9dd011cac75ab8772cdb502332b9326c",
                    "sha256:9738a6d816dbd2199fa0e779518f059e5052709ea0eb884d7cabe97c15c42f70",
                    "sha256:ce7c63474d5cd9357a22f6f4927b840466b27125915c27b4c1d3d1fbdfe3d909",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71880a6d135176b5ec3eaf3e468da95421047a70462246357f5a99e837607051",
                    "sha256:ce179255d7840a153ae7efdc0172adbfa1aa046ab0df45878b0d5a32629dc952",
                    "sha256:506a3212ca96adf15d62eb32ad4a2573741f4d54e4f5d73014b7f426aa4b65f2",
                    "sha256:7ed542a87d6c49903fe24a6537bad37596348fb54437843c0d65371241500a8b"
                ]
            },
            "variant": "v8"
        },
        "buster-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:59.975182339Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:06.74670097Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd84662eb5c566f361c169149ba683475c50ddc528270daf67d40c8e98ed12a7 in / "
                },
                {
                    "created": "2024-04-24T04:11:07.11563544Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:19.638450997Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.549934048Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.629066055Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.741959901Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.750514997Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.758506762Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:21.457163607Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:21.592600612Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:23.218792487Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:23.218792487Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:59.875968449Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:59.975182339Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dccc8e6afcd181b24eb0b68b1c1381436dd209e768d16a34564ddac1a3fd75c9",
                    "sha256:39ca7c242be0ea6bd197d83f318c319ec9339c72dd98edd9c6be27f4c9a2336b",
                    "sha256:c5516df564cd16e10d84cf5d24b64295b1ecdaef53f8f05bea94bbd390079ae1",
                    "sha256:a549fc4249cd27572a3b3064ea14b8e909a07cfc4e9dd8d6d39100579978c1c7",
                    "sha256:716a0add12a51c3e2bd20c03b488420bb169916ea5bfaf23453afc7d132a36c9",
                    "sha256:38d69d87aac50f95e6e1c9017ed000b305bece9f2c7313144d743a110d0f8ec0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:81404df39f5b136b6e8202bc2ab80a602f8a862a0fefd3310a9f63eebbd22ca4",
                    "sha256:20b495f7e8f7f614a200a027bde0ea84be7f4242950e1e64726fba48678a1806",
                    "sha256:84668ead4d5526ea42d74565244059204af40d4212d6e322562285628824c139",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c67a9035c17fd6b4f86d70ce1ac722142ed08ff01a980a623ca86a2249de75cd",
                    "sha256:a8ec13f1edea3d99cd9e41f93d788d8ee317fc4840d066e3d32fbe7e9dc1bdc4",
                    "sha256:c6a2c66859671d272b76829b3ba065f9cabf622a2d7f5f782c1ed7f23105b68c",
                    "sha256:bb7b2f1a4b074f230192d7cb74261b2a73af192ac616468b10082c8e8386b040"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:14:58.603287308Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:56.988274449Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:de90e50e142aa92c29d5128e1cd025fd5c5b91f879a19a06a8b49451a4e6afb9 in / "
                },
                {
                    "created": "2024-01-31T22:44:57.403511419Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.807489748Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.478585285Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.556229271Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.68311975Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.712162198Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.763984121Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.772790466Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.772790466Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.381935653Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.506598635Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:14:58.50138296Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:14:58.50138296Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:14:58.603287308Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9d885bab887af47b9c3317a8a0e9e9af888daba2b6c8434b01c923eba48482c1",
                    "sha256:235b27c5214e3fe2bf3908b99eeaf3944e9db6c30afae6739c6e7a1ca2d98428",
                    "sha256:9bf4ba3924a9c7e50df5c96156314f1d81683e8bae5a096710f1bf4f89f966c3",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac35dd0c10fa3bfaeb1b0539aa6073cadb37522da44b0ca385cced25649dac09",
                    "sha256:1ba81ec73597fb7f098fbfc4af6e92abf114b18ac40eaf8eef6b4306ea458a17",
                    "sha256:b8c6b848f95849b94d787c742a8114ee9120ca66265da9f899a2d69182b9439e"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T06:47:35.363958288Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:56.988274449Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:de90e50e142aa92c29d5128e1cd025fd5c5b91f879a19a06a8b49451a4e6afb9 in / "
                },
                {
                    "created": "2024-01-31T22:44:57.403511419Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.807489748Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.478585285Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.556229271Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.68311975Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.712162198Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.763984121Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.772790466Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.772790466Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.381935653Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.506598635Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:46:59.885419045Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T06:46:59.885419045Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:35.259791165Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:35.363958288Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9d885bab887af47b9c3317a8a0e9e9af888daba2b6c8434b01c923eba48482c1",
                    "sha256:235b27c5214e3fe2bf3908b99eeaf3944e9db6c30afae6739c6e7a1ca2d98428",
                    "sha256:9bf4ba3924a9c7e50df5c96156314f1d81683e8bae5a096710f1bf4f89f966c3",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac35dd0c10fa3bfaeb1b0539aa6073cadb37522da44b0ca385cced25649dac09",
                    "sha256:b9a56aa7cd26aab22bde72e283cce780c181afa58dd43d780da12d0e419d28f0",
                    "sha256:ee6247186acec966d503de6df6646bd81e804e559fd4b85b14956c18660f7c92",
                    "sha256:5c53da8f44b62f5479e731801cd864b70fbbd58224d875d663c28386af54df1b"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:10:08.270088424Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:49.5791897Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:56f9fb4bf0b803f4553b7fe668c34676467e662e3ab02af10e815a93ebbde1d6 in / "
                },
                {
                    "created": "2024-02-13T00:41:49.91043912Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.185468205Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.185468205Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.185468205Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:33.341738469Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:34.06965774Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.148051312Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.255785689Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.265654245Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.283258079Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.311215271Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.311215271Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:34.921396647Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:35.056925015Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:32.105807253Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:09:32.105807253Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:08.16735658Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:08.270088424Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1d7e79c78824d3d36e78d14b1c53b639ec71e51d619cc32e58087307c7302b08",
                    "sha256:14d1b16b913edcb6e374ad911eb8a78c95fc068e5a679810dd57abc6253eb4fb",
                    "sha256:96ab9d2c17973eeef04268583375793e136fafd5eb03eea349b25f42616df5ad",
                    "sha256:5d3f391e169dbaca51d1a3a645fca5eecedfe8bfbd5180553be4546776a47ec6",
                    "sha256:aefd933866e4321e224ef844e38f5adf5a8887aaf4a9eaa98a656554bb7ff8a4",
                    "sha256:1eab6fb8eb3d730ae5093688afa5ba3ab43f046408eab222d027b66f502df98d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:398934f37feb07325fbfff2a1f0904f40919bf8d63582ddff8f1600d93d4e0a5",
                    "sha256:e9ec797cfcec4be78cec5aac408134f03bfa55c194fb540201a3d71425e896b2",
                    "sha256:705ae3611f17b2fb0cc363de116e17074a27187b8a3155e1f2a589a6f383b461",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b561a4c5da54fc916c73fa182d8dd0eb904033e917d66d4682cb445ecdddf42d",
                    "sha256:c1e7fd8023b44f9107546393ce8349be9f8a9ba319fe3064aeee79d81936c61c",
                    "sha256:2503051c55d12b79c613ab3d4459cd11bc2e1d7f6d6583d9e96d593fffa38aed",
                    "sha256:5b9504d29267b79fde6b16fbaafff3d8aa2ad62e6129faf66ab2526f202416db"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:04.043126699Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:49.5791897Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:56f9fb4bf0b803f4553b7fe668c34676467e662e3ab02af10e815a93ebbde1d6 in / "
                },
                {
                    "created": "2024-02-13T00:41:49.91043912Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:53.398035992Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:53.398035992Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:53.398035992Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:31.92811446Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:33.001212821Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.09994039Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.213963358Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.225289874Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.25981882Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.270035018Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.270035018Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:33.96930786Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:34.10268171Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:27.640698521Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:27.640698521Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:03.942460896Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:04.043126699Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1d7e79c78824d3d36e78d14b1c53b639ec71e51d619cc32e58087307c7302b08",
                    "sha256:959f47d59254072ce02e886b00cde7d294b2d7981aa4984cba5288cad830ba72",
                    "sha256:d17c410fa6f698a182a45cc74212055a61b521874fcef1af2f39e341ba6bdb83",
                    "sha256:0cd206a03975038b1b7bb7dd5f9cf4daac0a33a8e97a3939383e637e9a1be45c",
                    "sha256:4a9d5e6ecdaab0bf5d5768ff2bc1c0c7afcaab2873c4405bcad103e0f1e2d952",
                    "sha256:891fc4fbd97a494a81189d0a395580075c87502de3c65992e66ee690a6b370b0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:122e109ce76a1397a3342083493ebf205d24923cce42dbc32cce0516dd64fc7b",
                    "sha256:0ca013a72afe6ffa351b48a50a76ec9cf4bb516aa2cb125f4d20af4d57a9fd49",
                    "sha256:f9e1994a5e113cdad592781be8287712029653c9ddb1c9122c6422cb7128f3ee",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:27cd25e8c7f418d7b31d552410b9319e3e873281224cb5bef4e16b86692d65b3",
                    "sha256:93f03e9d40fa08eb6ec47ce21df57fdc22ffa667c6f3914d4c88229da11bd56d",
                    "sha256:d87dfe2a82bd55c5ab9f016a72c840dbcdb5f3242c96326d3baa7e911198e188",
                    "sha256:fa4d977d1b35c366044f941ea5e751ef811886d6ec9425205eb781e7e210aca2"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:39.421672333Z",
            "history": [
                {
                    "created": "2024-03-12T00:46:05.707971696Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:01e6303e5bd3d7bb8200a616ab1d931421cd756c837936b3f897727814cb89c3 in / "
                },
                {
                    "created": "2024-03-12T00:46:06.078462584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:56.76409807Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:56.76409807Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:56.76409807Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:35.720788962Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:36.338217232Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.432805206Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.551892522Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.562123104Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.604765219Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.615520541Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.615520541Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:37.159112058Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:37.282597476Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:02.701250616Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:02.701250616Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:39.315959869Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:39.421672333Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07bbd89cd181761fde72ddcf9318c9871c105da00bd52744d7437907c33deee0",
                    "sha256:960983cc0a3bb2f61698359bb8f9cbc8fbd2766293219d50b4354eefe3c4d3e7",
                    "sha256:29a6bcb6f166ef3ed97d319b2e9bf37a75f247e5ca1e5a847bf50ef37d9777a5",
                    "sha256:3c33bf028bcdb28b31c820c9f35fb1227bbcacc496899206b89ec914194e8cc7",
                    "sha256:c9a6c8eb8acb5842ce755b08beb4b8816f965da772c45a1f95641bb5fbc19086",
                    "sha256:95fa78911b8769bf8a9394cba57919630c544b1f8194fe33896cfeb0baa8c657",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:809baad34543e9ce78ca187c6bc44c7c886cd13966040c3350522ebd7b57c55d",
                    "sha256:7603ab81332aa002a982a0ad5a3890b62a9b0836867b7d6c5a0a9055784409d1",
                    "sha256:76772dfe739308052c1cf53ced9def39c4631cc633f8c9d7d33f4c120220479f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c58a19ddc1136bafacc7ed08d32fbf9722ffc37b641b7f79a35b9e6234d16938",
                    "sha256:1a214c3456c170bc7577a0e5fd1b339d67ec57fa0744e437aab6adbabaacbd0a",
                    "sha256:a482edfb82ff7f309abbfcd4f73fec0e9a52507c4045e74cb3f85249440fdb18",
                    "sha256:be8825ec98a7eb4f775d6c9b1a4def37009d38cef179146cff41616befdf58b0"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:24.12492749Z",
            "history": [
                {
                    "created": "2024-03-12T00:46:05.707971696Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:01e6303e5bd3d7bb8200a616ab1d931421cd756c837936b3f897727814cb89c3 in / "
                },
                {
                    "created": "2024-03-12T00:46:06.078462584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.01815645Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.01815645Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.01815645Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:26.479258758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:27.43638791Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.531691693Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.649243392Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.675293651Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.723390648Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.7355834Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.7355834Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:28.34054638Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:28.467024475Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:47.942206702Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:15:47.942206702Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:24.027355917Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:24.12492749Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07bbd89cd181761fde72ddcf9318c9871c105da00bd52744d7437907c33deee0",
                    "sha256:8e273a8f93effd59553a4a31f5c7229ec2e16e01444284ea97daf932ab9d0d63",
                    "sha256:8c0566b447b5ec12362ff50ba0ce88967215d95b7e9f2ad334c603ecdb8435ca",
                    "sha256:7834afd8a758b2941d565a3592f4ab65a4cd2de41f19769132d0e357e882f15f",
                    "sha256:b4ea6ac278174f2a0b223d3ccc6a797ac2f091da944936e46544b1c48318f459",
                    "sha256:cd2b62f7a338d065f76532c443babf37cc00b3a4963490a61293cc4ef1ea743a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:60ccadccf558f03e50caaf1f2a9d6d741d20f83c71e794e1a9241c6f2315ee5d",
                    "sha256:9f919f5997f4e9927817d9b057abfd137f52c6764c0cada86333097be36d4c28",
                    "sha256:0a531293b84afc04eab37e450f83f367919d1b6a7215a0166673c1684ffa35e1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2a4df97b13cdbcb05d806c48aa3c03eeb9029bbabc4129c1a532ce09894fe13f",
                    "sha256:295920771c24025862f550117211e86b8e05d9eb7a038dc55fcb8d9a6b22cbef",
                    "sha256:435e5c927ef63eabe59bfb64e90536bb31b7fc14e32e205fc1beb6f7d376dce6",
                    "sha256:847ff7c2b827c06c572dd6784f5e585748c3e58e324f1b90b65d9705da4977f7"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:59.975182339Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:06.74670097Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd84662eb5c566f361c169149ba683475c50ddc528270daf67d40c8e98ed12a7 in / "
                },
                {
                    "created": "2024-04-24T04:11:07.11563544Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:19.638450997Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.549934048Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.629066055Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.741959901Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.750514997Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.758506762Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:21.457163607Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:21.592600612Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:23.218792487Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:23.218792487Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:59.875968449Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:59.975182339Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dccc8e6afcd181b24eb0b68b1c1381436dd209e768d16a34564ddac1a3fd75c9",
                    "sha256:39ca7c242be0ea6bd197d83f318c319ec9339c72dd98edd9c6be27f4c9a2336b",
                    "sha256:c5516df564cd16e10d84cf5d24b64295b1ecdaef53f8f05bea94bbd390079ae1",
                    "sha256:a549fc4249cd27572a3b3064ea14b8e909a07cfc4e9dd8d6d39100579978c1c7",
                    "sha256:716a0add12a51c3e2bd20c03b488420bb169916ea5bfaf23453afc7d132a36c9",
                    "sha256:38d69d87aac50f95e6e1c9017ed000b305bece9f2c7313144d743a110d0f8ec0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:81404df39f5b136b6e8202bc2ab80a602f8a862a0fefd3310a9f63eebbd22ca4",
                    "sha256:20b495f7e8f7f614a200a027bde0ea84be7f4242950e1e64726fba48678a1806",
                    "sha256:84668ead4d5526ea42d74565244059204af40d4212d6e322562285628824c139",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c67a9035c17fd6b4f86d70ce1ac722142ed08ff01a980a623ca86a2249de75cd",
                    "sha256:a8ec13f1edea3d99cd9e41f93d788d8ee317fc4840d066e3d32fbe7e9dc1bdc4",
                    "sha256:c6a2c66859671d272b76829b3ba065f9cabf622a2d7f5f782c1ed7f23105b68c",
                    "sha256:bb7b2f1a4b074f230192d7cb74261b2a73af192ac616468b10082c8e8386b040"
                ]
            },
            "variant": "v8"
        },
        "latest": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:08.087614205Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:34.112858146Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:34.112858146Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:07.988069734Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:08.087614205Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:d4bbcc8f869a75e833ac37295683ff757885b657ae796bc98357210980095594",
                    "sha256:29b1c7656d519adc330ddcbc2913b0307fa73e5096583d1e912738f7d85f2fc2",
                    "sha256:d1d34c64d649bbd1a1d72a9f117dfd5d1e2e4b4a60d2a74feda727cd4a56a412"
                ]
            },
            "variant": "v8"
        },
        "latest-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:18:44.882230645Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:44.770203593Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:18:44.770203593Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:44.882230645Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:fce71d005ef1399b88bba5c1a2e99ea28a0ce90e97c8986fab0819ada0f2f5c8",
                    "sha256:dc83caa3065b51fa87d3869d88a7a7a04bb2784eb40d46dab9f5883940b0831c"
                ]
            },
            "variant": "v8"
        },
        "latest-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T06:47:42.570096393Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:06.300803927Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T06:47:06.300803927Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:42.463708144Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:42.570096393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:64590090797bd58dea1d90f9e1915ab439819132db9dc65018f0bf614a53b415",
                    "sha256:8643a63c5adf2211238885138dff45c347168404cdfa26b871ba4f6fcb3a12a4",
                    "sha256:e9068358b42039f502a659f8f321f5491648754089737d95ea2b4a04c50a00b5"
                ]
            },
            "variant": "v8"
        },
        "latest-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:10:02.845968819Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:37.612406454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.235239371Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.327380141Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.444407777Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.455821747Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.489249886Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:39.054577625Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:39.175091463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:28.547589138Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:09:28.547589138Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:02.717733624Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:02.845968819Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:3667705b92b777b9857445986385fa3544fe745de824ed9e48b74d48e233a73b",
                    "sha256:a8f393213fd8f42444b9081c3d25da37b97dbec4b8639fe0f0e3a7589d5440fd",
                    "sha256:9e491949c039a6555bfc9e8d7edc810a1157e4de0e5a1c481e4a9da99f8dc49f",
                    "sha256:9d1103a6c6fb53d9a95de8b92fef5116bca54e0566ab3c9ba1697738c9c49934",
                    "sha256:34b6b50b96caed9ea8b06be9b87ec63932717d466f5059fcce4e49d0b8b1fe0a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:648567a88a80c3aedc7a65bfa28ed87413bf435dc5a1cb88738e3c5896c0c076",
                    "sha256:03d885cb57438349695f4729f2c71f343028df5dbb15b096c1d538eabb3058bd",
                    "sha256:d10c87bc3a1b034fb2d7a2b64156472e0744796c40aa33beedccda60556fa259",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d88ebe737a29be3e76f6b02f3591509f373fd4b840fb08406f33169dcd0cd78f",
                    "sha256:4e544689242b1ddfee0117efdb7784dd9f0d5a5229d50288e5ffe9093f5a3ddd",
                    "sha256:5f41562b508a5eb8852deaf68926bc8844a7fa67c46994326de693c002312c2e",
                    "sha256:cfc9295bad57e7a83e9d63812f222fdd1b91afd46e8e18ace4d1bfc465ac0af3"
                ]
            },
            "variant": "v8"
        },
        "latest-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:04.610475913Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.151462719Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.83609249Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.924579316Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.040114112Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.053934176Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.066241153Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:19.805586345Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.93208375Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:30.855836474Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:30.855836474Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:04.515184311Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:04.610475913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:0f12b4245fa0a3cc547f2a1e523735b954a9327e222c9499e29df367c992fc25",
                    "sha256:e718ad40e3c90a1cd1ecacf3a26fab120e1dea3923670a16a4c8ca50b6aa9d15",
                    "sha256:94c43fe224b59dec6cae014ab2c49387ad78dc326e460a610de6fc06495c0c1e",
                    "sha256:fe063efa4d53e9a11ecb850c83c6dd1b8b9cf17ec889889f949361d332a5b185",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f767c7f76af4a12cb0e1199b0fc93840a3e5a2f502f98489563422b710c7c82",
                    "sha256:eebaafdb21b5c124a4063b6c1f0639260a303dd72ba00c9ec5ad78515f70a2e1",
                    "sha256:8c39f39f8c6773437573033b4459016bd870d9bd6b9034b07c451bd5a636ff53",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:88062171c3eea1172e399dc542b1a51a8e61572ea372e1516f5b57248db85766",
                    "sha256:df991eaf76a1fb8207d621cf3ffb74ec9ab6750ec29fcb80a0d403b662089a35",
                    "sha256:911dc17feaa8a263b4acfc67851af4dcb67ff5042cfcf99d42b030ec8d7cfc9d",
                    "sha256:f8cb85032dd53f27f80a699d5ffc9261c0dc49b754f56a138ad5fed44e5874e4"
                ]
            },
            "variant": "v8"
        },
        "latest-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:44.164293131Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:13.879662253Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.586745871Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.670518036Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.790637458Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.799775231Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.830003625Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:15.53078113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:15.644511102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:10.092781961Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:10.092781961Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:44.054935167Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:44.164293131Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:ed4cf4bf4b8884bdd10c62b3d9f3f64dcad62f08c9184d6e8c4e3edd498d6ae7",
                    "sha256:e3ff77460733b5c70568a050c25cbfbba938cfb55a53dd793006cf80ce8cc1fd",
                    "sha256:769ee8ef4da51e9377ca4f5d7e5b438c1bac43f38546dfe5b6ddb3ae5fc17d03",
                    "sha256:2faf27c705413cfe35a57bebf1d6dc6e5fed15c26b907de4e87eb462c4c8203f",
                    "sha256:c057d9490c0d6264b7858e1b24696718ce0623763d48f86d0eab46db57cc6697",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7333a928fdb22e11f1eb14ab19de0aeece67b74f04ae6800a48f3626b6204619",
                    "sha256:7d1b2cfc6f4a702dbc3c9da3af6ce40ed072aea5b43739a0f749f0f5a410074a",
                    "sha256:1faec101bbd8a81f2c905ae2146f8736e838f567a8b2f856533f8c07e083cc3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1dc00d63c3226fece7e9b01c6df138f48bb6914b96abf29daae86c6c2331068e",
                    "sha256:7367ec19d8e9d3c036ac8c6b9b3f287f23f2bd038bea49482767206e46d5f753",
                    "sha256:44e1b05b27c7e40e9598b54e414e10f77f050990dd61b5214482b950a504a0e7",
                    "sha256:e948e987fda113363c940b0836b970ed56b2a1b736211caa5424ddc12512ef42"
                ]
            },
            "variant": "v8"
        },
        "latest-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:13.305582148Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.743482327Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.498252335Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.585989395Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.739473042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.787312463Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.797563821Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:22.394772002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:22.511272459Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:39.689825419Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:15:39.689825419Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:13.205414786Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:13.305582148Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:d04befff2a5273eded40c865c563f0d50276b31e32180679474e889fe080da1d",
                    "sha256:7b0c6c50c04ed7bf4b021ee99132e0366bf6ae4768e6a29e52e27fb6a1569aa3",
                    "sha256:2b57aa920cc2cddb5cf11eac876be5662fcb346e000afb2b1ced7b1295ed5a3d",
                    "sha256:9ad61a9af1dc63ddeb51e6fe9bbc82df2e37f1d0b967166d78ee356b54e2e32f",
                    "sha256:2011ae045dbd2ec46399c6e0e93d9cbef0dc64a181ee72a298737b86a13cadc1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71dc71c4129f2ba46a54c086463f9f61a15ea4ed70e3ad2fbf06fefc3ebda46e",
                    "sha256:46974ccfee6d4c0f3231897a3366bb38c4424b87355d0e626e0ae0d9fa0b7224",
                    "sha256:222ca016ec867e88cf844f487bab87a5460e34afed1ce08d1e7db271a366db23",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2af796bc84c5e90eb57e23c8d3adbf9050db0d14fa44a31e95248234ea6447a2",
                    "sha256:a86e4381ec328012fdc5825ec799cd4e80269f0996ef1b13d3cec9e194ade507",
                    "sha256:74bf467e78a3b612f36d62ee1ea8074fd962a4dd1ec7ff295193869bc0dafd68",
                    "sha256:81648437fd272fdfa048135a6611583de8e44ae6967fd03ff79b4a035de0e254"
                ]
            },
            "variant": "v8"
        },
        "latest-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:08.087614205Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:34.112858146Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:34.112858146Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:07.988069734Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:08.087614205Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:d4bbcc8f869a75e833ac37295683ff757885b657ae796bc98357210980095594",
                    "sha256:29b1c7656d519adc330ddcbc2913b0307fa73e5096583d1e912738f7d85f2fc2",
                    "sha256:d1d34c64d649bbd1a1d72a9f117dfd5d1e2e4b4a60d2a74feda727cd4a56a412"
                ]
            },
            "variant": "v8"
        },
        "latest-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:01.230957056Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:16.696930741Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:34.389505442Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.127106593Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.202265303Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.322213113Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.36866875Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.384433538Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.977590429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:36.10345642Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:31.595865058Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:31.595865058Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:01.149863194Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:01.230957056Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:8118046c0c69be9888f1d9d5a1b51d47233771e8007f0fc1d1568cea72987874",
                    "sha256:6ace3ce5da9d73ad77fff9a9e1ead05c66d546a2638f8e476abc42d746fb9e0b",
                    "sha256:ba5bac65ad77adaa77dd7e72342d46e864399bb8cb963120dce00cd432062872",
                    "sha256:7c9997e72fd0e9c0f80088aa1a8c1e9ec7d5791afc6a1d64bc776e96eebf96c3",
                    "sha256:44867f45243358733796350989f5375d99bd654d3ce177454b689c8a0b5e38e5",
                    "sha256:f8c6334654e615714730d1906c472133f0569d24ad6d225d8e56acb6bad41ccb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f8af0639919c6ea8a3c94e5a9d75d4eb902a69acf123be2ff1eacefdc57e0900",
                    "sha256:b00db75f11d6652467a221628e15d27c9cf656b13d5f39b57d2ae1456c812fd9",
                    "sha256:8de1b58a8c327d1695b4465972be024744539717d676ad520eaf73e2de6c6887",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c4416f328678a4224c0b75e9b7ba68e7ccde5da7a27e3c652247e42d3c8540fa",
                    "sha256:7bdf9aa41310a07ff1a6799b252299e2bacf23b11a755b799a68c2cff50fe02a",
                    "sha256:3badcaedacc51260961d73cf4d5a546338a7031e7e09f98226d068621b32dcc6",
                    "sha256:e3737dd23c2fa033b37f7ef5d5bee5e0a8f5481e46d21338ce1ea71f6e90f0fc"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:18:46.079046127Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:27:03.918436093Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.147151639Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.895859375Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.980508392Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.112265798Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.14030823Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.15151525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:18.718999272Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.843510162Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:45.992807391Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:18:45.992807391Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:46.079046127Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:98a8b5f61ea9c06c6ca5426a9b3fe983826c3213543669a8a869eb06b13ffde9",
                    "sha256:abf88002fbe7341686bbe52b32081a56454a64faf6b1aff81f25e877ea2d1eef",
                    "sha256:cdb57f4820cf792cf321bd24ad74790c4e443c0921841c200c7b4b3c3a80777c",
                    "sha256:e048235ea6afed524c6ffee9b267b41e34b7f5f8f446a015faf4d3a2dcec118b",
                    "sha256:2abfcfd44fc60e992fd3ab15cb28b4a70a6b06ca667cfbf5cc50438649b3e70b",
                    "sha256:4864885d65cc529f1b9ddd924b1142f47f61b3842eae08cc9ef2a3b4af8149b5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:db9b57190ddc50cfcb4e2e0f8d68f83cc68587d069f1d9d7da6fa9d5c9d265ea",
                    "sha256:6fa058d45ae7200f46f6472179d216e73556d98a0a5957f483d7dd0490768611",
                    "sha256:b32903eacd2484f955709867d7a2cb449fbf9765b6b59a8140984e57fc69756f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d6750bce19b22f81e30a090e28a497287094759dbba841d427ce35f360ae3362",
                    "sha256:ae030c75332136dd78ede2dad9d13c5744d424cba2a5baa35dfa95cab19b97c7",
                    "sha256:a3d58f5a8ed4f16726c81a476a96ee4cfa131052397002288c1f3a16e7608c54"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T06:47:39.910416837Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:27:03.918436093Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.147151639Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.895859375Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.980508392Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.112265798Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.14030823Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.15151525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:18.718999272Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.843510162Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:09.819155398Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T06:47:09.819155398Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:39.82306083Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:39.910416837Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:98a8b5f61ea9c06c6ca5426a9b3fe983826c3213543669a8a869eb06b13ffde9",
                    "sha256:abf88002fbe7341686bbe52b32081a56454a64faf6b1aff81f25e877ea2d1eef",
                    "sha256:cdb57f4820cf792cf321bd24ad74790c4e443c0921841c200c7b4b3c3a80777c",
                    "sha256:e048235ea6afed524c6ffee9b267b41e34b7f5f8f446a015faf4d3a2dcec118b",
                    "sha256:2abfcfd44fc60e992fd3ab15cb28b4a70a6b06ca667cfbf5cc50438649b3e70b",
                    "sha256:4864885d65cc529f1b9ddd924b1142f47f61b3842eae08cc9ef2a3b4af8149b5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:db9b57190ddc50cfcb4e2e0f8d68f83cc68587d069f1d9d7da6fa9d5c9d265ea",
                    "sha256:6fa058d45ae7200f46f6472179d216e73556d98a0a5957f483d7dd0490768611",
                    "sha256:b32903eacd2484f955709867d7a2cb449fbf9765b6b59a8140984e57fc69756f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d6750bce19b22f81e30a090e28a497287094759dbba841d427ce35f360ae3362",
                    "sha256:0bf2220a115bc1fe9db0e579b3b7bf340241800f8e260fe1fbafcc1aec57e83d",
                    "sha256:1658eacb46584ee5bab609e51003e4569805b1f316f109503eb46d62b97c78a2",
                    "sha256:4071becf3b80d59c15348af81bfba302d7de18100385ecfd3f99c3eed16f3bc1"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:10:06.714289637Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.852195309Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.038043115Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.780304725Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.857536001Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.973909727Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.984190839Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.039552477Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.048349925Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.048349925Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:48.621429861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.755642095Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:36.810568207Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:09:36.810568207Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:06.622305087Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:06.714289637Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:065c0c8ee90b6a88729dcedeec49c1a8f45ba003549af640e2810d4fc6ff3bba",
                    "sha256:7095239a88b7763efeed9d9b9e966c78d55dc94e12d326381f3118139e438f96",
                    "sha256:4ca5d10fb0a0db28f3e65e6dbf1cdb692555a729a52a09e593e5af2ef4b4506d",
                    "sha256:ae1f08cc91ab849fb2eede5fb48afbeab9fed4053546cae3fccc599069c44210",
                    "sha256:7464529b9f9f9be667fe699f5f15afd6d8b7a38ed1073dadedb0e860a29d4c76",
                    "sha256:4402f591566cbc4f1a643b3ee7806fa2ef88ba4bf941aeb37a165c8682ef904f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:423e14c8252e188d33a5ec559ff6d28ea1a0821f704c1475e338975276f812be",
                    "sha256:b85b0d37ae706ac760dbc383b8ec12bac3bf23e56777b00f4e4a929d7e2b8eb9",
                    "sha256:23806f2c24d9bb5468f5003446742e59aee46f2da7a644c4a87138b489baafd6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:633033d186aafd501aa9434c8d5cc3844afcc5a42062655071dcc140e45bbdfa",
                    "sha256:572ba6786850ed16b316a14628df2596ae8413724ec49ff0b12a59357ab1f84c",
                    "sha256:bee2f15aa3244c93b64487399e5c5edff6c4412f61a3e5a7fd6d3ec71fd165db",
                    "sha256:3d1b1ce56b0f687e33841ea970fa1541b5f29e995b1e59c3068107d5dd05ede9"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:02.532272585Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:26.423694552Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:38.364945598Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.086463913Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.165507188Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.277193879Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.286148976Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.294528672Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.328288018Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.328288018Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.90114596Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:40.025798109Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:32.751411021Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:32.751411021Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:02.441261564Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:02.532272585Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:e99690ff6bdf5117585c68a1f892149696d79cf3ed0c61661f9122e0a88e36e9",
                    "sha256:9a0c2b9b1cdbbc0db2dae309f62fd8631c29412d2f4d46032aa03ed409e35d36",
                    "sha256:0f1d8d6a7257621c084288626d17e7f27bd6147303a5c9158c529e401dbbed38",
                    "sha256:675bb67cb795bbe75be175fb93b12dabbc8607b96623ce313d4666b233f06a6b",
                    "sha256:e86a967f2b4a1e0de82f8149600bda5b07d3cdc443bf2a786285f5bd20df93a0",
                    "sha256:fb4b9b650fe26b6b6160d748da63edf5ac57dd26fcbfe3c63b4e7aeaf1992984",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5ebb16a9051aaf2b8497bbd9fd2f6df2355739793782a531d3de32b7328a50f9",
                    "sha256:767598c00b3c0217baf8b11080fdec7f4a087779a4c9022f53a753bba9092cf3",
                    "sha256:9e147bca8fc5daa8c6f66a786d5dbacbb9e45c22e9dd63e75c05ba9e572f0893",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8a7479558835f4c2f031e76f4929e630796da2c0bcbb6d7d10342c603b21c215",
                    "sha256:21e655419992d61803b8965428ddc342fab48c8190c017e0408665d840ccf9fc",
                    "sha256:14b9f5282d9b5349fcba51c63e1f427b8040fc72e5f23129895b58f4a2a4c817",
                    "sha256:7b9729620d6aa66b011b674349f15fa786e09543d870b8e4b9d08453bc782654"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:39.974497238Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:24.953165088Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:39.889589426Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:41.066579567Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.143975176Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.264080976Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.273232403Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.300416726Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.309131727Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.309131727Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:41.947858824Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:42.063596406Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:10.554777306Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:10.554777306Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:39.891408592Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:39.974497238Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:86b0ada2f7f14805b83f2cfb8ef1f8a73afde8caf6c3f049cc3a11383864786c",
                    "sha256:ebc7a54252402a1816bfc35b5446dce363bfd6c5935ac7904fd329ac20bedc1a",
                    "sha256:a15a838560110aaa53aa3ba5694c4e6892e26f88e6b6d56ee689f97ecedc2a8b",
                    "sha256:571583e4c8c85d43870ac914ded5e81b0379d26dbc0a89f2b103ec5b0457a6fe",
                    "sha256:43f682e9e440b8bb7a3033c22d474f4d2c8e92fee462e107968253af616969f1",
                    "sha256:071f7b191aee9717a549ccbe52d8d7c394cb2751958451d6651e70c115482c7f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b291a6c1c9db3939164fef977dd8444e55920eb727e821275ccc19fd49bf7ca3",
                    "sha256:de31973b5af7dc7fadcaff9255f7cefff4c5748e53a69443662ecb0b5016f899",
                    "sha256:f71149996de278238e180a198943d47b663a52230e4d93ca1f0bb288c786af73",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e03e0a1d273c844ac66b77716b3e146d11d30bbf606dd7112bff99a367ee4b8",
                    "sha256:4f51d0c098a0c4c3c8ac3b6c985fa5280531bc6afaca88da37c86c5c18a65820",
                    "sha256:9ef1abe918efdfd2668ea3eca2d4b7d4d31ddd8e4dbea13fb23bba3c3aafdff9",
                    "sha256:622f5750b7ab9ec3204042c6d37cf01da0e85d8ab0cfa701784d800e5e8137d4"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:14.381556338Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.291405322Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:31.999296481Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.6904503Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.771880783Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.881097501Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.892466156Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.930855119Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.942378892Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.942378892Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:33.515849881Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:33.633832814Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:44.338109945Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:15:44.338109945Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:14.291705234Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:14.381556338Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:56930b5dcad29e3311f6fb04ca615d7972a86bc1605e909dcdff8fd30258d045",
                    "sha256:756ba66bfc98a2afdf1ab75a4b6b4cfd056ccca172e3d8ee22390633659e3646",
                    "sha256:2b2f2eb87ce4100061a4f8f0873e1cfe881db0acff0d960c88765998f5c4f08e",
                    "sha256:9365ffcd553c34ba8db338105ed7643841e549d4ab9d6448ec58b0841352c1ef",
                    "sha256:b7340983b3a28dc104761b6982e5144961574b77477953b0607217311f953be6",
                    "sha256:114f170d8518dede364e1e325271c4f61d1c4f36d6ff064edd93a1069a1002c8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d7f11ca0dbf06b4b9921916c7a573d8d2da3b11a25006f08b8de60cab52656e7",
                    "sha256:3e83e4f4156b585c92569a9d80f258df9d9aaab0b3556c63e3a05e75d52b452a",
                    "sha256:aa503e523bef1a7611c8f0e03c23221df60a969fee09888e9fb791579cda1da4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f342a44a10739dfa4ae700c7f5dd38640608e5354614face55c827e5785bd034",
                    "sha256:0c3200aa34219ae2b6af150f0f4d6ffceda69d9d718a9151a41af83deea94b5b",
                    "sha256:3eea1aab6a7050afe9ebc423d1bdbdc4290ae99f8dc4aa475f3b3a62e77f7d55",
                    "sha256:411cbfdbb51f97d8930c1bb08e5781b4361f100495918d31d998c0e27cd998b1"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:01.230957056Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:16.696930741Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:34.389505442Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.127106593Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.202265303Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.322213113Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.36866875Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.384433538Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.977590429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:36.10345642Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:31.595865058Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:31.595865058Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:01.149863194Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:01.230957056Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:8118046c0c69be9888f1d9d5a1b51d47233771e8007f0fc1d1568cea72987874",
                    "sha256:6ace3ce5da9d73ad77fff9a9e1ead05c66d546a2638f8e476abc42d746fb9e0b",
                    "sha256:ba5bac65ad77adaa77dd7e72342d46e864399bb8cb963120dce00cd432062872",
                    "sha256:7c9997e72fd0e9c0f80088aa1a8c1e9ec7d5791afc6a1d64bc776e96eebf96c3",
                    "sha256:44867f45243358733796350989f5375d99bd654d3ce177454b689c8a0b5e38e5",
                    "sha256:f8c6334654e615714730d1906c472133f0569d24ad6d225d8e56acb6bad41ccb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f8af0639919c6ea8a3c94e5a9d75d4eb902a69acf123be2ff1eacefdc57e0900",
                    "sha256:b00db75f11d6652467a221628e15d27c9cf656b13d5f39b57d2ae1456c812fd9",
                    "sha256:8de1b58a8c327d1695b4465972be024744539717d676ad520eaf73e2de6c6887",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c4416f328678a4224c0b75e9b7ba68e7ccde5da7a27e3c652247e42d3c8540fa",
                    "sha256:7bdf9aa41310a07ff1a6799b252299e2bacf23b11a755b799a68c2cff50fe02a",
                    "sha256:3badcaedacc51260961d73cf4d5a546338a7031e7e09f98226d068621b32dcc6",
                    "sha256:e3737dd23c2fa033b37f7ef5d5bee5e0a8f5481e46d21338ce1ea71f6e90f0fc"
                ]
            },
            "variant": "v8"
        },
        "latest-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:08.087614205Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:34.112858146Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:34.112858146Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:07.988069734Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:08.087614205Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:d4bbcc8f869a75e833ac37295683ff757885b657ae796bc98357210980095594",
                    "sha256:29b1c7656d519adc330ddcbc2913b0307fa73e5096583d1e912738f7d85f2fc2",
                    "sha256:d1d34c64d649bbd1a1d72a9f117dfd5d1e2e4b4a60d2a74feda727cd4a56a412"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:18:44.882230645Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:44.770203593Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:18:44.770203593Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:44.882230645Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:fce71d005ef1399b88bba5c1a2e99ea28a0ce90e97c8986fab0819ada0f2f5c8",
                    "sha256:dc83caa3065b51fa87d3869d88a7a7a04bb2784eb40d46dab9f5883940b0831c"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T06:47:42.570096393Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:06.300803927Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T06:47:06.300803927Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:42.463708144Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:42.570096393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:64590090797bd58dea1d90f9e1915ab439819132db9dc65018f0bf614a53b415",
                    "sha256:8643a63c5adf2211238885138dff45c347168404cdfa26b871ba4f6fcb3a12a4",
                    "sha256:e9068358b42039f502a659f8f321f5491648754089737d95ea2b4a04c50a00b5"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:10:02.845968819Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:37.612406454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.235239371Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.327380141Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.444407777Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.455821747Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.489249886Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:39.054577625Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:39.175091463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:28.547589138Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:09:28.547589138Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:02.717733624Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:02.845968819Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:3667705b92b777b9857445986385fa3544fe745de824ed9e48b74d48e233a73b",
                    "sha256:a8f393213fd8f42444b9081c3d25da37b97dbec4b8639fe0f0e3a7589d5440fd",
                    "sha256:9e491949c039a6555bfc9e8d7edc810a1157e4de0e5a1c481e4a9da99f8dc49f",
                    "sha256:9d1103a6c6fb53d9a95de8b92fef5116bca54e0566ab3c9ba1697738c9c49934",
                    "sha256:34b6b50b96caed9ea8b06be9b87ec63932717d466f5059fcce4e49d0b8b1fe0a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:648567a88a80c3aedc7a65bfa28ed87413bf435dc5a1cb88738e3c5896c0c076",
                    "sha256:03d885cb57438349695f4729f2c71f343028df5dbb15b096c1d538eabb3058bd",
                    "sha256:d10c87bc3a1b034fb2d7a2b64156472e0744796c40aa33beedccda60556fa259",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d88ebe737a29be3e76f6b02f3591509f373fd4b840fb08406f33169dcd0cd78f",
                    "sha256:4e544689242b1ddfee0117efdb7784dd9f0d5a5229d50288e5ffe9093f5a3ddd",
                    "sha256:5f41562b508a5eb8852deaf68926bc8844a7fa67c46994326de693c002312c2e",
                    "sha256:cfc9295bad57e7a83e9d63812f222fdd1b91afd46e8e18ace4d1bfc465ac0af3"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:04.610475913Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.151462719Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.83609249Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.924579316Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.040114112Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.053934176Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.066241153Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:19.805586345Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.93208375Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:30.855836474Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:30.855836474Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:04.515184311Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:04.610475913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:0f12b4245fa0a3cc547f2a1e523735b954a9327e222c9499e29df367c992fc25",
                    "sha256:e718ad40e3c90a1cd1ecacf3a26fab120e1dea3923670a16a4c8ca50b6aa9d15",
                    "sha256:94c43fe224b59dec6cae014ab2c49387ad78dc326e460a610de6fc06495c0c1e",
                    "sha256:fe063efa4d53e9a11ecb850c83c6dd1b8b9cf17ec889889f949361d332a5b185",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f767c7f76af4a12cb0e1199b0fc93840a3e5a2f502f98489563422b710c7c82",
                    "sha256:eebaafdb21b5c124a4063b6c1f0639260a303dd72ba00c9ec5ad78515f70a2e1",
                    "sha256:8c39f39f8c6773437573033b4459016bd870d9bd6b9034b07c451bd5a636ff53",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:88062171c3eea1172e399dc542b1a51a8e61572ea372e1516f5b57248db85766",
                    "sha256:df991eaf76a1fb8207d621cf3ffb74ec9ab6750ec29fcb80a0d403b662089a35",
                    "sha256:911dc17feaa8a263b4acfc67851af4dcb67ff5042cfcf99d42b030ec8d7cfc9d",
                    "sha256:f8cb85032dd53f27f80a699d5ffc9261c0dc49b754f56a138ad5fed44e5874e4"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:44.164293131Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:13.879662253Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.586745871Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.670518036Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.790637458Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.799775231Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.830003625Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:15.53078113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:15.644511102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:10.092781961Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:10.092781961Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:44.054935167Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:44.164293131Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:ed4cf4bf4b8884bdd10c62b3d9f3f64dcad62f08c9184d6e8c4e3edd498d6ae7",
                    "sha256:e3ff77460733b5c70568a050c25cbfbba938cfb55a53dd793006cf80ce8cc1fd",
                    "sha256:769ee8ef4da51e9377ca4f5d7e5b438c1bac43f38546dfe5b6ddb3ae5fc17d03",
                    "sha256:2faf27c705413cfe35a57bebf1d6dc6e5fed15c26b907de4e87eb462c4c8203f",
                    "sha256:c057d9490c0d6264b7858e1b24696718ce0623763d48f86d0eab46db57cc6697",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7333a928fdb22e11f1eb14ab19de0aeece67b74f04ae6800a48f3626b6204619",
                    "sha256:7d1b2cfc6f4a702dbc3c9da3af6ce40ed072aea5b43739a0f749f0f5a410074a",
                    "sha256:1faec101bbd8a81f2c905ae2146f8736e838f567a8b2f856533f8c07e083cc3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1dc00d63c3226fece7e9b01c6df138f48bb6914b96abf29daae86c6c2331068e",
                    "sha256:7367ec19d8e9d3c036ac8c6b9b3f287f23f2bd038bea49482767206e46d5f753",
                    "sha256:44e1b05b27c7e40e9598b54e414e10f77f050990dd61b5214482b950a504a0e7",
                    "sha256:e948e987fda113363c940b0836b970ed56b2a1b736211caa5424ddc12512ef42"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:13.305582148Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.743482327Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.498252335Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.585989395Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.739473042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.787312463Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.797563821Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:22.394772002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:22.511272459Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:39.689825419Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:15:39.689825419Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:13.205414786Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:13.305582148Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:d04befff2a5273eded40c865c563f0d50276b31e32180679474e889fe080da1d",
                    "sha256:7b0c6c50c04ed7bf4b021ee99132e0366bf6ae4768e6a29e52e27fb6a1569aa3",
                    "sha256:2b57aa920cc2cddb5cf11eac876be5662fcb346e000afb2b1ced7b1295ed5a3d",
                    "sha256:9ad61a9af1dc63ddeb51e6fe9bbc82df2e37f1d0b967166d78ee356b54e2e32f",
                    "sha256:2011ae045dbd2ec46399c6e0e93d9cbef0dc64a181ee72a298737b86a13cadc1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71dc71c4129f2ba46a54c086463f9f61a15ea4ed70e3ad2fbf06fefc3ebda46e",
                    "sha256:46974ccfee6d4c0f3231897a3366bb38c4424b87355d0e626e0ae0d9fa0b7224",
                    "sha256:222ca016ec867e88cf844f487bab87a5460e34afed1ce08d1e7db271a366db23",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2af796bc84c5e90eb57e23c8d3adbf9050db0d14fa44a31e95248234ea6447a2",
                    "sha256:a86e4381ec328012fdc5825ec799cd4e80269f0996ef1b13d3cec9e194ade507",
                    "sha256:74bf467e78a3b612f36d62ee1ea8074fd962a4dd1ec7ff295193869bc0dafd68",
                    "sha256:81648437fd272fdfa048135a6611583de8e44ae6967fd03ff79b4a035de0e254"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:08.087614205Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:34.112858146Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:34.112858146Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:07.988069734Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:08.087614205Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:d4bbcc8f869a75e833ac37295683ff757885b657ae796bc98357210980095594",
                    "sha256:29b1c7656d519adc330ddcbc2913b0307fa73e5096583d1e912738f7d85f2fc2",
                    "sha256:d1d34c64d649bbd1a1d72a9f117dfd5d1e2e4b4a60d2a74feda727cd4a56a412"
                ]
            },
            "variant": "v8"
        },
        "run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:08.087614205Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:34.112858146Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:34.112858146Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:07.988069734Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:08.087614205Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:d4bbcc8f869a75e833ac37295683ff757885b657ae796bc98357210980095594",
                    "sha256:29b1c7656d519adc330ddcbc2913b0307fa73e5096583d1e912738f7d85f2fc2",
                    "sha256:d1d34c64d649bbd1a1d72a9f117dfd5d1e2e4b4a60d2a74feda727cd4a56a412"
                ]
            },
            "variant": "v8"
        },
        "run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:18:44.882230645Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:44.770203593Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:18:44.770203593Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:18:44.882230645Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:fce71d005ef1399b88bba5c1a2e99ea28a0ce90e97c8986fab0819ada0f2f5c8",
                    "sha256:dc83caa3065b51fa87d3869d88a7a7a04bb2784eb40d46dab9f5883940b0831c"
                ]
            },
            "variant": "v8"
        },
        "run-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T06:47:42.570096393Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:06.300803927Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T06:47:06.300803927Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:42.463708144Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:42.570096393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:64590090797bd58dea1d90f9e1915ab439819132db9dc65018f0bf614a53b415",
                    "sha256:8643a63c5adf2211238885138dff45c347168404cdfa26b871ba4f6fcb3a12a4",
                    "sha256:e9068358b42039f502a659f8f321f5491648754089737d95ea2b4a04c50a00b5"
                ]
            },
            "variant": "v8"
        },
        "run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:10:02.845968819Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:37.612406454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.235239371Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.327380141Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.444407777Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.455821747Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.489249886Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:39.054577625Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:39.175091463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:28.547589138Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:09:28.547589138Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:02.717733624Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:02.845968819Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:3667705b92b777b9857445986385fa3544fe745de824ed9e48b74d48e233a73b",
                    "sha256:a8f393213fd8f42444b9081c3d25da37b97dbec4b8639fe0f0e3a7589d5440fd",
                    "sha256:9e491949c039a6555bfc9e8d7edc810a1157e4de0e5a1c481e4a9da99f8dc49f",
                    "sha256:9d1103a6c6fb53d9a95de8b92fef5116bca54e0566ab3c9ba1697738c9c49934",
                    "sha256:34b6b50b96caed9ea8b06be9b87ec63932717d466f5059fcce4e49d0b8b1fe0a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:648567a88a80c3aedc7a65bfa28ed87413bf435dc5a1cb88738e3c5896c0c076",
                    "sha256:03d885cb57438349695f4729f2c71f343028df5dbb15b096c1d538eabb3058bd",
                    "sha256:d10c87bc3a1b034fb2d7a2b64156472e0744796c40aa33beedccda60556fa259",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d88ebe737a29be3e76f6b02f3591509f373fd4b840fb08406f33169dcd0cd78f",
                    "sha256:4e544689242b1ddfee0117efdb7784dd9f0d5a5229d50288e5ffe9093f5a3ddd",
                    "sha256:5f41562b508a5eb8852deaf68926bc8844a7fa67c46994326de693c002312c2e",
                    "sha256:cfc9295bad57e7a83e9d63812f222fdd1b91afd46e8e18ace4d1bfc465ac0af3"
                ]
            },
            "variant": "v8"
        },
        "run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:04.610475913Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.151462719Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.83609249Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.924579316Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.040114112Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.053934176Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.066241153Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:19.805586345Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.93208375Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:30.855836474Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:30.855836474Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:04.515184311Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:04.610475913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:0f12b4245fa0a3cc547f2a1e523735b954a9327e222c9499e29df367c992fc25",
                    "sha256:e718ad40e3c90a1cd1ecacf3a26fab120e1dea3923670a16a4c8ca50b6aa9d15",
                    "sha256:94c43fe224b59dec6cae014ab2c49387ad78dc326e460a610de6fc06495c0c1e",
                    "sha256:fe063efa4d53e9a11ecb850c83c6dd1b8b9cf17ec889889f949361d332a5b185",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f767c7f76af4a12cb0e1199b0fc93840a3e5a2f502f98489563422b710c7c82",
                    "sha256:eebaafdb21b5c124a4063b6c1f0639260a303dd72ba00c9ec5ad78515f70a2e1",
                    "sha256:8c39f39f8c6773437573033b4459016bd870d9bd6b9034b07c451bd5a636ff53",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:88062171c3eea1172e399dc542b1a51a8e61572ea372e1516f5b57248db85766",
                    "sha256:df991eaf76a1fb8207d621cf3ffb74ec9ab6750ec29fcb80a0d403b662089a35",
                    "sha256:911dc17feaa8a263b4acfc67851af4dcb67ff5042cfcf99d42b030ec8d7cfc9d",
                    "sha256:f8cb85032dd53f27f80a699d5ffc9261c0dc49b754f56a138ad5fed44e5874e4"
                ]
            },
            "variant": "v8"
        },
        "run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:44.164293131Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:13.879662253Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.586745871Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.670518036Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.790637458Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.799775231Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.830003625Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:15.53078113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:15.644511102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:10.092781961Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:10.092781961Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:44.054935167Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:44.164293131Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:ed4cf4bf4b8884bdd10c62b3d9f3f64dcad62f08c9184d6e8c4e3edd498d6ae7",
                    "sha256:e3ff77460733b5c70568a050c25cbfbba938cfb55a53dd793006cf80ce8cc1fd",
                    "sha256:769ee8ef4da51e9377ca4f5d7e5b438c1bac43f38546dfe5b6ddb3ae5fc17d03",
                    "sha256:2faf27c705413cfe35a57bebf1d6dc6e5fed15c26b907de4e87eb462c4c8203f",
                    "sha256:c057d9490c0d6264b7858e1b24696718ce0623763d48f86d0eab46db57cc6697",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7333a928fdb22e11f1eb14ab19de0aeece67b74f04ae6800a48f3626b6204619",
                    "sha256:7d1b2cfc6f4a702dbc3c9da3af6ce40ed072aea5b43739a0f749f0f5a410074a",
                    "sha256:1faec101bbd8a81f2c905ae2146f8736e838f567a8b2f856533f8c07e083cc3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1dc00d63c3226fece7e9b01c6df138f48bb6914b96abf29daae86c6c2331068e",
                    "sha256:7367ec19d8e9d3c036ac8c6b9b3f287f23f2bd038bea49482767206e46d5f753",
                    "sha256:44e1b05b27c7e40e9598b54e414e10f77f050990dd61b5214482b950a504a0e7",
                    "sha256:e948e987fda113363c940b0836b970ed56b2a1b736211caa5424ddc12512ef42"
                ]
            },
            "variant": "v8"
        },
        "run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:13.305582148Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.743482327Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.498252335Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.585989395Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.739473042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.787312463Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.797563821Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:22.394772002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:22.511272459Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:39.689825419Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:15:39.689825419Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:13.205414786Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:13.305582148Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:d04befff2a5273eded40c865c563f0d50276b31e32180679474e889fe080da1d",
                    "sha256:7b0c6c50c04ed7bf4b021ee99132e0366bf6ae4768e6a29e52e27fb6a1569aa3",
                    "sha256:2b57aa920cc2cddb5cf11eac876be5662fcb346e000afb2b1ced7b1295ed5a3d",
                    "sha256:9ad61a9af1dc63ddeb51e6fe9bbc82df2e37f1d0b967166d78ee356b54e2e32f",
                    "sha256:2011ae045dbd2ec46399c6e0e93d9cbef0dc64a181ee72a298737b86a13cadc1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71dc71c4129f2ba46a54c086463f9f61a15ea4ed70e3ad2fbf06fefc3ebda46e",
                    "sha256:46974ccfee6d4c0f3231897a3366bb38c4424b87355d0e626e0ae0d9fa0b7224",
                    "sha256:222ca016ec867e88cf844f487bab87a5460e34afed1ce08d1e7db271a366db23",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2af796bc84c5e90eb57e23c8d3adbf9050db0d14fa44a31e95248234ea6447a2",
                    "sha256:a86e4381ec328012fdc5825ec799cd4e80269f0996ef1b13d3cec9e194ade507",
                    "sha256:74bf467e78a3b612f36d62ee1ea8074fd962a4dd1ec7ff295193869bc0dafd68",
                    "sha256:81648437fd272fdfa048135a6611583de8e44ae6967fd03ff79b4a035de0e254"
                ]
            },
            "variant": "v8"
        },
        "run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:08.087614205Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:34.112858146Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:34.112858146Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:07.988069734Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:08.087614205Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:d4bbcc8f869a75e833ac37295683ff757885b657ae796bc98357210980095594",
                    "sha256:29b1c7656d519adc330ddcbc2913b0307fa73e5096583d1e912738f7d85f2fc2",
                    "sha256:d1d34c64d649bbd1a1d72a9f117dfd5d1e2e4b4a60d2a74feda727cd4a56a412"
                ]
            },
            "variant": "v8"
        },
        "sid": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:42:16.567836315Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:46.549693015Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d9288b588fabaa08e04cb672bc35a2097342b3f02f41139eb43d57de6da8c81 in / "
                },
                {
                    "created": "2024-04-24T04:11:46.888411048Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:29.356936454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.181878158Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.264965848Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.405205375Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.444959158Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.457933015Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:31.760909982Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:31.900039891Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:41.966556695Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:41.966556695Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:42:16.455230921Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:42:16.567836315Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9a62ed1b29f3183a736f710a1ecbee6c64eeb410707ef36a1efbd2569c514f4e",
                    "sha256:5b578891d4c96f360d32e6765110a48a94e797bb65d704e0052143856e4c478b",
                    "sha256:9bd0d3a024c6d5c7b0d983a205069c8a81481bfcefec3526d45251dc5f3b5888",
                    "sha256:eaa995956e31981bcfd010bf69f2abb4a65c9f41f1ed53653695c69bb9ea4544",
                    "sha256:df5999b6e8e895cbb929edd2daa274878fe6c357ee79dfef1b9b26c51fcc96b5",
                    "sha256:c9568c957fbf55941583edd4edd6fd10b4207315d103484d27a9c6aa2ef56d19",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:935b9ff01ce4f98d41938bf1aef95c5a0b90d4c9d9793e1fa252c8f358516c81",
                    "sha256:745bb669cf154a6b1a0219368923e35b5fc375dd557248565b549b4f46b5f52c",
                    "sha256:542ad24d729f72e1c11b049e7c44b87821487b16fcf7dd922d6a4c5ba6aa391d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:549089fb1ee3ed008f80472bc7a312bf28a29d9996dde8fc5872fee1b9ede208",
                    "sha256:a5c095e074868a92eb24d326216cab9d5988c4126ee957fa37d2d401ac3e64ab",
                    "sha256:1b1fcfea0ab9e3dc408dc667cab36a415ca4c0c39e1d382591c91aa7c803b38e",
                    "sha256:884fe6abc79bf6a874df2c1fe11e8a90d52a44cf15e738f544c7fa9fd1d0f04c"
                ]
            },
            "variant": "v8"
        },
        "sid-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:19:32.083861288Z",
            "history": [
                {
                    "created": "2024-01-31T22:45:41.002396011Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:404098f18a319d87b54f468c2d47bc702383a93bba61beb9ae65c9b6bd1b08d5 in / "
                },
                {
                    "created": "2024-01-31T22:45:41.436970054Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:18.789686303Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.832651832Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.949861869Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.079134393Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.09135224Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.125740798Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.139415495Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.139415495Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:21.955425341Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:22.078187708Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:19:31.975561675Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:19:31.975561675Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:19:32.083861288Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5271b2435f69bff7e11108cbf4784d51bc5367eb3dc8aaa71d8da2f76d86751c",
                    "sha256:167c04478fdddae9bc0eac451a7c0fe932c5b5c8ba1f00859ca1f9449d7a1971",
                    "sha256:6c186a33d3148c201b6ba142b90bfbde32e114a46d55c0bd218e33ad45c34618",
                    "sha256:68a12e8558ac4f8d81dfc1085d9ce023631e4da42056b11382a169d01884f681",
                    "sha256:c350458d5becc3b6f2cf5aa3c46e09a5a7169037f22e65ca998fea34e7e67815",
                    "sha256:77065778d26f965bcb0a3f1d015f8011edb394860c4994c6b20dcbdda35066b8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f16ca79ca4245a03e2cae12c12b2dca48fd25c2c04deeabfd46558f95a542913",
                    "sha256:58bfd280c2c81be65e5cf6f4a479948fee14d27a5e221fdf571260ac7464e866",
                    "sha256:07a3cb15be5f14bbd6768cd36948b99a6fa6ecfbae362a4035f13fe827d6164f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:edb02e4be2dfaa9d4a374c81cc2f5a06735f42e2ea612c18cfba223ce17d2858",
                    "sha256:732ed7b035bf1170b30548e3439dbaaad71ced0d2c118226d1a6372ed475634f",
                    "sha256:4a858355702cdbc1718b59e239fd83d81eac88ff1972a7ed4bf7dc2a75d55ef0"
                ]
            },
            "variant": "v8"
        },
        "sid-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T06:48:23.818414969Z",
            "history": [
                {
                    "created": "2024-01-31T22:45:41.002396011Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:404098f18a319d87b54f468c2d47bc702383a93bba61beb9ae65c9b6bd1b08d5 in / "
                },
                {
                    "created": "2024-01-31T22:45:41.436970054Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:18.789686303Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.832651832Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.949861869Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.079134393Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.09135224Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.125740798Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.139415495Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.139415495Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:21.955425341Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:22.078187708Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:04.573636122Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T06:47:04.573636122Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:48:23.722470166Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:48:23.818414969Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5271b2435f69bff7e11108cbf4784d51bc5367eb3dc8aaa71d8da2f76d86751c",
                    "sha256:167c04478fdddae9bc0eac451a7c0fe932c5b5c8ba1f00859ca1f9449d7a1971",
                    "sha256:6c186a33d3148c201b6ba142b90bfbde32e114a46d55c0bd218e33ad45c34618",
                    "sha256:68a12e8558ac4f8d81dfc1085d9ce023631e4da42056b11382a169d01884f681",
                    "sha256:c350458d5becc3b6f2cf5aa3c46e09a5a7169037f22e65ca998fea34e7e67815",
                    "sha256:77065778d26f965bcb0a3f1d015f8011edb394860c4994c6b20dcbdda35066b8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f16ca79ca4245a03e2cae12c12b2dca48fd25c2c04deeabfd46558f95a542913",
                    "sha256:58bfd280c2c81be65e5cf6f4a479948fee14d27a5e221fdf571260ac7464e866",
                    "sha256:07a3cb15be5f14bbd6768cd36948b99a6fa6ecfbae362a4035f13fe827d6164f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:edb02e4be2dfaa9d4a374c81cc2f5a06735f42e2ea612c18cfba223ce17d2858",
                    "sha256:53eaff1bd313f3b338b2bcd1a5d0beb5429d5aeeeaa36bf4d345cb85401b43bb",
                    "sha256:601785aeee11f21522d1e13b8d1d09b2d983cc964047fa74fd55fd851ab56790",
                    "sha256:31c77178c67d583709eb14656e6f706e3ee632af74ec3e3e5b5e7fff69f65953"
                ]
            },
            "variant": "v8"
        },
        "sid-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:10:47.909167239Z",
            "history": [
                {
                    "created": "2024-02-13T00:42:31.927314001Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9845794117f07a74f4253366621af46ecf348594efafc251d5e08491bf8dddc in / "
                },
                {
                    "created": "2024-02-13T00:42:32.344218278Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:03.704688113Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:03.704688113Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:03.704688113Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:19.618704135Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:20.278888116Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.371147367Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.512017328Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.547809396Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.558442816Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.575377034Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.575377034Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:22.151449583Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:22.26936068Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:28.772868973Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:09:28.772868973Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:47.803448708Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:47.909167239Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce14b055581c44de7e9c862cb652f77db386dff14fc4cf01e1ad21b660ec3f38",
                    "sha256:e9e6853672a2970e38c9888492638eef6ad56962f74c18600d29cb2a86570649",
                    "sha256:b40d1d1caf10abda5930e85015d96a22c3dfa64d47d82f35be4a2f6183b13f2e",
                    "sha256:06b98a02a22f071505d6be98ea829c27247ff0dc141dbb0fb2943702e092af59",
                    "sha256:8187f996a8db65a72444f4a36770d0bf6d3a3d314358eefb683b24ed4d3a4e91",
                    "sha256:60ab886784832860bb31a0278868645d8089b5eb651d99c25341bb4e3ddf2a02",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:39587871f11cb4433b34c0cf8361197422183998de3e5d78d27ed15976e976d3",
                    "sha256:270db374ec8346792d1095479fc9636d5b8b86bc7b6750b376b972c1096d9270",
                    "sha256:5261b5ac040425531992ecc29ea60a5470c906b08127f35365778a9568229d34",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9af9cf531c57a3ef41f87618689b5c484507edf21a6c4e59b1a5cd67e85d6ea9",
                    "sha256:0aa2e52316e9bdefc305e80d72db30677424506b59780baa288a7105572b21b5",
                    "sha256:82c0ebd6f734c176166451f619b44f1ce6783d7a0d217690fba62a27d8bbe186",
                    "sha256:5b1b9fe232440527c8d86e076745dd90307dbd86c17e94a54cab44a773981ecf"
                ]
            },
            "variant": "v8"
        },
        "sid-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:47:01.567381656Z",
            "history": [
                {
                    "created": "2024-02-13T00:42:31.927314001Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9845794117f07a74f4253366621af46ecf348594efafc251d5e08491bf8dddc in / "
                },
                {
                    "created": "2024-02-13T00:42:32.344218278Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:42.288221705Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:42.288221705Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:42.288221705Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:04.75478048Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:05.435777962Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.522438412Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.638196364Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.648544997Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.687212348Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.696272732Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.696272732Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:07.335540496Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:07.45302794Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:30.937837236Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:30.937837236Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:47:01.467362296Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:47:01.567381656Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce14b055581c44de7e9c862cb652f77db386dff14fc4cf01e1ad21b660ec3f38",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:50d2a0a3945dc9c8c5467074aa71080c817c5fe615727383825f03e7ac559c6b",
                    "sha256:0187b4463836ee4d50726fac3d6027508efd2b7cdaa7e9c5524481569929089d",
                    "sha256:f1833770787ec1190b1a76f092c0325dfae8f80dbe568911aaa36eefcad66586",
                    "sha256:63f8596acb3cba5d3b5819ccb2c250d5be580e21a92b3ddbc4f7d6ef060dea7f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:987e0eb53e78e8ed04be665707e9b3e03320faa467729cfec7fb75fd45ae48df",
                    "sha256:097115b2dee01ffbacc8913f9e8c5242d0090497b9530c50251d08595f386ee0",
                    "sha256:497398cfb7038e71d858fa80cb140e912cf26e08a744905d4a483c8f62b30788",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:37e5bb2f19ac31b98b6fcfb877e24b4e2a9b03068fcd0fc541649ae3e670e1dc",
                    "sha256:61756f7d76631ee69e6fcbdc20c045ca371d6b806b8f04ac96d460dbed798cbf",
                    "sha256:fde35942d71483b30b54b23e0c32b033ef4eefabb4b1b57d7574d172b83a3886",
                    "sha256:403c26a44c4046508041f0a7b2e6fc81ebc1c7a9c58f0e258f990a5c6dc3fba8"
                ]
            },
            "variant": "v8"
        },
        "sid-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:24:33.008137475Z",
            "history": [
                {
                    "created": "2024-03-30T20:55:09.619182834Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:97ce7c2b141aefce55d96aa0d48aa3f2d80e8c2fbab838f8223e7bc6028eb6c0 in / "
                },
                {
                    "created": "2024-03-30T20:55:10.036508597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:29.810171521Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:29.810171521Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:29.810171521Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:30.734417352Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:31.391413657Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.472194476Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.616112719Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.660036125Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.66935303Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.678706291Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.678706291Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:33.261807476Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:33.378867874Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:13.227619881Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:13.227619881Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:24:32.906408012Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:24:33.008137475Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7b2113408632e421b96b4973140d4b4f7bc42d16eac94c362a78f873a7db3c4",
                    "sha256:21a499b362d1e69fe14f4bbf239d71b304f325e506988993eff8dbc2bcb8d9fb",
                    "sha256:08b0c4079b2097326a452c280cd17b5a3e2fe0a87acf5fc6479b6cff495a5608",
                    "sha256:8f3b87227fde99f7c074caff5b8bd0b1f5eedd46c0d2a648a7ec5d37291df352",
                    "sha256:09b0ae2f710df1f1dfe8baa1d90f9332478e8c1c9c53d820a823b9b7f743c87c",
                    "sha256:02b108f1473fe61b3b9e537da30ad471164cd2d3fdc762e408f6de0843738ebf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b7bc96e7361581ef0315f0d50235bfae2d6e6de9f13a5b821963b5b6475380c8",
                    "sha256:ab6073fffae2a300096ca07b8f883f13ecf8a442967f5a461779ce1260bf3d79",
                    "sha256:d9d289ecb10d221723e06edb9ba13a75c06d46d7858196c409931e08b42eedc5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fed66ee707abf3b5e1c8d61a0ae45186c2c17f386110ab7d155dc925ba3fc425",
                    "sha256:14d507207d8a12fc72f91a8b0f843c4317867558afd0482f65189190b12b8637",
                    "sha256:47625931f493ba4ab040f816b031d3797231de864d06991f73ceb2c985876408",
                    "sha256:ee7c77637d4d4bd83cbecfe67224c9ad4714821938249eacb9dd558fe2fc583c"
                ]
            },
            "variant": "v8"
        },
        "sid-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:17:14.746113835Z",
            "history": [
                {
                    "created": "2024-03-30T20:55:09.619182834Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:97ce7c2b141aefce55d96aa0d48aa3f2d80e8c2fbab838f8223e7bc6028eb6c0 in / "
                },
                {
                    "created": "2024-03-30T20:55:10.036508597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.991196861Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.991196861Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.991196861Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:37.929365647Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:38.622493586Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.713383634Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.86440518Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.904376089Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.915460785Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.926290554Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.926290554Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:40.241916774Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:40.365158356Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:51.766052147Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:15:51.766052147Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:14.635055835Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:14.746113835Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7b2113408632e421b96b4973140d4b4f7bc42d16eac94c362a78f873a7db3c4",
                    "sha256:e478c6e0380e9a6132a7b7595bdfdaa69afbff7a59589b5aa61ed9034934ea8d",
                    "sha256:6311f1da69cd036e597129cc2f028e7dc015cdeb084a113953d65fa7c6aa44b3",
                    "sha256:cc33373bf50b19f19fd773424ea43726dba236a24654efe53d644de99b9c7e92",
                    "sha256:d79a55f9d489f679a91d8ba40933b7b9a95ee64ef3fe4fba82cc0c68be2b23fc",
                    "sha256:ce60876772934b93095da76edac9e7dfb43757bcd16c9707c674df8a9a2dc616",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e73359ffaa50388b28e656b20344334a03cbc4098b800e1c4d01d8170e827a46",
                    "sha256:7f16b9d269c15ab1868a29df18371fb142d8dcdc46d96d6a0f9c8f966f6ca0c2",
                    "sha256:10582767685d8caa5283790f703f75daf9e2d69d0483cd6168d4da798e4db138",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5c7f3e7e22e3e169f50791f8b0d4f60a6be2e72976fce852dc748b0d25a0e8f3",
                    "sha256:fd3acec4744c8deb0c34cae6e63148984db15fe90e055595d9cbb7cb0e016b7a",
                    "sha256:defbdad7e6b19d1f26be26084343e3afea465609f8ace6ee3c55c549a4969162",
                    "sha256:65f005622be646dd688306c343e708e724e3c6b3ed0cb4a0b5e74cf443c16778"
                ]
            },
            "variant": "v8"
        },
        "sid-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:42:16.567836315Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:46.549693015Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d9288b588fabaa08e04cb672bc35a2097342b3f02f41139eb43d57de6da8c81 in / "
                },
                {
                    "created": "2024-04-24T04:11:46.888411048Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:29.356936454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.181878158Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.264965848Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.405205375Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.444959158Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.457933015Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:31.760909982Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:31.900039891Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:41.966556695Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:41.966556695Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:42:16.455230921Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:42:16.567836315Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9a62ed1b29f3183a736f710a1ecbee6c64eeb410707ef36a1efbd2569c514f4e",
                    "sha256:5b578891d4c96f360d32e6765110a48a94e797bb65d704e0052143856e4c478b",
                    "sha256:9bd0d3a024c6d5c7b0d983a205069c8a81481bfcefec3526d45251dc5f3b5888",
                    "sha256:eaa995956e31981bcfd010bf69f2abb4a65c9f41f1ed53653695c69bb9ea4544",
                    "sha256:df5999b6e8e895cbb929edd2daa274878fe6c357ee79dfef1b9b26c51fcc96b5",
                    "sha256:c9568c957fbf55941583edd4edd6fd10b4207315d103484d27a9c6aa2ef56d19",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:935b9ff01ce4f98d41938bf1aef95c5a0b90d4c9d9793e1fa252c8f358516c81",
                    "sha256:745bb669cf154a6b1a0219368923e35b5fc375dd557248565b549b4f46b5f52c",
                    "sha256:542ad24d729f72e1c11b049e7c44b87821487b16fcf7dd922d6a4c5ba6aa391d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:549089fb1ee3ed008f80472bc7a312bf28a29d9996dde8fc5872fee1b9ede208",
                    "sha256:a5c095e074868a92eb24d326216cab9d5988c4126ee957fa37d2d401ac3e64ab",
                    "sha256:1b1fcfea0ab9e3dc408dc667cab36a415ca4c0c39e1d382591c91aa7c803b38e",
                    "sha256:884fe6abc79bf6a874df2c1fe11e8a90d52a44cf15e738f544c7fa9fd1d0f04c"
                ]
            },
            "variant": "v8"
        },
        "sid-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:42:23.965367415Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:46.549693015Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d9288b588fabaa08e04cb672bc35a2097342b3f02f41139eb43d57de6da8c81 in / "
                },
                {
                    "created": "2024-04-24T04:11:46.888411048Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:47.614245815Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:47.614245815Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:47.614245815Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:34.136809299Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:13.279155064Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:14.484950386Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.580819739Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.701658215Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.716123681Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.757179902Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.785056332Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.785056332Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:16.257806296Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:16.384235703Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:07.49263356Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:41:07.49263356Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:42:23.883165596Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:42:23.965367415Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9a62ed1b29f3183a736f710a1ecbee6c64eeb410707ef36a1efbd2569c514f4e",
                    "sha256:89ca9b3c86afe3f160757936e3ad9f8c828ba55bcd5f4da8ba3eadc793625cbd",
                    "sha256:cd55c4e9bb37c3b1ab5c7753c9d17b56a7d023f9c715e51510082bf87d728ec5",
                    "sha256:5ff1d32dc7a12eee967a2076490cb7977d55b6ff29ab48c7f6cd53de235bab3c",
                    "sha256:48c3a98f2fcf54a4b97e6ae0a4916691049da33cb0bcf0efd6264eb801d9ea02",
                    "sha256:8179347e11ea633f4cdc9e902d567a3052e4f40f9e849d4748b6bb9b6b686f08",
                    "sha256:1e83b1b94b9f2b54ef744345756707ca590701db481d14f1b2de57e79f3a6592",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:dfb2b6ef345c5ff05de875ccbf85d6975a31f0a2598e11627cbeec1d71c149b9",
                    "sha256:e1c964431f0ee49a10165c6a76e281914b971c8a41c2c2e046669b374c254935",
                    "sha256:1faf5c460615b75e4d3c51ddbcfce375ac228cfa706b81bb8d1648d332514dd5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e401cb908f7db6f0d079c4936850d486f68b92bf8bffa4f33baa8edd95aafbed",
                    "sha256:f1579e14f00c949d449c4f55c79c624bc4f332ae9dc0cf047af9849e60fdaea8",
                    "sha256:46ee79246c2616b4e208aaf931e7f6a8855fe5db32686fc4d872af4aa4039875",
                    "sha256:2e6640595eb2a64d4f2015d303ba9cab235c152b94470c48e6df026fb1195691"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:19:40.322120447Z",
            "history": [
                {
                    "created": "2024-01-31T22:45:41.002396011Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:404098f18a319d87b54f468c2d47bc702383a93bba61beb9ae65c9b6bd1b08d5 in / "
                },
                {
                    "created": "2024-01-31T22:45:41.436970054Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.360233107Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.360233107Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.360233107Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:06.150734064Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:21.109900957Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.327382506Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.327382506Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:48:22.327382506Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:48:22.327382506Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:48:22.419576145Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.507475525Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.629382955Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.645509288Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.658485381Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.671134226Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.671134226Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:48:24.339793595Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:24.460102976Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:19:40.235352087Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:19:40.235352087Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:19:40.322120447Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5271b2435f69bff7e11108cbf4784d51bc5367eb3dc8aaa71d8da2f76d86751c",
                    "sha256:2e55ad6098929cea35d055f04be64d1d009cb2b08e4e7580918581b8e76d45bd",
                    "sha256:e862b13ee21fc6d00626ed800baa54b8925bacd5b148828b7b5746f415ce7924",
                    "sha256:53fd770dfb8390e3e28d5fe8d4e3f4127337754535bca52f03aa45c5f8c16f08",
                    "sha256:2549c1a2afae7cabbcd2cef9f837eecc9b4021c24c59ca15926be5e1a522fff4",
                    "sha256:81830960cbbf8cae2626763432ebcd9c9d0b9ee977d8508e2d8cdf4484f33c08",
                    "sha256:fceb0a4eb81c9eeb4d392f6d79e7ae149a4523f4bcbbd20e8256c186ef9c2a09",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9626b9f9e8ee00f46397995cd06c96ea8ec61172b0e8c78ebb445c68ca724d6d",
                    "sha256:821d03340820d4ee95ef41f347c1c5e6945e07f7ef41d0aa68091d35c2c57f10",
                    "sha256:dee50a91b3e7bdebd2f0c5eda064a548a26d2aba5607f3f147046079fa287bba",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ddb0cf29e702d83a54375162d94ac1dd3b5aa2e7ef773088f4760a944b4d6682",
                    "sha256:efa2980278956fd91c8c5f7729d4491e8d0cd1b55273ffbfaeeca15e32662d71",
                    "sha256:df3af266314f19ec27678531d01d13744bcb8e470e29e33e59b13a6c19c3839b"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T06:48:36.017619656Z",
            "history": [
                {
                    "created": "2024-01-31T22:45:41.002396011Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:404098f18a319d87b54f468c2d47bc702383a93bba61beb9ae65c9b6bd1b08d5 in / "
                },
                {
                    "created": "2024-01-31T22:45:41.436970054Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.360233107Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.360233107Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.360233107Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:06.150734064Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:21.109900957Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.327382506Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.327382506Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:48:22.327382506Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:48:22.327382506Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:48:22.419576145Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.507475525Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.629382955Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.645509288Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.658485381Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.671134226Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.671134226Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:48:24.339793595Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:24.460102976Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:19.477784463Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T06:47:19.477784463Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:48:35.933289147Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:48:36.017619656Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5271b2435f69bff7e11108cbf4784d51bc5367eb3dc8aaa71d8da2f76d86751c",
                    "sha256:2e55ad6098929cea35d055f04be64d1d009cb2b08e4e7580918581b8e76d45bd",
                    "sha256:e862b13ee21fc6d00626ed800baa54b8925bacd5b148828b7b5746f415ce7924",
                    "sha256:53fd770dfb8390e3e28d5fe8d4e3f4127337754535bca52f03aa45c5f8c16f08",
                    "sha256:2549c1a2afae7cabbcd2cef9f837eecc9b4021c24c59ca15926be5e1a522fff4",
                    "sha256:81830960cbbf8cae2626763432ebcd9c9d0b9ee977d8508e2d8cdf4484f33c08",
                    "sha256:fceb0a4eb81c9eeb4d392f6d79e7ae149a4523f4bcbbd20e8256c186ef9c2a09",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9626b9f9e8ee00f46397995cd06c96ea8ec61172b0e8c78ebb445c68ca724d6d",
                    "sha256:821d03340820d4ee95ef41f347c1c5e6945e07f7ef41d0aa68091d35c2c57f10",
                    "sha256:dee50a91b3e7bdebd2f0c5eda064a548a26d2aba5607f3f147046079fa287bba",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ddb0cf29e702d83a54375162d94ac1dd3b5aa2e7ef773088f4760a944b4d6682",
                    "sha256:35485f991c324cd5eb1af4f6029ac25bcb8e7f69a60c6523d25a5d9cc053486f",
                    "sha256:7a17b9e0256df199157dd436dba88aaa8ad10469e3199781076946451d618915",
                    "sha256:ebbbdb7a57e16442f47260c2ef7197b72e4bacceffe6574a5734148fc4c37dd3"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:11:01.954052575Z",
            "history": [
                {
                    "created": "2024-02-13T00:42:31.927314001Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9845794117f07a74f4253366621af46ecf348594efafc251d5e08491bf8dddc in / "
                },
                {
                    "created": "2024-02-13T00:42:32.344218278Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:06.232116184Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:06.232116184Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:06.232116184Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:24.702054985Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:03.683944436Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:04.954659523Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:04.954659523Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:55:04.954659523Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:55:04.954659523Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:55:05.036907008Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:05.124744323Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:05.240567147Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:05.250185612Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:05.258588575Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:05.293909559Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:05.293909559Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:55:07.024584641Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:07.144436399Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:47.419881679Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:09:47.419881679Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:11:01.868608831Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:11:01.954052575Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce14b055581c44de7e9c862cb652f77db386dff14fc4cf01e1ad21b660ec3f38",
                    "sha256:6124e0ef078177c96769fe59dd5d1c4388364eaed36d0a41820ec1540ee7f7a9",
                    "sha256:e88fb7f32458386d70ce4ea605541bd50e841aa3659c9cf3f48b359b8f881073",
                    "sha256:8718054879ae26dbe2cf59e15d38ee47ce1b425fc0142c3eb1fdf4d4fddbe679",
                    "sha256:0421b78184bedb272930db29251f461007042b0f06ef779cadaf5dcbbe0c6ef7",
                    "sha256:ff55801f3816d08a5a0c696cf5f4c714370be31479ab31078c4620ce4130f3b6",
                    "sha256:3a7383ac5e661a1b582d5404a71d58e68a90b7f6e5e454d19fe67e262dc5369a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:85560bc6d1617f5788b44b92d46fa83b608d90bcafd724fdc5415e66bb45fc4e",
                    "sha256:6d2e212ac896f4196f6bdc0dd05f524c6b5520e88bf374f6e4120bcbace698f6",
                    "sha256:657f5ca344c6b0f7c457540315bcc480e75e681035e6f79ad484bc7dc6f303eb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3bd5f62a5c2b87364594fb0fa9cdb8de6a270bd98c16bafd012e032293aff31d",
                    "sha256:05f2668f8b404736cc34cc970a141b90f31fff13b48cc89686c6ca260c8aad75",
                    "sha256:d34348162fb4b881d247afe74eb71ee4d5f8d400cc4ca9a298049e1a7f958826",
                    "sha256:c08632c25677d0142d18d3789181b885d9e565b0a6319c13767ac58476cf2d93"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:55.418174563Z",
            "history": [
                {
                    "created": "2024-02-13T00:42:31.927314001Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9845794117f07a74f4253366621af46ecf348594efafc251d5e08491bf8dddc in / "
                },
                {
                    "created": "2024-02-13T00:42:32.344218278Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.877327987Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.877327987Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.877327987Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:04.873802481Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:27.503744636Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.2471064Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.2471064Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:28:28.2471064Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:28:28.2471064Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:28:28.326274161Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.430472776Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.544556086Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.553685489Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.561670361Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.594391478Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.594391478Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:28:30.236574932Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:30.364605757Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:38.511806515Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:38.511806515Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:55.329784224Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:55.418174563Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce14b055581c44de7e9c862cb652f77db386dff14fc4cf01e1ad21b660ec3f38",
                    "sha256:7d4f7982334e1f907718a483851602439207f7ec70b3f0a8559614f9dd255d30",
                    "sha256:b13b33e795933c4688327e8254b3a4aaa2c6064c705e5be93fdf242466d9c618",
                    "sha256:fd70fca9f465edc329fdee69f86026569f6e78d73e7feb61b297f4b53ff2777f",
                    "sha256:78b532aeda69743c326326e486330070bec1d5e0132ea997acdedf63efe5fd83",
                    "sha256:46b49611bceb8bf3122cc8751f39686e2fc4f6dccc434a5ea1d85b40f253c9db",
                    "sha256:a0194bd4b898b4690eba8393bf0d5b0c63aaeec2c99f2728563b89e93d418325",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b8015cf0de3f3d63d47d152896ccd1df2e389ccfea04ffbfdefdb32b8506f9dc",
                    "sha256:41a2d1eba37067517544de349e287e46a82e507561c2894f45a4c6e839e7719b",
                    "sha256:f2af847b7f5dd6fe8f30fe4d7850f68005a0e3d3e08857a5ed1b6bdd41425768",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3119b4ef5945dbffeb51f1f62d720e1ce343473795fc48a08353cd3f04367dea",
                    "sha256:b3852a0f7f562bf92cb9f01d5a7eea67a22ce38c5b255683484cfa7eb4d17936",
                    "sha256:ce16a5c390e4959bec6bd23ad224494008f4fd0a10e8ae0655ba3a83e7fa703c",
                    "sha256:2ca4d72195d251c49e9fa73fb4d3e8c64f5659612225305bc83bb0503b615631"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:24:36.285464096Z",
            "history": [
                {
                    "created": "2024-03-30T20:55:09.619182834Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:97ce7c2b141aefce55d96aa0d48aa3f2d80e8c2fbab838f8223e7bc6028eb6c0 in / "
                },
                {
                    "created": "2024-03-30T20:55:10.036508597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:31.047245208Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:31.047245208Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:31.047245208Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:32.721625308Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:40.444204213Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.126779713Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.126779713Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:06:41.126779713Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:06:41.126779713Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:06:41.210595639Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.295834461Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.435598931Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.471503791Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.483495254Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.496057201Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.496057201Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:06:43.156053533Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:43.282803146Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:19.108539737Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:19.108539737Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:24:36.191299903Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:24:36.285464096Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7b2113408632e421b96b4973140d4b4f7bc42d16eac94c362a78f873a7db3c4",
                    "sha256:86ae7b0949bcbead5e76b4afadc9df92ea698fbbc77cecbcf5caeee4f6afde4b",
                    "sha256:0ab88cdea47afd7291e46c7ea22e50292220a395e01da3193c7b70946245bfbd",
                    "sha256:066d020b41897ea4d4ffa5e233cf03ffeea5dea8a636a25796530761db3d0981",
                    "sha256:e0d8c550891749f7eeab062114d3bb54bc521ed09ec47ed90612e5fdc1688f1a",
                    "sha256:12edb9da32c7c7f14d4f6150e2ad2219636e0056ca387e9ed81fcf4ae10f997a",
                    "sha256:fe7728bedee4c718f9bd6c370a8510a432fccf53a76ee43d286c98ddd7144ea4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fbf1169163e775d22c5e0942182d7d2eb74a3046c74a1dad7af374fb15220c23",
                    "sha256:12deb041a7e48969050866d4b4b27f777cb69cccf0921c4fb6c91f6042b728fb",
                    "sha256:fa68d8ff867c49381a7d88491a9edfa09da241733a1880fa6c6acd3b111ab9d6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3fa65e3d6deb051faf8998afe1e4b3c1ca65d03110483781b44f50bee59a6966",
                    "sha256:d70aed37c1d705b0911c53d9420a022352981d3617218a9b530e1c5b32ccc0d7",
                    "sha256:136303c910024889b41c31942f468949cf2605d70287ee19aa677de2d5e90577",
                    "sha256:c257e8637f95a8d4a7b5e75700c3b2411dda0d753d6b3870198aa1393de14e58"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:17:17.720461904Z",
            "history": [
                {
                    "created": "2024-03-30T20:55:09.619182834Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:97ce7c2b141aefce55d96aa0d48aa3f2d80e8c2fbab838f8223e7bc6028eb6c0 in / "
                },
                {
                    "created": "2024-03-30T20:55:10.036508597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.244794509Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.244794509Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.244794509Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:33.754138635Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:54.926154667Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.125844524Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.125844524Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:59:56.125844524Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:59:56.125844524Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:59:56.207622712Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.287944727Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.411270965Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.421782799Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.452576845Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.462270928Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.462270928Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:59:57.855892581Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:58.008648987Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:01.815048349Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:16:01.815048349Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:17.6338658Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:17.720461904Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7b2113408632e421b96b4973140d4b4f7bc42d16eac94c362a78f873a7db3c4",
                    "sha256:6eaa333c979825dda7016737e8809208f1e2f20184370fe199235cee48f1299d",
                    "sha256:23b25ff3ecca36fc0112555fccae30e604fbfe8252ed60bbe37b173192aed241",
                    "sha256:666b72c346d6d5652dbe86040f0057b944d0f68716cd481e8016852058adb3e8",
                    "sha256:1692fc77852e6f7524e6c9bea077a8ae74ec6e2814f6245bfc574f0340843386",
                    "sha256:b187d423d040e942b55cc1de9fe09b0b16395b4f1373b400907abff7f44849a3",
                    "sha256:e64b704b9da29ee9601d7d7ba78b5df42ee3f43df9acde471d7bace19f74c045",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:314d83d41e395d075ca112d082b5afe583f54f1102fd36e2c5e0fbe08715440b",
                    "sha256:95e34243bfeecb67ef34046456751ee58c8473a3289f7893eb7fc5da705cc9f9",
                    "sha256:52614d0cefa66c14e5410dba3c397ecc2fd0f4cecd582e478203cceb7c5eae60",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6db02f02e38f328332fbd48ea663ccae779d8ee47be95c5f3a8b378ec75d0ce8",
                    "sha256:7bd8f210911c98c1ea40b3f99f14978d068316f64f00e147dd8eadf578cfc0bf",
                    "sha256:ba387740ec896dd82b32ce9a8904befeeee30b8aad717caa4c32e5d8fd9c22ff",
                    "sha256:cff185c31d915809bb528b369a27def46385b662628f2461ca6453ef9b7ee87b"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:42:23.965367415Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:46.549693015Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d9288b588fabaa08e04cb672bc35a2097342b3f02f41139eb43d57de6da8c81 in / "
                },
                {
                    "created": "2024-04-24T04:11:46.888411048Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:47.614245815Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:47.614245815Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:47.614245815Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:34.136809299Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:13.279155064Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:14.484950386Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.580819739Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.701658215Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.716123681Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.757179902Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.785056332Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.785056332Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:16.257806296Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:16.384235703Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:07.49263356Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:41:07.49263356Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:42:23.883165596Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:42:23.965367415Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9a62ed1b29f3183a736f710a1ecbee6c64eeb410707ef36a1efbd2569c514f4e",
                    "sha256:89ca9b3c86afe3f160757936e3ad9f8c828ba55bcd5f4da8ba3eadc793625cbd",
                    "sha256:cd55c4e9bb37c3b1ab5c7753c9d17b56a7d023f9c715e51510082bf87d728ec5",
                    "sha256:5ff1d32dc7a12eee967a2076490cb7977d55b6ff29ab48c7f6cd53de235bab3c",
                    "sha256:48c3a98f2fcf54a4b97e6ae0a4916691049da33cb0bcf0efd6264eb801d9ea02",
                    "sha256:8179347e11ea633f4cdc9e902d567a3052e4f40f9e849d4748b6bb9b6b686f08",
                    "sha256:1e83b1b94b9f2b54ef744345756707ca590701db481d14f1b2de57e79f3a6592",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:dfb2b6ef345c5ff05de875ccbf85d6975a31f0a2598e11627cbeec1d71c149b9",
                    "sha256:e1c964431f0ee49a10165c6a76e281914b971c8a41c2c2e046669b374c254935",
                    "sha256:1faf5c460615b75e4d3c51ddbcfce375ac228cfa706b81bb8d1648d332514dd5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e401cb908f7db6f0d079c4936850d486f68b92bf8bffa4f33baa8edd95aafbed",
                    "sha256:f1579e14f00c949d449c4f55c79c624bc4f332ae9dc0cf047af9849e60fdaea8",
                    "sha256:46ee79246c2616b4e208aaf931e7f6a8855fe5db32686fc4d872af4aa4039875",
                    "sha256:2e6640595eb2a64d4f2015d303ba9cab235c152b94470c48e6df026fb1195691"
                ]
            },
            "variant": "v8"
        },
        "sid-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:42:16.567836315Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:46.549693015Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d9288b588fabaa08e04cb672bc35a2097342b3f02f41139eb43d57de6da8c81 in / "
                },
                {
                    "created": "2024-04-24T04:11:46.888411048Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:29.356936454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.181878158Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.264965848Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.405205375Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.444959158Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.457933015Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:31.760909982Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:31.900039891Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:41.966556695Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:41.966556695Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:42:16.455230921Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:42:16.567836315Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9a62ed1b29f3183a736f710a1ecbee6c64eeb410707ef36a1efbd2569c514f4e",
                    "sha256:5b578891d4c96f360d32e6765110a48a94e797bb65d704e0052143856e4c478b",
                    "sha256:9bd0d3a024c6d5c7b0d983a205069c8a81481bfcefec3526d45251dc5f3b5888",
                    "sha256:eaa995956e31981bcfd010bf69f2abb4a65c9f41f1ed53653695c69bb9ea4544",
                    "sha256:df5999b6e8e895cbb929edd2daa274878fe6c357ee79dfef1b9b26c51fcc96b5",
                    "sha256:c9568c957fbf55941583edd4edd6fd10b4207315d103484d27a9c6aa2ef56d19",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:935b9ff01ce4f98d41938bf1aef95c5a0b90d4c9d9793e1fa252c8f358516c81",
                    "sha256:745bb669cf154a6b1a0219368923e35b5fc375dd557248565b549b4f46b5f52c",
                    "sha256:542ad24d729f72e1c11b049e7c44b87821487b16fcf7dd922d6a4c5ba6aa391d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:549089fb1ee3ed008f80472bc7a312bf28a29d9996dde8fc5872fee1b9ede208",
                    "sha256:a5c095e074868a92eb24d326216cab9d5988c4126ee957fa37d2d401ac3e64ab",
                    "sha256:1b1fcfea0ab9e3dc408dc667cab36a415ca4c0c39e1d382591c91aa7c803b38e",
                    "sha256:884fe6abc79bf6a874df2c1fe11e8a90d52a44cf15e738f544c7fa9fd1d0f04c"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:19:32.083861288Z",
            "history": [
                {
                    "created": "2024-01-31T22:45:41.002396011Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:404098f18a319d87b54f468c2d47bc702383a93bba61beb9ae65c9b6bd1b08d5 in / "
                },
                {
                    "created": "2024-01-31T22:45:41.436970054Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:18.789686303Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.832651832Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.949861869Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.079134393Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.09135224Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.125740798Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.139415495Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.139415495Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:21.955425341Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:22.078187708Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:19:31.975561675Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:19:31.975561675Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:19:32.083861288Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5271b2435f69bff7e11108cbf4784d51bc5367eb3dc8aaa71d8da2f76d86751c",
                    "sha256:167c04478fdddae9bc0eac451a7c0fe932c5b5c8ba1f00859ca1f9449d7a1971",
                    "sha256:6c186a33d3148c201b6ba142b90bfbde32e114a46d55c0bd218e33ad45c34618",
                    "sha256:68a12e8558ac4f8d81dfc1085d9ce023631e4da42056b11382a169d01884f681",
                    "sha256:c350458d5becc3b6f2cf5aa3c46e09a5a7169037f22e65ca998fea34e7e67815",
                    "sha256:77065778d26f965bcb0a3f1d015f8011edb394860c4994c6b20dcbdda35066b8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f16ca79ca4245a03e2cae12c12b2dca48fd25c2c04deeabfd46558f95a542913",
                    "sha256:58bfd280c2c81be65e5cf6f4a479948fee14d27a5e221fdf571260ac7464e866",
                    "sha256:07a3cb15be5f14bbd6768cd36948b99a6fa6ecfbae362a4035f13fe827d6164f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:edb02e4be2dfaa9d4a374c81cc2f5a06735f42e2ea612c18cfba223ce17d2858",
                    "sha256:732ed7b035bf1170b30548e3439dbaaad71ced0d2c118226d1a6372ed475634f",
                    "sha256:4a858355702cdbc1718b59e239fd83d81eac88ff1972a7ed4bf7dc2a75d55ef0"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T06:48:23.818414969Z",
            "history": [
                {
                    "created": "2024-01-31T22:45:41.002396011Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:404098f18a319d87b54f468c2d47bc702383a93bba61beb9ae65c9b6bd1b08d5 in / "
                },
                {
                    "created": "2024-01-31T22:45:41.436970054Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:18.789686303Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.832651832Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.949861869Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.079134393Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.09135224Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.125740798Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.139415495Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.139415495Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:21.955425341Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:22.078187708Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:47:04.573636122Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T06:47:04.573636122Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:48:23.722470166Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T06:48:23.818414969Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5271b2435f69bff7e11108cbf4784d51bc5367eb3dc8aaa71d8da2f76d86751c",
                    "sha256:167c04478fdddae9bc0eac451a7c0fe932c5b5c8ba1f00859ca1f9449d7a1971",
                    "sha256:6c186a33d3148c201b6ba142b90bfbde32e114a46d55c0bd218e33ad45c34618",
                    "sha256:68a12e8558ac4f8d81dfc1085d9ce023631e4da42056b11382a169d01884f681",
                    "sha256:c350458d5becc3b6f2cf5aa3c46e09a5a7169037f22e65ca998fea34e7e67815",
                    "sha256:77065778d26f965bcb0a3f1d015f8011edb394860c4994c6b20dcbdda35066b8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f16ca79ca4245a03e2cae12c12b2dca48fd25c2c04deeabfd46558f95a542913",
                    "sha256:58bfd280c2c81be65e5cf6f4a479948fee14d27a5e221fdf571260ac7464e866",
                    "sha256:07a3cb15be5f14bbd6768cd36948b99a6fa6ecfbae362a4035f13fe827d6164f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:edb02e4be2dfaa9d4a374c81cc2f5a06735f42e2ea612c18cfba223ce17d2858",
                    "sha256:53eaff1bd313f3b338b2bcd1a5d0beb5429d5aeeeaa36bf4d345cb85401b43bb",
                    "sha256:601785aeee11f21522d1e13b8d1d09b2d983cc964047fa74fd55fd851ab56790",
                    "sha256:31c77178c67d583709eb14656e6f706e3ee632af74ec3e3e5b5e7fff69f65953"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:10:47.909167239Z",
            "history": [
                {
                    "created": "2024-02-13T00:42:31.927314001Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9845794117f07a74f4253366621af46ecf348594efafc251d5e08491bf8dddc in / "
                },
                {
                    "created": "2024-02-13T00:42:32.344218278Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:03.704688113Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:03.704688113Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:03.704688113Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:19.618704135Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:20.278888116Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.371147367Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.512017328Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.547809396Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.558442816Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.575377034Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.575377034Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:22.151449583Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:22.26936068Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:28.772868973Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:09:28.772868973Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:47.803448708Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:10:47.909167239Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce14b055581c44de7e9c862cb652f77db386dff14fc4cf01e1ad21b660ec3f38",
                    "sha256:e9e6853672a2970e38c9888492638eef6ad56962f74c18600d29cb2a86570649",
                    "sha256:b40d1d1caf10abda5930e85015d96a22c3dfa64d47d82f35be4a2f6183b13f2e",
                    "sha256:06b98a02a22f071505d6be98ea829c27247ff0dc141dbb0fb2943702e092af59",
                    "sha256:8187f996a8db65a72444f4a36770d0bf6d3a3d314358eefb683b24ed4d3a4e91",
                    "sha256:60ab886784832860bb31a0278868645d8089b5eb651d99c25341bb4e3ddf2a02",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:39587871f11cb4433b34c0cf8361197422183998de3e5d78d27ed15976e976d3",
                    "sha256:270db374ec8346792d1095479fc9636d5b8b86bc7b6750b376b972c1096d9270",
                    "sha256:5261b5ac040425531992ecc29ea60a5470c906b08127f35365778a9568229d34",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9af9cf531c57a3ef41f87618689b5c484507edf21a6c4e59b1a5cd67e85d6ea9",
                    "sha256:0aa2e52316e9bdefc305e80d72db30677424506b59780baa288a7105572b21b5",
                    "sha256:82c0ebd6f734c176166451f619b44f1ce6783d7a0d217690fba62a27d8bbe186",
                    "sha256:5b1b9fe232440527c8d86e076745dd90307dbd86c17e94a54cab44a773981ecf"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:47:01.567381656Z",
            "history": [
                {
                    "created": "2024-02-13T00:42:31.927314001Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9845794117f07a74f4253366621af46ecf348594efafc251d5e08491bf8dddc in / "
                },
                {
                    "created": "2024-02-13T00:42:32.344218278Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:42.288221705Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:42.288221705Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:42.288221705Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:04.75478048Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:05.435777962Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.522438412Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.638196364Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.648544997Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.687212348Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.696272732Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.696272732Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:07.335540496Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:07.45302794Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:30.937837236Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:30.937837236Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:47:01.467362296Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:47:01.567381656Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce14b055581c44de7e9c862cb652f77db386dff14fc4cf01e1ad21b660ec3f38",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:50d2a0a3945dc9c8c5467074aa71080c817c5fe615727383825f03e7ac559c6b",
                    "sha256:0187b4463836ee4d50726fac3d6027508efd2b7cdaa7e9c5524481569929089d",
                    "sha256:f1833770787ec1190b1a76f092c0325dfae8f80dbe568911aaa36eefcad66586",
                    "sha256:63f8596acb3cba5d3b5819ccb2c250d5be580e21a92b3ddbc4f7d6ef060dea7f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:987e0eb53e78e8ed04be665707e9b3e03320faa467729cfec7fb75fd45ae48df",
                    "sha256:097115b2dee01ffbacc8913f9e8c5242d0090497b9530c50251d08595f386ee0",
                    "sha256:497398cfb7038e71d858fa80cb140e912cf26e08a744905d4a483c8f62b30788",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:37e5bb2f19ac31b98b6fcfb877e24b4e2a9b03068fcd0fc541649ae3e670e1dc",
                    "sha256:61756f7d76631ee69e6fcbdc20c045ca371d6b806b8f04ac96d460dbed798cbf",
                    "sha256:fde35942d71483b30b54b23e0c32b033ef4eefabb4b1b57d7574d172b83a3886",
                    "sha256:403c26a44c4046508041f0a7b2e6fc81ebc1c7a9c58f0e258f990a5c6dc3fba8"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:24:33.008137475Z",
            "history": [
                {
                    "created": "2024-03-30T20:55:09.619182834Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:97ce7c2b141aefce55d96aa0d48aa3f2d80e8c2fbab838f8223e7bc6028eb6c0 in / "
                },
                {
                    "created": "2024-03-30T20:55:10.036508597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:29.810171521Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:29.810171521Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:29.810171521Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:30.734417352Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:31.391413657Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.472194476Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.616112719Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.660036125Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.66935303Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.678706291Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.678706291Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:33.261807476Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:33.378867874Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:13.227619881Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:13.227619881Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:24:32.906408012Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:24:33.008137475Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7b2113408632e421b96b4973140d4b4f7bc42d16eac94c362a78f873a7db3c4",
                    "sha256:21a499b362d1e69fe14f4bbf239d71b304f325e506988993eff8dbc2bcb8d9fb",
                    "sha256:08b0c4079b2097326a452c280cd17b5a3e2fe0a87acf5fc6479b6cff495a5608",
                    "sha256:8f3b87227fde99f7c074caff5b8bd0b1f5eedd46c0d2a648a7ec5d37291df352",
                    "sha256:09b0ae2f710df1f1dfe8baa1d90f9332478e8c1c9c53d820a823b9b7f743c87c",
                    "sha256:02b108f1473fe61b3b9e537da30ad471164cd2d3fdc762e408f6de0843738ebf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b7bc96e7361581ef0315f0d50235bfae2d6e6de9f13a5b821963b5b6475380c8",
                    "sha256:ab6073fffae2a300096ca07b8f883f13ecf8a442967f5a461779ce1260bf3d79",
                    "sha256:d9d289ecb10d221723e06edb9ba13a75c06d46d7858196c409931e08b42eedc5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fed66ee707abf3b5e1c8d61a0ae45186c2c17f386110ab7d155dc925ba3fc425",
                    "sha256:14d507207d8a12fc72f91a8b0f843c4317867558afd0482f65189190b12b8637",
                    "sha256:47625931f493ba4ab040f816b031d3797231de864d06991f73ceb2c985876408",
                    "sha256:ee7c77637d4d4bd83cbecfe67224c9ad4714821938249eacb9dd558fe2fc583c"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:17:14.746113835Z",
            "history": [
                {
                    "created": "2024-03-30T20:55:09.619182834Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:97ce7c2b141aefce55d96aa0d48aa3f2d80e8c2fbab838f8223e7bc6028eb6c0 in / "
                },
                {
                    "created": "2024-03-30T20:55:10.036508597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.991196861Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.991196861Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.991196861Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:37.929365647Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:38.622493586Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.713383634Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.86440518Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.904376089Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.915460785Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.926290554Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.926290554Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:40.241916774Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:40.365158356Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:51.766052147Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:15:51.766052147Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:14.635055835Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:17:14.746113835Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7b2113408632e421b96b4973140d4b4f7bc42d16eac94c362a78f873a7db3c4",
                    "sha256:e478c6e0380e9a6132a7b7595bdfdaa69afbff7a59589b5aa61ed9034934ea8d",
                    "sha256:6311f1da69cd036e597129cc2f028e7dc015cdeb084a113953d65fa7c6aa44b3",
                    "sha256:cc33373bf50b19f19fd773424ea43726dba236a24654efe53d644de99b9c7e92",
                    "sha256:d79a55f9d489f679a91d8ba40933b7b9a95ee64ef3fe4fba82cc0c68be2b23fc",
                    "sha256:ce60876772934b93095da76edac9e7dfb43757bcd16c9707c674df8a9a2dc616",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e73359ffaa50388b28e656b20344334a03cbc4098b800e1c4d01d8170e827a46",
                    "sha256:7f16b9d269c15ab1868a29df18371fb142d8dcdc46d96d6a0f9c8f966f6ca0c2",
                    "sha256:10582767685d8caa5283790f703f75daf9e2d69d0483cd6168d4da798e4db138",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5c7f3e7e22e3e169f50791f8b0d4f60a6be2e72976fce852dc748b0d25a0e8f3",
                    "sha256:fd3acec4744c8deb0c34cae6e63148984db15fe90e055595d9cbb7cb0e016b7a",
                    "sha256:defbdad7e6b19d1f26be26084343e3afea465609f8ace6ee3c55c549a4969162",
                    "sha256:65f005622be646dd688306c343e708e724e3c6b3ed0cb4a0b5e74cf443c16778"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:42:16.567836315Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:46.549693015Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d9288b588fabaa08e04cb672bc35a2097342b3f02f41139eb43d57de6da8c81 in / "
                },
                {
                    "created": "2024-04-24T04:11:46.888411048Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:29.356936454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.181878158Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.264965848Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.405205375Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.444959158Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.457933015Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:31.760909982Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:31.900039891Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:41.966556695Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:41.966556695Z",
                    "created_by": "RUN /bin/sh -c echo \"deb https://repo.download.nvidia.com/jetson/common r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& echo \"deb https://repo.download.nvidia.com/jetson/t234 r35.4 main\" >>  /etc/apt/sources.list.d/nvidia.list \t&& apt-key adv --fetch-key http://repo.download.nvidia.com/jetson/jetson-ota-public.asc \t&& mkdir -p /opt/nvidia/l4t-packages/ && touch /opt/nvidia/l4t-packages/.nv-l4t-disable-boot-fw-update-in-preinstall # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:42:16.455230921Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:42:16.567836315Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9a62ed1b29f3183a736f710a1ecbee6c64eeb410707ef36a1efbd2569c514f4e",
                    "sha256:5b578891d4c96f360d32e6765110a48a94e797bb65d704e0052143856e4c478b",
                    "sha256:9bd0d3a024c6d5c7b0d983a205069c8a81481bfcefec3526d45251dc5f3b5888",
                    "sha256:eaa995956e31981bcfd010bf69f2abb4a65c9f41f1ed53653695c69bb9ea4544",
                    "sha256:df5999b6e8e895cbb929edd2daa274878fe6c357ee79dfef1b9b26c51fcc96b5",
                    "sha256:c9568c957fbf55941583edd4edd6fd10b4207315d103484d27a9c6aa2ef56d19",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:935b9ff01ce4f98d41938bf1aef95c5a0b90d4c9d9793e1fa252c8f358516c81",
                    "sha256:745bb669cf154a6b1a0219368923e35b5fc375dd557248565b549b4f46b5f52c",
                    "sha256:542ad24d729f72e1c11b049e7c44b87821487b16fcf7dd922d6a4c5ba6aa391d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:549089fb1ee3ed008f80472bc7a312bf28a29d9996dde8fc5872fee1b9ede208",
                    "sha256:a5c095e074868a92eb24d326216cab9d5988c4126ee957fa37d2d401ac3e64ab",
                    "sha256:1b1fcfea0ab9e3dc408dc667cab36a415ca4c0c39e1d382591c91aa7c803b38e",
                    "sha256:884fe6abc79bf6a874df2c1fe11e8a90d52a44cf15e738f544c7fa9fd1d0f04c"
                ]
            },
            "variant": "v8"
        }
    }
}