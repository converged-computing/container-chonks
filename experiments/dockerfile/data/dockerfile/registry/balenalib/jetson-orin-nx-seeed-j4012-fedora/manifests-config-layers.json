{
    "manifests": {
        "20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:51784b43d34bdab445763039bf67445c97acdc3847a80191baf2e9db7ac72ae1",
                "size": 6829
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:043f40b98b892b40de8f366a4877d9d156b79e078c159e8ba29e516bd6d1c1f3",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5741c1c9c7a9fefc40c6616a877c25ae7e2d3b4e3f445bc7366d05c2eadaabf",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b7fbfed82651bb013b52b5f9e575eb057922dd32dbea33546ffd3791fd6f318",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31345e8a4ebd6f75c8d04b1987bb10dda6e287bb914c12f9506f73ae22df8918",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64c5ff84cb6737b8e4034ed8c0c032049484812c53fac7bd3922ac1887619c7b",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8151e9be2f5daef339c61f7281525da71de532fd3a55c08d147c7de15b1c0e4b",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c014d4420297605e816aee496643987e4894d4bccb07a796c70c571e2feb60d8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b08fce6652cca23dbcc24643d4e3a575ab16b891a2edf31d5519a6338d825663",
                    "size": 6663437
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84654d23dede7d884d759d913eaa352e537e1ba43c15703c36a1d8dbe077f952",
                    "size": 469
                }
            ]
        },
        "20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:35c30e539ba616136969c19fd2628cb9b354aba79404715d51ddcf5b84afebeb",
                "size": 6829
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:043f40b98b892b40de8f366a4877d9d156b79e078c159e8ba29e516bd6d1c1f3",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5741c1c9c7a9fefc40c6616a877c25ae7e2d3b4e3f445bc7366d05c2eadaabf",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b7fbfed82651bb013b52b5f9e575eb057922dd32dbea33546ffd3791fd6f318",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31345e8a4ebd6f75c8d04b1987bb10dda6e287bb914c12f9506f73ae22df8918",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64c5ff84cb6737b8e4034ed8c0c032049484812c53fac7bd3922ac1887619c7b",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8151e9be2f5daef339c61f7281525da71de532fd3a55c08d147c7de15b1c0e4b",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c014d4420297605e816aee496643987e4894d4bccb07a796c70c571e2feb60d8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:040e085cd8db38291ae27fa077bd0b04dbe1725df1d7a2e464583e47d0725975",
                    "size": 6663481
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a57d82caa68b7e3417e057c44859b688e7d8f5056d75e53733618054379c9bc",
                    "size": 469
                }
            ]
        },
        "20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b16be1389e6a2497b5b4fc2b0e8c68ae8b6fe69a4edb7538ea918bd477bcc522",
                "size": 6828
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd87690b18c87c13099904842202959acc4018da84cfac16a5d4c7a746e45364",
                    "size": 6663373
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5109acecd52b59d513d2295f5bb77e9b0846e12558ff71b687de41d0b0364313",
                    "size": 465
                }
            ]
        },
        "20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7c8dc70f24ed7c224dc74c21fe3405f91cc1594f9427f4b4b46cabfcd364d517",
                "size": 6828
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c23871528fb561cb33c0496b31d9e1ce1c7e8e10d1927bf7a027488a740af73",
                    "size": 6663456
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:11c06ab580e0129301b2c18d1b063e033b6498cbf9bc508bc8dc2b50ef2ab478",
                    "size": 465
                }
            ]
        },
        "20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0096b3734c749fe5733d2a36d6fa9bfb10c6cac179b714c5f5d2a2e13ea67ec5",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3332e25e4bfa58c3723cd183449d3228c1de161242034e0d3982e25e66a65fcc",
                    "size": 6663498
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f4d37843a4274539d85111b6bf11d6135cdafb17c3a25c710000463aadb9505",
                    "size": 466
                }
            ]
        },
        "20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:68683058d12b915cd932c3d69f328316cf2a86038fa11747409f7ee4aaf38352",
                "size": 6814
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc90511c2602acf1b891866eb9a980c7e143c1a5460fa7d911f82439c691f5ce",
                    "size": 6663859
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e806b8ac5152e2bbaeda70c6450df74b5cc792a0ca8c6b12e99b570814080557",
                    "size": 466
                }
            ]
        },
        "20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:37cb9e7e748502d00e2505ea03de0f9c3c875f4d26cc69193e07e74125317f9a",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7aec071292a8273b692a3624abd583b0f30dbcd44594103eef735bd56bf7e0d",
                    "size": 6663530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707a9d4f6c35fb513c936e4459685e69283b06182183b53db05c29c6c192b1ae",
                    "size": 466
                }
            ]
        },
        "36": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:13635b54935be1ad96784d008fe82588754b30def79349836f5b8c0e7befbccc",
                "size": 6813
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:082c1b0215e65b79bee57867d846182d55066d84b6536f8ce5cdfb4557925530",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42ba2d464197953ae0c3ea9e9a7a0862776bf9c6b9f3de24425d068cab220125",
                    "size": 19390844
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4964fb2db364d724426035e1a65a77fb7a7597a97ee108d28fdc5f65bb88355b",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30c2f7dc4c95c77dc1ca12e66dd393dae4e0e48b4bf2e1ecd5df4bb094a6764e",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b1bd7b752a01aabedcbb0120f942f8e9b40c1ea7d9dc536209ada8b69b743c6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c65f82c416d78c6bd93cb4f9d6a5524c5b78e47f5242ba83e2a7e56333387a14",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5aee459832c98a800d0f6b838ab0cffb57b28fcdf8ae32a265c871cb574db71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5cf4622ce0c22462ec9cfe76dd612a1ca686d195829264f741b1f70e652da646",
                    "size": 5931950
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68e9a49d4ae21801499248cd84c24a4ee89e12b07c741540a9a1eb766f35c7a3",
                    "size": 468
                }
            ]
        },
        "36-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6be68427bcb3dfd8ac7bce1c3ca98f735b0a874d90523f9dde9e1b6f1ae16ef9",
                "size": 6830
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f84e7c89b99816b1d57b18ba46b176593a4acde24112af0ebb15a3f9c6324bd",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49f6c1b96c0eb5bb7d920ec2b7b7d53ff87c64dca3b618aa5282842ce4964366",
                    "size": 19390698
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:091ccb00dd5140a07b30294f5acca80d118c0cf0a78d10114205fa88f128097e",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a53ba3f76b89db541ad5b2440966d7760158c62dcfdcf86a57a56ccabb1eab7",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf1196079c7d2d54dfd67774cc416684dcbccaf5ecadc944b3e7fac84f1b5688",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9322d7c54bfbad2f558788f1dd17351e75511d72efb30e63be1288a0373f3e09",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84641737dd371ea66763c59da29abcab846714470b969f81d5d69266ceca4f21",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0992f8b123308157bacf7263ab1b5c98f239a310212e061ee11cf5e3927b6320",
                    "size": 5931879
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489f1f1318b63943caccd92e81d546ea9709f2b268a9d3881e81011624fd56a1",
                    "size": 468
                }
            ]
        },
        "36-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:170e6fc3305d2909be8a973f28fb14f76656e8aac3c65a044f52b9234478e377",
                "size": 6830
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f84e7c89b99816b1d57b18ba46b176593a4acde24112af0ebb15a3f9c6324bd",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49f6c1b96c0eb5bb7d920ec2b7b7d53ff87c64dca3b618aa5282842ce4964366",
                    "size": 19390698
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:091ccb00dd5140a07b30294f5acca80d118c0cf0a78d10114205fa88f128097e",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a53ba3f76b89db541ad5b2440966d7760158c62dcfdcf86a57a56ccabb1eab7",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf1196079c7d2d54dfd67774cc416684dcbccaf5ecadc944b3e7fac84f1b5688",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9322d7c54bfbad2f558788f1dd17351e75511d72efb30e63be1288a0373f3e09",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84641737dd371ea66763c59da29abcab846714470b969f81d5d69266ceca4f21",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e9580408cb61281559bd880570b4ef36e70da31eed2a4c661f2b316e0e5d5b64",
                    "size": 5931932
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db4a23e2ca847caa9f7fd559c179d0cbcfcd06803397a413a7a8e4165d060747",
                    "size": 467
                }
            ]
        },
        "36-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f2ee92acec2b1abd59342f5570e86fbf5b71b07f998ea6d9d4176e3388c6cc78",
                "size": 6827
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7a0db0ff778242d33b334df3880f3377be078ede1389683094b9fc5ef625a8b",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e11ece4d18eb73e1f2478b744c2762a970279215b677363fffd763b4e66cbb20",
                    "size": 19390875
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0859dbd8c79863b41056cf1f05b8070d167a36f4722ff62e7692830b9813dc72",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1fb6c3b5aff923033461b6aced870ddbd9ecd23a6f1d33b947404edb036887d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5db6ae9e6237947c470a017ac42126a11b27bc1f4c45124b7abee8e979d5121d",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9784ee44190cc36d239aecc400341f0cdd989158bab82fd65d2360c337941dd6",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c96d7e580d362e4810be600d8366b5df4ef8a5d0acaf892f1a6d7991c532b9e8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c22ec716c9d06b2bb19ca16dcdabb4c53990117b5d6c0b00c2980263605239de",
                    "size": 5932076
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30b6c71d2e625cafb7d38d4ae3d892854ee6f2bdb957d972ede750bf271bad9e",
                    "size": 468
                }
            ]
        },
        "36-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9a9116caf03d72458ea3f6e3f2ab115193dd304dc94d723daa81d2f009206ed5",
                "size": 6830
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc51f944b49ce237b9f298b98365527f7e3798bf21bafd50e35866a556ed4e9",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:facc66dc89c7d7c447626eb18bd7ce32d146ce57cca4020a810c3ce4f591eca7",
                    "size": 19390749
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c83275ccf32f5cf0cba4d8f5f680a0359bf1a953f54b790f0045b2ceccf6223f",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b34d49a738cb74e7f50b246548d2e75750c65f65c48b0f17385c21e6803b996a",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4321ae63b784037f1250a339377b9aa8b8b667eaaa46f6ee1b5bc892702f6dc",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6b178a90bf42de76fa696cd5c34841d8b28240ce520eb2cbfb604e148aaf6cb",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56991078aebec441802470063e40c974fd84cab53be8c0302e8c05f1a88955a0",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d89136665f9b1bf07effe6fc78d1ab252d968b134594e566612baa3b0f8a097d",
                    "size": 5932017
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98bfe644c04362aec506c54311b9a88266014d9757aadbf6bc2923463492919c",
                    "size": 468
                }
            ]
        },
        "36-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:89e9617613f72897f43942a366f153c17829c3d1afcca0c40348ced894c25af1",
                "size": 6813
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56dc14cfe3300a84ae27764721db64d2f98d454a9b42a6c9d7cb9d30a172a070",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f5d5bfba91d41861de1fb090964f20b327211c1c947a70c5c06ff50f343cb09",
                    "size": 19390970
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7510c6c08be3cae0d913e087b2ab0adfc335aa94a8b99e269e3a3aaaa9bdc39",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f364d329a6963313f859e7df4b3254176e848f77264ad4b07f4d4267197066f4",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94abcdf5f2faad93c90676ffe091e188863184745ebc512c40b1f2ae1fbd2bbb",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33198baaf3af80d3355e63a11e4f2a4f308ff51588ae697ec514e96b8ce5ca0e",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:079c572b5983bd27847370979958f7a75f320fbf3b0b1df78d317296b7aa988c",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e986def79f8c11aa84d19e544ee0877eb1eff202c98d18782d955939d24192ff",
                    "size": 5932208
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f81e0f06d4177167a345bc58c05b36e1b7a195f1674acefe08314ee971791e1c",
                    "size": 468
                }
            ]
        },
        "36-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:13635b54935be1ad96784d008fe82588754b30def79349836f5b8c0e7befbccc",
                "size": 6813
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:082c1b0215e65b79bee57867d846182d55066d84b6536f8ce5cdfb4557925530",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42ba2d464197953ae0c3ea9e9a7a0862776bf9c6b9f3de24425d068cab220125",
                    "size": 19390844
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4964fb2db364d724426035e1a65a77fb7a7597a97ee108d28fdc5f65bb88355b",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30c2f7dc4c95c77dc1ca12e66dd393dae4e0e48b4bf2e1ecd5df4bb094a6764e",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b1bd7b752a01aabedcbb0120f942f8e9b40c1ea7d9dc536209ada8b69b743c6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c65f82c416d78c6bd93cb4f9d6a5524c5b78e47f5242ba83e2a7e56333387a14",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5aee459832c98a800d0f6b838ab0cffb57b28fcdf8ae32a265c871cb574db71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5cf4622ce0c22462ec9cfe76dd612a1ca686d195829264f741b1f70e652da646",
                    "size": 5931950
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68e9a49d4ae21801499248cd84c24a4ee89e12b07c741540a9a1eb766f35c7a3",
                    "size": 468
                }
            ]
        },
        "36-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cc851ed19ae74aefe6833ec51f45f8d75eb19f2758aad0fb557646173ce8f54e",
                "size": 7574
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8764ad086e58a97c06142ee94b9611c18210c22e68df2b5a48a9642655300718",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b36131f08816b90f920c5a468157221fdedd3d2135cf04285071fdee5c863b5",
                    "size": 19391006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d34e3e4b0ce81bf5348d5f2e6ca0156b3814f6e6593c5ada871f5f985255bc86",
                    "size": 189028355
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8fd98c44fe8de3eab8482ae2bbc1daab8ae83943d60e62c14804b3a610398df",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9d996d83302baab279626d16a59c52db02af14ecdc464dd6da80b60e784e3e2",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98f156bc669d3b72f6d0fbd7d2ae05bbe0a4153e02dc8a330f89d1d1571509a6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82e21acf93e28ef258e7275e925c15f4924cb44c67031e28927da5a0ae68fb1f",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8e5300ef4596be4c3f87cdcce3ccf8c3581658a69caba06d3b1e117cd749a5b",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46b01393c6d02f26a51c071992da3ba09208c723091d6fe2c64e6a37d1ebf715",
                    "size": 10871164
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70856698182a7bc6ea90099acb4e58e60bd224dc54e462713094e0b70b3b75e9",
                    "size": 467
                }
            ]
        },
        "36-build-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5bde9f5e32f48a878bf7908990340af40c5157a75fabe438630bb85c0fdacb65",
                "size": 7590
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9443a68ea8b80c77056653c9cdb28763df5baab71918d223778c8e0a655042dc",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbcd0a1bfe7330a8b54df75a84c2a41583064c469f4fe5ba60a905bdbf62fd7c",
                    "size": 19390762
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b310b92c8e727f77e093a13c020968a8f4cdd70676ee0cfb910762a39bf184e6",
                    "size": 189028276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e66e95237a2ff66129bccc5e6fc8c73bb8f13b633451ee5e80e53a18094b6791",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b1b257cd24c76610045b35d843aebc841260586162729aea2df36f2200ab158",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e16611172f7e49e50fe3355b3ede6851b1eddda877a327933135185104a073b",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:651624332fea39ffa8740cc6c5b66b8cdf0125b12dc8dfb87ca71393c5ba8e8a",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a88c2d44d44b074055e19e9f1139ede15c46f572638dcabf4341f848e59e9747",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4db61851a28ff2c9abf2bac36523e6e0152c3d1fb2245eab1cc2a66a16b1512",
                    "size": 10870837
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fddb90acf0f05fd362da51adc0331b09de64bd29e16a296e0d525a3eee1d2f0",
                    "size": 467
                }
            ]
        },
        "36-build-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ecee13577a5f2d213f45df7ffcb15f825ad25c8660519aebcab8d1ec2d812f44",
                "size": 7588
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9443a68ea8b80c77056653c9cdb28763df5baab71918d223778c8e0a655042dc",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbcd0a1bfe7330a8b54df75a84c2a41583064c469f4fe5ba60a905bdbf62fd7c",
                    "size": 19390762
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b310b92c8e727f77e093a13c020968a8f4cdd70676ee0cfb910762a39bf184e6",
                    "size": 189028276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e66e95237a2ff66129bccc5e6fc8c73bb8f13b633451ee5e80e53a18094b6791",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b1b257cd24c76610045b35d843aebc841260586162729aea2df36f2200ab158",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e16611172f7e49e50fe3355b3ede6851b1eddda877a327933135185104a073b",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:651624332fea39ffa8740cc6c5b66b8cdf0125b12dc8dfb87ca71393c5ba8e8a",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a88c2d44d44b074055e19e9f1139ede15c46f572638dcabf4341f848e59e9747",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f1ffb09b9daa33ab86ac4395b0d7bdb7d90430c75dcf5530bb55c9c6472193c",
                    "size": 10870824
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37c402236ef7cc6cd7e8aedd6710381183b49f0a5bddcd6c3a9792f49525f739",
                    "size": 469
                }
            ]
        },
        "36-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d4c572d823c2c84f230abd536333b2c0520951f6605623ac3494b26fab540a3d",
                "size": 7587
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1c5949f4af1f6c65c0792e39a3f0f9eea4094bb6e8643aa16bf5ec735519990",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9f76dd63f11fe26d3f455a753de3e4aaf382e2f8a5c03722e4d98c28c769b14",
                    "size": 19390832
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64aa35e762e682b6a09603d7accc7d7dd4ba80d936e42b6f74d9a4c7cdb9065f",
                    "size": 189027895
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:638d538bbfb9dc71484135e0cb6d183c8f98afaf1038d86354a7598480517243",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:264df434a5e344308c5e8c657c21217955d59a6f06e5a963826823b03ac3799d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40cb454c93602c9789957f243277122d3c82fffd90376a441a8ce9a5656bf451",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abf8fc480b66a4343237269cbf5e48d28935902a2730eee845750f319c7927b5",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18bfe318852cef5a0c9ca4b6e59b8b39bc0018e1b1f0cf13ed00af8611c8f8e1",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc715b69c9592fbee8b883721a7998bb81d6ba450e1c36332af8471a081671bc",
                    "size": 10870767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac28c4622b53e7b908876736a34b98b19396f80cd929d63e6bb707f60bd537ac",
                    "size": 466
                }
            ]
        },
        "36-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cea75a999dd594d8fa72e4993e43b5608086bd55e0f4958df945479b63aa14d4",
                "size": 7589
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69cc4f4fa6068c7e20f64e589c6cb6f79356c3953b6ddec2251cd909a1f6e93a",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54ed8c26b2264b097115021b57f1a494f521ebeb9050fa2099a5f2491c8dcb7c",
                    "size": 19390870
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa85abca87ed70710c728e1ee8a7547072773622b487eb13d75f0583dc6b611a",
                    "size": 189028170
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b26c60679cfda8d91f0e078bde48ff45bf147034eb56c860b0b09f7defd1a5bc",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf5b4b90867d019b607aa9455d5dea09f4b01831cc0acf2dfa05d0511ef9ed3e",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b3d8ff0c32a5ed397bf09b7c1f82167c37008cf70fefb38ce1127d24ed697e5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70846d0457808ad2411aa8acabe8981fbee880773bc320f139769b5eaa431b1a",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d18df4bf438b32d5dc9239c1ec3dd8a97bbbb891e330233caee265b4bf070aba",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbba86757193fc7add145e9bfc835c06b202ca93e1fcb62d3c4384e6ab3f0975",
                    "size": 10870645
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:401f46e38e1be35875f8353106f0213ff264eefab02e30d0e10679218fd35c3d",
                    "size": 467
                }
            ]
        },
        "36-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:73b0b6fd13477d5b47f294645c748aad39c57843031f9c4e5039457c1a276420",
                "size": 7573
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38deeb2234b41dc88ad2e4707f14aa15ac9f83b439b4a2de9154aed58340140c",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b51db2e4f1ba1a1df6842273518f19453349bf68fa0af2adee47e8982db390b7",
                    "size": 19390797
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3459d5d38aace74a5cb60ddfa1ebd56751ec503521d2243e4264415574a18a28",
                    "size": 189028346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84cae1f53caf8feb4123289a122f72219033bda6b18c120821e037301caa372f",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4adff2f3c484c54b270f35c8cc9cf2f9c5a8adb8967217c1e8705b24fd421a0",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9376e50f8875449ef3f41b8ba36304086f002888a0714e41c154e63a6a72f8e9",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:627df8dec2e0b9cc214f41323126835112bf4aff4844fddc9dc9a0b049df17cd",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95d0ce7a36a5a599817494fdddbb8292782785761cd0c1dece72371edc2c9405",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:848ec15258c3ea9db1d5e216e3093e5f6988e8bb409f1e94cdedbb5cc6dbf664",
                    "size": 10870591
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:665bd056bbeff8529d8549a8d5715fd58ef84c3d3e50f425c598f3dcf7a350f5",
                    "size": 467
                }
            ]
        },
        "36-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:cc851ed19ae74aefe6833ec51f45f8d75eb19f2758aad0fb557646173ce8f54e",
                "size": 7574
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8764ad086e58a97c06142ee94b9611c18210c22e68df2b5a48a9642655300718",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b36131f08816b90f920c5a468157221fdedd3d2135cf04285071fdee5c863b5",
                    "size": 19391006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d34e3e4b0ce81bf5348d5f2e6ca0156b3814f6e6593c5ada871f5f985255bc86",
                    "size": 189028355
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8fd98c44fe8de3eab8482ae2bbc1daab8ae83943d60e62c14804b3a610398df",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9d996d83302baab279626d16a59c52db02af14ecdc464dd6da80b60e784e3e2",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98f156bc669d3b72f6d0fbd7d2ae05bbe0a4153e02dc8a330f89d1d1571509a6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82e21acf93e28ef258e7275e925c15f4924cb44c67031e28927da5a0ae68fb1f",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8e5300ef4596be4c3f87cdcce3ccf8c3581658a69caba06d3b1e117cd749a5b",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46b01393c6d02f26a51c071992da3ba09208c723091d6fe2c64e6a37d1ebf715",
                    "size": 10871164
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70856698182a7bc6ea90099acb4e58e60bd224dc54e462713094e0b70b3b75e9",
                    "size": 467
                }
            ]
        },
        "36-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:13635b54935be1ad96784d008fe82588754b30def79349836f5b8c0e7befbccc",
                "size": 6813
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:082c1b0215e65b79bee57867d846182d55066d84b6536f8ce5cdfb4557925530",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42ba2d464197953ae0c3ea9e9a7a0862776bf9c6b9f3de24425d068cab220125",
                    "size": 19390844
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4964fb2db364d724426035e1a65a77fb7a7597a97ee108d28fdc5f65bb88355b",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30c2f7dc4c95c77dc1ca12e66dd393dae4e0e48b4bf2e1ecd5df4bb094a6764e",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b1bd7b752a01aabedcbb0120f942f8e9b40c1ea7d9dc536209ada8b69b743c6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c65f82c416d78c6bd93cb4f9d6a5524c5b78e47f5242ba83e2a7e56333387a14",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5aee459832c98a800d0f6b838ab0cffb57b28fcdf8ae32a265c871cb574db71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5cf4622ce0c22462ec9cfe76dd612a1ca686d195829264f741b1f70e652da646",
                    "size": 5931950
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68e9a49d4ae21801499248cd84c24a4ee89e12b07c741540a9a1eb766f35c7a3",
                    "size": 468
                }
            ]
        },
        "36-run-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6be68427bcb3dfd8ac7bce1c3ca98f735b0a874d90523f9dde9e1b6f1ae16ef9",
                "size": 6830
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f84e7c89b99816b1d57b18ba46b176593a4acde24112af0ebb15a3f9c6324bd",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49f6c1b96c0eb5bb7d920ec2b7b7d53ff87c64dca3b618aa5282842ce4964366",
                    "size": 19390698
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:091ccb00dd5140a07b30294f5acca80d118c0cf0a78d10114205fa88f128097e",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a53ba3f76b89db541ad5b2440966d7760158c62dcfdcf86a57a56ccabb1eab7",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf1196079c7d2d54dfd67774cc416684dcbccaf5ecadc944b3e7fac84f1b5688",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9322d7c54bfbad2f558788f1dd17351e75511d72efb30e63be1288a0373f3e09",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84641737dd371ea66763c59da29abcab846714470b969f81d5d69266ceca4f21",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0992f8b123308157bacf7263ab1b5c98f239a310212e061ee11cf5e3927b6320",
                    "size": 5931879
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489f1f1318b63943caccd92e81d546ea9709f2b268a9d3881e81011624fd56a1",
                    "size": 468
                }
            ]
        },
        "36-run-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:170e6fc3305d2909be8a973f28fb14f76656e8aac3c65a044f52b9234478e377",
                "size": 6830
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f84e7c89b99816b1d57b18ba46b176593a4acde24112af0ebb15a3f9c6324bd",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49f6c1b96c0eb5bb7d920ec2b7b7d53ff87c64dca3b618aa5282842ce4964366",
                    "size": 19390698
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:091ccb00dd5140a07b30294f5acca80d118c0cf0a78d10114205fa88f128097e",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a53ba3f76b89db541ad5b2440966d7760158c62dcfdcf86a57a56ccabb1eab7",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf1196079c7d2d54dfd67774cc416684dcbccaf5ecadc944b3e7fac84f1b5688",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9322d7c54bfbad2f558788f1dd17351e75511d72efb30e63be1288a0373f3e09",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84641737dd371ea66763c59da29abcab846714470b969f81d5d69266ceca4f21",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e9580408cb61281559bd880570b4ef36e70da31eed2a4c661f2b316e0e5d5b64",
                    "size": 5931932
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db4a23e2ca847caa9f7fd559c179d0cbcfcd06803397a413a7a8e4165d060747",
                    "size": 467
                }
            ]
        },
        "36-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f2ee92acec2b1abd59342f5570e86fbf5b71b07f998ea6d9d4176e3388c6cc78",
                "size": 6827
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7a0db0ff778242d33b334df3880f3377be078ede1389683094b9fc5ef625a8b",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e11ece4d18eb73e1f2478b744c2762a970279215b677363fffd763b4e66cbb20",
                    "size": 19390875
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0859dbd8c79863b41056cf1f05b8070d167a36f4722ff62e7692830b9813dc72",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1fb6c3b5aff923033461b6aced870ddbd9ecd23a6f1d33b947404edb036887d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5db6ae9e6237947c470a017ac42126a11b27bc1f4c45124b7abee8e979d5121d",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9784ee44190cc36d239aecc400341f0cdd989158bab82fd65d2360c337941dd6",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c96d7e580d362e4810be600d8366b5df4ef8a5d0acaf892f1a6d7991c532b9e8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c22ec716c9d06b2bb19ca16dcdabb4c53990117b5d6c0b00c2980263605239de",
                    "size": 5932076
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30b6c71d2e625cafb7d38d4ae3d892854ee6f2bdb957d972ede750bf271bad9e",
                    "size": 468
                }
            ]
        },
        "36-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9a9116caf03d72458ea3f6e3f2ab115193dd304dc94d723daa81d2f009206ed5",
                "size": 6830
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc51f944b49ce237b9f298b98365527f7e3798bf21bafd50e35866a556ed4e9",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:facc66dc89c7d7c447626eb18bd7ce32d146ce57cca4020a810c3ce4f591eca7",
                    "size": 19390749
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c83275ccf32f5cf0cba4d8f5f680a0359bf1a953f54b790f0045b2ceccf6223f",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b34d49a738cb74e7f50b246548d2e75750c65f65c48b0f17385c21e6803b996a",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4321ae63b784037f1250a339377b9aa8b8b667eaaa46f6ee1b5bc892702f6dc",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6b178a90bf42de76fa696cd5c34841d8b28240ce520eb2cbfb604e148aaf6cb",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56991078aebec441802470063e40c974fd84cab53be8c0302e8c05f1a88955a0",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d89136665f9b1bf07effe6fc78d1ab252d968b134594e566612baa3b0f8a097d",
                    "size": 5932017
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98bfe644c04362aec506c54311b9a88266014d9757aadbf6bc2923463492919c",
                    "size": 468
                }
            ]
        },
        "36-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:89e9617613f72897f43942a366f153c17829c3d1afcca0c40348ced894c25af1",
                "size": 6813
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56dc14cfe3300a84ae27764721db64d2f98d454a9b42a6c9d7cb9d30a172a070",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f5d5bfba91d41861de1fb090964f20b327211c1c947a70c5c06ff50f343cb09",
                    "size": 19390970
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7510c6c08be3cae0d913e087b2ab0adfc335aa94a8b99e269e3a3aaaa9bdc39",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f364d329a6963313f859e7df4b3254176e848f77264ad4b07f4d4267197066f4",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94abcdf5f2faad93c90676ffe091e188863184745ebc512c40b1f2ae1fbd2bbb",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33198baaf3af80d3355e63a11e4f2a4f308ff51588ae697ec514e96b8ce5ca0e",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:079c572b5983bd27847370979958f7a75f320fbf3b0b1df78d317296b7aa988c",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e986def79f8c11aa84d19e544ee0877eb1eff202c98d18782d955939d24192ff",
                    "size": 5932208
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f81e0f06d4177167a345bc58c05b36e1b7a195f1674acefe08314ee971791e1c",
                    "size": 468
                }
            ]
        },
        "36-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:13635b54935be1ad96784d008fe82588754b30def79349836f5b8c0e7befbccc",
                "size": 6813
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:082c1b0215e65b79bee57867d846182d55066d84b6536f8ce5cdfb4557925530",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42ba2d464197953ae0c3ea9e9a7a0862776bf9c6b9f3de24425d068cab220125",
                    "size": 19390844
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4964fb2db364d724426035e1a65a77fb7a7597a97ee108d28fdc5f65bb88355b",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30c2f7dc4c95c77dc1ca12e66dd393dae4e0e48b4bf2e1ecd5df4bb094a6764e",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b1bd7b752a01aabedcbb0120f942f8e9b40c1ea7d9dc536209ada8b69b743c6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c65f82c416d78c6bd93cb4f9d6a5524c5b78e47f5242ba83e2a7e56333387a14",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5aee459832c98a800d0f6b838ab0cffb57b28fcdf8ae32a265c871cb574db71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5cf4622ce0c22462ec9cfe76dd612a1ca686d195829264f741b1f70e652da646",
                    "size": 5931950
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68e9a49d4ae21801499248cd84c24a4ee89e12b07c741540a9a1eb766f35c7a3",
                    "size": 468
                }
            ]
        },
        "37": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:37cb9e7e748502d00e2505ea03de0f9c3c875f4d26cc69193e07e74125317f9a",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7aec071292a8273b692a3624abd583b0f30dbcd44594103eef735bd56bf7e0d",
                    "size": 6663530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707a9d4f6c35fb513c936e4459685e69283b06182183b53db05c29c6c192b1ae",
                    "size": 466
                }
            ]
        },
        "37-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:51784b43d34bdab445763039bf67445c97acdc3847a80191baf2e9db7ac72ae1",
                "size": 6829
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:043f40b98b892b40de8f366a4877d9d156b79e078c159e8ba29e516bd6d1c1f3",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5741c1c9c7a9fefc40c6616a877c25ae7e2d3b4e3f445bc7366d05c2eadaabf",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b7fbfed82651bb013b52b5f9e575eb057922dd32dbea33546ffd3791fd6f318",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31345e8a4ebd6f75c8d04b1987bb10dda6e287bb914c12f9506f73ae22df8918",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64c5ff84cb6737b8e4034ed8c0c032049484812c53fac7bd3922ac1887619c7b",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8151e9be2f5daef339c61f7281525da71de532fd3a55c08d147c7de15b1c0e4b",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c014d4420297605e816aee496643987e4894d4bccb07a796c70c571e2feb60d8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b08fce6652cca23dbcc24643d4e3a575ab16b891a2edf31d5519a6338d825663",
                    "size": 6663437
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84654d23dede7d884d759d913eaa352e537e1ba43c15703c36a1d8dbe077f952",
                    "size": 469
                }
            ]
        },
        "37-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:35c30e539ba616136969c19fd2628cb9b354aba79404715d51ddcf5b84afebeb",
                "size": 6829
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:043f40b98b892b40de8f366a4877d9d156b79e078c159e8ba29e516bd6d1c1f3",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5741c1c9c7a9fefc40c6616a877c25ae7e2d3b4e3f445bc7366d05c2eadaabf",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b7fbfed82651bb013b52b5f9e575eb057922dd32dbea33546ffd3791fd6f318",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31345e8a4ebd6f75c8d04b1987bb10dda6e287bb914c12f9506f73ae22df8918",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64c5ff84cb6737b8e4034ed8c0c032049484812c53fac7bd3922ac1887619c7b",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8151e9be2f5daef339c61f7281525da71de532fd3a55c08d147c7de15b1c0e4b",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c014d4420297605e816aee496643987e4894d4bccb07a796c70c571e2feb60d8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:040e085cd8db38291ae27fa077bd0b04dbe1725df1d7a2e464583e47d0725975",
                    "size": 6663481
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a57d82caa68b7e3417e057c44859b688e7d8f5056d75e53733618054379c9bc",
                    "size": 469
                }
            ]
        },
        "37-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b16be1389e6a2497b5b4fc2b0e8c68ae8b6fe69a4edb7538ea918bd477bcc522",
                "size": 6828
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd87690b18c87c13099904842202959acc4018da84cfac16a5d4c7a746e45364",
                    "size": 6663373
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5109acecd52b59d513d2295f5bb77e9b0846e12558ff71b687de41d0b0364313",
                    "size": 465
                }
            ]
        },
        "37-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7c8dc70f24ed7c224dc74c21fe3405f91cc1594f9427f4b4b46cabfcd364d517",
                "size": 6828
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c23871528fb561cb33c0496b31d9e1ce1c7e8e10d1927bf7a027488a740af73",
                    "size": 6663456
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:11c06ab580e0129301b2c18d1b063e033b6498cbf9bc508bc8dc2b50ef2ab478",
                    "size": 465
                }
            ]
        },
        "37-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0096b3734c749fe5733d2a36d6fa9bfb10c6cac179b714c5f5d2a2e13ea67ec5",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3332e25e4bfa58c3723cd183449d3228c1de161242034e0d3982e25e66a65fcc",
                    "size": 6663498
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f4d37843a4274539d85111b6bf11d6135cdafb17c3a25c710000463aadb9505",
                    "size": 466
                }
            ]
        },
        "37-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:68683058d12b915cd932c3d69f328316cf2a86038fa11747409f7ee4aaf38352",
                "size": 6814
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc90511c2602acf1b891866eb9a980c7e143c1a5460fa7d911f82439c691f5ce",
                    "size": 6663859
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e806b8ac5152e2bbaeda70c6450df74b5cc792a0ca8c6b12e99b570814080557",
                    "size": 466
                }
            ]
        },
        "37-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:37cb9e7e748502d00e2505ea03de0f9c3c875f4d26cc69193e07e74125317f9a",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7aec071292a8273b692a3624abd583b0f30dbcd44594103eef735bd56bf7e0d",
                    "size": 6663530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707a9d4f6c35fb513c936e4459685e69283b06182183b53db05c29c6c192b1ae",
                    "size": 466
                }
            ]
        },
        "37-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:fe6f35709042bdc22c3e187edb23dfae4bf9e589354e71ad3f0fa0e164239297",
                "size": 7570
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aaea1f9b035f9fe541cee84177d8f62549cac9ae755e6ddcbe20906c0526c36",
                    "size": 14184615
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cbab7b2bf5c1e35e9e44a2498d05e4607fe43973c067c593505423b0b3a711c",
                    "size": 468
                }
            ]
        },
        "37-build-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:068124f6486f785ca7e86e9f373f990c2aec6bfb7a2b6cb79cb60eda86d99b7c",
                "size": 7585
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af78cc0520f170b906a82f421a37356d2c269781502c5f7d2c396abdfa55d6a9",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7edbd9813867cb3dddc51da4d40538bd9695d5b483b8ed59539b24b19c133b4e",
                    "size": 23448737
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44dc7c873245302e133bf36d8149b48643b19afe9a7540a40abe1eae736eaed8",
                    "size": 217029550
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dc8c6e0f74fad71d0a2e17368a0c25cccb51945f997463748b8def1421f4f81",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc00a878dab5ef147d98e03eb2e1a5a19985e5e5fdcd18ff8defac4938695b5",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb87ee75d18626f6429938563bfa6b76bda1ac557019c8354f99cc04c16fb1d0",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e36e3c571cd31032afd2e63729a6a6885268fbecb1a32d4ab477e88b760c6925",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75fc38abf14743c0cb98e30147fdaf527dc87c34a8cd91db118b48425c25a493",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:792ff35cc18b07fcf439abd9519a4074b5d3543db3fb94f0e03e871e3fd227d2",
                    "size": 14184625
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:011bd9a150f78367988387a7fc050006c4493e136ce02a8e102702a774a67fec",
                    "size": 468
                }
            ]
        },
        "37-build-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2b3374aef4621bc7d2af5f9602338f0386a3d56d43c677891eea8b2d07a470df",
                "size": 7587
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af78cc0520f170b906a82f421a37356d2c269781502c5f7d2c396abdfa55d6a9",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7edbd9813867cb3dddc51da4d40538bd9695d5b483b8ed59539b24b19c133b4e",
                    "size": 23448737
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44dc7c873245302e133bf36d8149b48643b19afe9a7540a40abe1eae736eaed8",
                    "size": 217029550
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dc8c6e0f74fad71d0a2e17368a0c25cccb51945f997463748b8def1421f4f81",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc00a878dab5ef147d98e03eb2e1a5a19985e5e5fdcd18ff8defac4938695b5",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb87ee75d18626f6429938563bfa6b76bda1ac557019c8354f99cc04c16fb1d0",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e36e3c571cd31032afd2e63729a6a6885268fbecb1a32d4ab477e88b760c6925",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75fc38abf14743c0cb98e30147fdaf527dc87c34a8cd91db118b48425c25a493",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6fc2d8bdfc668f2614fd4b225a2e4150b8633d000c089e5437af6fd45dca540",
                    "size": 14184706
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ceb59bc2a8b606024132edb50e04b7c618da7ccda13517446d0ac04f11696f63",
                    "size": 469
                }
            ]
        },
        "37-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1059e76389d475dca0b8763a3283f7701b5a36b14d766baec3c86369e07eb5d0",
                "size": 7589
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65764d35c6ba7bc01cd8c1c7c80dedd0fba41e8aed4fe20f32b8104e40811b27",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ccb26de59532c7a3ca4e330f6259f0a22d5502c63fce64953cfb835da2a89232",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dbffb8cd0d199db9da89c0a8f6be633d403ae9577895ef76ed8559e0e6a2fce6",
                    "size": 217030397
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2cdbf2b50a12d0c904c51a1aa6a78d769e31ab23e681213a8dcd625845a43fa",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:caf29b48f9a19f9f082026316d26fb42e73b1f7a2585ff1f86457c794c8ca68d",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:821dddb4fbe51867593b530bacd209ea5cec4104a56beb6362389970d19aaa68",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0fa218cb0068ba037fef0d258fb86dfbfed2c4590d7b39e86733b5c8b69f61b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d68feee9a64aaf2316e4f6f65cdc6fbf9e80169d4bf9cd0152c507a525b3155",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30e23a82471c45da8d0d1a12760f57831acf7ec22dbaea0418de73b75cedafd4",
                    "size": 14185002
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4fe5abd158988f3f32bd5b045a90110c4e7cd2bd815eb3ff7d45189d4c3f0fa7",
                    "size": 466
                }
            ]
        },
        "37-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:59af416548f1762a9ac7de13753e54d1280e5cab21741ea86d97414048b099d2",
                "size": 7589
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:365c152eab29768a6002cd30191cfe30aa5a9c7670afb3dd05e5568d60598b53",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cfac25b66436aaad9254043374a8a0bce94c1fcc73328f0009e4c633a489dab",
                    "size": 23448738
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec58c8baedb56f03697759c56cc8b52846aa6b359079d478ffe547bd11683f2",
                    "size": 217029920
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5ea14a5b029f6e9168ba600f7829994ee94710831ae531cc8575103cb5f9076",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b5e5aded2a12ddea2c899e597f6b276bdbb070022f582eb5ffef5eab6706f4c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fdfe10b79cf925c4a4f205beee5164056995aa8d5d10cae49aeae14093d612d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:563ad2bf80f0e61e8048e26e2680eceb622c9b84a0e9b242dc26a7272ef9ee62",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87d42fc86fb1bef824e1ec397f2adeb648ebde6cb39d75fa5d79da952fead6a4",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:47a9c4bb6c6c3684dc4f69be0c165535bbe430f84638928897f0a788c38a4c79",
                    "size": 14185064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8330734e2e0d178d1d7e6db468a65bdd75294ca0a3c053123af6079593b9e9d0",
                    "size": 466
                }
            ]
        },
        "37-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c698c9a9621d0717f0ae721d0cb7d46ef5582cd8e090bb731a56e923d7178673",
                "size": 7570
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3a4176e53d7e5697395953f42ef76b08d9fef8fe5a662a442cd4f13740c7a1d",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1d05a709ad59f905b2bb738079267053a09a0f4f535e32192bcd83e0dce163c",
                    "size": 23448641
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f3f5fce4a1b94b586b0523b225e6b5436e9dd40567f898aaaffd4c2302a2399",
                    "size": 217029391
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de3c36bd181e84497d428d49b10abc3694cd9a0c75ec31064623d54cb4f8c211",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:565296760a52acc955f0523e8e8213020ff97bec4df095452a9633f053cb710d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf3fbff6d013e83413ee8ed775faa0f5e3350e9b987d24b28cb8715ea67d31ed",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363ad41c733c6b3e9c7a4610329a637d3d876504b93320bb9b4612bba294335",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38693fb89d5d2d6143564a7b4bd2d1c7da21077550cbe4d5e8a7ec5096625ff1",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71206ee9506b1c928e71d4e32ecf00af73370d8adfd495ada41d43cbab3abb75",
                    "size": 14184582
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a3f18913787da49f9c675ce2d79ac9909314af6711d9c1c4651cf5590d124ce",
                    "size": 464
                }
            ]
        },
        "37-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:568f437ba3804ca5163da528c57bacd878efadb2d08cd983fe0e40999ac8c6c9",
                "size": 7574
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e54c1365f15bf88b17ba38f79d2a428ac06b2fadf6f6c91f27bb25c858dbc60",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:017b908d94c1c349a53970523ee7a139bef37f34ad362e03d6bec2d726504a0d",
                    "size": 23448703
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b5c50d01e785c4728ab89718fa8aaa45a81c0af2408ac0cc79f3ee163c253bd",
                    "size": 217028541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d83e2fae00f6ab84a73baecccee1b9773d59ae4b450a12e360a5effca4944ac4",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fadda5faf2fcc02b62f25d0f9c548bc0d5c1abdeda6da2328fc79ddb5b8b91ca",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1e9b66fa7cafdd2423279eb1c13f4052734fd9472c334ca49bfa60216bfccc8",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cbd57e7f4360c9cbeecd7408e549686853d4c97c491b59f4d07d320805ce98a",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4759f7eafc183e7e416b2fb6e564ecd7cf14425e5e7ccad33b50b3ea539f38e",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85f769a5c5cf4b2e25a05e7cbbedec7bb1072175fd1c0f7a9acdfd73871083ca",
                    "size": 14184843
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b14b3d28f0f75e2822fcdacb0b06b4698875a708ec973bbf98dc2e1cfa203351",
                    "size": 468
                }
            ]
        },
        "37-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:fe6f35709042bdc22c3e187edb23dfae4bf9e589354e71ad3f0fa0e164239297",
                "size": 7570
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aaea1f9b035f9fe541cee84177d8f62549cac9ae755e6ddcbe20906c0526c36",
                    "size": 14184615
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cbab7b2bf5c1e35e9e44a2498d05e4607fe43973c067c593505423b0b3a711c",
                    "size": 468
                }
            ]
        },
        "37-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:37cb9e7e748502d00e2505ea03de0f9c3c875f4d26cc69193e07e74125317f9a",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7aec071292a8273b692a3624abd583b0f30dbcd44594103eef735bd56bf7e0d",
                    "size": 6663530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707a9d4f6c35fb513c936e4459685e69283b06182183b53db05c29c6c192b1ae",
                    "size": 466
                }
            ]
        },
        "37-run-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:51784b43d34bdab445763039bf67445c97acdc3847a80191baf2e9db7ac72ae1",
                "size": 6829
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:043f40b98b892b40de8f366a4877d9d156b79e078c159e8ba29e516bd6d1c1f3",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5741c1c9c7a9fefc40c6616a877c25ae7e2d3b4e3f445bc7366d05c2eadaabf",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b7fbfed82651bb013b52b5f9e575eb057922dd32dbea33546ffd3791fd6f318",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31345e8a4ebd6f75c8d04b1987bb10dda6e287bb914c12f9506f73ae22df8918",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64c5ff84cb6737b8e4034ed8c0c032049484812c53fac7bd3922ac1887619c7b",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8151e9be2f5daef339c61f7281525da71de532fd3a55c08d147c7de15b1c0e4b",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c014d4420297605e816aee496643987e4894d4bccb07a796c70c571e2feb60d8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b08fce6652cca23dbcc24643d4e3a575ab16b891a2edf31d5519a6338d825663",
                    "size": 6663437
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84654d23dede7d884d759d913eaa352e537e1ba43c15703c36a1d8dbe077f952",
                    "size": 469
                }
            ]
        },
        "37-run-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:35c30e539ba616136969c19fd2628cb9b354aba79404715d51ddcf5b84afebeb",
                "size": 6829
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:043f40b98b892b40de8f366a4877d9d156b79e078c159e8ba29e516bd6d1c1f3",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5741c1c9c7a9fefc40c6616a877c25ae7e2d3b4e3f445bc7366d05c2eadaabf",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b7fbfed82651bb013b52b5f9e575eb057922dd32dbea33546ffd3791fd6f318",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31345e8a4ebd6f75c8d04b1987bb10dda6e287bb914c12f9506f73ae22df8918",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64c5ff84cb6737b8e4034ed8c0c032049484812c53fac7bd3922ac1887619c7b",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8151e9be2f5daef339c61f7281525da71de532fd3a55c08d147c7de15b1c0e4b",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c014d4420297605e816aee496643987e4894d4bccb07a796c70c571e2feb60d8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:040e085cd8db38291ae27fa077bd0b04dbe1725df1d7a2e464583e47d0725975",
                    "size": 6663481
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a57d82caa68b7e3417e057c44859b688e7d8f5056d75e53733618054379c9bc",
                    "size": 469
                }
            ]
        },
        "37-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b16be1389e6a2497b5b4fc2b0e8c68ae8b6fe69a4edb7538ea918bd477bcc522",
                "size": 6828
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd87690b18c87c13099904842202959acc4018da84cfac16a5d4c7a746e45364",
                    "size": 6663373
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5109acecd52b59d513d2295f5bb77e9b0846e12558ff71b687de41d0b0364313",
                    "size": 465
                }
            ]
        },
        "37-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7c8dc70f24ed7c224dc74c21fe3405f91cc1594f9427f4b4b46cabfcd364d517",
                "size": 6828
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c23871528fb561cb33c0496b31d9e1ce1c7e8e10d1927bf7a027488a740af73",
                    "size": 6663456
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:11c06ab580e0129301b2c18d1b063e033b6498cbf9bc508bc8dc2b50ef2ab478",
                    "size": 465
                }
            ]
        },
        "37-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0096b3734c749fe5733d2a36d6fa9bfb10c6cac179b714c5f5d2a2e13ea67ec5",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3332e25e4bfa58c3723cd183449d3228c1de161242034e0d3982e25e66a65fcc",
                    "size": 6663498
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f4d37843a4274539d85111b6bf11d6135cdafb17c3a25c710000463aadb9505",
                    "size": 466
                }
            ]
        },
        "37-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:68683058d12b915cd932c3d69f328316cf2a86038fa11747409f7ee4aaf38352",
                "size": 6814
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc90511c2602acf1b891866eb9a980c7e143c1a5460fa7d911f82439c691f5ce",
                    "size": 6663859
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e806b8ac5152e2bbaeda70c6450df74b5cc792a0ca8c6b12e99b570814080557",
                    "size": 466
                }
            ]
        },
        "37-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:37cb9e7e748502d00e2505ea03de0f9c3c875f4d26cc69193e07e74125317f9a",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7aec071292a8273b692a3624abd583b0f30dbcd44594103eef735bd56bf7e0d",
                    "size": 6663530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707a9d4f6c35fb513c936e4459685e69283b06182183b53db05c29c6c192b1ae",
                    "size": 466
                }
            ]
        },
        "38": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e02fca37167614a73e374af99a835a27edbdbde23f200e445afe224a7cae0c3",
                "size": 6815
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:238b2fb0e3899ef86a1725981fe4df818b514bd83b071e2291a2f8d024b224c9",
                    "size": 7065181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ba37fc3a79d149a797a1f4eb644114796fbfda58fb42f61f795243811fdf190",
                    "size": 469
                }
            ]
        },
        "38-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5ca46d081419bd059cb518200291a8e8647dd7dc9d4dfff7814c7730e53fe4e3",
                "size": 6829
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad178d72905db2a360115bb6849c8068832e4984036fba003f04068ac6a6bd97",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0c4e6507e8b5bea4db351b8a6e8235876e2ff0673b210ee3e0bdea64763e01f",
                    "size": 48784154
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13d9bb662b3794aedd8f8aa98c68058a1760a1356d9a3f42f3c63d2c86f83493",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:60f2e0bf0733ba97b5cc94b41bad01f6ebbec1f3416e566df0a97f774801ce5a",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e4c008363977243f758162e1a713e2c92b1ecc41fa5c026da5c93adc75c6e4c",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52dec7d4914ffbbd75752bfccb0ae75fcd88a831e71b41e00592971eebde608b",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ca74a7f0011a23ced2243105850369609f2211be0d769bc193ee941b2520a08",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08c7f064790edcd1275604a9ebed086931ad0b2a6a357f31a6d65c9268414e74",
                    "size": 7417910
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:918cd45a2d2aa30778d1c792494b0aa90edcdc78487dd2797c7a58236870a588",
                    "size": 468
                }
            ]
        },
        "38-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1318958bc3048d74c610444a34b4755969a9eb27d11fa2fbe4430ab6980101c1",
                "size": 6829
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad178d72905db2a360115bb6849c8068832e4984036fba003f04068ac6a6bd97",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0c4e6507e8b5bea4db351b8a6e8235876e2ff0673b210ee3e0bdea64763e01f",
                    "size": 48784154
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13d9bb662b3794aedd8f8aa98c68058a1760a1356d9a3f42f3c63d2c86f83493",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:60f2e0bf0733ba97b5cc94b41bad01f6ebbec1f3416e566df0a97f774801ce5a",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e4c008363977243f758162e1a713e2c92b1ecc41fa5c026da5c93adc75c6e4c",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52dec7d4914ffbbd75752bfccb0ae75fcd88a831e71b41e00592971eebde608b",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ca74a7f0011a23ced2243105850369609f2211be0d769bc193ee941b2520a08",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4eaf65b408f6e67f7e8387c0cb26c258c70e5df31d5dc0ee564f775691551e5e",
                    "size": 7418007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:80db07b9b209e2429b021565a5e43684a5a78f1444b831d7bdbac7c7be5e03cb",
                    "size": 467
                }
            ]
        },
        "38-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:28ba3983d8aee728a3c15fb85f21d2bff9bf62a06cad58421001697eebfd5c76",
                "size": 6828
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e590c6dbdc96b1cdbacfe1edf9c0cd1a8d274ab9f64fcc727a9b8e531dd2cd4",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7adb706717b650f823b13f7c6bb4c282be1a52690199e6f455cfb30d5cbca021",
                    "size": 38654943
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:423d419b6640476cb76b200c9f282eeae646a2e6cfecc2031156e13b9dad4b7f",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ac9f745039954e9a75bd5b770563cf3125dfa45774358751a883b41f6055e6d",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f26142fae26d26aef024cc33f49b3ed51f70b996d1d2dd77338eab55f74f6971",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6dc59657604b207e982b92ee10c9209906db18c87aeac61679b4b9713931a9a6",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5996e90f577025eb8a85d74dbbda6775db92ab5af6b03561273305fc0d42d737",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:144ab98f5df414f2fe5ffeffd0586ad2552ffd1c8ca0a61421905d8390b04546",
                    "size": 7025945
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f55955b1acf2057cc308bf62e6e7cd1775fcef7a9d62f380900a53338f1da4a",
                    "size": 467
                }
            ]
        },
        "38-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c6a51250c70a7c553f05c2e128944ecb354042b8bd47c797801cca019dec872b",
                "size": 6830
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79b599003222175835e1970954e9519145d402578af3b20e11f3ca2cf50f9fd1",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:735b184569da057a3a27ffc4e0458248f8683681c2b5aaf874f8a86e0c6a7e52",
                    "size": 38655023
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:225147945e23054c0b9d4ecc254f42c0cfd7dd6414e8bc13cb2fa054d95600d4",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46dfb557ffde70435f342251cdac53f7ba6b7047f858c4fae563553aa7d9deb5",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e1edb9a59a184f87f5dad7580e05bfb45f04c855962693b34d0ac28e0794b9a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1b94eb18edf2c26967fed53ec8bd49d33c18b0432078cf67640436e7923552c",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68bb8a514653a6465e96d23a3e1534dafeb20dc7615d5f98386e125d682677ba",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f630c8ccf4947c091b6a9afb9bebc86f4c34844ce70cb12e02fe0f27d46f70d",
                    "size": 7025985
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f40bc3c8d4be430376e768db9ca3a654c3b7fa7ecbf4c5a5c0d8fbda30bc411",
                    "size": 466
                }
            ]
        },
        "38-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1d695528cf27fd12befdcd52d65f093a55cb31ec1eb3983a6bfa138cc7c1e928",
                "size": 6815
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c8a07cf7e0a6610b389237666844a0c93f0042b105e99fc1128ba49157a7a8a",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c33e17fe4a960c76b12f34fd78f661a1e818432520307b00c7935866ab0623",
                    "size": 43688134
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5eaebb4c97c56647af86311d98554cace9891838bee9093423ecf3f101e5b1a",
                    "size": 473578
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee87f3843998a99a46c9560aa1d631660954eae2d583aca0eb974334f7b297f0",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8d38676405c3fa5b42b13ac40a2b44c68d9e5a8b71f40bcafdde8a8a8c17c95",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:556bf3cf41263f53c8916f59c8da3bd38d8d0af02e9f832ca81341fafb49683c",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ef0f1fe648699e4b93f679558b9d0e31bdd61320e7df39ccf0441adf648998a",
                    "size": 459
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2873bbe3c2922fbcd1dcdff8aaba8198581b1f0f98a1f66a3ca3889cbffa8184",
                    "size": 7056002
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3950b8f87bc38063f09bee0bf914b7696380b748b9fe65958d9f2b5704e72c76",
                    "size": 467
                }
            ]
        },
        "38-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:eec483814e682ca337e4066f8b4b6cb0153979b9cee6e0d0db92332d35527ed8",
                "size": 6815
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3e109d820ae1d02f4e9e4ad69ced1c6cb190b6024672b6238e525ed2c5a1b8c",
                    "size": 7058804
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f6c91e2f2f628df247664be0399f7fe669a0d2a3af1c8247f2beb260061ccc4",
                    "size": 467
                }
            ]
        },
        "38-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e02fca37167614a73e374af99a835a27edbdbde23f200e445afe224a7cae0c3",
                "size": 6815
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:238b2fb0e3899ef86a1725981fe4df818b514bd83b071e2291a2f8d024b224c9",
                    "size": 7065181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ba37fc3a79d149a797a1f4eb644114796fbfda58fb42f61f795243811fdf190",
                    "size": 469
                }
            ]
        },
        "38-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a7480e9a0e23b28a5a7eb0d475b5951759bf8a6bd6d4566ea6ecdaf05f12d1ff",
                "size": 7572
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98497adddbae4de490fcc1d04edf735aec4a83cbc9ba5af1f1e65fbde562983e",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6360d6ec9ad08998c00390ca47a7bd8cc87409fcaf713afd73b689b918b01438",
                    "size": 43774660
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:055af6a5333deae0eff8ae00dac4ea238156b511fe973fabe60f028c580994a2",
                    "size": 226660520
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01daed6b4313e6915e63f67b4c51191e2e74999bd73c3c6e7a177fdd969e2568",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f2510c732d5e8c6d4f2659881c9a3563b54b4a0c18c278a0a1cd35cfdc6c8f2",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e9ff13c8e735763b572fac974b254a92ff8ed58829c7c45b30ee881dc470bc9",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0bb6ea75d932375589b31fb55875c485ea7731e58b798bd4b6d897c59b1fd84",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:47114f532225fca85828e20ee26ed3b91cb32c3702011f7a59618389bb5e5f9c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94ce56fb0f0a9f8f8c037ceaa31355c01438176f4ffdfeae1020d54fe3d355a0",
                    "size": 15286541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1e27906a5e9844197ffdb436b0b0042dd2ec58f6cf250d45a25e58c4a7300a0",
                    "size": 469
                }
            ]
        },
        "38-build-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8613e7c6d3a35d980faebcd55126ff3e54de80b29bef1461929279f4854074b4",
                "size": 7590
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91bfec1f5a7797c0b2358ee1d96e4af2dd13ca25a782f751941f63861310ab63",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3bdc430956b05a945bb024174c76e13cbb1f722bac02256eea2ba2748989dcec",
                    "size": 48784152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f0506bebf1bfd2041e11e2be78a1b5ad62e5226645ef47e592562924a8d0c1d",
                    "size": 226241483
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a05cec1639aa9dc70ddd659f22accc4f1d6900af4d83b4049988ea9f69b6b39c",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e34ed3f99b707791b6367efa10d69378e2f25aaa38af7d1b5da87ba61a169689",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:93cca6e30b8ad623a9d41665ed3b6d4939cfe51c354bdf36c314d3618777043d",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:41dcc55edff1fb1d5f0dfd391f1fc01458f2e805f627d9aa07815b2dbb0b8198",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6181e7f2ae217007869c85aef428df6d65f6ad77258bffff870f535764a378d6",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef90dac0927a487b88ed8145608dee4f0f03307f6d4b7e4a947ff6fc153120cb",
                    "size": 15221372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f03cd9877e9b492749c3532921f353c5c875a50e4a1aaf500fe9286fd203c83",
                    "size": 468
                }
            ]
        },
        "38-build-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:76a395b80514c4056822e22516c0dd967b30663f6fbf7b2a4ee0e2634aeeb44d",
                "size": 7590
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91bfec1f5a7797c0b2358ee1d96e4af2dd13ca25a782f751941f63861310ab63",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3bdc430956b05a945bb024174c76e13cbb1f722bac02256eea2ba2748989dcec",
                    "size": 48784152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f0506bebf1bfd2041e11e2be78a1b5ad62e5226645ef47e592562924a8d0c1d",
                    "size": 226241483
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a05cec1639aa9dc70ddd659f22accc4f1d6900af4d83b4049988ea9f69b6b39c",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e34ed3f99b707791b6367efa10d69378e2f25aaa38af7d1b5da87ba61a169689",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:93cca6e30b8ad623a9d41665ed3b6d4939cfe51c354bdf36c314d3618777043d",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:41dcc55edff1fb1d5f0dfd391f1fc01458f2e805f627d9aa07815b2dbb0b8198",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6181e7f2ae217007869c85aef428df6d65f6ad77258bffff870f535764a378d6",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c1b4727fcaecaeed3072a35559332667d8c7aa2386b331968fd149c6f498c81",
                    "size": 15221247
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5e10402c9176785913527e7d39238b4612a53085ce651220b9a285788e8d98b",
                    "size": 467
                }
            ]
        },
        "38-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e8e08a48558b1a440c8822396314601a26db44908258dd8af8ead85ef56d8926",
                "size": 7588
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a959596924082edfa799128bafb3725cbbbaff1735bff3a18e2530fa3f40911f",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2d440bd27a5625de567075e0fe762e042a2e6048ac4250d1b95036e48134cf4",
                    "size": 38655023
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e28cfc79d1bea0dc753f24603ea064a85f05611f6824d06a4e2c6fe360f57069",
                    "size": 226528739
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfc9560a04191c0b1e05974b8f878daa54430455dbc13b3bab7c414b08f1d8e8",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64347769f50f36376ab908c5c80600f6a7409c8d48880aaf03f30ce46d670d71",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b55185618671bced84a3f40db84e13ff8036402ddd3a373ed399c05ec9aca931",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca1a0f949fd966d277e8ac54559890aaf1f40586ed38cd2251809fb900955043",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b96b475b2fee5d9453522951ce6301c0362efcb1025d15fc6796711ba2e6fb4f",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5d79afceb912f3cea34d3cf1eb527b08fdb0fbc2f7ce846aa62d069534b19fac",
                    "size": 15261536
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9588ac889a0d1ccde20d4c221161140541625c17e5cfc9216ba54b3d67383fb6",
                    "size": 466
                }
            ]
        },
        "38-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:668654dd15061ed0cfe046e6b86737667fd915cae52534f22fc64d12e299e155",
                "size": 7590
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:953f1ac2fc695d00b8cb596f3d65fe80f70f5271005525597dca0507b6c0241a",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b13d79b02a136ed18da662852eef9383d30ad41c5d30fdb3c1921bea393862e",
                    "size": 38655068
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19c9f12ffe707bd1798e044978b8884b2434a602e5e76f85a909549ee14764d5",
                    "size": 226548393
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3dbceebd6f97de98353f0ba6238437790b45bdc083332ebe5fbaa0a96d283a09",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00fbb58f64a60f59883f14c6038254756c7c35c451cdf584fc518b712722c291",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04aea93dd22d5e071b67ad766ec9facb57f3ebbd5d16f8e8b276091ed5854aad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dab2639b751995f8a5c885ea0152e4ebb6fa69e2accb6e31ca54c88963be414b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:481c6fb71f9d659dcc9dd7a617d53cb2c1516a45ea697ab4753a513ef922dfa4",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c08f597b78764a097b26f08565951e97fbc581fac941847f173efe1b9f66828",
                    "size": 15260854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc592459003e108e1b6a727e1eca27d76dd1098df4ac9f0429915a3aebc91820",
                    "size": 467
                }
            ]
        },
        "38-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3b0b95c42087ea912530d1d0c66c24f498715eab4ca0ddce7c2808e711a86f74",
                "size": 7574
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b779f45ea316a3231c479d69fdb7560e47194490fbf9217210d8a271cc746732",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55605f1089f3b87325f06254c4d7a03eeb71871c57364acaf50b8f40fab2c10f",
                    "size": 43688152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34ff44b163eff62c9d558c657a41c4b56ffde46fdb3693e27faa0b0193b3d10c",
                    "size": 226441351
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e64d263f6c53c0eb520510fb0fbf71a332cb670773609e11d97e850059b8c2d6",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad1d9af600b3b6fd4c1006aa08787bc8c8f46c116efa3d8b793c04f4c24c4f24",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a3a47fa3a1545256930e5f618f84f762d43369005a9cda3b597dda27d1d1e1d4",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:35a02201e807e373dd496b80c01b5987887717815a538ffb7fb23ca0b5256cea",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc4306fda37b5454d8a79d3fac814cae1b4f05a0eefc5a4285a7ac0058447e19",
                    "size": 459
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1fe41c3d5403c3ea3b557e17c050d52606c23b4ca8611c002df9dd497ab3b09",
                    "size": 15260028
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51d3bbcbbc826f7b307beb42540654aa33384d11e51c1937f1fe4a5fc881a259",
                    "size": 465
                }
            ]
        },
        "38-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9f62ba6fd8b81fe12eaf693ce03155fa94ac79181289fd608fd87e29bf333cf5",
                "size": 7570
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98497adddbae4de490fcc1d04edf735aec4a83cbc9ba5af1f1e65fbde562983e",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6360d6ec9ad08998c00390ca47a7bd8cc87409fcaf713afd73b689b918b01438",
                    "size": 43774660
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:055af6a5333deae0eff8ae00dac4ea238156b511fe973fabe60f028c580994a2",
                    "size": 226660520
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01daed6b4313e6915e63f67b4c51191e2e74999bd73c3c6e7a177fdd969e2568",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f2510c732d5e8c6d4f2659881c9a3563b54b4a0c18c278a0a1cd35cfdc6c8f2",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e9ff13c8e735763b572fac974b254a92ff8ed58829c7c45b30ee881dc470bc9",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0bb6ea75d932375589b31fb55875c485ea7731e58b798bd4b6d897c59b1fd84",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:47114f532225fca85828e20ee26ed3b91cb32c3702011f7a59618389bb5e5f9c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a7a3714408562e2a6b1ccaf03ce9903586830dd30e21fba730efe6778907a51",
                    "size": 15277206
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7fbbf7c6a3fc294eece351e5800326cec9b771626239a28206555f37e605a86",
                    "size": 468
                }
            ]
        },
        "38-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a7480e9a0e23b28a5a7eb0d475b5951759bf8a6bd6d4566ea6ecdaf05f12d1ff",
                "size": 7572
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98497adddbae4de490fcc1d04edf735aec4a83cbc9ba5af1f1e65fbde562983e",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6360d6ec9ad08998c00390ca47a7bd8cc87409fcaf713afd73b689b918b01438",
                    "size": 43774660
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:055af6a5333deae0eff8ae00dac4ea238156b511fe973fabe60f028c580994a2",
                    "size": 226660520
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01daed6b4313e6915e63f67b4c51191e2e74999bd73c3c6e7a177fdd969e2568",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f2510c732d5e8c6d4f2659881c9a3563b54b4a0c18c278a0a1cd35cfdc6c8f2",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e9ff13c8e735763b572fac974b254a92ff8ed58829c7c45b30ee881dc470bc9",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0bb6ea75d932375589b31fb55875c485ea7731e58b798bd4b6d897c59b1fd84",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:47114f532225fca85828e20ee26ed3b91cb32c3702011f7a59618389bb5e5f9c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94ce56fb0f0a9f8f8c037ceaa31355c01438176f4ffdfeae1020d54fe3d355a0",
                    "size": 15286541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1e27906a5e9844197ffdb436b0b0042dd2ec58f6cf250d45a25e58c4a7300a0",
                    "size": 469
                }
            ]
        },
        "38-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e02fca37167614a73e374af99a835a27edbdbde23f200e445afe224a7cae0c3",
                "size": 6815
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:238b2fb0e3899ef86a1725981fe4df818b514bd83b071e2291a2f8d024b224c9",
                    "size": 7065181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ba37fc3a79d149a797a1f4eb644114796fbfda58fb42f61f795243811fdf190",
                    "size": 469
                }
            ]
        },
        "38-run-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5ca46d081419bd059cb518200291a8e8647dd7dc9d4dfff7814c7730e53fe4e3",
                "size": 6829
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad178d72905db2a360115bb6849c8068832e4984036fba003f04068ac6a6bd97",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0c4e6507e8b5bea4db351b8a6e8235876e2ff0673b210ee3e0bdea64763e01f",
                    "size": 48784154
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13d9bb662b3794aedd8f8aa98c68058a1760a1356d9a3f42f3c63d2c86f83493",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:60f2e0bf0733ba97b5cc94b41bad01f6ebbec1f3416e566df0a97f774801ce5a",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e4c008363977243f758162e1a713e2c92b1ecc41fa5c026da5c93adc75c6e4c",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52dec7d4914ffbbd75752bfccb0ae75fcd88a831e71b41e00592971eebde608b",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ca74a7f0011a23ced2243105850369609f2211be0d769bc193ee941b2520a08",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08c7f064790edcd1275604a9ebed086931ad0b2a6a357f31a6d65c9268414e74",
                    "size": 7417910
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:918cd45a2d2aa30778d1c792494b0aa90edcdc78487dd2797c7a58236870a588",
                    "size": 468
                }
            ]
        },
        "38-run-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1318958bc3048d74c610444a34b4755969a9eb27d11fa2fbe4430ab6980101c1",
                "size": 6829
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d928c985542784e5bc7c6fca298f5b3a4ac1bfec6b17159c10ceee12ce55b6f",
                    "size": 65592571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad178d72905db2a360115bb6849c8068832e4984036fba003f04068ac6a6bd97",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0c4e6507e8b5bea4db351b8a6e8235876e2ff0673b210ee3e0bdea64763e01f",
                    "size": 48784154
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13d9bb662b3794aedd8f8aa98c68058a1760a1356d9a3f42f3c63d2c86f83493",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:60f2e0bf0733ba97b5cc94b41bad01f6ebbec1f3416e566df0a97f774801ce5a",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e4c008363977243f758162e1a713e2c92b1ecc41fa5c026da5c93adc75c6e4c",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52dec7d4914ffbbd75752bfccb0ae75fcd88a831e71b41e00592971eebde608b",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ca74a7f0011a23ced2243105850369609f2211be0d769bc193ee941b2520a08",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4eaf65b408f6e67f7e8387c0cb26c258c70e5df31d5dc0ee564f775691551e5e",
                    "size": 7418007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:80db07b9b209e2429b021565a5e43684a5a78f1444b831d7bdbac7c7be5e03cb",
                    "size": 467
                }
            ]
        },
        "38-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:28ba3983d8aee728a3c15fb85f21d2bff9bf62a06cad58421001697eebfd5c76",
                "size": 6828
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e590c6dbdc96b1cdbacfe1edf9c0cd1a8d274ab9f64fcc727a9b8e531dd2cd4",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7adb706717b650f823b13f7c6bb4c282be1a52690199e6f455cfb30d5cbca021",
                    "size": 38654943
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:423d419b6640476cb76b200c9f282eeae646a2e6cfecc2031156e13b9dad4b7f",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ac9f745039954e9a75bd5b770563cf3125dfa45774358751a883b41f6055e6d",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f26142fae26d26aef024cc33f49b3ed51f70b996d1d2dd77338eab55f74f6971",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6dc59657604b207e982b92ee10c9209906db18c87aeac61679b4b9713931a9a6",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5996e90f577025eb8a85d74dbbda6775db92ab5af6b03561273305fc0d42d737",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:144ab98f5df414f2fe5ffeffd0586ad2552ffd1c8ca0a61421905d8390b04546",
                    "size": 7025945
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f55955b1acf2057cc308bf62e6e7cd1775fcef7a9d62f380900a53338f1da4a",
                    "size": 467
                }
            ]
        },
        "38-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c6a51250c70a7c553f05c2e128944ecb354042b8bd47c797801cca019dec872b",
                "size": 6830
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79b599003222175835e1970954e9519145d402578af3b20e11f3ca2cf50f9fd1",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:735b184569da057a3a27ffc4e0458248f8683681c2b5aaf874f8a86e0c6a7e52",
                    "size": 38655023
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:225147945e23054c0b9d4ecc254f42c0cfd7dd6414e8bc13cb2fa054d95600d4",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46dfb557ffde70435f342251cdac53f7ba6b7047f858c4fae563553aa7d9deb5",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e1edb9a59a184f87f5dad7580e05bfb45f04c855962693b34d0ac28e0794b9a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1b94eb18edf2c26967fed53ec8bd49d33c18b0432078cf67640436e7923552c",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68bb8a514653a6465e96d23a3e1534dafeb20dc7615d5f98386e125d682677ba",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f630c8ccf4947c091b6a9afb9bebc86f4c34844ce70cb12e02fe0f27d46f70d",
                    "size": 7025985
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9f40bc3c8d4be430376e768db9ca3a654c3b7fa7ecbf4c5a5c0d8fbda30bc411",
                    "size": 466
                }
            ]
        },
        "38-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1d695528cf27fd12befdcd52d65f093a55cb31ec1eb3983a6bfa138cc7c1e928",
                "size": 6815
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c8a07cf7e0a6610b389237666844a0c93f0042b105e99fc1128ba49157a7a8a",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c33e17fe4a960c76b12f34fd78f661a1e818432520307b00c7935866ab0623",
                    "size": 43688134
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5eaebb4c97c56647af86311d98554cace9891838bee9093423ecf3f101e5b1a",
                    "size": 473578
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee87f3843998a99a46c9560aa1d631660954eae2d583aca0eb974334f7b297f0",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8d38676405c3fa5b42b13ac40a2b44c68d9e5a8b71f40bcafdde8a8a8c17c95",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:556bf3cf41263f53c8916f59c8da3bd38d8d0af02e9f832ca81341fafb49683c",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ef0f1fe648699e4b93f679558b9d0e31bdd61320e7df39ccf0441adf648998a",
                    "size": 459
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2873bbe3c2922fbcd1dcdff8aaba8198581b1f0f98a1f66a3ca3889cbffa8184",
                    "size": 7056002
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3950b8f87bc38063f09bee0bf914b7696380b748b9fe65958d9f2b5704e72c76",
                    "size": 467
                }
            ]
        },
        "38-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:eec483814e682ca337e4066f8b4b6cb0153979b9cee6e0d0db92332d35527ed8",
                "size": 6815
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3e109d820ae1d02f4e9e4ad69ced1c6cb190b6024672b6238e525ed2c5a1b8c",
                    "size": 7058804
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f6c91e2f2f628df247664be0399f7fe669a0d2a3af1c8247f2beb260061ccc4",
                    "size": 467
                }
            ]
        },
        "38-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e02fca37167614a73e374af99a835a27edbdbde23f200e445afe224a7cae0c3",
                "size": 6815
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:238b2fb0e3899ef86a1725981fe4df818b514bd83b071e2291a2f8d024b224c9",
                    "size": 7065181
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ba37fc3a79d149a797a1f4eb644114796fbfda58fb42f61f795243811fdf190",
                    "size": 469
                }
            ]
        },
        "build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:fe6f35709042bdc22c3e187edb23dfae4bf9e589354e71ad3f0fa0e164239297",
                "size": 7570
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aaea1f9b035f9fe541cee84177d8f62549cac9ae755e6ddcbe20906c0526c36",
                    "size": 14184615
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cbab7b2bf5c1e35e9e44a2498d05e4607fe43973c067c593505423b0b3a711c",
                    "size": 468
                }
            ]
        },
        "build-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:068124f6486f785ca7e86e9f373f990c2aec6bfb7a2b6cb79cb60eda86d99b7c",
                "size": 7585
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af78cc0520f170b906a82f421a37356d2c269781502c5f7d2c396abdfa55d6a9",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7edbd9813867cb3dddc51da4d40538bd9695d5b483b8ed59539b24b19c133b4e",
                    "size": 23448737
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44dc7c873245302e133bf36d8149b48643b19afe9a7540a40abe1eae736eaed8",
                    "size": 217029550
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dc8c6e0f74fad71d0a2e17368a0c25cccb51945f997463748b8def1421f4f81",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc00a878dab5ef147d98e03eb2e1a5a19985e5e5fdcd18ff8defac4938695b5",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb87ee75d18626f6429938563bfa6b76bda1ac557019c8354f99cc04c16fb1d0",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e36e3c571cd31032afd2e63729a6a6885268fbecb1a32d4ab477e88b760c6925",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75fc38abf14743c0cb98e30147fdaf527dc87c34a8cd91db118b48425c25a493",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:792ff35cc18b07fcf439abd9519a4074b5d3543db3fb94f0e03e871e3fd227d2",
                    "size": 14184625
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:011bd9a150f78367988387a7fc050006c4493e136ce02a8e102702a774a67fec",
                    "size": 468
                }
            ]
        },
        "build-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2b3374aef4621bc7d2af5f9602338f0386a3d56d43c677891eea8b2d07a470df",
                "size": 7587
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af78cc0520f170b906a82f421a37356d2c269781502c5f7d2c396abdfa55d6a9",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7edbd9813867cb3dddc51da4d40538bd9695d5b483b8ed59539b24b19c133b4e",
                    "size": 23448737
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44dc7c873245302e133bf36d8149b48643b19afe9a7540a40abe1eae736eaed8",
                    "size": 217029550
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dc8c6e0f74fad71d0a2e17368a0c25cccb51945f997463748b8def1421f4f81",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc00a878dab5ef147d98e03eb2e1a5a19985e5e5fdcd18ff8defac4938695b5",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb87ee75d18626f6429938563bfa6b76bda1ac557019c8354f99cc04c16fb1d0",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e36e3c571cd31032afd2e63729a6a6885268fbecb1a32d4ab477e88b760c6925",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75fc38abf14743c0cb98e30147fdaf527dc87c34a8cd91db118b48425c25a493",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6fc2d8bdfc668f2614fd4b225a2e4150b8633d000c089e5437af6fd45dca540",
                    "size": 14184706
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ceb59bc2a8b606024132edb50e04b7c618da7ccda13517446d0ac04f11696f63",
                    "size": 469
                }
            ]
        },
        "build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1059e76389d475dca0b8763a3283f7701b5a36b14d766baec3c86369e07eb5d0",
                "size": 7589
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65764d35c6ba7bc01cd8c1c7c80dedd0fba41e8aed4fe20f32b8104e40811b27",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ccb26de59532c7a3ca4e330f6259f0a22d5502c63fce64953cfb835da2a89232",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dbffb8cd0d199db9da89c0a8f6be633d403ae9577895ef76ed8559e0e6a2fce6",
                    "size": 217030397
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2cdbf2b50a12d0c904c51a1aa6a78d769e31ab23e681213a8dcd625845a43fa",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:caf29b48f9a19f9f082026316d26fb42e73b1f7a2585ff1f86457c794c8ca68d",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:821dddb4fbe51867593b530bacd209ea5cec4104a56beb6362389970d19aaa68",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0fa218cb0068ba037fef0d258fb86dfbfed2c4590d7b39e86733b5c8b69f61b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d68feee9a64aaf2316e4f6f65cdc6fbf9e80169d4bf9cd0152c507a525b3155",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30e23a82471c45da8d0d1a12760f57831acf7ec22dbaea0418de73b75cedafd4",
                    "size": 14185002
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4fe5abd158988f3f32bd5b045a90110c4e7cd2bd815eb3ff7d45189d4c3f0fa7",
                    "size": 466
                }
            ]
        },
        "build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:59af416548f1762a9ac7de13753e54d1280e5cab21741ea86d97414048b099d2",
                "size": 7589
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:365c152eab29768a6002cd30191cfe30aa5a9c7670afb3dd05e5568d60598b53",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cfac25b66436aaad9254043374a8a0bce94c1fcc73328f0009e4c633a489dab",
                    "size": 23448738
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec58c8baedb56f03697759c56cc8b52846aa6b359079d478ffe547bd11683f2",
                    "size": 217029920
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5ea14a5b029f6e9168ba600f7829994ee94710831ae531cc8575103cb5f9076",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b5e5aded2a12ddea2c899e597f6b276bdbb070022f582eb5ffef5eab6706f4c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fdfe10b79cf925c4a4f205beee5164056995aa8d5d10cae49aeae14093d612d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:563ad2bf80f0e61e8048e26e2680eceb622c9b84a0e9b242dc26a7272ef9ee62",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87d42fc86fb1bef824e1ec397f2adeb648ebde6cb39d75fa5d79da952fead6a4",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:47a9c4bb6c6c3684dc4f69be0c165535bbe430f84638928897f0a788c38a4c79",
                    "size": 14185064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8330734e2e0d178d1d7e6db468a65bdd75294ca0a3c053123af6079593b9e9d0",
                    "size": 466
                }
            ]
        },
        "build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c698c9a9621d0717f0ae721d0cb7d46ef5582cd8e090bb731a56e923d7178673",
                "size": 7570
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3a4176e53d7e5697395953f42ef76b08d9fef8fe5a662a442cd4f13740c7a1d",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1d05a709ad59f905b2bb738079267053a09a0f4f535e32192bcd83e0dce163c",
                    "size": 23448641
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f3f5fce4a1b94b586b0523b225e6b5436e9dd40567f898aaaffd4c2302a2399",
                    "size": 217029391
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de3c36bd181e84497d428d49b10abc3694cd9a0c75ec31064623d54cb4f8c211",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:565296760a52acc955f0523e8e8213020ff97bec4df095452a9633f053cb710d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf3fbff6d013e83413ee8ed775faa0f5e3350e9b987d24b28cb8715ea67d31ed",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363ad41c733c6b3e9c7a4610329a637d3d876504b93320bb9b4612bba294335",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38693fb89d5d2d6143564a7b4bd2d1c7da21077550cbe4d5e8a7ec5096625ff1",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71206ee9506b1c928e71d4e32ecf00af73370d8adfd495ada41d43cbab3abb75",
                    "size": 14184582
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a3f18913787da49f9c675ce2d79ac9909314af6711d9c1c4651cf5590d124ce",
                    "size": 464
                }
            ]
        },
        "build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:568f437ba3804ca5163da528c57bacd878efadb2d08cd983fe0e40999ac8c6c9",
                "size": 7574
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e54c1365f15bf88b17ba38f79d2a428ac06b2fadf6f6c91f27bb25c858dbc60",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:017b908d94c1c349a53970523ee7a139bef37f34ad362e03d6bec2d726504a0d",
                    "size": 23448703
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b5c50d01e785c4728ab89718fa8aaa45a81c0af2408ac0cc79f3ee163c253bd",
                    "size": 217028541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d83e2fae00f6ab84a73baecccee1b9773d59ae4b450a12e360a5effca4944ac4",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fadda5faf2fcc02b62f25d0f9c548bc0d5c1abdeda6da2328fc79ddb5b8b91ca",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1e9b66fa7cafdd2423279eb1c13f4052734fd9472c334ca49bfa60216bfccc8",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cbd57e7f4360c9cbeecd7408e549686853d4c97c491b59f4d07d320805ce98a",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4759f7eafc183e7e416b2fb6e564ecd7cf14425e5e7ccad33b50b3ea539f38e",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85f769a5c5cf4b2e25a05e7cbbedec7bb1072175fd1c0f7a9acdfd73871083ca",
                    "size": 14184843
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b14b3d28f0f75e2822fcdacb0b06b4698875a708ec973bbf98dc2e1cfa203351",
                    "size": 468
                }
            ]
        },
        "build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:fe6f35709042bdc22c3e187edb23dfae4bf9e589354e71ad3f0fa0e164239297",
                "size": 7570
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aaea1f9b035f9fe541cee84177d8f62549cac9ae755e6ddcbe20906c0526c36",
                    "size": 14184615
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cbab7b2bf5c1e35e9e44a2498d05e4607fe43973c067c593505423b0b3a711c",
                    "size": 468
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:37cb9e7e748502d00e2505ea03de0f9c3c875f4d26cc69193e07e74125317f9a",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7aec071292a8273b692a3624abd583b0f30dbcd44594103eef735bd56bf7e0d",
                    "size": 6663530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707a9d4f6c35fb513c936e4459685e69283b06182183b53db05c29c6c192b1ae",
                    "size": 466
                }
            ]
        },
        "latest-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:51784b43d34bdab445763039bf67445c97acdc3847a80191baf2e9db7ac72ae1",
                "size": 6829
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:043f40b98b892b40de8f366a4877d9d156b79e078c159e8ba29e516bd6d1c1f3",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5741c1c9c7a9fefc40c6616a877c25ae7e2d3b4e3f445bc7366d05c2eadaabf",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b7fbfed82651bb013b52b5f9e575eb057922dd32dbea33546ffd3791fd6f318",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31345e8a4ebd6f75c8d04b1987bb10dda6e287bb914c12f9506f73ae22df8918",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64c5ff84cb6737b8e4034ed8c0c032049484812c53fac7bd3922ac1887619c7b",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8151e9be2f5daef339c61f7281525da71de532fd3a55c08d147c7de15b1c0e4b",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c014d4420297605e816aee496643987e4894d4bccb07a796c70c571e2feb60d8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b08fce6652cca23dbcc24643d4e3a575ab16b891a2edf31d5519a6338d825663",
                    "size": 6663437
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84654d23dede7d884d759d913eaa352e537e1ba43c15703c36a1d8dbe077f952",
                    "size": 469
                }
            ]
        },
        "latest-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:35c30e539ba616136969c19fd2628cb9b354aba79404715d51ddcf5b84afebeb",
                "size": 6829
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:043f40b98b892b40de8f366a4877d9d156b79e078c159e8ba29e516bd6d1c1f3",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5741c1c9c7a9fefc40c6616a877c25ae7e2d3b4e3f445bc7366d05c2eadaabf",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b7fbfed82651bb013b52b5f9e575eb057922dd32dbea33546ffd3791fd6f318",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31345e8a4ebd6f75c8d04b1987bb10dda6e287bb914c12f9506f73ae22df8918",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64c5ff84cb6737b8e4034ed8c0c032049484812c53fac7bd3922ac1887619c7b",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8151e9be2f5daef339c61f7281525da71de532fd3a55c08d147c7de15b1c0e4b",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c014d4420297605e816aee496643987e4894d4bccb07a796c70c571e2feb60d8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:040e085cd8db38291ae27fa077bd0b04dbe1725df1d7a2e464583e47d0725975",
                    "size": 6663481
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a57d82caa68b7e3417e057c44859b688e7d8f5056d75e53733618054379c9bc",
                    "size": 469
                }
            ]
        },
        "latest-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b16be1389e6a2497b5b4fc2b0e8c68ae8b6fe69a4edb7538ea918bd477bcc522",
                "size": 6828
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd87690b18c87c13099904842202959acc4018da84cfac16a5d4c7a746e45364",
                    "size": 6663373
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5109acecd52b59d513d2295f5bb77e9b0846e12558ff71b687de41d0b0364313",
                    "size": 465
                }
            ]
        },
        "latest-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7c8dc70f24ed7c224dc74c21fe3405f91cc1594f9427f4b4b46cabfcd364d517",
                "size": 6828
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c23871528fb561cb33c0496b31d9e1ce1c7e8e10d1927bf7a027488a740af73",
                    "size": 6663456
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:11c06ab580e0129301b2c18d1b063e033b6498cbf9bc508bc8dc2b50ef2ab478",
                    "size": 465
                }
            ]
        },
        "latest-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0096b3734c749fe5733d2a36d6fa9bfb10c6cac179b714c5f5d2a2e13ea67ec5",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3332e25e4bfa58c3723cd183449d3228c1de161242034e0d3982e25e66a65fcc",
                    "size": 6663498
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f4d37843a4274539d85111b6bf11d6135cdafb17c3a25c710000463aadb9505",
                    "size": 466
                }
            ]
        },
        "latest-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:68683058d12b915cd932c3d69f328316cf2a86038fa11747409f7ee4aaf38352",
                "size": 6814
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc90511c2602acf1b891866eb9a980c7e143c1a5460fa7d911f82439c691f5ce",
                    "size": 6663859
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e806b8ac5152e2bbaeda70c6450df74b5cc792a0ca8c6b12e99b570814080557",
                    "size": 466
                }
            ]
        },
        "latest-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:37cb9e7e748502d00e2505ea03de0f9c3c875f4d26cc69193e07e74125317f9a",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7aec071292a8273b692a3624abd583b0f30dbcd44594103eef735bd56bf7e0d",
                    "size": 6663530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707a9d4f6c35fb513c936e4459685e69283b06182183b53db05c29c6c192b1ae",
                    "size": 466
                }
            ]
        },
        "latest-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:fe6f35709042bdc22c3e187edb23dfae4bf9e589354e71ad3f0fa0e164239297",
                "size": 7570
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aaea1f9b035f9fe541cee84177d8f62549cac9ae755e6ddcbe20906c0526c36",
                    "size": 14184615
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cbab7b2bf5c1e35e9e44a2498d05e4607fe43973c067c593505423b0b3a711c",
                    "size": 468
                }
            ]
        },
        "latest-build-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:068124f6486f785ca7e86e9f373f990c2aec6bfb7a2b6cb79cb60eda86d99b7c",
                "size": 7585
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af78cc0520f170b906a82f421a37356d2c269781502c5f7d2c396abdfa55d6a9",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7edbd9813867cb3dddc51da4d40538bd9695d5b483b8ed59539b24b19c133b4e",
                    "size": 23448737
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44dc7c873245302e133bf36d8149b48643b19afe9a7540a40abe1eae736eaed8",
                    "size": 217029550
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dc8c6e0f74fad71d0a2e17368a0c25cccb51945f997463748b8def1421f4f81",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc00a878dab5ef147d98e03eb2e1a5a19985e5e5fdcd18ff8defac4938695b5",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb87ee75d18626f6429938563bfa6b76bda1ac557019c8354f99cc04c16fb1d0",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e36e3c571cd31032afd2e63729a6a6885268fbecb1a32d4ab477e88b760c6925",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75fc38abf14743c0cb98e30147fdaf527dc87c34a8cd91db118b48425c25a493",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:792ff35cc18b07fcf439abd9519a4074b5d3543db3fb94f0e03e871e3fd227d2",
                    "size": 14184625
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:011bd9a150f78367988387a7fc050006c4493e136ce02a8e102702a774a67fec",
                    "size": 468
                }
            ]
        },
        "latest-build-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2b3374aef4621bc7d2af5f9602338f0386a3d56d43c677891eea8b2d07a470df",
                "size": 7587
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af78cc0520f170b906a82f421a37356d2c269781502c5f7d2c396abdfa55d6a9",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7edbd9813867cb3dddc51da4d40538bd9695d5b483b8ed59539b24b19c133b4e",
                    "size": 23448737
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44dc7c873245302e133bf36d8149b48643b19afe9a7540a40abe1eae736eaed8",
                    "size": 217029550
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dc8c6e0f74fad71d0a2e17368a0c25cccb51945f997463748b8def1421f4f81",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc00a878dab5ef147d98e03eb2e1a5a19985e5e5fdcd18ff8defac4938695b5",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb87ee75d18626f6429938563bfa6b76bda1ac557019c8354f99cc04c16fb1d0",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e36e3c571cd31032afd2e63729a6a6885268fbecb1a32d4ab477e88b760c6925",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75fc38abf14743c0cb98e30147fdaf527dc87c34a8cd91db118b48425c25a493",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6fc2d8bdfc668f2614fd4b225a2e4150b8633d000c089e5437af6fd45dca540",
                    "size": 14184706
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ceb59bc2a8b606024132edb50e04b7c618da7ccda13517446d0ac04f11696f63",
                    "size": 469
                }
            ]
        },
        "latest-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1059e76389d475dca0b8763a3283f7701b5a36b14d766baec3c86369e07eb5d0",
                "size": 7589
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65764d35c6ba7bc01cd8c1c7c80dedd0fba41e8aed4fe20f32b8104e40811b27",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ccb26de59532c7a3ca4e330f6259f0a22d5502c63fce64953cfb835da2a89232",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dbffb8cd0d199db9da89c0a8f6be633d403ae9577895ef76ed8559e0e6a2fce6",
                    "size": 217030397
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2cdbf2b50a12d0c904c51a1aa6a78d769e31ab23e681213a8dcd625845a43fa",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:caf29b48f9a19f9f082026316d26fb42e73b1f7a2585ff1f86457c794c8ca68d",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:821dddb4fbe51867593b530bacd209ea5cec4104a56beb6362389970d19aaa68",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0fa218cb0068ba037fef0d258fb86dfbfed2c4590d7b39e86733b5c8b69f61b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d68feee9a64aaf2316e4f6f65cdc6fbf9e80169d4bf9cd0152c507a525b3155",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30e23a82471c45da8d0d1a12760f57831acf7ec22dbaea0418de73b75cedafd4",
                    "size": 14185002
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4fe5abd158988f3f32bd5b045a90110c4e7cd2bd815eb3ff7d45189d4c3f0fa7",
                    "size": 466
                }
            ]
        },
        "latest-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:59af416548f1762a9ac7de13753e54d1280e5cab21741ea86d97414048b099d2",
                "size": 7589
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:365c152eab29768a6002cd30191cfe30aa5a9c7670afb3dd05e5568d60598b53",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cfac25b66436aaad9254043374a8a0bce94c1fcc73328f0009e4c633a489dab",
                    "size": 23448738
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec58c8baedb56f03697759c56cc8b52846aa6b359079d478ffe547bd11683f2",
                    "size": 217029920
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5ea14a5b029f6e9168ba600f7829994ee94710831ae531cc8575103cb5f9076",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b5e5aded2a12ddea2c899e597f6b276bdbb070022f582eb5ffef5eab6706f4c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fdfe10b79cf925c4a4f205beee5164056995aa8d5d10cae49aeae14093d612d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:563ad2bf80f0e61e8048e26e2680eceb622c9b84a0e9b242dc26a7272ef9ee62",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87d42fc86fb1bef824e1ec397f2adeb648ebde6cb39d75fa5d79da952fead6a4",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:47a9c4bb6c6c3684dc4f69be0c165535bbe430f84638928897f0a788c38a4c79",
                    "size": 14185064
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8330734e2e0d178d1d7e6db468a65bdd75294ca0a3c053123af6079593b9e9d0",
                    "size": 466
                }
            ]
        },
        "latest-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c698c9a9621d0717f0ae721d0cb7d46ef5582cd8e090bb731a56e923d7178673",
                "size": 7570
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3a4176e53d7e5697395953f42ef76b08d9fef8fe5a662a442cd4f13740c7a1d",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1d05a709ad59f905b2bb738079267053a09a0f4f535e32192bcd83e0dce163c",
                    "size": 23448641
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f3f5fce4a1b94b586b0523b225e6b5436e9dd40567f898aaaffd4c2302a2399",
                    "size": 217029391
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de3c36bd181e84497d428d49b10abc3694cd9a0c75ec31064623d54cb4f8c211",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:565296760a52acc955f0523e8e8213020ff97bec4df095452a9633f053cb710d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf3fbff6d013e83413ee8ed775faa0f5e3350e9b987d24b28cb8715ea67d31ed",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363ad41c733c6b3e9c7a4610329a637d3d876504b93320bb9b4612bba294335",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38693fb89d5d2d6143564a7b4bd2d1c7da21077550cbe4d5e8a7ec5096625ff1",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71206ee9506b1c928e71d4e32ecf00af73370d8adfd495ada41d43cbab3abb75",
                    "size": 14184582
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a3f18913787da49f9c675ce2d79ac9909314af6711d9c1c4651cf5590d124ce",
                    "size": 464
                }
            ]
        },
        "latest-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:568f437ba3804ca5163da528c57bacd878efadb2d08cd983fe0e40999ac8c6c9",
                "size": 7574
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e54c1365f15bf88b17ba38f79d2a428ac06b2fadf6f6c91f27bb25c858dbc60",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:017b908d94c1c349a53970523ee7a139bef37f34ad362e03d6bec2d726504a0d",
                    "size": 23448703
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b5c50d01e785c4728ab89718fa8aaa45a81c0af2408ac0cc79f3ee163c253bd",
                    "size": 217028541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d83e2fae00f6ab84a73baecccee1b9773d59ae4b450a12e360a5effca4944ac4",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fadda5faf2fcc02b62f25d0f9c548bc0d5c1abdeda6da2328fc79ddb5b8b91ca",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1e9b66fa7cafdd2423279eb1c13f4052734fd9472c334ca49bfa60216bfccc8",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cbd57e7f4360c9cbeecd7408e549686853d4c97c491b59f4d07d320805ce98a",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4759f7eafc183e7e416b2fb6e564ecd7cf14425e5e7ccad33b50b3ea539f38e",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85f769a5c5cf4b2e25a05e7cbbedec7bb1072175fd1c0f7a9acdfd73871083ca",
                    "size": 14184843
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b14b3d28f0f75e2822fcdacb0b06b4698875a708ec973bbf98dc2e1cfa203351",
                    "size": 468
                }
            ]
        },
        "latest-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:fe6f35709042bdc22c3e187edb23dfae4bf9e589354e71ad3f0fa0e164239297",
                "size": 7570
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aaea1f9b035f9fe541cee84177d8f62549cac9ae755e6ddcbe20906c0526c36",
                    "size": 14184615
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cbab7b2bf5c1e35e9e44a2498d05e4607fe43973c067c593505423b0b3a711c",
                    "size": 468
                }
            ]
        },
        "latest-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:37cb9e7e748502d00e2505ea03de0f9c3c875f4d26cc69193e07e74125317f9a",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7aec071292a8273b692a3624abd583b0f30dbcd44594103eef735bd56bf7e0d",
                    "size": 6663530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707a9d4f6c35fb513c936e4459685e69283b06182183b53db05c29c6c192b1ae",
                    "size": 466
                }
            ]
        },
        "latest-run-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:51784b43d34bdab445763039bf67445c97acdc3847a80191baf2e9db7ac72ae1",
                "size": 6829
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:043f40b98b892b40de8f366a4877d9d156b79e078c159e8ba29e516bd6d1c1f3",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5741c1c9c7a9fefc40c6616a877c25ae7e2d3b4e3f445bc7366d05c2eadaabf",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b7fbfed82651bb013b52b5f9e575eb057922dd32dbea33546ffd3791fd6f318",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31345e8a4ebd6f75c8d04b1987bb10dda6e287bb914c12f9506f73ae22df8918",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64c5ff84cb6737b8e4034ed8c0c032049484812c53fac7bd3922ac1887619c7b",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8151e9be2f5daef339c61f7281525da71de532fd3a55c08d147c7de15b1c0e4b",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c014d4420297605e816aee496643987e4894d4bccb07a796c70c571e2feb60d8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b08fce6652cca23dbcc24643d4e3a575ab16b891a2edf31d5519a6338d825663",
                    "size": 6663437
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84654d23dede7d884d759d913eaa352e537e1ba43c15703c36a1d8dbe077f952",
                    "size": 469
                }
            ]
        },
        "latest-run-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:35c30e539ba616136969c19fd2628cb9b354aba79404715d51ddcf5b84afebeb",
                "size": 6829
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:043f40b98b892b40de8f366a4877d9d156b79e078c159e8ba29e516bd6d1c1f3",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5741c1c9c7a9fefc40c6616a877c25ae7e2d3b4e3f445bc7366d05c2eadaabf",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b7fbfed82651bb013b52b5f9e575eb057922dd32dbea33546ffd3791fd6f318",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31345e8a4ebd6f75c8d04b1987bb10dda6e287bb914c12f9506f73ae22df8918",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64c5ff84cb6737b8e4034ed8c0c032049484812c53fac7bd3922ac1887619c7b",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8151e9be2f5daef339c61f7281525da71de532fd3a55c08d147c7de15b1c0e4b",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c014d4420297605e816aee496643987e4894d4bccb07a796c70c571e2feb60d8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:040e085cd8db38291ae27fa077bd0b04dbe1725df1d7a2e464583e47d0725975",
                    "size": 6663481
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a57d82caa68b7e3417e057c44859b688e7d8f5056d75e53733618054379c9bc",
                    "size": 469
                }
            ]
        },
        "latest-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b16be1389e6a2497b5b4fc2b0e8c68ae8b6fe69a4edb7538ea918bd477bcc522",
                "size": 6828
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd87690b18c87c13099904842202959acc4018da84cfac16a5d4c7a746e45364",
                    "size": 6663373
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5109acecd52b59d513d2295f5bb77e9b0846e12558ff71b687de41d0b0364313",
                    "size": 465
                }
            ]
        },
        "latest-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7c8dc70f24ed7c224dc74c21fe3405f91cc1594f9427f4b4b46cabfcd364d517",
                "size": 6828
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c23871528fb561cb33c0496b31d9e1ce1c7e8e10d1927bf7a027488a740af73",
                    "size": 6663456
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:11c06ab580e0129301b2c18d1b063e033b6498cbf9bc508bc8dc2b50ef2ab478",
                    "size": 465
                }
            ]
        },
        "latest-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0096b3734c749fe5733d2a36d6fa9bfb10c6cac179b714c5f5d2a2e13ea67ec5",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3332e25e4bfa58c3723cd183449d3228c1de161242034e0d3982e25e66a65fcc",
                    "size": 6663498
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f4d37843a4274539d85111b6bf11d6135cdafb17c3a25c710000463aadb9505",
                    "size": 466
                }
            ]
        },
        "latest-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:68683058d12b915cd932c3d69f328316cf2a86038fa11747409f7ee4aaf38352",
                "size": 6814
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc90511c2602acf1b891866eb9a980c7e143c1a5460fa7d911f82439c691f5ce",
                    "size": 6663859
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e806b8ac5152e2bbaeda70c6450df74b5cc792a0ca8c6b12e99b570814080557",
                    "size": 466
                }
            ]
        },
        "latest-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:37cb9e7e748502d00e2505ea03de0f9c3c875f4d26cc69193e07e74125317f9a",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7aec071292a8273b692a3624abd583b0f30dbcd44594103eef735bd56bf7e0d",
                    "size": 6663530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707a9d4f6c35fb513c936e4459685e69283b06182183b53db05c29c6c192b1ae",
                    "size": 466
                }
            ]
        },
        "run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:37cb9e7e748502d00e2505ea03de0f9c3c875f4d26cc69193e07e74125317f9a",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7aec071292a8273b692a3624abd583b0f30dbcd44594103eef735bd56bf7e0d",
                    "size": 6663530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707a9d4f6c35fb513c936e4459685e69283b06182183b53db05c29c6c192b1ae",
                    "size": 466
                }
            ]
        },
        "run-20240205": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:51784b43d34bdab445763039bf67445c97acdc3847a80191baf2e9db7ac72ae1",
                "size": 6829
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:043f40b98b892b40de8f366a4877d9d156b79e078c159e8ba29e516bd6d1c1f3",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5741c1c9c7a9fefc40c6616a877c25ae7e2d3b4e3f445bc7366d05c2eadaabf",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b7fbfed82651bb013b52b5f9e575eb057922dd32dbea33546ffd3791fd6f318",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31345e8a4ebd6f75c8d04b1987bb10dda6e287bb914c12f9506f73ae22df8918",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64c5ff84cb6737b8e4034ed8c0c032049484812c53fac7bd3922ac1887619c7b",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8151e9be2f5daef339c61f7281525da71de532fd3a55c08d147c7de15b1c0e4b",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c014d4420297605e816aee496643987e4894d4bccb07a796c70c571e2feb60d8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b08fce6652cca23dbcc24643d4e3a575ab16b891a2edf31d5519a6338d825663",
                    "size": 6663437
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84654d23dede7d884d759d913eaa352e537e1ba43c15703c36a1d8dbe077f952",
                    "size": 469
                }
            ]
        },
        "run-20240226": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:35c30e539ba616136969c19fd2628cb9b354aba79404715d51ddcf5b84afebeb",
                "size": 6829
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:043f40b98b892b40de8f366a4877d9d156b79e078c159e8ba29e516bd6d1c1f3",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5741c1c9c7a9fefc40c6616a877c25ae7e2d3b4e3f445bc7366d05c2eadaabf",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b7fbfed82651bb013b52b5f9e575eb057922dd32dbea33546ffd3791fd6f318",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31345e8a4ebd6f75c8d04b1987bb10dda6e287bb914c12f9506f73ae22df8918",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64c5ff84cb6737b8e4034ed8c0c032049484812c53fac7bd3922ac1887619c7b",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8151e9be2f5daef339c61f7281525da71de532fd3a55c08d147c7de15b1c0e4b",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c014d4420297605e816aee496643987e4894d4bccb07a796c70c571e2feb60d8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:040e085cd8db38291ae27fa077bd0b04dbe1725df1d7a2e464583e47d0725975",
                    "size": 6663481
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a57d82caa68b7e3417e057c44859b688e7d8f5056d75e53733618054379c9bc",
                    "size": 469
                }
            ]
        },
        "run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b16be1389e6a2497b5b4fc2b0e8c68ae8b6fe69a4edb7538ea918bd477bcc522",
                "size": 6828
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd87690b18c87c13099904842202959acc4018da84cfac16a5d4c7a746e45364",
                    "size": 6663373
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5109acecd52b59d513d2295f5bb77e9b0846e12558ff71b687de41d0b0364313",
                    "size": 465
                }
            ]
        },
        "run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7c8dc70f24ed7c224dc74c21fe3405f91cc1594f9427f4b4b46cabfcd364d517",
                "size": 6828
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c23871528fb561cb33c0496b31d9e1ce1c7e8e10d1927bf7a027488a740af73",
                    "size": 6663456
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:11c06ab580e0129301b2c18d1b063e033b6498cbf9bc508bc8dc2b50ef2ab478",
                    "size": 465
                }
            ]
        },
        "run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0096b3734c749fe5733d2a36d6fa9bfb10c6cac179b714c5f5d2a2e13ea67ec5",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3332e25e4bfa58c3723cd183449d3228c1de161242034e0d3982e25e66a65fcc",
                    "size": 6663498
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f4d37843a4274539d85111b6bf11d6135cdafb17c3a25c710000463aadb9505",
                    "size": 466
                }
            ]
        },
        "run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:68683058d12b915cd932c3d69f328316cf2a86038fa11747409f7ee4aaf38352",
                "size": 6814
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc90511c2602acf1b891866eb9a980c7e143c1a5460fa7d911f82439c691f5ce",
                    "size": 6663859
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e806b8ac5152e2bbaeda70c6450df74b5cc792a0ca8c6b12e99b570814080557",
                    "size": 466
                }
            ]
        },
        "run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:37cb9e7e748502d00e2505ea03de0f9c3c875f4d26cc69193e07e74125317f9a",
                "size": 6812
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a7aec071292a8273b692a3624abd583b0f30dbcd44594103eef735bd56bf7e0d",
                    "size": 6663530
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707a9d4f6c35fb513c936e4459685e69283b06182183b53db05c29c6c192b1ae",
                    "size": 466
                }
            ]
        }
    },
    "tags": [
        "20240205",
        "20240226",
        "20240227",
        "20240304",
        "20240401",
        "20240408",
        "20240429",
        "36",
        "36-20240205",
        "36-20240226",
        "36-20240227",
        "36-20240304",
        "36-20240401",
        "36-20240408",
        "36-build",
        "36-build-20240205",
        "36-build-20240226",
        "36-build-20240227",
        "36-build-20240304",
        "36-build-20240401",
        "36-build-20240408",
        "36-run",
        "36-run-20240205",
        "36-run-20240226",
        "36-run-20240227",
        "36-run-20240304",
        "36-run-20240401",
        "36-run-20240408",
        "37",
        "37-20240205",
        "37-20240226",
        "37-20240227",
        "37-20240304",
        "37-20240401",
        "37-20240408",
        "37-20240429",
        "37-build",
        "37-build-20240205",
        "37-build-20240226",
        "37-build-20240227",
        "37-build-20240304",
        "37-build-20240401",
        "37-build-20240408",
        "37-build-20240429",
        "37-run",
        "37-run-20240205",
        "37-run-20240226",
        "37-run-20240227",
        "37-run-20240304",
        "37-run-20240401",
        "37-run-20240408",
        "37-run-20240429",
        "38",
        "38-20240205",
        "38-20240226",
        "38-20240227",
        "38-20240304",
        "38-20240401",
        "38-20240408",
        "38-20240429",
        "38-build",
        "38-build-20240205",
        "38-build-20240226",
        "38-build-20240227",
        "38-build-20240304",
        "38-build-20240401",
        "38-build-20240408",
        "38-build-20240429",
        "38-run",
        "38-run-20240205",
        "38-run-20240226",
        "38-run-20240227",
        "38-run-20240304",
        "38-run-20240401",
        "38-run-20240408",
        "38-run-20240429",
        "build",
        "build-20240205",
        "build-20240226",
        "build-20240227",
        "build-20240304",
        "build-20240401",
        "build-20240408",
        "build-20240429",
        "latest",
        "latest-20240205",
        "latest-20240226",
        "latest-20240227",
        "latest-20240304",
        "latest-20240401",
        "latest-20240408",
        "latest-20240429",
        "latest-build",
        "latest-build-20240205",
        "latest-build-20240226",
        "latest-build-20240227",
        "latest-build-20240304",
        "latest-build-20240401",
        "latest-build-20240408",
        "latest-build-20240429",
        "latest-run",
        "latest-run-20240205",
        "latest-run-20240226",
        "latest-run-20240227",
        "latest-run-20240304",
        "latest-run-20240401",
        "latest-run-20240408",
        "latest-run-20240429",
        "run",
        "run-20240205",
        "run-20240226",
        "run-20240227",
        "run-20240304",
        "run-20240401",
        "run-20240408",
        "run-20240429"
    ],
    "configs": {
        "20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:33:29.690802444Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:51.352289509Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:52.040913956Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.086913794Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:55.875508418Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:56.018376913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:29.568850179Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:33:29.568850179Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:29.690802444Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:7d94e909dc19f31d9248e1ca5731a04da35c29e754dd69d2fb5a44a2502cc818",
                    "sha256:ed6509b907c0701f8a2a621cb39dbd26d066f869bf0b780990c71b717675bb3d",
                    "sha256:e03ba5a1224f9b985f2d94275263fa36221b3ab01f59437a07d3c1a623b76d77",
                    "sha256:9be68f287ebf7d1727a82714c098ca3ac0e021a4f0bd91d94de4992f010d993f",
                    "sha256:a5b159b9ba50945bb72f35a268a6bd8fca087febe08b2ec49f6982b5d39309e7",
                    "sha256:5efcacbddce62383428c47d9f0b7b716feaa80d8781fe6dd2b1dc81f391509df",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4491643620a3eb30fa973704b1de6c31cc71b0330dda8cb2847cc88b0981d732",
                    "sha256:946801c0603b620ea89b43ab291e4b5f2de4cff3dc26a90376676464b538765d",
                    "sha256:e26729d6196123f598909988248db79c531864f10b06d0e75bf1d616e0633926"
                ]
            }
        },
        "20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T07:01:13.821418715Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:51.352289509Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:52.040913956Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.086913794Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:55.875508418Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:56.018376913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:01:13.707781845Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T07:01:13.707781845Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:01:13.821418715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:7d94e909dc19f31d9248e1ca5731a04da35c29e754dd69d2fb5a44a2502cc818",
                    "sha256:ed6509b907c0701f8a2a621cb39dbd26d066f869bf0b780990c71b717675bb3d",
                    "sha256:e03ba5a1224f9b985f2d94275263fa36221b3ab01f59437a07d3c1a623b76d77",
                    "sha256:9be68f287ebf7d1727a82714c098ca3ac0e021a4f0bd91d94de4992f010d993f",
                    "sha256:a5b159b9ba50945bb72f35a268a6bd8fca087febe08b2ec49f6982b5d39309e7",
                    "sha256:5efcacbddce62383428c47d9f0b7b716feaa80d8781fe6dd2b1dc81f391509df",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4491643620a3eb30fa973704b1de6c31cc71b0330dda8cb2847cc88b0981d732",
                    "sha256:ebbb52a16f21cdd63eea0b77fe706c3c8d60ef8e48e0190b9034cc378e1e1346",
                    "sha256:84cfa9a1a48df6a07e85b7db8119e4e9d2823abee7122798eddc97c8b615a355"
                ]
            }
        },
        "20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:18:07.541742697Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:18:07.420361528Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:18:07.420361528Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:18:07.541742697Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:5c6594a14edb13d118ef19fec88df661e813f4adc3d59a933a630f39abd4185a",
                    "sha256:a097199109d2a9edceacb51e0c40ab84ba6631121b7c849ecaaf5ff592653986"
                ]
            }
        },
        "20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:48:13.076935283Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:12.967264244Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:48:12.967264244Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:13.076935283Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:7d7696ca2f43a78ae3091e7b9046f26c8cbfcf6de933847430143a8d66add907",
                    "sha256:59d809ce21ed7da4c39d56480f26de6e8040061ed1fb62fc54232f0644be4acc"
                ]
            }
        },
        "20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:44.663504675Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:44.54511821Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:44.54511821Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:44.663504675Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:c84fc6f189dfb96a5e01578fa541ed12b9fa81bf860c58ba59e2c03574021ef1",
                    "sha256:2b46eee6094d1ceb1e04207db8cf898115c7eb7968d5abda03d58404dd059cf3"
                ]
            }
        },
        "20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:19:41.984628102Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:19:41.864531819Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:19:41.864531819Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:19:41.984628102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:7c11aa1a0c2ee5b841618b04d2e435334d5e354be6cb7a1acacc5eb34a6a841c",
                    "sha256:3a222915426180229a8bb628a20e61e2ff92f1289b21c3d6579875d2310a5fef"
                ]
            }
        },
        "20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:39.98979442Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:39.884973017Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:39.884973017Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:39.98979442Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:3b2aeedf33a2aaff2d27043fb4ded3cdeef11acef00eb34880065a8e76a843ab",
                    "sha256:b51a555b5c5565511824a56568118101eb16f52c0a33232c101108087992613a"
                ]
            }
        },
        "36": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:20:23.15578462Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:48.382975748Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:49.114498269Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.160258289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:52.904600449Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:53.038869737Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:20:23.039957042Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:20:23.039957042Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:20:23.15578462Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:96e8237f4a277db04c955fec05200b74f0da4fc11acef6e970444aa8d1ac4877",
                    "sha256:eebacd7727dd5f1adf1a458419bda175ca082cd8b48b6f5ab3162ceac82ead68",
                    "sha256:6847feafbfe5a6b06d1a3180b2725497fd90858670af4d7e07d859032794fee6",
                    "sha256:2329dcac2e30f4e2a05e85f5b8dbaa8227ee8eb85ef825dd7ac0cb8fad9571fe",
                    "sha256:ca51ce238f812d151cfee4e045e109e016d9a7f7d83543fe8f0f508ebc62399e",
                    "sha256:eaa4fd10880c293c373fc3aa5f36e6d0b2267661144b4b50b13423abdc65b432",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:57d8577708926141837b5cef818df1c257b9d966cce81182c4fbc54c0cf82336",
                    "sha256:2f950650a637c0bf41f924695f37b11471d52710a6ce1bd573f85d6d13c85f09",
                    "sha256:c2d12fc2f89446fc52514ef4b6813020bdc9dc86d41a320e993523094cdc281b"
                ]
            }
        },
        "36-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:33:17.355719437Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:30.731081444Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.728887582Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.728887582Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:45:31.769327849Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.793427983Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.805803761Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.805803761Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:45:35.639168025Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:35.801238853Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:17.235418731Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:33:17.235418731Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:17.355719437Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:70bec8b60420945ed68778b7651fdae5be1e762a544bda7cfe8646d3cfa496a8",
                    "sha256:46bb4885e89f9818f246467a6d6c22a4015e68ba76feafc7a95c2654ba1a864c",
                    "sha256:ffe006fc0417220624c7603f50db7af8cbaeb87775b8cad8121584dbc82190e0",
                    "sha256:7a426c3f2c3daf0a3a7b703c8810230c4f76ec54a5b3972aaf2ac4b44ed3c031",
                    "sha256:a17d3939a40b03dcd2d31f8b949632c3056d1fd7ba90b808bdcb69574f106cea",
                    "sha256:3a167f245df36cafb1689d9e83280f92db3a94410899c634a0e4eeb1278e12b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7aefa85f0b6c07f7b79a8e1608f00c6e8d38f86e4d0051968c2fbf9587955bf2",
                    "sha256:49f30c11be376ad10c3f4ea83a00983a634869cb6a00b7c787fe1d5cc0a3bcbe",
                    "sha256:2186d6191a23a9650491840afea81516e5abfcc65e6111dde871703a7cbef3ba"
                ]
            }
        },
        "36-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T07:00:53.757402844Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:30.731081444Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.728887582Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.728887582Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:45:31.769327849Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.793427983Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.805803761Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.805803761Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:45:35.639168025Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:35.801238853Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:00:53.643670087Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T07:00:53.643670087Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:00:53.757402844Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:70bec8b60420945ed68778b7651fdae5be1e762a544bda7cfe8646d3cfa496a8",
                    "sha256:46bb4885e89f9818f246467a6d6c22a4015e68ba76feafc7a95c2654ba1a864c",
                    "sha256:ffe006fc0417220624c7603f50db7af8cbaeb87775b8cad8121584dbc82190e0",
                    "sha256:7a426c3f2c3daf0a3a7b703c8810230c4f76ec54a5b3972aaf2ac4b44ed3c031",
                    "sha256:a17d3939a40b03dcd2d31f8b949632c3056d1fd7ba90b808bdcb69574f106cea",
                    "sha256:3a167f245df36cafb1689d9e83280f92db3a94410899c634a0e4eeb1278e12b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7aefa85f0b6c07f7b79a8e1608f00c6e8d38f86e4d0051968c2fbf9587955bf2",
                    "sha256:00b0c6d5da5b5b60eeb4f0415d6069b191169ec191ebc59d79c120095cf5390b",
                    "sha256:b46275ffbab19cce06a7bea379caf5b1681a4a146dfaddfadcebc2e26bd9a44e"
                ]
            }
        },
        "36-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:38.510043729Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:19.727432623Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.493667027Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.493667027Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:20.504558637Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.53410244Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.54393228Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.54393228Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:24.266191717Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.405560095Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:38.394431116Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:38.394431116Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:38.510043729Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:e864a5fd5a85ea7de7c429ad3786adc43add7b3bad7605a5267f71b74ef4f46d",
                    "sha256:f9745bfda56c8769e29c7fe4418ec400bda3547d6f7e2b94cf1578c853decfb1",
                    "sha256:3b0bb44987d7ed3bb758a262b1cdb5cc89a8bb7caa6cf17d171ec9ffab456784",
                    "sha256:b668db57138d2f4d3a3a4fe2a4fca77d7a33a1147ea5193bc7f088a29bc3df6e",
                    "sha256:4fb9cef9cd8dfd649c46b33c2804e0ed65b39895160fd2940fa1e823a207137b",
                    "sha256:bf049f60667eee7c3ab494a865bbe46c948b2953f52aa4768f5eeb0ab3e7035f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9c4d3515b2ac6333e066ae20a1676f1c14cfa2e4013e83e034c0bfd5bce0137e",
                    "sha256:aaf33359aa04c040fc5ade36063fbd5436c73147fca022cd144f080d393fa18e",
                    "sha256:27e089a42019603c192f19dc6a1d3dc2b2b9de304041c03a780d552408a0f09f"
                ]
            }
        },
        "36-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:49:28.947599925Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:21.859759897Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.326242746Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.326242746Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:42:23.336383154Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.346622195Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.377651932Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.377651932Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:42:27.266843534Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:27.402142548Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:28.825192063Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:49:28.825192063Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:28.947599925Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:b59a6b5e1477f2c1760b9fafd534430e1b3e627940f206e2a912fc7cc99e8b5f",
                    "sha256:9d921ab8193391974ec2825bcb16b8687c1a495d839300d5976a46254f5cd319",
                    "sha256:357859910e787423ff442861725cd291a1d55ae5384cd316b21cac31999aed1e",
                    "sha256:41fb44363c3ee3098b05a3a643a8fe49f2a04b7ad67bcadf125aa1c2114bfece",
                    "sha256:34423e69f4515ba4a00b47bbfdf43063c6c1a46f6ec4f63ccb4a8f263d2854b1",
                    "sha256:2fcd075d152d2c1213ae41f4155e55bdab5602455031af70a1d006c325b4f722",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d6c771aa19b713b8429a249e0328e601b8714348b76f00b828e7ae21393eedba",
                    "sha256:245df76bfcf4f13696b27de0df86a6e0282b7d00ec0efd692e39592abd1a7b7c",
                    "sha256:02245e70b8a6a04684cffffb6dcd6ab465b481ed33fb80339a4396b53a318e67"
                ]
            }
        },
        "36-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:48:25.570985005Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:06.484116098Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.353362908Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.353362908Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:46:07.362716446Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.371056132Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.40557557Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.40557557Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:46:11.057940603Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:11.196274302Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:48:25.459956563Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:48:25.459956563Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:48:25.570985005Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0bcb93467a71db1d91f97206ca3d53ef7ed8325e886870c4f93254125506ccaf",
                    "sha256:ee5232de64f68e282c5152a2cf1ee54bf9a7144c661bb3f52975ed782c2f34c5",
                    "sha256:b5750ef0a3421417ee1aa11017b9e9cf5c58cb301c449b82d5c1db7ba06a1245",
                    "sha256:9e654b7993325650e6bdfe739d4519434ff8635d924db824318bd59c3052690a",
                    "sha256:6e0af07b0964b4201fcde2932ac07b59991415f655867d6e2b04e392114e6ef1",
                    "sha256:1a3e17d9bd0848c60750171e33d97cb75a1915a92f35b4c29e2e8e8088cbacf3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d024288ac0c97e8389226f634bba57c43cfd5b66544ada9f536ae4dc909264f6",
                    "sha256:4affb519663133dd2bb920a515298e0929c26d5876be3c34283fa7bbe6e9e435",
                    "sha256:4d44c876c1010bed350d99b61fb756a4cd496ce87ddf7be59424ddc0111a994e"
                ]
            }
        },
        "36-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:20:23.15578462Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:48.382975748Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:49.114498269Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.160258289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:52.904600449Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:53.038869737Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:20:23.039957042Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:20:23.039957042Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:20:23.15578462Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:96e8237f4a277db04c955fec05200b74f0da4fc11acef6e970444aa8d1ac4877",
                    "sha256:eebacd7727dd5f1adf1a458419bda175ca082cd8b48b6f5ab3162ceac82ead68",
                    "sha256:6847feafbfe5a6b06d1a3180b2725497fd90858670af4d7e07d859032794fee6",
                    "sha256:2329dcac2e30f4e2a05e85f5b8dbaa8227ee8eb85ef825dd7ac0cb8fad9571fe",
                    "sha256:ca51ce238f812d151cfee4e045e109e016d9a7f7d83543fe8f0f508ebc62399e",
                    "sha256:eaa4fd10880c293c373fc3aa5f36e6d0b2267661144b4b50b13423abdc65b432",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:57d8577708926141837b5cef818df1c257b9d966cce81182c4fbc54c0cf82336",
                    "sha256:2f950650a637c0bf41f924695f37b11471d52710a6ce1bd573f85d6d13c85f09",
                    "sha256:c2d12fc2f89446fc52514ef4b6813020bdc9dc86d41a320e993523094cdc281b"
                ]
            }
        },
        "36-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:19:37.169086914Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:11.154952948Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:01.602172722Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.669154565Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.669154565Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:28:02.678110994Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.717145907Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.725640524Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.725640524Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:28:06.421086055Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:06.57556925Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:19:37.044456285Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:19:37.044456285Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:19:37.169086914Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0d92bca6cbdd49236d8ab390b5bb6ac41ad1f1c8d23f4e2eff84aa74e6b0a324",
                    "sha256:442f501872df89f0dc6c52cf8b623054b62b6ddedc68f22fc4d39264ea116c96",
                    "sha256:beee18a3a3563db9c8df1d299673d8892105565ce4a0fbc7ab63375155a5150a",
                    "sha256:19fe2308eeb82a5bdd2f562463979e055cd1b238180489f8127d3211082107bf",
                    "sha256:778d1a696f6513942baa52af3e55af5923b1f27ef37c676edafb2601a18fa36c",
                    "sha256:e06d6001a1da448e0bdf9cad4a5e6369a2e23db8b751ed0777b3e274c8de6aca",
                    "sha256:27daa9b0497e60e96c3080049db438971a51b6d95e6a5d96f55f19634ff03934",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:34f73f50614cc4a294d3688662502a33433d888ed3d269d982c05187c0af92df",
                    "sha256:0096833958634edfa0a876493d5fcc76d247a8741ae5741194aed50a7b5e1009",
                    "sha256:55d7e5a94f7b1d8cd0531de25acf1b4008ca0f767e3d1bcb7bed6badf138c9f8"
                ]
            }
        },
        "36-build-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:33:41.210934191Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:03.676079915Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:03.676079915Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:03.676079915Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:07.603291728Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:03.855255812Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:04.801615079Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:04.801615079Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:17:04.814085235Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:04.852162692Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:04.865067581Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:04.865067581Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:17:08.567247082Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:08.716497047Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:41.088766702Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:33:41.088766702Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:41.210934191Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:9d44a11c7c4685e63e930874ba8ef98d23158b5146538f8777aea803a5b270aa",
                    "sha256:5744322f01c8168790b60628e81348558acca8bdab38a898297c49c00d70f30d",
                    "sha256:de88869daf243309e0876e6f37b3fb567ae4a6ab9ab5847e4a4233d0c3124858",
                    "sha256:a0bc242521196d2d113fd2d3024cb2195b296cc6c3a29389be7cfa0532e1b8ba",
                    "sha256:8c3c3cab1dadfdb076a40d329bc1382bb67566b5ef01d78198acf8f0b910ffc0",
                    "sha256:39e08dc57ab430c1e1cf9ce3efff02592819c75fc29c50216ef8125c8ee379b1",
                    "sha256:65b5e88f54346eb30ac80009479a7da0370d5a1719b16827ee1f9be87f13b638",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:19f0d68918ebdb8e6f5ec8a789d4e4a43a40e5449a5d8db5ac37cb6ab6ce6731",
                    "sha256:d083afe026258ddf98140081b6c921cbda1c81ac275bf638611b1d3841b8be0c",
                    "sha256:34e68984d1b1a92c5a0b4e2d94d5711fba86a36488256ae1f12a526e9e90f0df"
                ]
            }
        },
        "36-build-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T07:00:58.56410779Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:03.676079915Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:03.676079915Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:03.676079915Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:07.603291728Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:03.855255812Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:04.801615079Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:04.801615079Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:17:04.814085235Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:04.852162692Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:04.865067581Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:04.865067581Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:17:08.567247082Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:17:08.716497047Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:00:58.445553509Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T07:00:58.445553509Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:00:58.56410779Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:9d44a11c7c4685e63e930874ba8ef98d23158b5146538f8777aea803a5b270aa",
                    "sha256:5744322f01c8168790b60628e81348558acca8bdab38a898297c49c00d70f30d",
                    "sha256:de88869daf243309e0876e6f37b3fb567ae4a6ab9ab5847e4a4233d0c3124858",
                    "sha256:a0bc242521196d2d113fd2d3024cb2195b296cc6c3a29389be7cfa0532e1b8ba",
                    "sha256:8c3c3cab1dadfdb076a40d329bc1382bb67566b5ef01d78198acf8f0b910ffc0",
                    "sha256:39e08dc57ab430c1e1cf9ce3efff02592819c75fc29c50216ef8125c8ee379b1",
                    "sha256:65b5e88f54346eb30ac80009479a7da0370d5a1719b16827ee1f9be87f13b638",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:19f0d68918ebdb8e6f5ec8a789d4e4a43a40e5449a5d8db5ac37cb6ab6ce6731",
                    "sha256:23082c46ee0aa9f57d25144628bb2264dadd51576add468461e6967270bce963",
                    "sha256:ab7e743914eb8a8176f387adc04d494ad8f95709a6b571eaee3bbbb5f224fecc"
                ]
            }
        },
        "36-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:16:33.258838404Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.363154019Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.363154019Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.363154019Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:04.379900568Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:35.627931567Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:36.537714792Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:36.537714792Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:40:36.546989379Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:36.594804758Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:36.60416499Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:36.60416499Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:40:40.28808744Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:40.427106425Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:16:33.140021166Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:16:33.140021166Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:16:33.258838404Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:924511e57d79442e2bf7973c38bf065598299d04b35471eab6955bf1666a94c3",
                    "sha256:d8d421b9ca9350109e786f72e6e2d479a7489487e19e121318feb6a98d6a3c46",
                    "sha256:5f3f667a8c641c7ce78a40b3ed333bb6e0ab87339c88378778963b4d17b2c9fc",
                    "sha256:e4869793269ed6124242bff3bcd0855ddbf1e6efbe60a3c37e3456e6dc608009",
                    "sha256:45eef311cbfd9b312d16fefd5aeb94279dadb57574ed18613752a3c3088c383f",
                    "sha256:9f8687764932f06956ff72250373b745763b1d67354923fbeb20dc2f0b84160a",
                    "sha256:86e05b32052b9fc5471a682b1171640ad6904bc57aab472473741d6e4d43828e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a4f57127d58c280ca985f7dd4600d1dcea09b82842510826c8a125dacdb6e204",
                    "sha256:eb60e349cac83d204bd3720dabb288bc3cc13d312aa562e9bfdfbba0a033fad6",
                    "sha256:5d01185329020a739faed8272dcf49ef7b31c3a475aa9d2d27f2fb9bbb280783"
                ]
            }
        },
        "36-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:48:33.860548528Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.448472689Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.448472689Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.448472689Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:18.25553519Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:44.522824852Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:45.462110722Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:45.462110722Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:14:45.470940956Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:45.479496771Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:45.527482553Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:45.527482553Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:14:49.280416402Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:49.423571008Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:33.743885117Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:48:33.743885117Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:33.860548528Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:b4c9dd91c72a81ac4a202ff0748402788349045fe3597c5797e383c96bc6d5b1",
                    "sha256:2f66da14d3d811f096c502aea6eead828344d4261ec5532d960d5a2dcdbb469b",
                    "sha256:23fa17f094d5992d65ab0ef1f99d1fff0d19bb3fd83925b018b1f059aafe38f2",
                    "sha256:f0785819e675537037c3cea9aff10a75f41bed438da722737a4be828f7eefdff",
                    "sha256:042a6a8f10348e05e145155e331a88a844748f5a329d9a555e30c114ec629bda",
                    "sha256:24aae0af27aeacf4ccb8a67c40068bebf526a88e4cafdc8d4ab7ca35789e9843",
                    "sha256:960a300b6cbe4e665c6f83989be25a2cebe6fb08c225ee042d1cc9d97c62359a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8eb6e91fbc5c2b79888118e9c2ec63794a5c7a80698d9a85bcc2765b272d4017",
                    "sha256:0be43875e783c806c2bd54615e067cf0e16b42661e2ed004c7c042ceb0e53ec5",
                    "sha256:c425481b100312a2c713d44226d179558dfc47a7eb8cda67b3e55bcb718a4d96"
                ]
            }
        },
        "36-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:25.795673191Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:33.592232034Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:33.592232034Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:33.592232034Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:44:56.976355919Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:17:59.232940909Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:00.64397906Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:00.64397906Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:00.656438731Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:00.709323805Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:00.721159717Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:00.721159717Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:04.549668403Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:04.718901613Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:25.687035153Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:25.687035153Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:25.795673191Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:e6fde95adb90fc37e5b5652ab1bad02d60972f7659f2fcbd7bc73b2927bbb4b0",
                    "sha256:373d666da30ff7d663200959ae1ce3843b56ceca76a0eed7bd53ca274da840c0",
                    "sha256:b52cfed2ec76d493b41d4bce85ce238bd70e369d628a9a9fcbc333a0d42f3350",
                    "sha256:0989bf391c4b6d2746e580cc456361f69a21dc59a4bc93b9df4820037790200b",
                    "sha256:a091b1b5298eb3ff3dd802fa8c77cf830fe9bf937bf359254f70135971eabe14",
                    "sha256:0160428d8d81785dcc48e306f2eeb07000e5122a3bc80f3e334a10cdc09baa7b",
                    "sha256:0e99d747dbcdff2971cfeb3a61d830f90d0feb64c9f71297d4197adf8adcde97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0625ea4b2bffeedc9748e66239136207a8bfda1fa83bd7da5d23eca35208195c",
                    "sha256:63db754b98d6af04c208b6279ce2c68fa1e3ec5c30372d490ac733d58768907d",
                    "sha256:c7670bf06d921fe73133ad52833f1c56d4bcaf73bf5194444fd78a3fe8b49e23"
                ]
            }
        },
        "36-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:19:37.169086914Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:11.154952948Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:01.602172722Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.669154565Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.669154565Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:28:02.678110994Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.717145907Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.725640524Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.725640524Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:28:06.421086055Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:06.57556925Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:19:37.044456285Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:19:37.044456285Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:19:37.169086914Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0d92bca6cbdd49236d8ab390b5bb6ac41ad1f1c8d23f4e2eff84aa74e6b0a324",
                    "sha256:442f501872df89f0dc6c52cf8b623054b62b6ddedc68f22fc4d39264ea116c96",
                    "sha256:beee18a3a3563db9c8df1d299673d8892105565ce4a0fbc7ab63375155a5150a",
                    "sha256:19fe2308eeb82a5bdd2f562463979e055cd1b238180489f8127d3211082107bf",
                    "sha256:778d1a696f6513942baa52af3e55af5923b1f27ef37c676edafb2601a18fa36c",
                    "sha256:e06d6001a1da448e0bdf9cad4a5e6369a2e23db8b751ed0777b3e274c8de6aca",
                    "sha256:27daa9b0497e60e96c3080049db438971a51b6d95e6a5d96f55f19634ff03934",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:34f73f50614cc4a294d3688662502a33433d888ed3d269d982c05187c0af92df",
                    "sha256:0096833958634edfa0a876493d5fcc76d247a8741ae5741194aed50a7b5e1009",
                    "sha256:55d7e5a94f7b1d8cd0531de25acf1b4008ca0f767e3d1bcb7bed6badf138c9f8"
                ]
            }
        },
        "36-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:20:23.15578462Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:48.382975748Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:49.114498269Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.160258289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:52.904600449Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:53.038869737Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:20:23.039957042Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:20:23.039957042Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:20:23.15578462Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:96e8237f4a277db04c955fec05200b74f0da4fc11acef6e970444aa8d1ac4877",
                    "sha256:eebacd7727dd5f1adf1a458419bda175ca082cd8b48b6f5ab3162ceac82ead68",
                    "sha256:6847feafbfe5a6b06d1a3180b2725497fd90858670af4d7e07d859032794fee6",
                    "sha256:2329dcac2e30f4e2a05e85f5b8dbaa8227ee8eb85ef825dd7ac0cb8fad9571fe",
                    "sha256:ca51ce238f812d151cfee4e045e109e016d9a7f7d83543fe8f0f508ebc62399e",
                    "sha256:eaa4fd10880c293c373fc3aa5f36e6d0b2267661144b4b50b13423abdc65b432",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:57d8577708926141837b5cef818df1c257b9d966cce81182c4fbc54c0cf82336",
                    "sha256:2f950650a637c0bf41f924695f37b11471d52710a6ce1bd573f85d6d13c85f09",
                    "sha256:c2d12fc2f89446fc52514ef4b6813020bdc9dc86d41a320e993523094cdc281b"
                ]
            }
        },
        "36-run-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:33:17.355719437Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:30.731081444Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.728887582Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.728887582Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:45:31.769327849Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.793427983Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.805803761Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.805803761Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:45:35.639168025Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:35.801238853Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:17.235418731Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:33:17.235418731Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:17.355719437Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:70bec8b60420945ed68778b7651fdae5be1e762a544bda7cfe8646d3cfa496a8",
                    "sha256:46bb4885e89f9818f246467a6d6c22a4015e68ba76feafc7a95c2654ba1a864c",
                    "sha256:ffe006fc0417220624c7603f50db7af8cbaeb87775b8cad8121584dbc82190e0",
                    "sha256:7a426c3f2c3daf0a3a7b703c8810230c4f76ec54a5b3972aaf2ac4b44ed3c031",
                    "sha256:a17d3939a40b03dcd2d31f8b949632c3056d1fd7ba90b808bdcb69574f106cea",
                    "sha256:3a167f245df36cafb1689d9e83280f92db3a94410899c634a0e4eeb1278e12b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7aefa85f0b6c07f7b79a8e1608f00c6e8d38f86e4d0051968c2fbf9587955bf2",
                    "sha256:49f30c11be376ad10c3f4ea83a00983a634869cb6a00b7c787fe1d5cc0a3bcbe",
                    "sha256:2186d6191a23a9650491840afea81516e5abfcc65e6111dde871703a7cbef3ba"
                ]
            }
        },
        "36-run-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T07:00:53.757402844Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:02.331567977Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:30.731081444Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.728887582Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.728887582Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:45:31.769327849Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.793427983Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.805803761Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:31.805803761Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:45:35.639168025Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:35.801238853Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:00:53.643670087Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T07:00:53.643670087Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:00:53.757402844Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:70bec8b60420945ed68778b7651fdae5be1e762a544bda7cfe8646d3cfa496a8",
                    "sha256:46bb4885e89f9818f246467a6d6c22a4015e68ba76feafc7a95c2654ba1a864c",
                    "sha256:ffe006fc0417220624c7603f50db7af8cbaeb87775b8cad8121584dbc82190e0",
                    "sha256:7a426c3f2c3daf0a3a7b703c8810230c4f76ec54a5b3972aaf2ac4b44ed3c031",
                    "sha256:a17d3939a40b03dcd2d31f8b949632c3056d1fd7ba90b808bdcb69574f106cea",
                    "sha256:3a167f245df36cafb1689d9e83280f92db3a94410899c634a0e4eeb1278e12b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7aefa85f0b6c07f7b79a8e1608f00c6e8d38f86e4d0051968c2fbf9587955bf2",
                    "sha256:00b0c6d5da5b5b60eeb4f0415d6069b191169ec191ebc59d79c120095cf5390b",
                    "sha256:b46275ffbab19cce06a7bea379caf5b1681a4a146dfaddfadcebc2e26bd9a44e"
                ]
            }
        },
        "36-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:38.510043729Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:19.727432623Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.493667027Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.493667027Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:20.504558637Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.53410244Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.54393228Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.54393228Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:24.266191717Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.405560095Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:38.394431116Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:38.394431116Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:38.510043729Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:e864a5fd5a85ea7de7c429ad3786adc43add7b3bad7605a5267f71b74ef4f46d",
                    "sha256:f9745bfda56c8769e29c7fe4418ec400bda3547d6f7e2b94cf1578c853decfb1",
                    "sha256:3b0bb44987d7ed3bb758a262b1cdb5cc89a8bb7caa6cf17d171ec9ffab456784",
                    "sha256:b668db57138d2f4d3a3a4fe2a4fca77d7a33a1147ea5193bc7f088a29bc3df6e",
                    "sha256:4fb9cef9cd8dfd649c46b33c2804e0ed65b39895160fd2940fa1e823a207137b",
                    "sha256:bf049f60667eee7c3ab494a865bbe46c948b2953f52aa4768f5eeb0ab3e7035f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9c4d3515b2ac6333e066ae20a1676f1c14cfa2e4013e83e034c0bfd5bce0137e",
                    "sha256:aaf33359aa04c040fc5ade36063fbd5436c73147fca022cd144f080d393fa18e",
                    "sha256:27e089a42019603c192f19dc6a1d3dc2b2b9de304041c03a780d552408a0f09f"
                ]
            }
        },
        "36-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:49:28.947599925Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:21.859759897Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.326242746Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.326242746Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:42:23.336383154Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.346622195Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.377651932Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.377651932Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:42:27.266843534Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:27.402142548Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:28.825192063Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:49:28.825192063Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:28.947599925Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:b59a6b5e1477f2c1760b9fafd534430e1b3e627940f206e2a912fc7cc99e8b5f",
                    "sha256:9d921ab8193391974ec2825bcb16b8687c1a495d839300d5976a46254f5cd319",
                    "sha256:357859910e787423ff442861725cd291a1d55ae5384cd316b21cac31999aed1e",
                    "sha256:41fb44363c3ee3098b05a3a643a8fe49f2a04b7ad67bcadf125aa1c2114bfece",
                    "sha256:34423e69f4515ba4a00b47bbfdf43063c6c1a46f6ec4f63ccb4a8f263d2854b1",
                    "sha256:2fcd075d152d2c1213ae41f4155e55bdab5602455031af70a1d006c325b4f722",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d6c771aa19b713b8429a249e0328e601b8714348b76f00b828e7ae21393eedba",
                    "sha256:245df76bfcf4f13696b27de0df86a6e0282b7d00ec0efd692e39592abd1a7b7c",
                    "sha256:02245e70b8a6a04684cffffb6dcd6ab465b481ed33fb80339a4396b53a318e67"
                ]
            }
        },
        "36-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:48:25.570985005Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:06.484116098Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.353362908Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.353362908Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:46:07.362716446Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.371056132Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.40557557Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.40557557Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:46:11.057940603Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:11.196274302Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:48:25.459956563Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:48:25.459956563Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:48:25.570985005Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0bcb93467a71db1d91f97206ca3d53ef7ed8325e886870c4f93254125506ccaf",
                    "sha256:ee5232de64f68e282c5152a2cf1ee54bf9a7144c661bb3f52975ed782c2f34c5",
                    "sha256:b5750ef0a3421417ee1aa11017b9e9cf5c58cb301c449b82d5c1db7ba06a1245",
                    "sha256:9e654b7993325650e6bdfe739d4519434ff8635d924db824318bd59c3052690a",
                    "sha256:6e0af07b0964b4201fcde2932ac07b59991415f655867d6e2b04e392114e6ef1",
                    "sha256:1a3e17d9bd0848c60750171e33d97cb75a1915a92f35b4c29e2e8e8088cbacf3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d024288ac0c97e8389226f634bba57c43cfd5b66544ada9f536ae4dc909264f6",
                    "sha256:4affb519663133dd2bb920a515298e0929c26d5876be3c34283fa7bbe6e9e435",
                    "sha256:4d44c876c1010bed350d99b61fb756a4cd496ce87ddf7be59424ddc0111a994e"
                ]
            }
        },
        "36-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:20:23.15578462Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:48.382975748Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:49.114498269Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.160258289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:52.904600449Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:53.038869737Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:20:23.039957042Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:20:23.039957042Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:20:23.15578462Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:96e8237f4a277db04c955fec05200b74f0da4fc11acef6e970444aa8d1ac4877",
                    "sha256:eebacd7727dd5f1adf1a458419bda175ca082cd8b48b6f5ab3162ceac82ead68",
                    "sha256:6847feafbfe5a6b06d1a3180b2725497fd90858670af4d7e07d859032794fee6",
                    "sha256:2329dcac2e30f4e2a05e85f5b8dbaa8227ee8eb85ef825dd7ac0cb8fad9571fe",
                    "sha256:ca51ce238f812d151cfee4e045e109e016d9a7f7d83543fe8f0f508ebc62399e",
                    "sha256:eaa4fd10880c293c373fc3aa5f36e6d0b2267661144b4b50b13423abdc65b432",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:57d8577708926141837b5cef818df1c257b9d966cce81182c4fbc54c0cf82336",
                    "sha256:2f950650a637c0bf41f924695f37b11471d52710a6ce1bd573f85d6d13c85f09",
                    "sha256:c2d12fc2f89446fc52514ef4b6813020bdc9dc86d41a320e993523094cdc281b"
                ]
            }
        },
        "37": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:39.98979442Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:39.884973017Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:39.884973017Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:39.98979442Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:3b2aeedf33a2aaff2d27043fb4ded3cdeef11acef00eb34880065a8e76a843ab",
                    "sha256:b51a555b5c5565511824a56568118101eb16f52c0a33232c101108087992613a"
                ]
            }
        },
        "37-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:33:29.690802444Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:51.352289509Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:52.040913956Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.086913794Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:55.875508418Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:56.018376913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:29.568850179Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:33:29.568850179Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:29.690802444Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:7d94e909dc19f31d9248e1ca5731a04da35c29e754dd69d2fb5a44a2502cc818",
                    "sha256:ed6509b907c0701f8a2a621cb39dbd26d066f869bf0b780990c71b717675bb3d",
                    "sha256:e03ba5a1224f9b985f2d94275263fa36221b3ab01f59437a07d3c1a623b76d77",
                    "sha256:9be68f287ebf7d1727a82714c098ca3ac0e021a4f0bd91d94de4992f010d993f",
                    "sha256:a5b159b9ba50945bb72f35a268a6bd8fca087febe08b2ec49f6982b5d39309e7",
                    "sha256:5efcacbddce62383428c47d9f0b7b716feaa80d8781fe6dd2b1dc81f391509df",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4491643620a3eb30fa973704b1de6c31cc71b0330dda8cb2847cc88b0981d732",
                    "sha256:946801c0603b620ea89b43ab291e4b5f2de4cff3dc26a90376676464b538765d",
                    "sha256:e26729d6196123f598909988248db79c531864f10b06d0e75bf1d616e0633926"
                ]
            }
        },
        "37-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T07:01:13.821418715Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:51.352289509Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:52.040913956Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.086913794Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:55.875508418Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:56.018376913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:01:13.707781845Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T07:01:13.707781845Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:01:13.821418715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:7d94e909dc19f31d9248e1ca5731a04da35c29e754dd69d2fb5a44a2502cc818",
                    "sha256:ed6509b907c0701f8a2a621cb39dbd26d066f869bf0b780990c71b717675bb3d",
                    "sha256:e03ba5a1224f9b985f2d94275263fa36221b3ab01f59437a07d3c1a623b76d77",
                    "sha256:9be68f287ebf7d1727a82714c098ca3ac0e021a4f0bd91d94de4992f010d993f",
                    "sha256:a5b159b9ba50945bb72f35a268a6bd8fca087febe08b2ec49f6982b5d39309e7",
                    "sha256:5efcacbddce62383428c47d9f0b7b716feaa80d8781fe6dd2b1dc81f391509df",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4491643620a3eb30fa973704b1de6c31cc71b0330dda8cb2847cc88b0981d732",
                    "sha256:ebbb52a16f21cdd63eea0b77fe706c3c8d60ef8e48e0190b9034cc378e1e1346",
                    "sha256:84cfa9a1a48df6a07e85b7db8119e4e9d2823abee7122798eddc97c8b615a355"
                ]
            }
        },
        "37-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:18:07.541742697Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:18:07.420361528Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:18:07.420361528Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:18:07.541742697Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:5c6594a14edb13d118ef19fec88df661e813f4adc3d59a933a630f39abd4185a",
                    "sha256:a097199109d2a9edceacb51e0c40ab84ba6631121b7c849ecaaf5ff592653986"
                ]
            }
        },
        "37-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:48:13.076935283Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:12.967264244Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:48:12.967264244Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:13.076935283Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:7d7696ca2f43a78ae3091e7b9046f26c8cbfcf6de933847430143a8d66add907",
                    "sha256:59d809ce21ed7da4c39d56480f26de6e8040061ed1fb62fc54232f0644be4acc"
                ]
            }
        },
        "37-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:44.663504675Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:44.54511821Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:44.54511821Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:44.663504675Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:c84fc6f189dfb96a5e01578fa541ed12b9fa81bf860c58ba59e2c03574021ef1",
                    "sha256:2b46eee6094d1ceb1e04207db8cf898115c7eb7968d5abda03d58404dd059cf3"
                ]
            }
        },
        "37-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:19:41.984628102Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:19:41.864531819Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:19:41.864531819Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:19:41.984628102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:7c11aa1a0c2ee5b841618b04d2e435334d5e354be6cb7a1acacc5eb34a6a841c",
                    "sha256:3a222915426180229a8bb628a20e61e2ff92f1289b21c3d6579875d2310a5fef"
                ]
            }
        },
        "37-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:39.98979442Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:39.884973017Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:39.884973017Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:39.98979442Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:3b2aeedf33a2aaff2d27043fb4ded3cdeef11acef00eb34880065a8e76a843ab",
                    "sha256:b51a555b5c5565511824a56568118101eb16f52c0a33232c101108087992613a"
                ]
            }
        },
        "37-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:25.075999169Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:24.960129794Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:24.960129794Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:25.075999169Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:653de70efb7527ede0736e7249506c30c9bfbb3683dd179fa0dd412b11e65446",
                    "sha256:c3d2d260e914a0cc921938cc16fedffb912eb513153b104f3edaf3c34a47d3a9"
                ]
            }
        },
        "37-build-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:33:58.37521539Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:10.8092517Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:49.392328016Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:50.523617988Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.557647649Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:54.352613602Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:54.484309683Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:58.257303835Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:33:58.257303835Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:58.37521539Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:9391b38776fe1a447956db381646ee109343bd22183a6c607d66c26dac722850",
                    "sha256:2ff3e8a40fae975f72250e96f2c01345768ef0a3dbcfbf6084bc542211223c04",
                    "sha256:38432aa17028b7bdb0c9d5c2b22fb4207811641298965ba6771cd989d6a19daa",
                    "sha256:3efdb146c34f8f1ff3c22b490e72b097196f8cf3a214dfc51628ba81f402eeb1",
                    "sha256:bf38ccf74068b318ec44fb671d7f71d3454fb8ab9304451042334e972b5fa0ec",
                    "sha256:50fbc93a18898e758d8a4426c13b8cdb844e98e4fe11dbc5e9409eb7f1466e43",
                    "sha256:21e4e77425952b2bdbb4f06e327bd295156461fc4fe3e31ed324ba59b04a3712",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f653a5aac8e7aec60e0930415cf5cfc3ee9a054c6b5996f3e8bcd9c24b11e54",
                    "sha256:4f199bf7b18e8ec512e3823c0e2cdac90a1d3801807daf988efd23da542e4fee",
                    "sha256:1137cf2af612ca699c6209242dac3f52eb4600205454580993b2effb71e3ff40"
                ]
            }
        },
        "37-build-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T07:01:36.391478582Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:10.8092517Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:49.392328016Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:50.523617988Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.557647649Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:54.352613602Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:54.484309683Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:01:36.272233398Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T07:01:36.272233398Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:01:36.391478582Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:9391b38776fe1a447956db381646ee109343bd22183a6c607d66c26dac722850",
                    "sha256:2ff3e8a40fae975f72250e96f2c01345768ef0a3dbcfbf6084bc542211223c04",
                    "sha256:38432aa17028b7bdb0c9d5c2b22fb4207811641298965ba6771cd989d6a19daa",
                    "sha256:3efdb146c34f8f1ff3c22b490e72b097196f8cf3a214dfc51628ba81f402eeb1",
                    "sha256:bf38ccf74068b318ec44fb671d7f71d3454fb8ab9304451042334e972b5fa0ec",
                    "sha256:50fbc93a18898e758d8a4426c13b8cdb844e98e4fe11dbc5e9409eb7f1466e43",
                    "sha256:21e4e77425952b2bdbb4f06e327bd295156461fc4fe3e31ed324ba59b04a3712",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f653a5aac8e7aec60e0930415cf5cfc3ee9a054c6b5996f3e8bcd9c24b11e54",
                    "sha256:b2258ca308a791357910aa287b4621b13420a6574b0c17682034d7121e3af9dd",
                    "sha256:61160616be346c377b4137d59f7e2e1e039f78dab485b97ff6ce37490ce92207"
                ]
            }
        },
        "37-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:17:22.177699052Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:10:56.098365397Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:26.894768836Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:27.841017293Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.850413212Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:31.607983559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:31.757692693Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:17:22.070157949Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:17:22.070157949Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:17:22.177699052Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:153f603c3b6b2529b45b12c9cb3de69de633d99488c4aac6cb5e04c6784e284c",
                    "sha256:fcda31efe0f90abdb3be0e2cc3050fddb745d7db41b962e3a08d908b3fe90c76",
                    "sha256:168e7cb2c07cd77fe30fd104d59f5ac49b7a43775f04c196367fa588f2159f11",
                    "sha256:3e98c7cf4c63c439e9045cd721cc19c243588d17804a57358309accf40b5249c",
                    "sha256:8aeb044849aef9a674a8ebde259f830df38faaa43b11f80b3bec5085ace3c264",
                    "sha256:691ea9dfdaf44533ac36d1341c6822b6735744922c3d5c304e657357f4babe33",
                    "sha256:072ee65b31efbe2110bc15922159f609d9d9c933715bc4429aeb7f4c5da9d425",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bd215b090f3f370a73aa2871e3e123516169ed4db9f68a876a6be0d4a288d6d4",
                    "sha256:88652d8ea4dd504a362c1778faac39c0a261898f90261aea5940e28355cd5b69",
                    "sha256:d85549778fe29c16f6bf64127d56479bd9f13d530aa0c7f7c3cadac604083b7b"
                ]
            }
        },
        "37-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:48:54.271723734Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:07.560394223Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:33.168342892Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:34.153622864Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.190278048Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:37.906466695Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:38.054385621Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:54.155262452Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:48:54.155262452Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:54.271723734Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:5b32c6607b8e7ea89ed5bb72a3578bb0d4723f5496d0a8e7dc688bf6a3a167d6",
                    "sha256:90da55fed465de8a873bf3e2bcdea7dca9a0be400a66dfa4c0efde5fa5ad1712",
                    "sha256:d5b90a049cc6b8b6a297f2e6f8a012847c545187714f13feb3004077215fe790",
                    "sha256:ac341c2760f8397f739500c811ea7bfc967bee43cae3b5bccbc3bc6263562d17",
                    "sha256:383c3fcfa865391817fdec807ce0f15866c08261ec20642c87fdde447997f846",
                    "sha256:d8c138867fdbf59da6040e42db8f659089ae32f509c4809cd61e7b817c68284d",
                    "sha256:59113e489ab1305fec7cc3fd646933122fb6f8dfeb9f3e8146b36687dd3f8ce0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e090112138683d3816cd9299b41c91f8e2961f75a329ef3583c678904c6aa0c",
                    "sha256:117439df62a0c949d3f2c920805b55235a48864d1579387b48884cd6ef31baa0",
                    "sha256:54b105ae557e7782fd91acb6c5b110b6dc38facf76dd900766c805e6a2e9f455"
                ]
            }
        },
        "37-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:53.166025476Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:44:46.483219966Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:11.966182353Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:13.40948656Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.42436327Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:17.292242645Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:17.441252547Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:53.04218489Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:53.04218489Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:53.166025476Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2bc63a4a3e163679c8a2399342b1daf3e005320d94db933ce217a0f80d1b4537",
                    "sha256:d75154443a45cab05ca4a85ddd827b962fedcff91b702d791e6ef9404f6c85d3",
                    "sha256:ed61218e50e513b23bae8d31f72e7c8e7a3d0090e48e2ff087a536ac362cfb81",
                    "sha256:23faadc341a4670f586fccbfa7d9b0c5a5e56be8ab46b55a4067df82e5569a5c",
                    "sha256:26696ab075f5bb87eee8a46b41f2091a3f9d7edb2116147001a7677757eaaca5",
                    "sha256:61d65d5da4322b148f9078fa00914c14291b0bdf48b073091e08240ed72a9f7c",
                    "sha256:879d60f10dea3318ceaedb2814160c1ae4cc919d4f04d2e62152d05c1ea7011a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0428822e1d59c6db13038f6502cd2c9a69bd7e2d2a033cb20fc19071849b112e",
                    "sha256:f42d5fe962fb60a09b1002981c9199424901150b10258b1204a9e225fcfd3d74",
                    "sha256:3fabed44006fcfd14825b6c3c305dcf7b0dc134c5583aafb432f9fe037614dbe"
                ]
            }
        },
        "37-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:19:54.206213013Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:06.695861539Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:31.267198079Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:32.694247574Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.719346978Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:36.547683782Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:36.691463904Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:19:54.089479679Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:19:54.089479679Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:19:54.206213013Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3f054b5308bf8dbf3abb2dac1bc72fac6b6e9569c5d0c4d1733c57b40f98d68c",
                    "sha256:9a408e5130d5761269a2f78fe14c41bfad96906f19a9b6f231ba27a0e270536b",
                    "sha256:ce27ddfda0b79dba438fc400e0d24f635fec12b6b0b2e61ff692ddfb273b5fe9",
                    "sha256:251af411a33440438f0b2f94cdfb89f2f9ffdbc97319bda046932d48df33eb89",
                    "sha256:5482afbecbaab7a5c1e492cf2a2f03aafdc9012c4dc853b5b5c1ed9fde902db7",
                    "sha256:5d6da048fbb12c4062ff5b76617e555654e7b2043bfca3f0791046007fc79bb6",
                    "sha256:c6c5906dcd307ca53496f54734925e883c2e43f758510871473e5490706bf6a8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:42adbbc0741061b3fa0e1fde61c20ae07301f416423df023d7264ef090febb62",
                    "sha256:28a64d3d0feb245922646e87e55d50684593e978129e0fd349f94e2cdd012a03",
                    "sha256:e1f9a2effa82857b26d2655df028f81ef38ccfc74d0fc33af861b59d9dad7017"
                ]
            }
        },
        "37-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:25.075999169Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:24.960129794Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:24.960129794Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:25.075999169Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:653de70efb7527ede0736e7249506c30c9bfbb3683dd179fa0dd412b11e65446",
                    "sha256:c3d2d260e914a0cc921938cc16fedffb912eb513153b104f3edaf3c34a47d3a9"
                ]
            }
        },
        "37-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:39.98979442Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:39.884973017Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:39.884973017Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:39.98979442Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:3b2aeedf33a2aaff2d27043fb4ded3cdeef11acef00eb34880065a8e76a843ab",
                    "sha256:b51a555b5c5565511824a56568118101eb16f52c0a33232c101108087992613a"
                ]
            }
        },
        "37-run-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:33:29.690802444Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:51.352289509Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:52.040913956Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.086913794Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:55.875508418Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:56.018376913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:29.568850179Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:33:29.568850179Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:29.690802444Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:7d94e909dc19f31d9248e1ca5731a04da35c29e754dd69d2fb5a44a2502cc818",
                    "sha256:ed6509b907c0701f8a2a621cb39dbd26d066f869bf0b780990c71b717675bb3d",
                    "sha256:e03ba5a1224f9b985f2d94275263fa36221b3ab01f59437a07d3c1a623b76d77",
                    "sha256:9be68f287ebf7d1727a82714c098ca3ac0e021a4f0bd91d94de4992f010d993f",
                    "sha256:a5b159b9ba50945bb72f35a268a6bd8fca087febe08b2ec49f6982b5d39309e7",
                    "sha256:5efcacbddce62383428c47d9f0b7b716feaa80d8781fe6dd2b1dc81f391509df",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4491643620a3eb30fa973704b1de6c31cc71b0330dda8cb2847cc88b0981d732",
                    "sha256:946801c0603b620ea89b43ab291e4b5f2de4cff3dc26a90376676464b538765d",
                    "sha256:e26729d6196123f598909988248db79c531864f10b06d0e75bf1d616e0633926"
                ]
            }
        },
        "37-run-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T07:01:13.821418715Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:51.352289509Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:52.040913956Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.086913794Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:55.875508418Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:56.018376913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:01:13.707781845Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T07:01:13.707781845Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:01:13.821418715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:7d94e909dc19f31d9248e1ca5731a04da35c29e754dd69d2fb5a44a2502cc818",
                    "sha256:ed6509b907c0701f8a2a621cb39dbd26d066f869bf0b780990c71b717675bb3d",
                    "sha256:e03ba5a1224f9b985f2d94275263fa36221b3ab01f59437a07d3c1a623b76d77",
                    "sha256:9be68f287ebf7d1727a82714c098ca3ac0e021a4f0bd91d94de4992f010d993f",
                    "sha256:a5b159b9ba50945bb72f35a268a6bd8fca087febe08b2ec49f6982b5d39309e7",
                    "sha256:5efcacbddce62383428c47d9f0b7b716feaa80d8781fe6dd2b1dc81f391509df",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4491643620a3eb30fa973704b1de6c31cc71b0330dda8cb2847cc88b0981d732",
                    "sha256:ebbb52a16f21cdd63eea0b77fe706c3c8d60ef8e48e0190b9034cc378e1e1346",
                    "sha256:84cfa9a1a48df6a07e85b7db8119e4e9d2823abee7122798eddc97c8b615a355"
                ]
            }
        },
        "37-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:18:07.541742697Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:18:07.420361528Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:18:07.420361528Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:18:07.541742697Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:5c6594a14edb13d118ef19fec88df661e813f4adc3d59a933a630f39abd4185a",
                    "sha256:a097199109d2a9edceacb51e0c40ab84ba6631121b7c849ecaaf5ff592653986"
                ]
            }
        },
        "37-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:48:13.076935283Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:12.967264244Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:48:12.967264244Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:13.076935283Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:7d7696ca2f43a78ae3091e7b9046f26c8cbfcf6de933847430143a8d66add907",
                    "sha256:59d809ce21ed7da4c39d56480f26de6e8040061ed1fb62fc54232f0644be4acc"
                ]
            }
        },
        "37-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:44.663504675Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:44.54511821Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:44.54511821Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:44.663504675Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:c84fc6f189dfb96a5e01578fa541ed12b9fa81bf860c58ba59e2c03574021ef1",
                    "sha256:2b46eee6094d1ceb1e04207db8cf898115c7eb7968d5abda03d58404dd059cf3"
                ]
            }
        },
        "37-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:19:41.984628102Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:19:41.864531819Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:19:41.864531819Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:19:41.984628102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:7c11aa1a0c2ee5b841618b04d2e435334d5e354be6cb7a1acacc5eb34a6a841c",
                    "sha256:3a222915426180229a8bb628a20e61e2ff92f1289b21c3d6579875d2310a5fef"
                ]
            }
        },
        "37-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:39.98979442Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:39.884973017Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:39.884973017Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:39.98979442Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:3b2aeedf33a2aaff2d27043fb4ded3cdeef11acef00eb34880065a8e76a843ab",
                    "sha256:b51a555b5c5565511824a56568118101eb16f52c0a33232c101108087992613a"
                ]
            }
        },
        "38": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:46:20.846556762Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:20.732981095Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:46:20.732981095Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:20.846556762Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:78a0587798c0bfe84171aac25e70de3f108c068497dd9fa8fb3aca9e64034093",
                    "sha256:53b9e78931ee28b82a7c74369e1f6342ee86bdaf0e0cb36508e8acfd779465bd"
                ]
            }
        },
        "38-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:40:15.454871814Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.02695632Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.769786602Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.769786602Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:52:22.781178587Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.808356935Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.817879552Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.817879552Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:52:28.311630714Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:28.461665008Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:40:15.334478901Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:40:15.334478901Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:40:15.454871814Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:9a0bea4247baec631951f1c12c7fc5e31aef00f9f94fa6500789dd41065dab08",
                    "sha256:8ea115299209cadf8dc81735c2e245e6e1c628e3e6486326a42d431e000ad1d9",
                    "sha256:81ffb1609a528e20e002ea96acab5a3f2db491584d03f99adb651ba5d38707b3",
                    "sha256:dd667c60ecc52fbdc7e0e476262643b15f185497cb053f94c29b2ea0f20d4532",
                    "sha256:9e0a1177327862e9e8614499429cf719307afc6deb4d6bd9d73f1339d5113ab0",
                    "sha256:6cbd6b5c83f0e41ed8ecedf532eae321661bb02d09a80d622a2de713dc3f1998",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:492bf5ced8bd1f23c728665cd29dba12cd7877883ff04c3620df7b90d4f32e63",
                    "sha256:89f0e4edf750b9941c5654b27de726908b1f2067a6eb9b6f92720f55b27fd960",
                    "sha256:f06c1156c03d21913e3a574a7d732b0da4bae3678c3470eff68ed637e1e35348"
                ]
            }
        },
        "38-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T07:08:00.288314672Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.02695632Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.769786602Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.769786602Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:52:22.781178587Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.808356935Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.817879552Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.817879552Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:52:28.311630714Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:28.461665008Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:08:00.172465783Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T07:08:00.172465783Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:08:00.288314672Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:9a0bea4247baec631951f1c12c7fc5e31aef00f9f94fa6500789dd41065dab08",
                    "sha256:8ea115299209cadf8dc81735c2e245e6e1c628e3e6486326a42d431e000ad1d9",
                    "sha256:81ffb1609a528e20e002ea96acab5a3f2db491584d03f99adb651ba5d38707b3",
                    "sha256:dd667c60ecc52fbdc7e0e476262643b15f185497cb053f94c29b2ea0f20d4532",
                    "sha256:9e0a1177327862e9e8614499429cf719307afc6deb4d6bd9d73f1339d5113ab0",
                    "sha256:6cbd6b5c83f0e41ed8ecedf532eae321661bb02d09a80d622a2de713dc3f1998",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:492bf5ced8bd1f23c728665cd29dba12cd7877883ff04c3620df7b90d4f32e63",
                    "sha256:01e5efa801175058c635329bb69b85402c82b1b64b7e78c486604d46c875f5f7",
                    "sha256:e17c7927241a5791740eb67ced08d47830efd9930562dd6c0dc50ddc2dfa78bd"
                ]
            }
        },
        "38-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:22:42.847317027Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.032783443Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.794960795Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.794960795Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:17:06.805447066Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.814310203Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.84911684Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.84911684Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:17:12.388615628Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:12.526606922Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:42.735006783Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:22:42.735006783Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:42.847317027Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:80960cca51c97684b3a9cec28adb8fae3034898f76cc4de09b5756e99bab5f4d",
                    "sha256:ebcf328ef783f06a08c6855ef399097abd7849454cb754d92656f855c8e72f7b",
                    "sha256:ed8c17efb3a45a5c116d8b29102ee94853c6c7d78b68917765166a90efdbe456",
                    "sha256:4c2fcb2aa7c87c35350e78cfb39cc8d48e14a39322897c5816cbba6875385aeb",
                    "sha256:9fb9429b38105cbccdabce561ae817ae56aa3fbe6943dabf073a3e077a0a4726",
                    "sha256:5e5d3ed39b0bae147112243675b89add16961c507d1a96d8c12543619f3631ab",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9659c666f25fc0ca79916fc32cd405a174b567f47816d637061022910382150c",
                    "sha256:e08b4156867c7209a8362a74eae9ac7da8588740942753cd8f3d1b09f89835da",
                    "sha256:245be9a0761ca73eb55d18d927bb9e30a8aaca1fb8e2b3db9fdbabfa0534d55a"
                ]
            }
        },
        "38-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:55:24.507768553Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:00.912192201Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.006895963Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.006895963Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:56:02.016355085Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.026794369Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.060541718Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.060541718Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:56:07.655736223Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:07.807291644Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:55:24.384566651Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:55:24.384566651Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:55:24.507768553Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ea79a218147f67e84cc5ebc832b9460a07c042175b9c6c064e2b46cc1dc1a3a4",
                    "sha256:30e3fbd8e717f3b8a564afd4ee36b43ec6b6d86b01c9f556f1c1569211d3f246",
                    "sha256:4f6c240ccf870cc5e7845a32d4625252e557b98a1ca959ee903a50fae49f5292",
                    "sha256:52333195f351cb7f05d374c425fd2d08bfc9a7b292673ba1bc72b65cfc337fda",
                    "sha256:8fa793cc56273ff76f01fe7a2fa04001b8a835021eb98a84aac458c70142805b",
                    "sha256:2d3cbcbb63899f70da15473b7e05cdcb41b7bb7057040d80f9a5a063821b0133",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5bb1ea72b4125dbbfb8204982aadcd3846bffd331433fe0e24dc13c017b2badd",
                    "sha256:abb99019d6fe59ef5e493e5a7ceaca05db402d839e0d39a51be908a5f6e2f371",
                    "sha256:414d64c94a8d3e9a78334091bb04997c192bbde7e0a770ec550c11b41afe94d2"
                ]
            }
        },
        "38-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:54:54.618074183Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:18.953503933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.727911729Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.727911729Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:53:19.739193593Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.779094073Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.789079698Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.789079698Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:53:25.296074915Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:25.441838461Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:54:54.484777163Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:54:54.484777163Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:54:54.618074183Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:b20e668d1a141e0d94ea1512d98fa306aef98b2f4894ff4310a4b368ecae46f1",
                    "sha256:8d53a1ae6a6876501ddfee3882f044e95cf4bbb5c5ee113c33b6a630df50f37d",
                    "sha256:9b2f37627416daf809729f9b7b129b588d6d27b685e6a6f70b7efd53604d8c77",
                    "sha256:58e2ad029c294aaf061847a738e97e4ee92cfcc02568fde36d2c42014b29bc2a",
                    "sha256:0370b041d7751b62b4759a10fd68fe5d529500000af334c432dda8ff0e6bdc19",
                    "sha256:4fda59f91c1283cdc0171b9d775c4c59aed809bf6eb8969c1dab000deccefbfb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0fbb16bb412f29fbd6bf22b0270c66acce1dfff1273a68ab07e7a24a347da177",
                    "sha256:08793c8905a47d98aff0af5e535b31bf87456154ef37f00a9a8664724843c419",
                    "sha256:1b46759611e2350131399111e8ee571718b234b46b2d43d4fc08abcee8a71dda"
                ]
            }
        },
        "38-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:26:33.672022228Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:26:33.554884672Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:26:33.554884672Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:26:33.672022228Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:df7759ad173509888220c6c64d7e861716d4308a228875fdc43ade95a875756f",
                    "sha256:74c9ef707a1a5de1c6a43f80c985f425a6ee280ce30f7a04ba7e9f0ad2528180"
                ]
            }
        },
        "38-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:46:20.846556762Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:20.732981095Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:46:20.732981095Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:20.846556762Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:78a0587798c0bfe84171aac25e70de3f108c068497dd9fa8fb3aca9e64034093",
                    "sha256:53b9e78931ee28b82a7c74369e1f6342ee86bdaf0e0cb36508e8acfd779465bd"
                ]
            }
        },
        "38-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:46:34.147016521Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.028048975Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:21.757628005Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:23.226391702Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.30237909Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:29.124459273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:29.273317952Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:34.023935283Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:46:34.023935283Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:34.147016521Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:63a7727c4e76d8980cf4568202bf9297aab0020244e4d7a59ff628633c5c379a",
                    "sha256:8764364fcb36a10eca0e326c313d32654e5e4cc55abfe0014974d53c364de48b",
                    "sha256:281dd00215836c81475c699f61f89c9eb55c5d69014f819f8772cffe433ace26",
                    "sha256:abb63b2c733f69ae08cbb6bfe1f32da0004658166581cc3bdb67901ede1ad33a",
                    "sha256:763bebfde6ac1ad7e8b6195d9c95001b4b273ad9936cd9971295674105101ac6",
                    "sha256:f67b7e4a6f4e48584da11a524adbebbbeeac629a1cb524f5df51ee88bdd71055",
                    "sha256:74f1d6cf90e9f178497078c8e6f3941cbb3265478d0f1a806521824a183837a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c7319dfdfe03afc9fe26d4be768e94cfc2d546d63404d22deff0f8426aec9488",
                    "sha256:c680fe931d158ebff28a669a7c83dcc4eaad54750d33d6637dbbbcd29b1e733b",
                    "sha256:1f11cc865397aad80274070def4a4025fdea6b6484d5d123e5d2d485910f208b"
                ]
            }
        },
        "38-build-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:40:57.685772107Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:07.283522649Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:07.283522649Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:07.283522649Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.648480886Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:57.549929554Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:58.698426062Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:58.698426062Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:34:58.709288494Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:58.742302253Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:58.759202078Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:58.759202078Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:35:04.305086577Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:35:04.450493146Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:40:57.556208538Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:40:57.556208538Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:40:57.685772107Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:25c5d26dde6a709e8fe04204ce06152cc9ff7c61b9e653229623e53208e92d9d",
                    "sha256:3a9052b286e7d0c4dbc0ecc4d1d5c24fa97e984dea4ce1540cb2c7a43b234714",
                    "sha256:a209f70a3c48accae069781977d34d7ece605bdf9b01bf655de0a4b3a0d815ae",
                    "sha256:ea9f209506961ead49cec2c8a6e9c6cbdf3da2d8a254f4fab54979bfb372a936",
                    "sha256:8525ac0e0fa3498ca378500e2199c3dba3db2cf6dbdfdb332ab61c9a875ca323",
                    "sha256:6481f52cf34a73dda86006ba06420bdf2f4cc997c51e46579ca35f02ebda598a",
                    "sha256:2ac438114f9401b05874baa8c192b7fc6ce3c0da423292bc40309a87397bb0b5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cb80e1d55729478c8c073f8b8fa5bd0ab0d1d7d9352694530e9479a8f0a6133c",
                    "sha256:dc26fdd462a42bd73bfc5acf61d272aaed00ab640a529bdba3027e131bd6c98c",
                    "sha256:daa0a0927c92da53351cddb0610d550b3e2263e771795ecfbe5e81544ba42df9"
                ]
            }
        },
        "38-build-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T07:08:18.348600505Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:07.283522649Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:07.283522649Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:07.283522649Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.648480886Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:57.549929554Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:58.698426062Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:58.698426062Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:34:58.709288494Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:58.742302253Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:58.759202078Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:34:58.759202078Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:35:04.305086577Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:35:04.450493146Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:08:18.221309976Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T07:08:18.221309976Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:08:18.348600505Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:25c5d26dde6a709e8fe04204ce06152cc9ff7c61b9e653229623e53208e92d9d",
                    "sha256:3a9052b286e7d0c4dbc0ecc4d1d5c24fa97e984dea4ce1540cb2c7a43b234714",
                    "sha256:a209f70a3c48accae069781977d34d7ece605bdf9b01bf655de0a4b3a0d815ae",
                    "sha256:ea9f209506961ead49cec2c8a6e9c6cbdf3da2d8a254f4fab54979bfb372a936",
                    "sha256:8525ac0e0fa3498ca378500e2199c3dba3db2cf6dbdfdb332ab61c9a875ca323",
                    "sha256:6481f52cf34a73dda86006ba06420bdf2f4cc997c51e46579ca35f02ebda598a",
                    "sha256:2ac438114f9401b05874baa8c192b7fc6ce3c0da423292bc40309a87397bb0b5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cb80e1d55729478c8c073f8b8fa5bd0ab0d1d7d9352694530e9479a8f0a6133c",
                    "sha256:923794f359ad339f1c1ed9cd71ff116dfdc43b0e72750bb6330d5fc8570bc5fd",
                    "sha256:946b1f8559bf62f85530087b558207ac43794bf91e17a75d27f1bf37a321e892"
                ]
            }
        },
        "38-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:22:50.006064295Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:09.897108948Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:09.897108948Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:09.897108948Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:41.622789278Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:05.447968861Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:06.868381508Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:06.868381508Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T22:00:06.876880217Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:06.884443525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:06.89206315Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:06.89206315Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T22:00:12.313673259Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:12.450188912Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:49.881877072Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:22:49.881877072Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:50.006064295Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:dcd8bb5e551d78e1a7df5e9cdd2248b7d42057d58efd29aa1ad3efe95e0913c5",
                    "sha256:2696167d857e43eb0db4659dede3b81939d5154ee8a5e6d12e113a040b6747d2",
                    "sha256:56cfe201bf279dd8fd7504ca76ce1b5094b6f3161e9777ba459f906286d57fdf",
                    "sha256:0b8997bfc9afb5b27ee51157a08242a25874b2dd0976ed9e47b36c4f7b14b297",
                    "sha256:86c439966c35d3ab8165dcf9633e6b36cfcf033ae4c29d365ebe695d8bc58942",
                    "sha256:10f572daecac3c558b319d28232e1173f0858776886df6b1cdc424c42f8e8e3f",
                    "sha256:aa5e3449d39b98667137cf1c65cae973283bd3121a9ca13218cb0d36b77e58dd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c660f1c1924d53f2e4fc005f2651b9934e150d1d84904a166b2dcb9346f00b9",
                    "sha256:8d7d39e1241af47c26eb9d72396d76f5753704264707474d13bbe0b9e93a03d1",
                    "sha256:2ed2d0fa0ea1d3fcac6fba9b790b518448621ee878ac2eac1772421e6b235879"
                ]
            }
        },
        "38-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:55:38.019297801Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:16.349458836Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:16.349458836Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:16.349458836Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:55:05.687723743Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:49.378748765Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:50.702042504Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:50.702042504Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:37:50.714635736Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:50.725004801Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:50.754135385Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:50.754135385Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:37:56.380991734Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:56.522737005Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:55:37.895687787Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:55:37.895687787Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:55:38.019297801Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:f48c9eddbc1f2401f9c01b5f49d65066cc6736cd10bf3d6367fa58871aa67da8",
                    "sha256:16ce41fd80fa45ee8fcdc2ca2d70fad8b5097608f6c8a9b4145ffae05c23c76f",
                    "sha256:e4dcc4fba13876e7b4a37d11f0c7383b33585abc7f3abdc003ba562492baed50",
                    "sha256:0cb56a3846c1330baad18db7d66a457ecdf321da02638674f8809d5f4aa9661b",
                    "sha256:d9a6ad25b762536264befadb27fc4671eb2a4a02541698ad56a0ae82e259f86f",
                    "sha256:4ee7f0074669d7ed543f5d236c4459720df4ba65c94ce074a89e3992a3d607ba",
                    "sha256:fd299532500fa1f9ce624643d5c5045d99e44584dba65bc545b8a0af95e50cb5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:16908c6f2ecc55d57fc82a43723b3cda63502febd87f5703334949536ff29731",
                    "sha256:4da1be90b30a1a69b3e009008f032a557ae1198c95976bdbc41d26f7dee45177",
                    "sha256:474c8b4dc0b7aae8761a41a71a511c91958c811d1a88c7c9a931f432f2119038"
                ]
            }
        },
        "38-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:54:49.871678488Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:27.794199455Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:27.794199455Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:27.794199455Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:24.859684991Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:54.53195295Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:55.573159674Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:55.573159674Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:35:55.583778037Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:55.619703511Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:55.631911386Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:55.631911386Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:36:01.151366691Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:36:01.327877549Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:54:49.748927492Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:54:49.748927492Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:54:49.871678488Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:94a2eb048e21c8e71a8f03f32b564849ffd038b53e0ec2f2f7a1b037864e56b7",
                    "sha256:59a91752dfc62cd44359a2f8bc83b2f25cbbfebc3353272c6e2ba1956b7424e6",
                    "sha256:0cc5d557067682c6f19a068bdb4478439103c75b9281bb3ab05b99facd1edade",
                    "sha256:b08f87d0f885239dd0932f0486855fd95c77870fef393f1df0c6bcc0f6f6896c",
                    "sha256:a757830347f79113e6a42976e11710e4ffcacb6ee62436dce15f86ebbdb45e8a",
                    "sha256:07c5e99401dfe47101d29db3d9a891b806e9a404bb3045c237045f7ea0f67196",
                    "sha256:a9360846f37548f0498d091863fef7f0c43471e0580eb2749779262e309b8136",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fe231abe20b0907f6e177a0aef47202b43250922d34794deb46c1b9a765db26a",
                    "sha256:904bbb51009a49b13cd13dc8f0b2ea8d9011518a0621fb14acd146688117b9bf",
                    "sha256:3dc093238aa52221e6b8fadf26ed08be5164fad572fee58529df945b55b97282"
                ]
            }
        },
        "38-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:31:50.605140955Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.028048975Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:21.757628005Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:23.226391702Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.30237909Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:29.124459273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:29.273317952Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:31:50.47248995Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:31:50.47248995Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:31:50.605140955Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:63a7727c4e76d8980cf4568202bf9297aab0020244e4d7a59ff628633c5c379a",
                    "sha256:8764364fcb36a10eca0e326c313d32654e5e4cc55abfe0014974d53c364de48b",
                    "sha256:281dd00215836c81475c699f61f89c9eb55c5d69014f819f8772cffe433ace26",
                    "sha256:abb63b2c733f69ae08cbb6bfe1f32da0004658166581cc3bdb67901ede1ad33a",
                    "sha256:763bebfde6ac1ad7e8b6195d9c95001b4b273ad9936cd9971295674105101ac6",
                    "sha256:f67b7e4a6f4e48584da11a524adbebbbeeac629a1cb524f5df51ee88bdd71055",
                    "sha256:74f1d6cf90e9f178497078c8e6f3941cbb3265478d0f1a806521824a183837a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c7319dfdfe03afc9fe26d4be768e94cfc2d546d63404d22deff0f8426aec9488",
                    "sha256:b4c8904345410be4700502375864e42db6f24dbb7ddd8cad7e58bdd5f640bddf",
                    "sha256:7e5376b3d1381cb9d2b18514283cd4be9c4d7059d08e5a00cfdfd4e5ac6fd8af"
                ]
            }
        },
        "38-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:46:34.147016521Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.028048975Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:21.757628005Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:23.226391702Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.30237909Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:29.124459273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:29.273317952Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:34.023935283Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:46:34.023935283Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:34.147016521Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:63a7727c4e76d8980cf4568202bf9297aab0020244e4d7a59ff628633c5c379a",
                    "sha256:8764364fcb36a10eca0e326c313d32654e5e4cc55abfe0014974d53c364de48b",
                    "sha256:281dd00215836c81475c699f61f89c9eb55c5d69014f819f8772cffe433ace26",
                    "sha256:abb63b2c733f69ae08cbb6bfe1f32da0004658166581cc3bdb67901ede1ad33a",
                    "sha256:763bebfde6ac1ad7e8b6195d9c95001b4b273ad9936cd9971295674105101ac6",
                    "sha256:f67b7e4a6f4e48584da11a524adbebbbeeac629a1cb524f5df51ee88bdd71055",
                    "sha256:74f1d6cf90e9f178497078c8e6f3941cbb3265478d0f1a806521824a183837a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c7319dfdfe03afc9fe26d4be768e94cfc2d546d63404d22deff0f8426aec9488",
                    "sha256:c680fe931d158ebff28a669a7c83dcc4eaad54750d33d6637dbbbcd29b1e733b",
                    "sha256:1f11cc865397aad80274070def4a4025fdea6b6484d5d123e5d2d485910f208b"
                ]
            }
        },
        "38-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:46:20.846556762Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:20.732981095Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:46:20.732981095Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:20.846556762Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:78a0587798c0bfe84171aac25e70de3f108c068497dd9fa8fb3aca9e64034093",
                    "sha256:53b9e78931ee28b82a7c74369e1f6342ee86bdaf0e0cb36508e8acfd779465bd"
                ]
            }
        },
        "38-run-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:40:15.454871814Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.02695632Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.769786602Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.769786602Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:52:22.781178587Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.808356935Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.817879552Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.817879552Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:52:28.311630714Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:28.461665008Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:40:15.334478901Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:40:15.334478901Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:40:15.454871814Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:9a0bea4247baec631951f1c12c7fc5e31aef00f9f94fa6500789dd41065dab08",
                    "sha256:8ea115299209cadf8dc81735c2e245e6e1c628e3e6486326a42d431e000ad1d9",
                    "sha256:81ffb1609a528e20e002ea96acab5a3f2db491584d03f99adb651ba5d38707b3",
                    "sha256:dd667c60ecc52fbdc7e0e476262643b15f185497cb053f94c29b2ea0f20d4532",
                    "sha256:9e0a1177327862e9e8614499429cf719307afc6deb4d6bd9d73f1339d5113ab0",
                    "sha256:6cbd6b5c83f0e41ed8ecedf532eae321661bb02d09a80d622a2de713dc3f1998",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:492bf5ced8bd1f23c728665cd29dba12cd7877883ff04c3620df7b90d4f32e63",
                    "sha256:89f0e4edf750b9941c5654b27de726908b1f2067a6eb9b6f92720f55b27fd960",
                    "sha256:f06c1156c03d21913e3a574a7d732b0da4bae3678c3470eff68ed637e1e35348"
                ]
            }
        },
        "38-run-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T07:08:00.288314672Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:11.412948906Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bf926d1cd75117e6300e5b83c1a9f3dc935a0a4a1afd183c94c5ab427119d058 in / "
                },
                {
                    "created": "2023-11-29T00:47:13.088493574Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:05.223615023Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.02695632Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.769786602Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.769786602Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:52:22.781178587Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.808356935Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.817879552Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:22.817879552Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:52:28.311630714Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:52:28.461665008Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:08:00.172465783Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T07:08:00.172465783Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:08:00.288314672Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:35f4bab08b96e91cc0f7f401be5805fb037bd6e3d4eb1af238340706b9cd0a3e",
                    "sha256:9a0bea4247baec631951f1c12c7fc5e31aef00f9f94fa6500789dd41065dab08",
                    "sha256:8ea115299209cadf8dc81735c2e245e6e1c628e3e6486326a42d431e000ad1d9",
                    "sha256:81ffb1609a528e20e002ea96acab5a3f2db491584d03f99adb651ba5d38707b3",
                    "sha256:dd667c60ecc52fbdc7e0e476262643b15f185497cb053f94c29b2ea0f20d4532",
                    "sha256:9e0a1177327862e9e8614499429cf719307afc6deb4d6bd9d73f1339d5113ab0",
                    "sha256:6cbd6b5c83f0e41ed8ecedf532eae321661bb02d09a80d622a2de713dc3f1998",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:492bf5ced8bd1f23c728665cd29dba12cd7877883ff04c3620df7b90d4f32e63",
                    "sha256:01e5efa801175058c635329bb69b85402c82b1b64b7e78c486604d46c875f5f7",
                    "sha256:e17c7927241a5791740eb67ced08d47830efd9930562dd6c0dc50ddc2dfa78bd"
                ]
            }
        },
        "38-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:22:42.847317027Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.032783443Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.794960795Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.794960795Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:17:06.805447066Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.814310203Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.84911684Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.84911684Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:17:12.388615628Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:12.526606922Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:42.735006783Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:22:42.735006783Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:42.847317027Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:80960cca51c97684b3a9cec28adb8fae3034898f76cc4de09b5756e99bab5f4d",
                    "sha256:ebcf328ef783f06a08c6855ef399097abd7849454cb754d92656f855c8e72f7b",
                    "sha256:ed8c17efb3a45a5c116d8b29102ee94853c6c7d78b68917765166a90efdbe456",
                    "sha256:4c2fcb2aa7c87c35350e78cfb39cc8d48e14a39322897c5816cbba6875385aeb",
                    "sha256:9fb9429b38105cbccdabce561ae817ae56aa3fbe6943dabf073a3e077a0a4726",
                    "sha256:5e5d3ed39b0bae147112243675b89add16961c507d1a96d8c12543619f3631ab",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9659c666f25fc0ca79916fc32cd405a174b567f47816d637061022910382150c",
                    "sha256:e08b4156867c7209a8362a74eae9ac7da8588740942753cd8f3d1b09f89835da",
                    "sha256:245be9a0761ca73eb55d18d927bb9e30a8aaca1fb8e2b3db9fdbabfa0534d55a"
                ]
            }
        },
        "38-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:55:24.507768553Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:00.912192201Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.006895963Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.006895963Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:56:02.016355085Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.026794369Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.060541718Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.060541718Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:56:07.655736223Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:07.807291644Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:55:24.384566651Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:55:24.384566651Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:55:24.507768553Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ea79a218147f67e84cc5ebc832b9460a07c042175b9c6c064e2b46cc1dc1a3a4",
                    "sha256:30e3fbd8e717f3b8a564afd4ee36b43ec6b6d86b01c9f556f1c1569211d3f246",
                    "sha256:4f6c240ccf870cc5e7845a32d4625252e557b98a1ca959ee903a50fae49f5292",
                    "sha256:52333195f351cb7f05d374c425fd2d08bfc9a7b292673ba1bc72b65cfc337fda",
                    "sha256:8fa793cc56273ff76f01fe7a2fa04001b8a835021eb98a84aac458c70142805b",
                    "sha256:2d3cbcbb63899f70da15473b7e05cdcb41b7bb7057040d80f9a5a063821b0133",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5bb1ea72b4125dbbfb8204982aadcd3846bffd331433fe0e24dc13c017b2badd",
                    "sha256:abb99019d6fe59ef5e493e5a7ceaca05db402d839e0d39a51be908a5f6e2f371",
                    "sha256:414d64c94a8d3e9a78334091bb04997c192bbde7e0a770ec550c11b41afe94d2"
                ]
            }
        },
        "38-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:54:54.618074183Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:18.953503933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.727911729Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.727911729Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:53:19.739193593Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.779094073Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.789079698Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.789079698Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:53:25.296074915Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:25.441838461Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:54:54.484777163Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:54:54.484777163Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:54:54.618074183Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:b20e668d1a141e0d94ea1512d98fa306aef98b2f4894ff4310a4b368ecae46f1",
                    "sha256:8d53a1ae6a6876501ddfee3882f044e95cf4bbb5c5ee113c33b6a630df50f37d",
                    "sha256:9b2f37627416daf809729f9b7b129b588d6d27b685e6a6f70b7efd53604d8c77",
                    "sha256:58e2ad029c294aaf061847a738e97e4ee92cfcc02568fde36d2c42014b29bc2a",
                    "sha256:0370b041d7751b62b4759a10fd68fe5d529500000af334c432dda8ff0e6bdc19",
                    "sha256:4fda59f91c1283cdc0171b9d775c4c59aed809bf6eb8969c1dab000deccefbfb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0fbb16bb412f29fbd6bf22b0270c66acce1dfff1273a68ab07e7a24a347da177",
                    "sha256:08793c8905a47d98aff0af5e535b31bf87456154ef37f00a9a8664724843c419",
                    "sha256:1b46759611e2350131399111e8ee571718b234b46b2d43d4fc08abcee8a71dda"
                ]
            }
        },
        "38-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:26:33.672022228Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:26:33.554884672Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:26:33.554884672Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:26:33.672022228Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:df7759ad173509888220c6c64d7e861716d4308a228875fdc43ade95a875756f",
                    "sha256:74c9ef707a1a5de1c6a43f80c985f425a6ee280ce30f7a04ba7e9f0ad2528180"
                ]
            }
        },
        "38-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:46:20.846556762Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:20.732981095Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:46:20.732981095Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:20.846556762Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:78a0587798c0bfe84171aac25e70de3f108c068497dd9fa8fb3aca9e64034093",
                    "sha256:53b9e78931ee28b82a7c74369e1f6342ee86bdaf0e0cb36508e8acfd779465bd"
                ]
            }
        },
        "build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:25.075999169Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:24.960129794Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:24.960129794Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:25.075999169Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:653de70efb7527ede0736e7249506c30c9bfbb3683dd179fa0dd412b11e65446",
                    "sha256:c3d2d260e914a0cc921938cc16fedffb912eb513153b104f3edaf3c34a47d3a9"
                ]
            }
        },
        "build-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:33:58.37521539Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:10.8092517Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:49.392328016Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:50.523617988Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.557647649Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:54.352613602Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:54.484309683Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:58.257303835Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:33:58.257303835Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:58.37521539Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:9391b38776fe1a447956db381646ee109343bd22183a6c607d66c26dac722850",
                    "sha256:2ff3e8a40fae975f72250e96f2c01345768ef0a3dbcfbf6084bc542211223c04",
                    "sha256:38432aa17028b7bdb0c9d5c2b22fb4207811641298965ba6771cd989d6a19daa",
                    "sha256:3efdb146c34f8f1ff3c22b490e72b097196f8cf3a214dfc51628ba81f402eeb1",
                    "sha256:bf38ccf74068b318ec44fb671d7f71d3454fb8ab9304451042334e972b5fa0ec",
                    "sha256:50fbc93a18898e758d8a4426c13b8cdb844e98e4fe11dbc5e9409eb7f1466e43",
                    "sha256:21e4e77425952b2bdbb4f06e327bd295156461fc4fe3e31ed324ba59b04a3712",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f653a5aac8e7aec60e0930415cf5cfc3ee9a054c6b5996f3e8bcd9c24b11e54",
                    "sha256:4f199bf7b18e8ec512e3823c0e2cdac90a1d3801807daf988efd23da542e4fee",
                    "sha256:1137cf2af612ca699c6209242dac3f52eb4600205454580993b2effb71e3ff40"
                ]
            }
        },
        "build-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T07:01:36.391478582Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:10.8092517Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:49.392328016Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:50.523617988Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.557647649Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:54.352613602Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:54.484309683Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:01:36.272233398Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T07:01:36.272233398Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:01:36.391478582Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:9391b38776fe1a447956db381646ee109343bd22183a6c607d66c26dac722850",
                    "sha256:2ff3e8a40fae975f72250e96f2c01345768ef0a3dbcfbf6084bc542211223c04",
                    "sha256:38432aa17028b7bdb0c9d5c2b22fb4207811641298965ba6771cd989d6a19daa",
                    "sha256:3efdb146c34f8f1ff3c22b490e72b097196f8cf3a214dfc51628ba81f402eeb1",
                    "sha256:bf38ccf74068b318ec44fb671d7f71d3454fb8ab9304451042334e972b5fa0ec",
                    "sha256:50fbc93a18898e758d8a4426c13b8cdb844e98e4fe11dbc5e9409eb7f1466e43",
                    "sha256:21e4e77425952b2bdbb4f06e327bd295156461fc4fe3e31ed324ba59b04a3712",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f653a5aac8e7aec60e0930415cf5cfc3ee9a054c6b5996f3e8bcd9c24b11e54",
                    "sha256:b2258ca308a791357910aa287b4621b13420a6574b0c17682034d7121e3af9dd",
                    "sha256:61160616be346c377b4137d59f7e2e1e039f78dab485b97ff6ce37490ce92207"
                ]
            }
        },
        "build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:17:22.177699052Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:10:56.098365397Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:26.894768836Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:27.841017293Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.850413212Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:31.607983559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:31.757692693Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:17:22.070157949Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:17:22.070157949Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:17:22.177699052Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:153f603c3b6b2529b45b12c9cb3de69de633d99488c4aac6cb5e04c6784e284c",
                    "sha256:fcda31efe0f90abdb3be0e2cc3050fddb745d7db41b962e3a08d908b3fe90c76",
                    "sha256:168e7cb2c07cd77fe30fd104d59f5ac49b7a43775f04c196367fa588f2159f11",
                    "sha256:3e98c7cf4c63c439e9045cd721cc19c243588d17804a57358309accf40b5249c",
                    "sha256:8aeb044849aef9a674a8ebde259f830df38faaa43b11f80b3bec5085ace3c264",
                    "sha256:691ea9dfdaf44533ac36d1341c6822b6735744922c3d5c304e657357f4babe33",
                    "sha256:072ee65b31efbe2110bc15922159f609d9d9c933715bc4429aeb7f4c5da9d425",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bd215b090f3f370a73aa2871e3e123516169ed4db9f68a876a6be0d4a288d6d4",
                    "sha256:88652d8ea4dd504a362c1778faac39c0a261898f90261aea5940e28355cd5b69",
                    "sha256:d85549778fe29c16f6bf64127d56479bd9f13d530aa0c7f7c3cadac604083b7b"
                ]
            }
        },
        "build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:48:54.271723734Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:07.560394223Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:33.168342892Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:34.153622864Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.190278048Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:37.906466695Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:38.054385621Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:54.155262452Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:48:54.155262452Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:54.271723734Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:5b32c6607b8e7ea89ed5bb72a3578bb0d4723f5496d0a8e7dc688bf6a3a167d6",
                    "sha256:90da55fed465de8a873bf3e2bcdea7dca9a0be400a66dfa4c0efde5fa5ad1712",
                    "sha256:d5b90a049cc6b8b6a297f2e6f8a012847c545187714f13feb3004077215fe790",
                    "sha256:ac341c2760f8397f739500c811ea7bfc967bee43cae3b5bccbc3bc6263562d17",
                    "sha256:383c3fcfa865391817fdec807ce0f15866c08261ec20642c87fdde447997f846",
                    "sha256:d8c138867fdbf59da6040e42db8f659089ae32f509c4809cd61e7b817c68284d",
                    "sha256:59113e489ab1305fec7cc3fd646933122fb6f8dfeb9f3e8146b36687dd3f8ce0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e090112138683d3816cd9299b41c91f8e2961f75a329ef3583c678904c6aa0c",
                    "sha256:117439df62a0c949d3f2c920805b55235a48864d1579387b48884cd6ef31baa0",
                    "sha256:54b105ae557e7782fd91acb6c5b110b6dc38facf76dd900766c805e6a2e9f455"
                ]
            }
        },
        "build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:53.166025476Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:44:46.483219966Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:11.966182353Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:13.40948656Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.42436327Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:17.292242645Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:17.441252547Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:53.04218489Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:53.04218489Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:53.166025476Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2bc63a4a3e163679c8a2399342b1daf3e005320d94db933ce217a0f80d1b4537",
                    "sha256:d75154443a45cab05ca4a85ddd827b962fedcff91b702d791e6ef9404f6c85d3",
                    "sha256:ed61218e50e513b23bae8d31f72e7c8e7a3d0090e48e2ff087a536ac362cfb81",
                    "sha256:23faadc341a4670f586fccbfa7d9b0c5a5e56be8ab46b55a4067df82e5569a5c",
                    "sha256:26696ab075f5bb87eee8a46b41f2091a3f9d7edb2116147001a7677757eaaca5",
                    "sha256:61d65d5da4322b148f9078fa00914c14291b0bdf48b073091e08240ed72a9f7c",
                    "sha256:879d60f10dea3318ceaedb2814160c1ae4cc919d4f04d2e62152d05c1ea7011a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0428822e1d59c6db13038f6502cd2c9a69bd7e2d2a033cb20fc19071849b112e",
                    "sha256:f42d5fe962fb60a09b1002981c9199424901150b10258b1204a9e225fcfd3d74",
                    "sha256:3fabed44006fcfd14825b6c3c305dcf7b0dc134c5583aafb432f9fe037614dbe"
                ]
            }
        },
        "build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:19:54.206213013Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:06.695861539Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:31.267198079Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:32.694247574Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.719346978Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:36.547683782Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:36.691463904Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:19:54.089479679Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:19:54.089479679Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:19:54.206213013Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3f054b5308bf8dbf3abb2dac1bc72fac6b6e9569c5d0c4d1733c57b40f98d68c",
                    "sha256:9a408e5130d5761269a2f78fe14c41bfad96906f19a9b6f231ba27a0e270536b",
                    "sha256:ce27ddfda0b79dba438fc400e0d24f635fec12b6b0b2e61ff692ddfb273b5fe9",
                    "sha256:251af411a33440438f0b2f94cdfb89f2f9ffdbc97319bda046932d48df33eb89",
                    "sha256:5482afbecbaab7a5c1e492cf2a2f03aafdc9012c4dc853b5b5c1ed9fde902db7",
                    "sha256:5d6da048fbb12c4062ff5b76617e555654e7b2043bfca3f0791046007fc79bb6",
                    "sha256:c6c5906dcd307ca53496f54734925e883c2e43f758510871473e5490706bf6a8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:42adbbc0741061b3fa0e1fde61c20ae07301f416423df023d7264ef090febb62",
                    "sha256:28a64d3d0feb245922646e87e55d50684593e978129e0fd349f94e2cdd012a03",
                    "sha256:e1f9a2effa82857b26d2655df028f81ef38ccfc74d0fc33af861b59d9dad7017"
                ]
            }
        },
        "build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:25.075999169Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:24.960129794Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:24.960129794Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:25.075999169Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:653de70efb7527ede0736e7249506c30c9bfbb3683dd179fa0dd412b11e65446",
                    "sha256:c3d2d260e914a0cc921938cc16fedffb912eb513153b104f3edaf3c34a47d3a9"
                ]
            }
        },
        "latest": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:39.98979442Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:39.884973017Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:39.884973017Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:39.98979442Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:3b2aeedf33a2aaff2d27043fb4ded3cdeef11acef00eb34880065a8e76a843ab",
                    "sha256:b51a555b5c5565511824a56568118101eb16f52c0a33232c101108087992613a"
                ]
            }
        },
        "latest-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:33:29.690802444Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:51.352289509Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:52.040913956Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.086913794Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:55.875508418Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:56.018376913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:29.568850179Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:33:29.568850179Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:29.690802444Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:7d94e909dc19f31d9248e1ca5731a04da35c29e754dd69d2fb5a44a2502cc818",
                    "sha256:ed6509b907c0701f8a2a621cb39dbd26d066f869bf0b780990c71b717675bb3d",
                    "sha256:e03ba5a1224f9b985f2d94275263fa36221b3ab01f59437a07d3c1a623b76d77",
                    "sha256:9be68f287ebf7d1727a82714c098ca3ac0e021a4f0bd91d94de4992f010d993f",
                    "sha256:a5b159b9ba50945bb72f35a268a6bd8fca087febe08b2ec49f6982b5d39309e7",
                    "sha256:5efcacbddce62383428c47d9f0b7b716feaa80d8781fe6dd2b1dc81f391509df",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4491643620a3eb30fa973704b1de6c31cc71b0330dda8cb2847cc88b0981d732",
                    "sha256:946801c0603b620ea89b43ab291e4b5f2de4cff3dc26a90376676464b538765d",
                    "sha256:e26729d6196123f598909988248db79c531864f10b06d0e75bf1d616e0633926"
                ]
            }
        },
        "latest-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T07:01:13.821418715Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:51.352289509Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:52.040913956Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.086913794Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:55.875508418Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:56.018376913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:01:13.707781845Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T07:01:13.707781845Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:01:13.821418715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:7d94e909dc19f31d9248e1ca5731a04da35c29e754dd69d2fb5a44a2502cc818",
                    "sha256:ed6509b907c0701f8a2a621cb39dbd26d066f869bf0b780990c71b717675bb3d",
                    "sha256:e03ba5a1224f9b985f2d94275263fa36221b3ab01f59437a07d3c1a623b76d77",
                    "sha256:9be68f287ebf7d1727a82714c098ca3ac0e021a4f0bd91d94de4992f010d993f",
                    "sha256:a5b159b9ba50945bb72f35a268a6bd8fca087febe08b2ec49f6982b5d39309e7",
                    "sha256:5efcacbddce62383428c47d9f0b7b716feaa80d8781fe6dd2b1dc81f391509df",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4491643620a3eb30fa973704b1de6c31cc71b0330dda8cb2847cc88b0981d732",
                    "sha256:ebbb52a16f21cdd63eea0b77fe706c3c8d60ef8e48e0190b9034cc378e1e1346",
                    "sha256:84cfa9a1a48df6a07e85b7db8119e4e9d2823abee7122798eddc97c8b615a355"
                ]
            }
        },
        "latest-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:18:07.541742697Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:18:07.420361528Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:18:07.420361528Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:18:07.541742697Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:5c6594a14edb13d118ef19fec88df661e813f4adc3d59a933a630f39abd4185a",
                    "sha256:a097199109d2a9edceacb51e0c40ab84ba6631121b7c849ecaaf5ff592653986"
                ]
            }
        },
        "latest-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:48:13.076935283Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:12.967264244Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:48:12.967264244Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:13.076935283Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:7d7696ca2f43a78ae3091e7b9046f26c8cbfcf6de933847430143a8d66add907",
                    "sha256:59d809ce21ed7da4c39d56480f26de6e8040061ed1fb62fc54232f0644be4acc"
                ]
            }
        },
        "latest-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:44.663504675Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:44.54511821Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:44.54511821Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:44.663504675Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:c84fc6f189dfb96a5e01578fa541ed12b9fa81bf860c58ba59e2c03574021ef1",
                    "sha256:2b46eee6094d1ceb1e04207db8cf898115c7eb7968d5abda03d58404dd059cf3"
                ]
            }
        },
        "latest-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:19:41.984628102Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:19:41.864531819Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:19:41.864531819Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:19:41.984628102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:7c11aa1a0c2ee5b841618b04d2e435334d5e354be6cb7a1acacc5eb34a6a841c",
                    "sha256:3a222915426180229a8bb628a20e61e2ff92f1289b21c3d6579875d2310a5fef"
                ]
            }
        },
        "latest-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:39.98979442Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:39.884973017Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:39.884973017Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:39.98979442Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:3b2aeedf33a2aaff2d27043fb4ded3cdeef11acef00eb34880065a8e76a843ab",
                    "sha256:b51a555b5c5565511824a56568118101eb16f52c0a33232c101108087992613a"
                ]
            }
        },
        "latest-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:25.075999169Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:24.960129794Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:24.960129794Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:25.075999169Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:653de70efb7527ede0736e7249506c30c9bfbb3683dd179fa0dd412b11e65446",
                    "sha256:c3d2d260e914a0cc921938cc16fedffb912eb513153b104f3edaf3c34a47d3a9"
                ]
            }
        },
        "latest-build-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:33:58.37521539Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:10.8092517Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:49.392328016Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:50.523617988Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.557647649Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:54.352613602Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:54.484309683Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:58.257303835Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:33:58.257303835Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:58.37521539Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:9391b38776fe1a447956db381646ee109343bd22183a6c607d66c26dac722850",
                    "sha256:2ff3e8a40fae975f72250e96f2c01345768ef0a3dbcfbf6084bc542211223c04",
                    "sha256:38432aa17028b7bdb0c9d5c2b22fb4207811641298965ba6771cd989d6a19daa",
                    "sha256:3efdb146c34f8f1ff3c22b490e72b097196f8cf3a214dfc51628ba81f402eeb1",
                    "sha256:bf38ccf74068b318ec44fb671d7f71d3454fb8ab9304451042334e972b5fa0ec",
                    "sha256:50fbc93a18898e758d8a4426c13b8cdb844e98e4fe11dbc5e9409eb7f1466e43",
                    "sha256:21e4e77425952b2bdbb4f06e327bd295156461fc4fe3e31ed324ba59b04a3712",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f653a5aac8e7aec60e0930415cf5cfc3ee9a054c6b5996f3e8bcd9c24b11e54",
                    "sha256:4f199bf7b18e8ec512e3823c0e2cdac90a1d3801807daf988efd23da542e4fee",
                    "sha256:1137cf2af612ca699c6209242dac3f52eb4600205454580993b2effb71e3ff40"
                ]
            }
        },
        "latest-build-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T07:01:36.391478582Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:13.859309536Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:45:10.8092517Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:49.392328016Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.514115933Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:50.523617988Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.557647649Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:50.568553425Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T01:18:54.352613602Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T01:18:54.484309683Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:01:36.272233398Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T07:01:36.272233398Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:01:36.391478582Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:9391b38776fe1a447956db381646ee109343bd22183a6c607d66c26dac722850",
                    "sha256:2ff3e8a40fae975f72250e96f2c01345768ef0a3dbcfbf6084bc542211223c04",
                    "sha256:38432aa17028b7bdb0c9d5c2b22fb4207811641298965ba6771cd989d6a19daa",
                    "sha256:3efdb146c34f8f1ff3c22b490e72b097196f8cf3a214dfc51628ba81f402eeb1",
                    "sha256:bf38ccf74068b318ec44fb671d7f71d3454fb8ab9304451042334e972b5fa0ec",
                    "sha256:50fbc93a18898e758d8a4426c13b8cdb844e98e4fe11dbc5e9409eb7f1466e43",
                    "sha256:21e4e77425952b2bdbb4f06e327bd295156461fc4fe3e31ed324ba59b04a3712",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5f653a5aac8e7aec60e0930415cf5cfc3ee9a054c6b5996f3e8bcd9c24b11e54",
                    "sha256:b2258ca308a791357910aa287b4621b13420a6574b0c17682034d7121e3af9dd",
                    "sha256:61160616be346c377b4137d59f7e2e1e039f78dab485b97ff6ce37490ce92207"
                ]
            }
        },
        "latest-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:17:22.177699052Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:10:56.098365397Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:26.894768836Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:27.841017293Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.850413212Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:31.607983559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:31.757692693Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:17:22.070157949Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:17:22.070157949Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:17:22.177699052Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:153f603c3b6b2529b45b12c9cb3de69de633d99488c4aac6cb5e04c6784e284c",
                    "sha256:fcda31efe0f90abdb3be0e2cc3050fddb745d7db41b962e3a08d908b3fe90c76",
                    "sha256:168e7cb2c07cd77fe30fd104d59f5ac49b7a43775f04c196367fa588f2159f11",
                    "sha256:3e98c7cf4c63c439e9045cd721cc19c243588d17804a57358309accf40b5249c",
                    "sha256:8aeb044849aef9a674a8ebde259f830df38faaa43b11f80b3bec5085ace3c264",
                    "sha256:691ea9dfdaf44533ac36d1341c6822b6735744922c3d5c304e657357f4babe33",
                    "sha256:072ee65b31efbe2110bc15922159f609d9d9c933715bc4429aeb7f4c5da9d425",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bd215b090f3f370a73aa2871e3e123516169ed4db9f68a876a6be0d4a288d6d4",
                    "sha256:88652d8ea4dd504a362c1778faac39c0a261898f90261aea5940e28355cd5b69",
                    "sha256:d85549778fe29c16f6bf64127d56479bd9f13d530aa0c7f7c3cadac604083b7b"
                ]
            }
        },
        "latest-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:48:54.271723734Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:07.560394223Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:33.168342892Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:34.153622864Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.190278048Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:37.906466695Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:38.054385621Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:54.155262452Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:48:54.155262452Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:54.271723734Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:5b32c6607b8e7ea89ed5bb72a3578bb0d4723f5496d0a8e7dc688bf6a3a167d6",
                    "sha256:90da55fed465de8a873bf3e2bcdea7dca9a0be400a66dfa4c0efde5fa5ad1712",
                    "sha256:d5b90a049cc6b8b6a297f2e6f8a012847c545187714f13feb3004077215fe790",
                    "sha256:ac341c2760f8397f739500c811ea7bfc967bee43cae3b5bccbc3bc6263562d17",
                    "sha256:383c3fcfa865391817fdec807ce0f15866c08261ec20642c87fdde447997f846",
                    "sha256:d8c138867fdbf59da6040e42db8f659089ae32f509c4809cd61e7b817c68284d",
                    "sha256:59113e489ab1305fec7cc3fd646933122fb6f8dfeb9f3e8146b36687dd3f8ce0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e090112138683d3816cd9299b41c91f8e2961f75a329ef3583c678904c6aa0c",
                    "sha256:117439df62a0c949d3f2c920805b55235a48864d1579387b48884cd6ef31baa0",
                    "sha256:54b105ae557e7782fd91acb6c5b110b6dc38facf76dd900766c805e6a2e9f455"
                ]
            }
        },
        "latest-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:53.166025476Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:44:46.483219966Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:11.966182353Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:13.40948656Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.42436327Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:17.292242645Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:17.441252547Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:53.04218489Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:53.04218489Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:53.166025476Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2bc63a4a3e163679c8a2399342b1daf3e005320d94db933ce217a0f80d1b4537",
                    "sha256:d75154443a45cab05ca4a85ddd827b962fedcff91b702d791e6ef9404f6c85d3",
                    "sha256:ed61218e50e513b23bae8d31f72e7c8e7a3d0090e48e2ff087a536ac362cfb81",
                    "sha256:23faadc341a4670f586fccbfa7d9b0c5a5e56be8ab46b55a4067df82e5569a5c",
                    "sha256:26696ab075f5bb87eee8a46b41f2091a3f9d7edb2116147001a7677757eaaca5",
                    "sha256:61d65d5da4322b148f9078fa00914c14291b0bdf48b073091e08240ed72a9f7c",
                    "sha256:879d60f10dea3318ceaedb2814160c1ae4cc919d4f04d2e62152d05c1ea7011a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0428822e1d59c6db13038f6502cd2c9a69bd7e2d2a033cb20fc19071849b112e",
                    "sha256:f42d5fe962fb60a09b1002981c9199424901150b10258b1204a9e225fcfd3d74",
                    "sha256:3fabed44006fcfd14825b6c3c305dcf7b0dc134c5583aafb432f9fe037614dbe"
                ]
            }
        },
        "latest-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:19:54.206213013Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:06.695861539Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:31.267198079Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:32.694247574Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.719346978Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:36.547683782Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:36.691463904Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:19:54.089479679Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:19:54.089479679Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:19:54.206213013Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3f054b5308bf8dbf3abb2dac1bc72fac6b6e9569c5d0c4d1733c57b40f98d68c",
                    "sha256:9a408e5130d5761269a2f78fe14c41bfad96906f19a9b6f231ba27a0e270536b",
                    "sha256:ce27ddfda0b79dba438fc400e0d24f635fec12b6b0b2e61ff692ddfb273b5fe9",
                    "sha256:251af411a33440438f0b2f94cdfb89f2f9ffdbc97319bda046932d48df33eb89",
                    "sha256:5482afbecbaab7a5c1e492cf2a2f03aafdc9012c4dc853b5b5c1ed9fde902db7",
                    "sha256:5d6da048fbb12c4062ff5b76617e555654e7b2043bfca3f0791046007fc79bb6",
                    "sha256:c6c5906dcd307ca53496f54734925e883c2e43f758510871473e5490706bf6a8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:42adbbc0741061b3fa0e1fde61c20ae07301f416423df023d7264ef090febb62",
                    "sha256:28a64d3d0feb245922646e87e55d50684593e978129e0fd349f94e2cdd012a03",
                    "sha256:e1f9a2effa82857b26d2655df028f81ef38ccfc74d0fc33af861b59d9dad7017"
                ]
            }
        },
        "latest-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:25.075999169Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:24.960129794Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:24.960129794Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:25.075999169Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:653de70efb7527ede0736e7249506c30c9bfbb3683dd179fa0dd412b11e65446",
                    "sha256:c3d2d260e914a0cc921938cc16fedffb912eb513153b104f3edaf3c34a47d3a9"
                ]
            }
        },
        "latest-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:39.98979442Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:39.884973017Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:39.884973017Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:39.98979442Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:3b2aeedf33a2aaff2d27043fb4ded3cdeef11acef00eb34880065a8e76a843ab",
                    "sha256:b51a555b5c5565511824a56568118101eb16f52c0a33232c101108087992613a"
                ]
            }
        },
        "latest-run-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:33:29.690802444Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:51.352289509Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:52.040913956Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.086913794Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:55.875508418Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:56.018376913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:29.568850179Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:33:29.568850179Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:29.690802444Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:7d94e909dc19f31d9248e1ca5731a04da35c29e754dd69d2fb5a44a2502cc818",
                    "sha256:ed6509b907c0701f8a2a621cb39dbd26d066f869bf0b780990c71b717675bb3d",
                    "sha256:e03ba5a1224f9b985f2d94275263fa36221b3ab01f59437a07d3c1a623b76d77",
                    "sha256:9be68f287ebf7d1727a82714c098ca3ac0e021a4f0bd91d94de4992f010d993f",
                    "sha256:a5b159b9ba50945bb72f35a268a6bd8fca087febe08b2ec49f6982b5d39309e7",
                    "sha256:5efcacbddce62383428c47d9f0b7b716feaa80d8781fe6dd2b1dc81f391509df",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4491643620a3eb30fa973704b1de6c31cc71b0330dda8cb2847cc88b0981d732",
                    "sha256:946801c0603b620ea89b43ab291e4b5f2de4cff3dc26a90376676464b538765d",
                    "sha256:e26729d6196123f598909988248db79c531864f10b06d0e75bf1d616e0633926"
                ]
            }
        },
        "latest-run-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T07:01:13.821418715Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:51.352289509Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:52.040913956Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.086913794Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:55.875508418Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:56.018376913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:01:13.707781845Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T07:01:13.707781845Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:01:13.821418715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:7d94e909dc19f31d9248e1ca5731a04da35c29e754dd69d2fb5a44a2502cc818",
                    "sha256:ed6509b907c0701f8a2a621cb39dbd26d066f869bf0b780990c71b717675bb3d",
                    "sha256:e03ba5a1224f9b985f2d94275263fa36221b3ab01f59437a07d3c1a623b76d77",
                    "sha256:9be68f287ebf7d1727a82714c098ca3ac0e021a4f0bd91d94de4992f010d993f",
                    "sha256:a5b159b9ba50945bb72f35a268a6bd8fca087febe08b2ec49f6982b5d39309e7",
                    "sha256:5efcacbddce62383428c47d9f0b7b716feaa80d8781fe6dd2b1dc81f391509df",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4491643620a3eb30fa973704b1de6c31cc71b0330dda8cb2847cc88b0981d732",
                    "sha256:ebbb52a16f21cdd63eea0b77fe706c3c8d60ef8e48e0190b9034cc378e1e1346",
                    "sha256:84cfa9a1a48df6a07e85b7db8119e4e9d2823abee7122798eddc97c8b615a355"
                ]
            }
        },
        "latest-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:18:07.541742697Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:18:07.420361528Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:18:07.420361528Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:18:07.541742697Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:5c6594a14edb13d118ef19fec88df661e813f4adc3d59a933a630f39abd4185a",
                    "sha256:a097199109d2a9edceacb51e0c40ab84ba6631121b7c849ecaaf5ff592653986"
                ]
            }
        },
        "latest-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:48:13.076935283Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:12.967264244Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:48:12.967264244Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:13.076935283Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:7d7696ca2f43a78ae3091e7b9046f26c8cbfcf6de933847430143a8d66add907",
                    "sha256:59d809ce21ed7da4c39d56480f26de6e8040061ed1fb62fc54232f0644be4acc"
                ]
            }
        },
        "latest-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:44.663504675Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:44.54511821Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:44.54511821Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:44.663504675Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:c84fc6f189dfb96a5e01578fa541ed12b9fa81bf860c58ba59e2c03574021ef1",
                    "sha256:2b46eee6094d1ceb1e04207db8cf898115c7eb7968d5abda03d58404dd059cf3"
                ]
            }
        },
        "latest-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:19:41.984628102Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:19:41.864531819Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:19:41.864531819Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:19:41.984628102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:7c11aa1a0c2ee5b841618b04d2e435334d5e354be6cb7a1acacc5eb34a6a841c",
                    "sha256:3a222915426180229a8bb628a20e61e2ff92f1289b21c3d6579875d2310a5fef"
                ]
            }
        },
        "latest-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:39.98979442Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:39.884973017Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:39.884973017Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:39.98979442Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:3b2aeedf33a2aaff2d27043fb4ded3cdeef11acef00eb34880065a8e76a843ab",
                    "sha256:b51a555b5c5565511824a56568118101eb16f52c0a33232c101108087992613a"
                ]
            }
        },
        "run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:39.98979442Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:39.884973017Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:39.884973017Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:39.98979442Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:3b2aeedf33a2aaff2d27043fb4ded3cdeef11acef00eb34880065a8e76a843ab",
                    "sha256:b51a555b5c5565511824a56568118101eb16f52c0a33232c101108087992613a"
                ]
            }
        },
        "run-20240205": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-26T14:33:29.690802444Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:51.352289509Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:52.040913956Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.086913794Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:55.875508418Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:56.018376913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:29.568850179Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-26T14:33:29.568850179Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-26T14:33:29.690802444Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:7d94e909dc19f31d9248e1ca5731a04da35c29e754dd69d2fb5a44a2502cc818",
                    "sha256:ed6509b907c0701f8a2a621cb39dbd26d066f869bf0b780990c71b717675bb3d",
                    "sha256:e03ba5a1224f9b985f2d94275263fa36221b3ab01f59437a07d3c1a623b76d77",
                    "sha256:9be68f287ebf7d1727a82714c098ca3ac0e021a4f0bd91d94de4992f010d993f",
                    "sha256:a5b159b9ba50945bb72f35a268a6bd8fca087febe08b2ec49f6982b5d39309e7",
                    "sha256:5efcacbddce62383428c47d9f0b7b716feaa80d8781fe6dd2b1dc81f391509df",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4491643620a3eb30fa973704b1de6c31cc71b0330dda8cb2847cc88b0981d732",
                    "sha256:946801c0603b620ea89b43ab291e4b5f2de4cff3dc26a90376676464b538765d",
                    "sha256:e26729d6196123f598909988248db79c531864f10b06d0e75bf1d616e0633926"
                ]
            }
        },
        "run-20240226": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-02-27T07:01:13.821418715Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:26:08.862006831Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:51.352289509Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.031271896Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:52.040913956Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.086913794Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:52.096058179Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-05T00:44:55.875508418Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-05T00:44:56.018376913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:01:13.707781845Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-27T07:01:13.707781845Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-27T07:01:13.821418715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:7d94e909dc19f31d9248e1ca5731a04da35c29e754dd69d2fb5a44a2502cc818",
                    "sha256:ed6509b907c0701f8a2a621cb39dbd26d066f869bf0b780990c71b717675bb3d",
                    "sha256:e03ba5a1224f9b985f2d94275263fa36221b3ab01f59437a07d3c1a623b76d77",
                    "sha256:9be68f287ebf7d1727a82714c098ca3ac0e021a4f0bd91d94de4992f010d993f",
                    "sha256:a5b159b9ba50945bb72f35a268a6bd8fca087febe08b2ec49f6982b5d39309e7",
                    "sha256:5efcacbddce62383428c47d9f0b7b716feaa80d8781fe6dd2b1dc81f391509df",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4491643620a3eb30fa973704b1de6c31cc71b0330dda8cb2847cc88b0981d732",
                    "sha256:ebbb52a16f21cdd63eea0b77fe706c3c8d60ef8e48e0190b9034cc378e1e1346",
                    "sha256:84cfa9a1a48df6a07e85b7db8119e4e9d2823abee7122798eddc97c8b615a355"
                ]
            }
        },
        "run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:18:07.541742697Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:18:07.420361528Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:18:07.420361528Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:18:07.541742697Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:5c6594a14edb13d118ef19fec88df661e813f4adc3d59a933a630f39abd4185a",
                    "sha256:a097199109d2a9edceacb51e0c40ab84ba6631121b7c849ecaaf5ff592653986"
                ]
            }
        },
        "run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:48:13.076935283Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:12.967264244Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:48:12.967264244Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:13.076935283Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:7d7696ca2f43a78ae3091e7b9046f26c8cbfcf6de933847430143a8d66add907",
                    "sha256:59d809ce21ed7da4c39d56480f26de6e8040061ed1fb62fc54232f0644be4acc"
                ]
            }
        },
        "run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:44.663504675Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:44.54511821Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:44.54511821Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:44.663504675Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:c84fc6f189dfb96a5e01578fa541ed12b9fa81bf860c58ba59e2c03574021ef1",
                    "sha256:2b46eee6094d1ceb1e04207db8cf898115c7eb7968d5abda03d58404dd059cf3"
                ]
            }
        },
        "run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:19:41.984628102Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:19:41.864531819Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:19:41.864531819Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:19:41.984628102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:7c11aa1a0c2ee5b841618b04d2e435334d5e354be6cb7a1acacc5eb34a6a841c",
                    "sha256:3a222915426180229a8bb628a20e61e2ff92f1289b21c3d6579875d2310a5fef"
                ]
            }
        },
        "run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "jetson-orin-nx-seeed-j4012",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:39.98979442Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:39.884973017Z",
                    "created_by": "LABEL io.balena.device-type=jetson-orin-nx-seeed-j4012",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:39.884973017Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:39.98979442Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:3b2aeedf33a2aaff2d27043fb4ded3cdeef11acef00eb34880065a8e76a843ab",
                    "sha256:b51a555b5c5565511824a56568118101eb16f52c0a33232c101108087992613a"
                ]
            }
        }
    }
}