{
    "manifests": {
        "20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3e7915b5948bc4ac07857416dbd8bbe4cb03a8f1e2bc5507eb43fbd098787029",
                "size": 6820
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb6ff1e94a638d9a7ffb68805fe7503c8da20696cb6293dcae057d79a71ca50a",
                    "size": 6663417
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3601bdfc491c4b65a9d9e62d1a922480293f8b36617b01da1ef70e4e86bdfb5",
                    "size": 467
                }
            ]
        },
        "20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:599e18af61d18af910f624f62b7fc9b38ad7d6a2cea0158fe4ed220ec989f0b9",
                "size": 6820
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5d763b7498ea8bda343628cb3364285ec0649d3986dff5376705ac44eba4f3ec",
                    "size": 6663583
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e58952a17b2aefbe81e28ca0571340e75ee2b6d84f80d618425eff6706af655",
                    "size": 467
                }
            ]
        },
        "20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:01ee56267fdd8da9ba9ebd4bc7d41e776fba89350535cf09825507c68cc2f1da",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fb5c3095da6a78b27f64dd01bf07b7511474f59bd4f3bd5cf1e49d9925fb9d8",
                    "size": 6663588
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fedd9952b2995f2b8ae4a5d17f85f6febf8cf97c217d0b0d08875ec671732ae",
                    "size": 467
                }
            ]
        },
        "20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d4bb89489f68a81943fc4f336b1d6b08c43bfec26e6996f85d8264d870bcf94a",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6cd4154677d67f36e5e346d8f301fb2d7a795e0179018437a64240e284e2dcf",
                    "size": 6663940
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f08a29bc4c908d16b7c53563ac04829b4303263c17bc4ccecdaa8afe75d15d70",
                    "size": 467
                }
            ]
        },
        "20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:69130cc7aa91d147ed6205efec9666c8f9ad0b90c1aa1b12e3c626a91b669fd4",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca12228c4df9ecb56c55043ba57342c512cca137b6dab6d78071eac9d6f81ec8",
                    "size": 6663516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d545636dbc59afd9ab092841d0dea999d5e2f173f81b41d35d6edbcafb3f0347",
                    "size": 467
                }
            ]
        },
        "36": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0537eda58b45e3e07050cb445cb3d680b81d9124a73d1953ce2792b54189dcf4",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:082c1b0215e65b79bee57867d846182d55066d84b6536f8ce5cdfb4557925530",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42ba2d464197953ae0c3ea9e9a7a0862776bf9c6b9f3de24425d068cab220125",
                    "size": 19390844
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4964fb2db364d724426035e1a65a77fb7a7597a97ee108d28fdc5f65bb88355b",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30c2f7dc4c95c77dc1ca12e66dd393dae4e0e48b4bf2e1ecd5df4bb094a6764e",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b1bd7b752a01aabedcbb0120f942f8e9b40c1ea7d9dc536209ada8b69b743c6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c65f82c416d78c6bd93cb4f9d6a5524c5b78e47f5242ba83e2a7e56333387a14",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5aee459832c98a800d0f6b838ab0cffb57b28fcdf8ae32a265c871cb574db71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13a3134c8ce0cdde4a04b96c016c84e0012cdf83fb1d7e7680b01ca2876e8770",
                    "size": 5931731
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b39bdfb02cb7cc02765ab26394bc2e574ac7f790a7eafb3ee757c0860ce1d157",
                    "size": 468
                }
            ]
        },
        "36-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:79e45e291624368b51721b04f983fb0f026b015fe0ba81a48e4d6589598fa8a9",
                "size": 6819
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7a0db0ff778242d33b334df3880f3377be078ede1389683094b9fc5ef625a8b",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e11ece4d18eb73e1f2478b744c2762a970279215b677363fffd763b4e66cbb20",
                    "size": 19390875
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0859dbd8c79863b41056cf1f05b8070d167a36f4722ff62e7692830b9813dc72",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1fb6c3b5aff923033461b6aced870ddbd9ecd23a6f1d33b947404edb036887d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5db6ae9e6237947c470a017ac42126a11b27bc1f4c45124b7abee8e979d5121d",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9784ee44190cc36d239aecc400341f0cdd989158bab82fd65d2360c337941dd6",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c96d7e580d362e4810be600d8366b5df4ef8a5d0acaf892f1a6d7991c532b9e8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31912b1ba57cae54b5d576268f6178ca245607f2c5636fded5df4b5bef9cf366",
                    "size": 5932052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd6a393d451548b421c5ecb2fdac074ef053b8140fc168aa47d7db4e6a745dd6",
                    "size": 466
                }
            ]
        },
        "36-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0c61ca67c05965bcd57912f899fd66e621e5529d743e0c64af30796d04af77dd",
                "size": 6822
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc51f944b49ce237b9f298b98365527f7e3798bf21bafd50e35866a556ed4e9",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:facc66dc89c7d7c447626eb18bd7ce32d146ce57cca4020a810c3ce4f591eca7",
                    "size": 19390749
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c83275ccf32f5cf0cba4d8f5f680a0359bf1a953f54b790f0045b2ceccf6223f",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b34d49a738cb74e7f50b246548d2e75750c65f65c48b0f17385c21e6803b996a",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4321ae63b784037f1250a339377b9aa8b8b667eaaa46f6ee1b5bc892702f6dc",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6b178a90bf42de76fa696cd5c34841d8b28240ce520eb2cbfb604e148aaf6cb",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56991078aebec441802470063e40c974fd84cab53be8c0302e8c05f1a88955a0",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e179f76a2ce6a45c66fe50a60445d92c4a326884da31c00aa3a3fa45b862eeff",
                    "size": 5932007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcdea1bfb0c0d26f11a976547d699e41992cde5dbb5c85608c990432038df4c1",
                    "size": 467
                }
            ]
        },
        "36-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b16cc18b75248b345cb12d675602e80ae85f61735e57256d4f4469971d31ae95",
                "size": 6805
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56dc14cfe3300a84ae27764721db64d2f98d454a9b42a6c9d7cb9d30a172a070",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f5d5bfba91d41861de1fb090964f20b327211c1c947a70c5c06ff50f343cb09",
                    "size": 19390970
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7510c6c08be3cae0d913e087b2ab0adfc335aa94a8b99e269e3a3aaaa9bdc39",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f364d329a6963313f859e7df4b3254176e848f77264ad4b07f4d4267197066f4",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94abcdf5f2faad93c90676ffe091e188863184745ebc512c40b1f2ae1fbd2bbb",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33198baaf3af80d3355e63a11e4f2a4f308ff51588ae697ec514e96b8ce5ca0e",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:079c572b5983bd27847370979958f7a75f320fbf3b0b1df78d317296b7aa988c",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab5b46f5121bc72dc3c36e2349266807d96b42b2206e1584eaaad8d094ce1cfe",
                    "size": 5932178
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69558508c6aa7ae73a5bbefed70313d114ee2520c941621892b909e9588bf142",
                    "size": 468
                }
            ]
        },
        "36-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0537eda58b45e3e07050cb445cb3d680b81d9124a73d1953ce2792b54189dcf4",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:082c1b0215e65b79bee57867d846182d55066d84b6536f8ce5cdfb4557925530",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42ba2d464197953ae0c3ea9e9a7a0862776bf9c6b9f3de24425d068cab220125",
                    "size": 19390844
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4964fb2db364d724426035e1a65a77fb7a7597a97ee108d28fdc5f65bb88355b",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30c2f7dc4c95c77dc1ca12e66dd393dae4e0e48b4bf2e1ecd5df4bb094a6764e",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b1bd7b752a01aabedcbb0120f942f8e9b40c1ea7d9dc536209ada8b69b743c6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c65f82c416d78c6bd93cb4f9d6a5524c5b78e47f5242ba83e2a7e56333387a14",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5aee459832c98a800d0f6b838ab0cffb57b28fcdf8ae32a265c871cb574db71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13a3134c8ce0cdde4a04b96c016c84e0012cdf83fb1d7e7680b01ca2876e8770",
                    "size": 5931731
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b39bdfb02cb7cc02765ab26394bc2e574ac7f790a7eafb3ee757c0860ce1d157",
                    "size": 468
                }
            ]
        },
        "36-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:25290641736c8778b9c82dd6a9225bc7720759c6f01595697542f528784e1d83",
                "size": 7566
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8764ad086e58a97c06142ee94b9611c18210c22e68df2b5a48a9642655300718",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b36131f08816b90f920c5a468157221fdedd3d2135cf04285071fdee5c863b5",
                    "size": 19391006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d34e3e4b0ce81bf5348d5f2e6ca0156b3814f6e6593c5ada871f5f985255bc86",
                    "size": 189028355
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8fd98c44fe8de3eab8482ae2bbc1daab8ae83943d60e62c14804b3a610398df",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9d996d83302baab279626d16a59c52db02af14ecdc464dd6da80b60e784e3e2",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98f156bc669d3b72f6d0fbd7d2ae05bbe0a4153e02dc8a330f89d1d1571509a6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82e21acf93e28ef258e7275e925c15f4924cb44c67031e28927da5a0ae68fb1f",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8e5300ef4596be4c3f87cdcce3ccf8c3581658a69caba06d3b1e117cd749a5b",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b878aab2e794529601433307b071f5bfbdd21ebc7d8a601b321434c5c9527262",
                    "size": 10871294
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1fce2b7a39e09f8f49a8b99e1ca0c424e6cae3116e3979def6155995f837709",
                    "size": 468
                }
            ]
        },
        "36-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a266a2e78c686568ded13cfca369082e7cd33fabb7ab1dbcc7432e5e921837b1",
                "size": 7579
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1c5949f4af1f6c65c0792e39a3f0f9eea4094bb6e8643aa16bf5ec735519990",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9f76dd63f11fe26d3f455a753de3e4aaf382e2f8a5c03722e4d98c28c769b14",
                    "size": 19390832
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64aa35e762e682b6a09603d7accc7d7dd4ba80d936e42b6f74d9a4c7cdb9065f",
                    "size": 189027895
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:638d538bbfb9dc71484135e0cb6d183c8f98afaf1038d86354a7598480517243",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:264df434a5e344308c5e8c657c21217955d59a6f06e5a963826823b03ac3799d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40cb454c93602c9789957f243277122d3c82fffd90376a441a8ce9a5656bf451",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abf8fc480b66a4343237269cbf5e48d28935902a2730eee845750f319c7927b5",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18bfe318852cef5a0c9ca4b6e59b8b39bc0018e1b1f0cf13ed00af8611c8f8e1",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5ee0224e49c899a9ca0f3e301a9f4f845d80e21e7a4558fe3a42d80e618e810",
                    "size": 10871106
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:051ac73964cca9632672bcfcf065c5fc4c050ad539afb47cecc3fa44269f2169",
                    "size": 467
                }
            ]
        },
        "36-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ed01d050d082b16f19374ae8aa092fd363580a38b81f1b7e3ea5e74014a1e0ae",
                "size": 7581
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69cc4f4fa6068c7e20f64e589c6cb6f79356c3953b6ddec2251cd909a1f6e93a",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54ed8c26b2264b097115021b57f1a494f521ebeb9050fa2099a5f2491c8dcb7c",
                    "size": 19390870
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa85abca87ed70710c728e1ee8a7547072773622b487eb13d75f0583dc6b611a",
                    "size": 189028170
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b26c60679cfda8d91f0e078bde48ff45bf147034eb56c860b0b09f7defd1a5bc",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf5b4b90867d019b607aa9455d5dea09f4b01831cc0acf2dfa05d0511ef9ed3e",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0b3d8ff0c32a5ed397bf09b7c1f82167c37008cf70fefb38ce1127d24ed697e5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70846d0457808ad2411aa8acabe8981fbee880773bc320f139769b5eaa431b1a",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d18df4bf438b32d5dc9239c1ec3dd8a97bbbb891e330233caee265b4bf070aba",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:608a1a97215a3f64a8bda1667181705ad1135e2bd015f31f4107ce3cc7db8680",
                    "size": 10870648
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0137f0a1de06d151a492c6c6e42d2a786c421b0b5eb6bcd7acd66974ce3cf22e",
                    "size": 467
                }
            ]
        },
        "36-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:71f05b53b1df2e9c9d848efd4be8e515690341857c511175f6aac55d5de7d70f",
                "size": 7563
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38deeb2234b41dc88ad2e4707f14aa15ac9f83b439b4a2de9154aed58340140c",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b51db2e4f1ba1a1df6842273518f19453349bf68fa0af2adee47e8982db390b7",
                    "size": 19390797
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3459d5d38aace74a5cb60ddfa1ebd56751ec503521d2243e4264415574a18a28",
                    "size": 189028346
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84cae1f53caf8feb4123289a122f72219033bda6b18c120821e037301caa372f",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4adff2f3c484c54b270f35c8cc9cf2f9c5a8adb8967217c1e8705b24fd421a0",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9376e50f8875449ef3f41b8ba36304086f002888a0714e41c154e63a6a72f8e9",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:627df8dec2e0b9cc214f41323126835112bf4aff4844fddc9dc9a0b049df17cd",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95d0ce7a36a5a599817494fdddbb8292782785761cd0c1dece72371edc2c9405",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2626ac78c5b5d6ea1edf2bf5e82291a1476c43320db6fc4ae597cd4dcef32f5",
                    "size": 10870604
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5491205154f1bd00d3280484bf61f6351236bb2030a6dc3df4eefeb2756e1494",
                    "size": 466
                }
            ]
        },
        "36-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:25290641736c8778b9c82dd6a9225bc7720759c6f01595697542f528784e1d83",
                "size": 7566
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8764ad086e58a97c06142ee94b9611c18210c22e68df2b5a48a9642655300718",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b36131f08816b90f920c5a468157221fdedd3d2135cf04285071fdee5c863b5",
                    "size": 19391006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d34e3e4b0ce81bf5348d5f2e6ca0156b3814f6e6593c5ada871f5f985255bc86",
                    "size": 189028355
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8fd98c44fe8de3eab8482ae2bbc1daab8ae83943d60e62c14804b3a610398df",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9d996d83302baab279626d16a59c52db02af14ecdc464dd6da80b60e784e3e2",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98f156bc669d3b72f6d0fbd7d2ae05bbe0a4153e02dc8a330f89d1d1571509a6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82e21acf93e28ef258e7275e925c15f4924cb44c67031e28927da5a0ae68fb1f",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8e5300ef4596be4c3f87cdcce3ccf8c3581658a69caba06d3b1e117cd749a5b",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b878aab2e794529601433307b071f5bfbdd21ebc7d8a601b321434c5c9527262",
                    "size": 10871294
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1fce2b7a39e09f8f49a8b99e1ca0c424e6cae3116e3979def6155995f837709",
                    "size": 468
                }
            ]
        },
        "36-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0537eda58b45e3e07050cb445cb3d680b81d9124a73d1953ce2792b54189dcf4",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:082c1b0215e65b79bee57867d846182d55066d84b6536f8ce5cdfb4557925530",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42ba2d464197953ae0c3ea9e9a7a0862776bf9c6b9f3de24425d068cab220125",
                    "size": 19390844
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4964fb2db364d724426035e1a65a77fb7a7597a97ee108d28fdc5f65bb88355b",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30c2f7dc4c95c77dc1ca12e66dd393dae4e0e48b4bf2e1ecd5df4bb094a6764e",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b1bd7b752a01aabedcbb0120f942f8e9b40c1ea7d9dc536209ada8b69b743c6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c65f82c416d78c6bd93cb4f9d6a5524c5b78e47f5242ba83e2a7e56333387a14",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5aee459832c98a800d0f6b838ab0cffb57b28fcdf8ae32a265c871cb574db71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13a3134c8ce0cdde4a04b96c016c84e0012cdf83fb1d7e7680b01ca2876e8770",
                    "size": 5931731
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b39bdfb02cb7cc02765ab26394bc2e574ac7f790a7eafb3ee757c0860ce1d157",
                    "size": 468
                }
            ]
        },
        "36-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:79e45e291624368b51721b04f983fb0f026b015fe0ba81a48e4d6589598fa8a9",
                "size": 6819
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7a0db0ff778242d33b334df3880f3377be078ede1389683094b9fc5ef625a8b",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e11ece4d18eb73e1f2478b744c2762a970279215b677363fffd763b4e66cbb20",
                    "size": 19390875
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0859dbd8c79863b41056cf1f05b8070d167a36f4722ff62e7692830b9813dc72",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1fb6c3b5aff923033461b6aced870ddbd9ecd23a6f1d33b947404edb036887d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5db6ae9e6237947c470a017ac42126a11b27bc1f4c45124b7abee8e979d5121d",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9784ee44190cc36d239aecc400341f0cdd989158bab82fd65d2360c337941dd6",
                    "size": 680
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c96d7e580d362e4810be600d8366b5df4ef8a5d0acaf892f1a6d7991c532b9e8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31912b1ba57cae54b5d576268f6178ca245607f2c5636fded5df4b5bef9cf366",
                    "size": 5932052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd6a393d451548b421c5ecb2fdac074ef053b8140fc168aa47d7db4e6a745dd6",
                    "size": 466
                }
            ]
        },
        "36-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0c61ca67c05965bcd57912f899fd66e621e5529d743e0c64af30796d04af77dd",
                "size": 6822
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bc51f944b49ce237b9f298b98365527f7e3798bf21bafd50e35866a556ed4e9",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:facc66dc89c7d7c447626eb18bd7ce32d146ce57cca4020a810c3ce4f591eca7",
                    "size": 19390749
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c83275ccf32f5cf0cba4d8f5f680a0359bf1a953f54b790f0045b2ceccf6223f",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b34d49a738cb74e7f50b246548d2e75750c65f65c48b0f17385c21e6803b996a",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4321ae63b784037f1250a339377b9aa8b8b667eaaa46f6ee1b5bc892702f6dc",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6b178a90bf42de76fa696cd5c34841d8b28240ce520eb2cbfb604e148aaf6cb",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56991078aebec441802470063e40c974fd84cab53be8c0302e8c05f1a88955a0",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e179f76a2ce6a45c66fe50a60445d92c4a326884da31c00aa3a3fa45b862eeff",
                    "size": 5932007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcdea1bfb0c0d26f11a976547d699e41992cde5dbb5c85608c990432038df4c1",
                    "size": 467
                }
            ]
        },
        "36-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b16cc18b75248b345cb12d675602e80ae85f61735e57256d4f4469971d31ae95",
                "size": 6805
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56dc14cfe3300a84ae27764721db64d2f98d454a9b42a6c9d7cb9d30a172a070",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f5d5bfba91d41861de1fb090964f20b327211c1c947a70c5c06ff50f343cb09",
                    "size": 19390970
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7510c6c08be3cae0d913e087b2ab0adfc335aa94a8b99e269e3a3aaaa9bdc39",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f364d329a6963313f859e7df4b3254176e848f77264ad4b07f4d4267197066f4",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94abcdf5f2faad93c90676ffe091e188863184745ebc512c40b1f2ae1fbd2bbb",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33198baaf3af80d3355e63a11e4f2a4f308ff51588ae697ec514e96b8ce5ca0e",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:079c572b5983bd27847370979958f7a75f320fbf3b0b1df78d317296b7aa988c",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab5b46f5121bc72dc3c36e2349266807d96b42b2206e1584eaaad8d094ce1cfe",
                    "size": 5932178
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69558508c6aa7ae73a5bbefed70313d114ee2520c941621892b909e9588bf142",
                    "size": 468
                }
            ]
        },
        "36-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0537eda58b45e3e07050cb445cb3d680b81d9124a73d1953ce2792b54189dcf4",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0aeb4ade331e503f627cf2d20e48a0e609546d534f31d0ab05e75c8f0a67add4",
                    "size": 58130600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:082c1b0215e65b79bee57867d846182d55066d84b6536f8ce5cdfb4557925530",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42ba2d464197953ae0c3ea9e9a7a0862776bf9c6b9f3de24425d068cab220125",
                    "size": 19390844
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4964fb2db364d724426035e1a65a77fb7a7597a97ee108d28fdc5f65bb88355b",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30c2f7dc4c95c77dc1ca12e66dd393dae4e0e48b4bf2e1ecd5df4bb094a6764e",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b1bd7b752a01aabedcbb0120f942f8e9b40c1ea7d9dc536209ada8b69b743c6",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c65f82c416d78c6bd93cb4f9d6a5524c5b78e47f5242ba83e2a7e56333387a14",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5aee459832c98a800d0f6b838ab0cffb57b28fcdf8ae32a265c871cb574db71",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13a3134c8ce0cdde4a04b96c016c84e0012cdf83fb1d7e7680b01ca2876e8770",
                    "size": 5931731
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b39bdfb02cb7cc02765ab26394bc2e574ac7f790a7eafb3ee757c0860ce1d157",
                    "size": 468
                }
            ]
        },
        "37": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:69130cc7aa91d147ed6205efec9666c8f9ad0b90c1aa1b12e3c626a91b669fd4",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca12228c4df9ecb56c55043ba57342c512cca137b6dab6d78071eac9d6f81ec8",
                    "size": 6663516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d545636dbc59afd9ab092841d0dea999d5e2f173f81b41d35d6edbcafb3f0347",
                    "size": 467
                }
            ]
        },
        "37-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3e7915b5948bc4ac07857416dbd8bbe4cb03a8f1e2bc5507eb43fbd098787029",
                "size": 6820
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb6ff1e94a638d9a7ffb68805fe7503c8da20696cb6293dcae057d79a71ca50a",
                    "size": 6663417
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3601bdfc491c4b65a9d9e62d1a922480293f8b36617b01da1ef70e4e86bdfb5",
                    "size": 467
                }
            ]
        },
        "37-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:599e18af61d18af910f624f62b7fc9b38ad7d6a2cea0158fe4ed220ec989f0b9",
                "size": 6820
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5d763b7498ea8bda343628cb3364285ec0649d3986dff5376705ac44eba4f3ec",
                    "size": 6663583
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e58952a17b2aefbe81e28ca0571340e75ee2b6d84f80d618425eff6706af655",
                    "size": 467
                }
            ]
        },
        "37-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:01ee56267fdd8da9ba9ebd4bc7d41e776fba89350535cf09825507c68cc2f1da",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fb5c3095da6a78b27f64dd01bf07b7511474f59bd4f3bd5cf1e49d9925fb9d8",
                    "size": 6663588
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fedd9952b2995f2b8ae4a5d17f85f6febf8cf97c217d0b0d08875ec671732ae",
                    "size": 467
                }
            ]
        },
        "37-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d4bb89489f68a81943fc4f336b1d6b08c43bfec26e6996f85d8264d870bcf94a",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6cd4154677d67f36e5e346d8f301fb2d7a795e0179018437a64240e284e2dcf",
                    "size": 6663940
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f08a29bc4c908d16b7c53563ac04829b4303263c17bc4ccecdaa8afe75d15d70",
                    "size": 467
                }
            ]
        },
        "37-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:69130cc7aa91d147ed6205efec9666c8f9ad0b90c1aa1b12e3c626a91b669fd4",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca12228c4df9ecb56c55043ba57342c512cca137b6dab6d78071eac9d6f81ec8",
                    "size": 6663516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d545636dbc59afd9ab092841d0dea999d5e2f173f81b41d35d6edbcafb3f0347",
                    "size": 467
                }
            ]
        },
        "37-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:280a6cc604da88fdbf6dbddc0defcaea8519fb204ac5c840fcb90882cc5d13d6",
                "size": 7562
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d0b410fa120fedd78823da0a1a8036726e4ca85ec746a1f7e1beac9a6a05f2f",
                    "size": 14184671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f75d992c12df6eded2d1e2690c87ade44a0b6d61c3a812ec7c8c30e2d3ba93a4",
                    "size": 467
                }
            ]
        },
        "37-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8b4824575786040bf22e45cbe85d10f2fae37ec70497b879b25855ca5d7a1468",
                "size": 7581
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65764d35c6ba7bc01cd8c1c7c80dedd0fba41e8aed4fe20f32b8104e40811b27",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ccb26de59532c7a3ca4e330f6259f0a22d5502c63fce64953cfb835da2a89232",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dbffb8cd0d199db9da89c0a8f6be633d403ae9577895ef76ed8559e0e6a2fce6",
                    "size": 217030397
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2cdbf2b50a12d0c904c51a1aa6a78d769e31ab23e681213a8dcd625845a43fa",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:caf29b48f9a19f9f082026316d26fb42e73b1f7a2585ff1f86457c794c8ca68d",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:821dddb4fbe51867593b530bacd209ea5cec4104a56beb6362389970d19aaa68",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0fa218cb0068ba037fef0d258fb86dfbfed2c4590d7b39e86733b5c8b69f61b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d68feee9a64aaf2316e4f6f65cdc6fbf9e80169d4bf9cd0152c507a525b3155",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5f6daa14f5184ade819712034765bf02e8647a83d95d87af11d62f0c9892dd7",
                    "size": 14185016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3092cf62a46ea2a92d9b1e483630466d9524030ceeef8551ced1e5ff31f4c3e2",
                    "size": 466
                }
            ]
        },
        "37-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:31a76709e0262a650492734670a9c1a044d0bc5676e1ffec504438c9a451af6a",
                "size": 7581
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:365c152eab29768a6002cd30191cfe30aa5a9c7670afb3dd05e5568d60598b53",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cfac25b66436aaad9254043374a8a0bce94c1fcc73328f0009e4c633a489dab",
                    "size": 23448738
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec58c8baedb56f03697759c56cc8b52846aa6b359079d478ffe547bd11683f2",
                    "size": 217029920
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5ea14a5b029f6e9168ba600f7829994ee94710831ae531cc8575103cb5f9076",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b5e5aded2a12ddea2c899e597f6b276bdbb070022f582eb5ffef5eab6706f4c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fdfe10b79cf925c4a4f205beee5164056995aa8d5d10cae49aeae14093d612d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:563ad2bf80f0e61e8048e26e2680eceb622c9b84a0e9b242dc26a7272ef9ee62",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87d42fc86fb1bef824e1ec397f2adeb648ebde6cb39d75fa5d79da952fead6a4",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77b0a04744387cdf69e4c8df859d8fe4405221e6e17aec07188562646a25d8ac",
                    "size": 14185010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2acc7c62876d1c911984e55fe2e227afd16e1b1eea77298f3440d514d847d4bd",
                    "size": 468
                }
            ]
        },
        "37-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a0cc14dd80c3f3a2c4dcd52486285c96f51c572e0da833fa2ce75288212d71b3",
                "size": 7562
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3a4176e53d7e5697395953f42ef76b08d9fef8fe5a662a442cd4f13740c7a1d",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1d05a709ad59f905b2bb738079267053a09a0f4f535e32192bcd83e0dce163c",
                    "size": 23448641
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f3f5fce4a1b94b586b0523b225e6b5436e9dd40567f898aaaffd4c2302a2399",
                    "size": 217029391
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de3c36bd181e84497d428d49b10abc3694cd9a0c75ec31064623d54cb4f8c211",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:565296760a52acc955f0523e8e8213020ff97bec4df095452a9633f053cb710d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf3fbff6d013e83413ee8ed775faa0f5e3350e9b987d24b28cb8715ea67d31ed",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363ad41c733c6b3e9c7a4610329a637d3d876504b93320bb9b4612bba294335",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38693fb89d5d2d6143564a7b4bd2d1c7da21077550cbe4d5e8a7ec5096625ff1",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ef758421fa58665a3d5de128ce0f2683804640b818a43efdff89d070be3087a",
                    "size": 14184589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42fcdadf750c68ad4a8f379baa4778dbd5d2e3f62aa9be1a7e9b7af78326e754",
                    "size": 467
                }
            ]
        },
        "37-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:03bb17ab075d33cce9cc3c39147b506d78a5e1db519a154b83dda6fb398ff210",
                "size": 7564
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e54c1365f15bf88b17ba38f79d2a428ac06b2fadf6f6c91f27bb25c858dbc60",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:017b908d94c1c349a53970523ee7a139bef37f34ad362e03d6bec2d726504a0d",
                    "size": 23448703
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b5c50d01e785c4728ab89718fa8aaa45a81c0af2408ac0cc79f3ee163c253bd",
                    "size": 217028541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d83e2fae00f6ab84a73baecccee1b9773d59ae4b450a12e360a5effca4944ac4",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fadda5faf2fcc02b62f25d0f9c548bc0d5c1abdeda6da2328fc79ddb5b8b91ca",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1e9b66fa7cafdd2423279eb1c13f4052734fd9472c334ca49bfa60216bfccc8",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cbd57e7f4360c9cbeecd7408e549686853d4c97c491b59f4d07d320805ce98a",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4759f7eafc183e7e416b2fb6e564ecd7cf14425e5e7ccad33b50b3ea539f38e",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4394a283878a1770c1c364972ad93fcec69c6b2ee717738662365ca76104ac6",
                    "size": 14184727
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b216ebe446d57197bb871954e378a34a0f94addff474c4050a1fb84399fd177",
                    "size": 467
                }
            ]
        },
        "37-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:280a6cc604da88fdbf6dbddc0defcaea8519fb204ac5c840fcb90882cc5d13d6",
                "size": 7562
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d0b410fa120fedd78823da0a1a8036726e4ca85ec746a1f7e1beac9a6a05f2f",
                    "size": 14184671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f75d992c12df6eded2d1e2690c87ade44a0b6d61c3a812ec7c8c30e2d3ba93a4",
                    "size": 467
                }
            ]
        },
        "37-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:69130cc7aa91d147ed6205efec9666c8f9ad0b90c1aa1b12e3c626a91b669fd4",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca12228c4df9ecb56c55043ba57342c512cca137b6dab6d78071eac9d6f81ec8",
                    "size": 6663516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d545636dbc59afd9ab092841d0dea999d5e2f173f81b41d35d6edbcafb3f0347",
                    "size": 467
                }
            ]
        },
        "37-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3e7915b5948bc4ac07857416dbd8bbe4cb03a8f1e2bc5507eb43fbd098787029",
                "size": 6820
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb6ff1e94a638d9a7ffb68805fe7503c8da20696cb6293dcae057d79a71ca50a",
                    "size": 6663417
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3601bdfc491c4b65a9d9e62d1a922480293f8b36617b01da1ef70e4e86bdfb5",
                    "size": 467
                }
            ]
        },
        "37-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:599e18af61d18af910f624f62b7fc9b38ad7d6a2cea0158fe4ed220ec989f0b9",
                "size": 6820
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5d763b7498ea8bda343628cb3364285ec0649d3986dff5376705ac44eba4f3ec",
                    "size": 6663583
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e58952a17b2aefbe81e28ca0571340e75ee2b6d84f80d618425eff6706af655",
                    "size": 467
                }
            ]
        },
        "37-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:01ee56267fdd8da9ba9ebd4bc7d41e776fba89350535cf09825507c68cc2f1da",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fb5c3095da6a78b27f64dd01bf07b7511474f59bd4f3bd5cf1e49d9925fb9d8",
                    "size": 6663588
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fedd9952b2995f2b8ae4a5d17f85f6febf8cf97c217d0b0d08875ec671732ae",
                    "size": 467
                }
            ]
        },
        "37-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d4bb89489f68a81943fc4f336b1d6b08c43bfec26e6996f85d8264d870bcf94a",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6cd4154677d67f36e5e346d8f301fb2d7a795e0179018437a64240e284e2dcf",
                    "size": 6663940
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f08a29bc4c908d16b7c53563ac04829b4303263c17bc4ccecdaa8afe75d15d70",
                    "size": 467
                }
            ]
        },
        "37-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:69130cc7aa91d147ed6205efec9666c8f9ad0b90c1aa1b12e3c626a91b669fd4",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca12228c4df9ecb56c55043ba57342c512cca137b6dab6d78071eac9d6f81ec8",
                    "size": 6663516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d545636dbc59afd9ab092841d0dea999d5e2f173f81b41d35d6edbcafb3f0347",
                    "size": 467
                }
            ]
        },
        "38": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1c6165611839383fbaae7606f52d33629bd8e8447c4f0d2cf90b41b2e6e1be79",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f977d6a742cee54d2797e8e7036482bb32744af4b77cea0d46a39dcc74eb484a",
                    "size": 7065156
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39875abd7f6a2143c203ab0174533c0a7092939f752a41216dd07205beb616c3",
                    "size": 467
                }
            ]
        },
        "38-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e0e4a3bf20ee4b4297864a7cd492064f3db196949886e912d0fa990b8668d2ac",
                "size": 6820
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e590c6dbdc96b1cdbacfe1edf9c0cd1a8d274ab9f64fcc727a9b8e531dd2cd4",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7adb706717b650f823b13f7c6bb4c282be1a52690199e6f455cfb30d5cbca021",
                    "size": 38654943
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:423d419b6640476cb76b200c9f282eeae646a2e6cfecc2031156e13b9dad4b7f",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ac9f745039954e9a75bd5b770563cf3125dfa45774358751a883b41f6055e6d",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f26142fae26d26aef024cc33f49b3ed51f70b996d1d2dd77338eab55f74f6971",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6dc59657604b207e982b92ee10c9209906db18c87aeac61679b4b9713931a9a6",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5996e90f577025eb8a85d74dbbda6775db92ab5af6b03561273305fc0d42d737",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6be1c54a2668c6916c33b6131c9da7898e38c4c3785609664aa3089cb51be982",
                    "size": 7025921
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f840572617d7b441a8291e60daafac496679a97e7be20db57b462666068b519",
                    "size": 467
                }
            ]
        },
        "38-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b0cfc69c19bcd29a5c80c027852c20a6520c27e174ef9be252dbddaa9a743132",
                "size": 6822
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79b599003222175835e1970954e9519145d402578af3b20e11f3ca2cf50f9fd1",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:735b184569da057a3a27ffc4e0458248f8683681c2b5aaf874f8a86e0c6a7e52",
                    "size": 38655023
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:225147945e23054c0b9d4ecc254f42c0cfd7dd6414e8bc13cb2fa054d95600d4",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46dfb557ffde70435f342251cdac53f7ba6b7047f858c4fae563553aa7d9deb5",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e1edb9a59a184f87f5dad7580e05bfb45f04c855962693b34d0ac28e0794b9a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1b94eb18edf2c26967fed53ec8bd49d33c18b0432078cf67640436e7923552c",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68bb8a514653a6465e96d23a3e1534dafeb20dc7615d5f98386e125d682677ba",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ddffa418dc531ea84c81c4910f3adb129fbce120beaf2cbb568f52c7b83152c",
                    "size": 7026516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bbcbc197216a1fce77decd6fa364a50deb5912622a4ca0008e1e5ba6e3c4114",
                    "size": 466
                }
            ]
        },
        "38-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a476c5c12ef2560bd20e431de6e7f04a6e91ca0053619c3cb065d56ec6850e8c",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c8a07cf7e0a6610b389237666844a0c93f0042b105e99fc1128ba49157a7a8a",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c33e17fe4a960c76b12f34fd78f661a1e818432520307b00c7935866ab0623",
                    "size": 43688134
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5eaebb4c97c56647af86311d98554cace9891838bee9093423ecf3f101e5b1a",
                    "size": 473578
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee87f3843998a99a46c9560aa1d631660954eae2d583aca0eb974334f7b297f0",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8d38676405c3fa5b42b13ac40a2b44c68d9e5a8b71f40bcafdde8a8a8c17c95",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:556bf3cf41263f53c8916f59c8da3bd38d8d0af02e9f832ca81341fafb49683c",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ef0f1fe648699e4b93f679558b9d0e31bdd61320e7df39ccf0441adf648998a",
                    "size": 459
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d067aa437bb767321c728387befe53e921cbeee77fce429198959eaf8d7b1db6",
                    "size": 7055946
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:600bac187ca7ac8aae9508e3c0410970893118aad8602778afe81e651779533f",
                    "size": 467
                }
            ]
        },
        "38-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:831f57ecbe08d0680ff5e9e9ff2073a0e2b04dde6860f9e56ffc238ef16f4d59",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dedb08d7dd1514a69226cc6ab6f365a9a24b8942ea74e9f6503cd4c2d19eba53",
                    "size": 7058881
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70a913b379aa93593d2936f98528dee7c4c0409b88a27e099c7ef36892ff2875",
                    "size": 466
                }
            ]
        },
        "38-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1c6165611839383fbaae7606f52d33629bd8e8447c4f0d2cf90b41b2e6e1be79",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f977d6a742cee54d2797e8e7036482bb32744af4b77cea0d46a39dcc74eb484a",
                    "size": 7065156
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39875abd7f6a2143c203ab0174533c0a7092939f752a41216dd07205beb616c3",
                    "size": 467
                }
            ]
        },
        "38-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8a52f5a0c57aba58aca960ea0d9f7c1e5f5982638a876de2a600f67f988cb48a",
                "size": 7562
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98497adddbae4de490fcc1d04edf735aec4a83cbc9ba5af1f1e65fbde562983e",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6360d6ec9ad08998c00390ca47a7bd8cc87409fcaf713afd73b689b918b01438",
                    "size": 43774660
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:055af6a5333deae0eff8ae00dac4ea238156b511fe973fabe60f028c580994a2",
                    "size": 226660520
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01daed6b4313e6915e63f67b4c51191e2e74999bd73c3c6e7a177fdd969e2568",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f2510c732d5e8c6d4f2659881c9a3563b54b4a0c18c278a0a1cd35cfdc6c8f2",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e9ff13c8e735763b572fac974b254a92ff8ed58829c7c45b30ee881dc470bc9",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0bb6ea75d932375589b31fb55875c485ea7731e58b798bd4b6d897c59b1fd84",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:47114f532225fca85828e20ee26ed3b91cb32c3702011f7a59618389bb5e5f9c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee716cc46d705c29a68a7cbd80ed7628d5a2b3d9397ba960f7034e42eaac22e4",
                    "size": 15286594
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9df56e14af8221708fbc315aa2cdd89fe4616babef1a47112ba2a53c8049847",
                    "size": 467
                }
            ]
        },
        "38-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7b190110068a4e7df1ed3be2ef94bf4673100e579887ca6b64a5c0061f9445cf",
                "size": 7580
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a959596924082edfa799128bafb3725cbbbaff1735bff3a18e2530fa3f40911f",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2d440bd27a5625de567075e0fe762e042a2e6048ac4250d1b95036e48134cf4",
                    "size": 38655023
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e28cfc79d1bea0dc753f24603ea064a85f05611f6824d06a4e2c6fe360f57069",
                    "size": 226528739
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfc9560a04191c0b1e05974b8f878daa54430455dbc13b3bab7c414b08f1d8e8",
                    "size": 473571
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64347769f50f36376ab908c5c80600f6a7409c8d48880aaf03f30ce46d670d71",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b55185618671bced84a3f40db84e13ff8036402ddd3a373ed399c05ec9aca931",
                    "size": 276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca1a0f949fd966d277e8ac54559890aaf1f40586ed38cd2251809fb900955043",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b96b475b2fee5d9453522951ce6301c0362efcb1025d15fc6796711ba2e6fb4f",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f4025ba84cc53c18bae640839d4ca6021902a6add510ef4062d1a5bbed6d3f0",
                    "size": 15261600
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c5117a1606cd44d514ba4ac784f57452f325edf4143e4e9b3537f4be288a3c4",
                    "size": 466
                }
            ]
        },
        "38-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f3586bf02d6319bbdbbb9383c9c08cd354aeb3824f43877c27bf8ac9abad9858",
                "size": 7582
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:953f1ac2fc695d00b8cb596f3d65fe80f70f5271005525597dca0507b6c0241a",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b13d79b02a136ed18da662852eef9383d30ad41c5d30fdb3c1921bea393862e",
                    "size": 38655068
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19c9f12ffe707bd1798e044978b8884b2434a602e5e76f85a909549ee14764d5",
                    "size": 226548393
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3dbceebd6f97de98353f0ba6238437790b45bdc083332ebe5fbaa0a96d283a09",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00fbb58f64a60f59883f14c6038254756c7c35c451cdf584fc518b712722c291",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04aea93dd22d5e071b67ad766ec9facb57f3ebbd5d16f8e8b276091ed5854aad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dab2639b751995f8a5c885ea0152e4ebb6fa69e2accb6e31ca54c88963be414b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:481c6fb71f9d659dcc9dd7a617d53cb2c1516a45ea697ab4753a513ef922dfa4",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d76a427581e2e20da774acb61443593c0545cec098e0fb01571f1ef8ab02589",
                    "size": 15260693
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d08da51227ecc59cf73120c8f9b36a7f27d218062fc9fbe7ef206ba15a6c833",
                    "size": 467
                }
            ]
        },
        "38-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b9dd49e2e99ab36155a8fb07a6c311685e398801db21ecec92560c8b44737d47",
                "size": 7566
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b779f45ea316a3231c479d69fdb7560e47194490fbf9217210d8a271cc746732",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55605f1089f3b87325f06254c4d7a03eeb71871c57364acaf50b8f40fab2c10f",
                    "size": 43688152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34ff44b163eff62c9d558c657a41c4b56ffde46fdb3693e27faa0b0193b3d10c",
                    "size": 226441351
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e64d263f6c53c0eb520510fb0fbf71a332cb670773609e11d97e850059b8c2d6",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ad1d9af600b3b6fd4c1006aa08787bc8c8f46c116efa3d8b793c04f4c24c4f24",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a3a47fa3a1545256930e5f618f84f762d43369005a9cda3b597dda27d1d1e1d4",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:35a02201e807e373dd496b80c01b5987887717815a538ffb7fb23ca0b5256cea",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc4306fda37b5454d8a79d3fac814cae1b4f05a0eefc5a4285a7ac0058447e19",
                    "size": 459
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3751e59393b1452d407d22b01ae56135df58521b591d6380b672c92a0535c947",
                    "size": 15260068
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7ab012c73518f8216d05ee430e4bbe867f0139210087a0e00ebfd0bb3fe0784",
                    "size": 466
                }
            ]
        },
        "38-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:125acd116fb1f7dc3891a9f1d76c8b181b08c13c8be35badd83cac7b6c9a94e0",
                "size": 7564
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98497adddbae4de490fcc1d04edf735aec4a83cbc9ba5af1f1e65fbde562983e",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6360d6ec9ad08998c00390ca47a7bd8cc87409fcaf713afd73b689b918b01438",
                    "size": 43774660
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:055af6a5333deae0eff8ae00dac4ea238156b511fe973fabe60f028c580994a2",
                    "size": 226660520
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01daed6b4313e6915e63f67b4c51191e2e74999bd73c3c6e7a177fdd969e2568",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f2510c732d5e8c6d4f2659881c9a3563b54b4a0c18c278a0a1cd35cfdc6c8f2",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e9ff13c8e735763b572fac974b254a92ff8ed58829c7c45b30ee881dc470bc9",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0bb6ea75d932375589b31fb55875c485ea7731e58b798bd4b6d897c59b1fd84",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:47114f532225fca85828e20ee26ed3b91cb32c3702011f7a59618389bb5e5f9c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7321a299447eb5f3aa007af6997928e915c42add762c8361987e0dd1571edec6",
                    "size": 15277245
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d55fe0ff1bc23c0315cdfb6ef06ed0bc5125d8367ccf4b252aace4039c346f37",
                    "size": 466
                }
            ]
        },
        "38-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8a52f5a0c57aba58aca960ea0d9f7c1e5f5982638a876de2a600f67f988cb48a",
                "size": 7562
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98497adddbae4de490fcc1d04edf735aec4a83cbc9ba5af1f1e65fbde562983e",
                    "size": 2592225
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6360d6ec9ad08998c00390ca47a7bd8cc87409fcaf713afd73b689b918b01438",
                    "size": 43774660
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:055af6a5333deae0eff8ae00dac4ea238156b511fe973fabe60f028c580994a2",
                    "size": 226660520
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01daed6b4313e6915e63f67b4c51191e2e74999bd73c3c6e7a177fdd969e2568",
                    "size": 473572
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f2510c732d5e8c6d4f2659881c9a3563b54b4a0c18c278a0a1cd35cfdc6c8f2",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e9ff13c8e735763b572fac974b254a92ff8ed58829c7c45b30ee881dc470bc9",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0bb6ea75d932375589b31fb55875c485ea7731e58b798bd4b6d897c59b1fd84",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:47114f532225fca85828e20ee26ed3b91cb32c3702011f7a59618389bb5e5f9c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee716cc46d705c29a68a7cbd80ed7628d5a2b3d9397ba960f7034e42eaac22e4",
                    "size": 15286594
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9df56e14af8221708fbc315aa2cdd89fe4616babef1a47112ba2a53c8049847",
                    "size": 467
                }
            ]
        },
        "38-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1c6165611839383fbaae7606f52d33629bd8e8447c4f0d2cf90b41b2e6e1be79",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f977d6a742cee54d2797e8e7036482bb32744af4b77cea0d46a39dcc74eb484a",
                    "size": 7065156
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39875abd7f6a2143c203ab0174533c0a7092939f752a41216dd07205beb616c3",
                    "size": 467
                }
            ]
        },
        "38-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e0e4a3bf20ee4b4297864a7cd492064f3db196949886e912d0fa990b8668d2ac",
                "size": 6820
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e590c6dbdc96b1cdbacfe1edf9c0cd1a8d274ab9f64fcc727a9b8e531dd2cd4",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7adb706717b650f823b13f7c6bb4c282be1a52690199e6f455cfb30d5cbca021",
                    "size": 38654943
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:423d419b6640476cb76b200c9f282eeae646a2e6cfecc2031156e13b9dad4b7f",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ac9f745039954e9a75bd5b770563cf3125dfa45774358751a883b41f6055e6d",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f26142fae26d26aef024cc33f49b3ed51f70b996d1d2dd77338eab55f74f6971",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6dc59657604b207e982b92ee10c9209906db18c87aeac61679b4b9713931a9a6",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5996e90f577025eb8a85d74dbbda6775db92ab5af6b03561273305fc0d42d737",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6be1c54a2668c6916c33b6131c9da7898e38c4c3785609664aa3089cb51be982",
                    "size": 7025921
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f840572617d7b441a8291e60daafac496679a97e7be20db57b462666068b519",
                    "size": 467
                }
            ]
        },
        "38-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b0cfc69c19bcd29a5c80c027852c20a6520c27e174ef9be252dbddaa9a743132",
                "size": 6822
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:79b599003222175835e1970954e9519145d402578af3b20e11f3ca2cf50f9fd1",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:735b184569da057a3a27ffc4e0458248f8683681c2b5aaf874f8a86e0c6a7e52",
                    "size": 38655023
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:225147945e23054c0b9d4ecc254f42c0cfd7dd6414e8bc13cb2fa054d95600d4",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46dfb557ffde70435f342251cdac53f7ba6b7047f858c4fae563553aa7d9deb5",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e1edb9a59a184f87f5dad7580e05bfb45f04c855962693b34d0ac28e0794b9a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1b94eb18edf2c26967fed53ec8bd49d33c18b0432078cf67640436e7923552c",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68bb8a514653a6465e96d23a3e1534dafeb20dc7615d5f98386e125d682677ba",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ddffa418dc531ea84c81c4910f3adb129fbce120beaf2cbb568f52c7b83152c",
                    "size": 7026516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bbcbc197216a1fce77decd6fa364a50deb5912622a4ca0008e1e5ba6e3c4114",
                    "size": 466
                }
            ]
        },
        "38-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a476c5c12ef2560bd20e431de6e7f04a6e91ca0053619c3cb065d56ec6850e8c",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c8a07cf7e0a6610b389237666844a0c93f0042b105e99fc1128ba49157a7a8a",
                    "size": 2592232
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c33e17fe4a960c76b12f34fd78f661a1e818432520307b00c7935866ab0623",
                    "size": 43688134
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5eaebb4c97c56647af86311d98554cace9891838bee9093423ecf3f101e5b1a",
                    "size": 473578
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee87f3843998a99a46c9560aa1d631660954eae2d583aca0eb974334f7b297f0",
                    "size": 1010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8d38676405c3fa5b42b13ac40a2b44c68d9e5a8b71f40bcafdde8a8a8c17c95",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:556bf3cf41263f53c8916f59c8da3bd38d8d0af02e9f832ca81341fafb49683c",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ef0f1fe648699e4b93f679558b9d0e31bdd61320e7df39ccf0441adf648998a",
                    "size": 459
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d067aa437bb767321c728387befe53e921cbeee77fce429198959eaf8d7b1db6",
                    "size": 7055946
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:600bac187ca7ac8aae9508e3c0410970893118aad8602778afe81e651779533f",
                    "size": 467
                }
            ]
        },
        "38-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:831f57ecbe08d0680ff5e9e9ff2073a0e2b04dde6860f9e56ffc238ef16f4d59",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dedb08d7dd1514a69226cc6ab6f365a9a24b8942ea74e9f6503cd4c2d19eba53",
                    "size": 7058881
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70a913b379aa93593d2936f98528dee7c4c0409b88a27e099c7ef36892ff2875",
                    "size": 466
                }
            ]
        },
        "38-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1c6165611839383fbaae7606f52d33629bd8e8447c4f0d2cf90b41b2e6e1be79",
                "size": 6807
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3aae694a5eee87d89f05e7d069add3611bfac3b1f9488446d9f484e00e268258",
                    "size": 65655494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3a29097b88d916c4c9d4805b3b5006a58f8f232c1035ec25a81757fce450681",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b4fe12d3e79f34600efc5ecc27cd450141a6e551a379ebd5833b8b8aa425bcd2",
                    "size": 43774767
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49bf492858ba01f4e87111272605ed1e297c655e4dfcd99e48f9bd2721786069",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b2a1a7222acfa84d0d257c56a93f843e3803c86dc363c2e3fd13a1d32356a0",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a53a0ba073aea6cca6c67d729e1693383253ae45368d5abe2474624275f679",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcc229854562155539218cff0ebf1c5265ef1bd70adc2cab474f6567ff358ec8",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9037230e582ab47d63fb807ca5b6188b4b74053f5a1133ecec9fc1ff4fe40080",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f977d6a742cee54d2797e8e7036482bb32744af4b77cea0d46a39dcc74eb484a",
                    "size": 7065156
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39875abd7f6a2143c203ab0174533c0a7092939f752a41216dd07205beb616c3",
                    "size": 467
                }
            ]
        },
        "build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:280a6cc604da88fdbf6dbddc0defcaea8519fb204ac5c840fcb90882cc5d13d6",
                "size": 7562
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d0b410fa120fedd78823da0a1a8036726e4ca85ec746a1f7e1beac9a6a05f2f",
                    "size": 14184671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f75d992c12df6eded2d1e2690c87ade44a0b6d61c3a812ec7c8c30e2d3ba93a4",
                    "size": 467
                }
            ]
        },
        "build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8b4824575786040bf22e45cbe85d10f2fae37ec70497b879b25855ca5d7a1468",
                "size": 7581
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65764d35c6ba7bc01cd8c1c7c80dedd0fba41e8aed4fe20f32b8104e40811b27",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ccb26de59532c7a3ca4e330f6259f0a22d5502c63fce64953cfb835da2a89232",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dbffb8cd0d199db9da89c0a8f6be633d403ae9577895ef76ed8559e0e6a2fce6",
                    "size": 217030397
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2cdbf2b50a12d0c904c51a1aa6a78d769e31ab23e681213a8dcd625845a43fa",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:caf29b48f9a19f9f082026316d26fb42e73b1f7a2585ff1f86457c794c8ca68d",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:821dddb4fbe51867593b530bacd209ea5cec4104a56beb6362389970d19aaa68",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0fa218cb0068ba037fef0d258fb86dfbfed2c4590d7b39e86733b5c8b69f61b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d68feee9a64aaf2316e4f6f65cdc6fbf9e80169d4bf9cd0152c507a525b3155",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5f6daa14f5184ade819712034765bf02e8647a83d95d87af11d62f0c9892dd7",
                    "size": 14185016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3092cf62a46ea2a92d9b1e483630466d9524030ceeef8551ced1e5ff31f4c3e2",
                    "size": 466
                }
            ]
        },
        "build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:31a76709e0262a650492734670a9c1a044d0bc5676e1ffec504438c9a451af6a",
                "size": 7581
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:365c152eab29768a6002cd30191cfe30aa5a9c7670afb3dd05e5568d60598b53",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cfac25b66436aaad9254043374a8a0bce94c1fcc73328f0009e4c633a489dab",
                    "size": 23448738
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec58c8baedb56f03697759c56cc8b52846aa6b359079d478ffe547bd11683f2",
                    "size": 217029920
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5ea14a5b029f6e9168ba600f7829994ee94710831ae531cc8575103cb5f9076",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b5e5aded2a12ddea2c899e597f6b276bdbb070022f582eb5ffef5eab6706f4c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fdfe10b79cf925c4a4f205beee5164056995aa8d5d10cae49aeae14093d612d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:563ad2bf80f0e61e8048e26e2680eceb622c9b84a0e9b242dc26a7272ef9ee62",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87d42fc86fb1bef824e1ec397f2adeb648ebde6cb39d75fa5d79da952fead6a4",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77b0a04744387cdf69e4c8df859d8fe4405221e6e17aec07188562646a25d8ac",
                    "size": 14185010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2acc7c62876d1c911984e55fe2e227afd16e1b1eea77298f3440d514d847d4bd",
                    "size": 468
                }
            ]
        },
        "build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a0cc14dd80c3f3a2c4dcd52486285c96f51c572e0da833fa2ce75288212d71b3",
                "size": 7562
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3a4176e53d7e5697395953f42ef76b08d9fef8fe5a662a442cd4f13740c7a1d",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1d05a709ad59f905b2bb738079267053a09a0f4f535e32192bcd83e0dce163c",
                    "size": 23448641
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f3f5fce4a1b94b586b0523b225e6b5436e9dd40567f898aaaffd4c2302a2399",
                    "size": 217029391
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de3c36bd181e84497d428d49b10abc3694cd9a0c75ec31064623d54cb4f8c211",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:565296760a52acc955f0523e8e8213020ff97bec4df095452a9633f053cb710d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf3fbff6d013e83413ee8ed775faa0f5e3350e9b987d24b28cb8715ea67d31ed",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363ad41c733c6b3e9c7a4610329a637d3d876504b93320bb9b4612bba294335",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38693fb89d5d2d6143564a7b4bd2d1c7da21077550cbe4d5e8a7ec5096625ff1",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ef758421fa58665a3d5de128ce0f2683804640b818a43efdff89d070be3087a",
                    "size": 14184589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42fcdadf750c68ad4a8f379baa4778dbd5d2e3f62aa9be1a7e9b7af78326e754",
                    "size": 467
                }
            ]
        },
        "build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:03bb17ab075d33cce9cc3c39147b506d78a5e1db519a154b83dda6fb398ff210",
                "size": 7564
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e54c1365f15bf88b17ba38f79d2a428ac06b2fadf6f6c91f27bb25c858dbc60",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:017b908d94c1c349a53970523ee7a139bef37f34ad362e03d6bec2d726504a0d",
                    "size": 23448703
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b5c50d01e785c4728ab89718fa8aaa45a81c0af2408ac0cc79f3ee163c253bd",
                    "size": 217028541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d83e2fae00f6ab84a73baecccee1b9773d59ae4b450a12e360a5effca4944ac4",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fadda5faf2fcc02b62f25d0f9c548bc0d5c1abdeda6da2328fc79ddb5b8b91ca",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1e9b66fa7cafdd2423279eb1c13f4052734fd9472c334ca49bfa60216bfccc8",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cbd57e7f4360c9cbeecd7408e549686853d4c97c491b59f4d07d320805ce98a",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4759f7eafc183e7e416b2fb6e564ecd7cf14425e5e7ccad33b50b3ea539f38e",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4394a283878a1770c1c364972ad93fcec69c6b2ee717738662365ca76104ac6",
                    "size": 14184727
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b216ebe446d57197bb871954e378a34a0f94addff474c4050a1fb84399fd177",
                    "size": 467
                }
            ]
        },
        "build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:280a6cc604da88fdbf6dbddc0defcaea8519fb204ac5c840fcb90882cc5d13d6",
                "size": 7562
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d0b410fa120fedd78823da0a1a8036726e4ca85ec746a1f7e1beac9a6a05f2f",
                    "size": 14184671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f75d992c12df6eded2d1e2690c87ade44a0b6d61c3a812ec7c8c30e2d3ba93a4",
                    "size": 467
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:69130cc7aa91d147ed6205efec9666c8f9ad0b90c1aa1b12e3c626a91b669fd4",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca12228c4df9ecb56c55043ba57342c512cca137b6dab6d78071eac9d6f81ec8",
                    "size": 6663516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d545636dbc59afd9ab092841d0dea999d5e2f173f81b41d35d6edbcafb3f0347",
                    "size": 467
                }
            ]
        },
        "latest-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3e7915b5948bc4ac07857416dbd8bbe4cb03a8f1e2bc5507eb43fbd098787029",
                "size": 6820
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb6ff1e94a638d9a7ffb68805fe7503c8da20696cb6293dcae057d79a71ca50a",
                    "size": 6663417
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3601bdfc491c4b65a9d9e62d1a922480293f8b36617b01da1ef70e4e86bdfb5",
                    "size": 467
                }
            ]
        },
        "latest-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:599e18af61d18af910f624f62b7fc9b38ad7d6a2cea0158fe4ed220ec989f0b9",
                "size": 6820
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5d763b7498ea8bda343628cb3364285ec0649d3986dff5376705ac44eba4f3ec",
                    "size": 6663583
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e58952a17b2aefbe81e28ca0571340e75ee2b6d84f80d618425eff6706af655",
                    "size": 467
                }
            ]
        },
        "latest-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:01ee56267fdd8da9ba9ebd4bc7d41e776fba89350535cf09825507c68cc2f1da",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fb5c3095da6a78b27f64dd01bf07b7511474f59bd4f3bd5cf1e49d9925fb9d8",
                    "size": 6663588
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fedd9952b2995f2b8ae4a5d17f85f6febf8cf97c217d0b0d08875ec671732ae",
                    "size": 467
                }
            ]
        },
        "latest-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d4bb89489f68a81943fc4f336b1d6b08c43bfec26e6996f85d8264d870bcf94a",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6cd4154677d67f36e5e346d8f301fb2d7a795e0179018437a64240e284e2dcf",
                    "size": 6663940
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f08a29bc4c908d16b7c53563ac04829b4303263c17bc4ccecdaa8afe75d15d70",
                    "size": 467
                }
            ]
        },
        "latest-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:69130cc7aa91d147ed6205efec9666c8f9ad0b90c1aa1b12e3c626a91b669fd4",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca12228c4df9ecb56c55043ba57342c512cca137b6dab6d78071eac9d6f81ec8",
                    "size": 6663516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d545636dbc59afd9ab092841d0dea999d5e2f173f81b41d35d6edbcafb3f0347",
                    "size": 467
                }
            ]
        },
        "latest-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:280a6cc604da88fdbf6dbddc0defcaea8519fb204ac5c840fcb90882cc5d13d6",
                "size": 7562
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d0b410fa120fedd78823da0a1a8036726e4ca85ec746a1f7e1beac9a6a05f2f",
                    "size": 14184671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f75d992c12df6eded2d1e2690c87ade44a0b6d61c3a812ec7c8c30e2d3ba93a4",
                    "size": 467
                }
            ]
        },
        "latest-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8b4824575786040bf22e45cbe85d10f2fae37ec70497b879b25855ca5d7a1468",
                "size": 7581
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65764d35c6ba7bc01cd8c1c7c80dedd0fba41e8aed4fe20f32b8104e40811b27",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ccb26de59532c7a3ca4e330f6259f0a22d5502c63fce64953cfb835da2a89232",
                    "size": 23448765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dbffb8cd0d199db9da89c0a8f6be633d403ae9577895ef76ed8559e0e6a2fce6",
                    "size": 217030397
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2cdbf2b50a12d0c904c51a1aa6a78d769e31ab23e681213a8dcd625845a43fa",
                    "size": 473575
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:caf29b48f9a19f9f082026316d26fb42e73b1f7a2585ff1f86457c794c8ca68d",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:821dddb4fbe51867593b530bacd209ea5cec4104a56beb6362389970d19aaa68",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a0fa218cb0068ba037fef0d258fb86dfbfed2c4590d7b39e86733b5c8b69f61b",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d68feee9a64aaf2316e4f6f65cdc6fbf9e80169d4bf9cd0152c507a525b3155",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5f6daa14f5184ade819712034765bf02e8647a83d95d87af11d62f0c9892dd7",
                    "size": 14185016
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3092cf62a46ea2a92d9b1e483630466d9524030ceeef8551ced1e5ff31f4c3e2",
                    "size": 466
                }
            ]
        },
        "latest-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:31a76709e0262a650492734670a9c1a044d0bc5676e1ffec504438c9a451af6a",
                "size": 7581
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:365c152eab29768a6002cd30191cfe30aa5a9c7670afb3dd05e5568d60598b53",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9cfac25b66436aaad9254043374a8a0bce94c1fcc73328f0009e4c633a489dab",
                    "size": 23448738
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eec58c8baedb56f03697759c56cc8b52846aa6b359079d478ffe547bd11683f2",
                    "size": 217029920
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5ea14a5b029f6e9168ba600f7829994ee94710831ae531cc8575103cb5f9076",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b5e5aded2a12ddea2c899e597f6b276bdbb070022f582eb5ffef5eab6706f4c",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fdfe10b79cf925c4a4f205beee5164056995aa8d5d10cae49aeae14093d612d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:563ad2bf80f0e61e8048e26e2680eceb622c9b84a0e9b242dc26a7272ef9ee62",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87d42fc86fb1bef824e1ec397f2adeb648ebde6cb39d75fa5d79da952fead6a4",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77b0a04744387cdf69e4c8df859d8fe4405221e6e17aec07188562646a25d8ac",
                    "size": 14185010
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2acc7c62876d1c911984e55fe2e227afd16e1b1eea77298f3440d514d847d4bd",
                    "size": 468
                }
            ]
        },
        "latest-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a0cc14dd80c3f3a2c4dcd52486285c96f51c572e0da833fa2ce75288212d71b3",
                "size": 7562
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3a4176e53d7e5697395953f42ef76b08d9fef8fe5a662a442cd4f13740c7a1d",
                    "size": 2592234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1d05a709ad59f905b2bb738079267053a09a0f4f535e32192bcd83e0dce163c",
                    "size": 23448641
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f3f5fce4a1b94b586b0523b225e6b5436e9dd40567f898aaaffd4c2302a2399",
                    "size": 217029391
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de3c36bd181e84497d428d49b10abc3694cd9a0c75ec31064623d54cb4f8c211",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:565296760a52acc955f0523e8e8213020ff97bec4df095452a9633f053cb710d",
                    "size": 1013
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bf3fbff6d013e83413ee8ed775faa0f5e3350e9b987d24b28cb8715ea67d31ed",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363ad41c733c6b3e9c7a4610329a637d3d876504b93320bb9b4612bba294335",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38693fb89d5d2d6143564a7b4bd2d1c7da21077550cbe4d5e8a7ec5096625ff1",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ef758421fa58665a3d5de128ce0f2683804640b818a43efdff89d070be3087a",
                    "size": 14184589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42fcdadf750c68ad4a8f379baa4778dbd5d2e3f62aa9be1a7e9b7af78326e754",
                    "size": 467
                }
            ]
        },
        "latest-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:03bb17ab075d33cce9cc3c39147b506d78a5e1db519a154b83dda6fb398ff210",
                "size": 7564
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e54c1365f15bf88b17ba38f79d2a428ac06b2fadf6f6c91f27bb25c858dbc60",
                    "size": 2592231
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:017b908d94c1c349a53970523ee7a139bef37f34ad362e03d6bec2d726504a0d",
                    "size": 23448703
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b5c50d01e785c4728ab89718fa8aaa45a81c0af2408ac0cc79f3ee163c253bd",
                    "size": 217028541
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d83e2fae00f6ab84a73baecccee1b9773d59ae4b450a12e360a5effca4944ac4",
                    "size": 473576
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fadda5faf2fcc02b62f25d0f9c548bc0d5c1abdeda6da2328fc79ddb5b8b91ca",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1e9b66fa7cafdd2423279eb1c13f4052734fd9472c334ca49bfa60216bfccc8",
                    "size": 279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cbd57e7f4360c9cbeecd7408e549686853d4c97c491b59f4d07d320805ce98a",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4759f7eafc183e7e416b2fb6e564ecd7cf14425e5e7ccad33b50b3ea539f38e",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4394a283878a1770c1c364972ad93fcec69c6b2ee717738662365ca76104ac6",
                    "size": 14184727
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b216ebe446d57197bb871954e378a34a0f94addff474c4050a1fb84399fd177",
                    "size": 467
                }
            ]
        },
        "latest-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:280a6cc604da88fdbf6dbddc0defcaea8519fb204ac5c840fcb90882cc5d13d6",
                "size": 7562
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82317edea666666d707ace0b03aad8572e29a838bb12b4c4dfd016b2ab4ce736",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e5455188b6eb0cff89590382e7b0ecb02ea2b714d55bba2fa7dd06af5aec88",
                    "size": 23448711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d715dbac72a798e8d0d0ffba83669baf0bbc4da2276a5a381ac22d652d5e13d9",
                    "size": 217029439
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ff7cea49a20cad0aebae3fa3c701db7c3491385aea25f0e543cc59538fa5ee4",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5a769b6122b0d526950c3579d87d5664c827ecd65688a38c75087c4f80db959",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49c4a2084afc1da3b08c57198b9d7982cb4ad987197a29eb1c0b905a29331a4a",
                    "size": 277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4baaeb452bcc05b92b082e0b84e390a65c6e08ed28ef13295f9b16ba167a9c10",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8cba45c189962bae1d2ff247ddff62c95a79794bffefeb6283787d28c6b320ff",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d0b410fa120fedd78823da0a1a8036726e4ca85ec746a1f7e1beac9a6a05f2f",
                    "size": 14184671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f75d992c12df6eded2d1e2690c87ade44a0b6d61c3a812ec7c8c30e2d3ba93a4",
                    "size": 467
                }
            ]
        },
        "latest-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:69130cc7aa91d147ed6205efec9666c8f9ad0b90c1aa1b12e3c626a91b669fd4",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca12228c4df9ecb56c55043ba57342c512cca137b6dab6d78071eac9d6f81ec8",
                    "size": 6663516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d545636dbc59afd9ab092841d0dea999d5e2f173f81b41d35d6edbcafb3f0347",
                    "size": 467
                }
            ]
        },
        "latest-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3e7915b5948bc4ac07857416dbd8bbe4cb03a8f1e2bc5507eb43fbd098787029",
                "size": 6820
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb6ff1e94a638d9a7ffb68805fe7503c8da20696cb6293dcae057d79a71ca50a",
                    "size": 6663417
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3601bdfc491c4b65a9d9e62d1a922480293f8b36617b01da1ef70e4e86bdfb5",
                    "size": 467
                }
            ]
        },
        "latest-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:599e18af61d18af910f624f62b7fc9b38ad7d6a2cea0158fe4ed220ec989f0b9",
                "size": 6820
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5d763b7498ea8bda343628cb3364285ec0649d3986dff5376705ac44eba4f3ec",
                    "size": 6663583
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e58952a17b2aefbe81e28ca0571340e75ee2b6d84f80d618425eff6706af655",
                    "size": 467
                }
            ]
        },
        "latest-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:01ee56267fdd8da9ba9ebd4bc7d41e776fba89350535cf09825507c68cc2f1da",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fb5c3095da6a78b27f64dd01bf07b7511474f59bd4f3bd5cf1e49d9925fb9d8",
                    "size": 6663588
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fedd9952b2995f2b8ae4a5d17f85f6febf8cf97c217d0b0d08875ec671732ae",
                    "size": 467
                }
            ]
        },
        "latest-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d4bb89489f68a81943fc4f336b1d6b08c43bfec26e6996f85d8264d870bcf94a",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6cd4154677d67f36e5e346d8f301fb2d7a795e0179018437a64240e284e2dcf",
                    "size": 6663940
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f08a29bc4c908d16b7c53563ac04829b4303263c17bc4ccecdaa8afe75d15d70",
                    "size": 467
                }
            ]
        },
        "latest-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:69130cc7aa91d147ed6205efec9666c8f9ad0b90c1aa1b12e3c626a91b669fd4",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca12228c4df9ecb56c55043ba57342c512cca137b6dab6d78071eac9d6f81ec8",
                    "size": 6663516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d545636dbc59afd9ab092841d0dea999d5e2f173f81b41d35d6edbcafb3f0347",
                    "size": 467
                }
            ]
        },
        "run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:69130cc7aa91d147ed6205efec9666c8f9ad0b90c1aa1b12e3c626a91b669fd4",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca12228c4df9ecb56c55043ba57342c512cca137b6dab6d78071eac9d6f81ec8",
                    "size": 6663516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d545636dbc59afd9ab092841d0dea999d5e2f173f81b41d35d6edbcafb3f0347",
                    "size": 467
                }
            ]
        },
        "run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3e7915b5948bc4ac07857416dbd8bbe4cb03a8f1e2bc5507eb43fbd098787029",
                "size": 6820
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c9cb203b87166e0d09b81a8d1f5b49ea5bb80d37799c1ddd6d0f58f482ba0ca",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cd15d660a3890fbc117644cc7e00384e54cf47a86db50fb85d3e3924a3b6e0f7",
                    "size": 23448836
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69feda61e8a6a07d2f8173016c73ff91210e0484140825e75e597b45142b7ae1",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce20a220ec40b0412743b54d0120c434710d00f3b54a54502308b76efc9dd983",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d47f351240c88d3748188f2ef0e0b48f6e891509bebda6f18393ad51c6305e70",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe1a2b8c0123677dd17cbf5897edd521c063917ffff70729a2e1211219421c57",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f0bc84079738c7cb444a751732c831109078ebd828f39565c765bfc72f1e32d9",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb6ff1e94a638d9a7ffb68805fe7503c8da20696cb6293dcae057d79a71ca50a",
                    "size": 6663417
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3601bdfc491c4b65a9d9e62d1a922480293f8b36617b01da1ef70e4e86bdfb5",
                    "size": 467
                }
            ]
        },
        "run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:599e18af61d18af910f624f62b7fc9b38ad7d6a2cea0158fe4ed220ec989f0b9",
                "size": 6820
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1838771b8ec87483e105e112d8024f9e9029a53bae9d1ef0c34c061003181dfb",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9086ea61d95c1ab147c8270e5a9b1830e96d367d41663c7617ebb4b06043f2fa",
                    "size": 23448747
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e665d30b7799b95a1fefa213155d46f59fff56b68586082bf191741035863ca9",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca08035356a02b31523d0089c92c641151221e1163f6f69259640069fc93325",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1dbbb8991fb8ec274be4b21cf0c12fa2b72fea515b37daf96cee76915bf6a3ad",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a012ba1f4d0af3a86a253d6ee08223c9446a2cf6250bdab21f839ebc7d16354",
                    "size": 677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30495c77303f15af04a882c71d278cea6699924428092ff409840f02e3455bec",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5d763b7498ea8bda343628cb3364285ec0649d3986dff5376705ac44eba4f3ec",
                    "size": 6663583
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e58952a17b2aefbe81e28ca0571340e75ee2b6d84f80d618425eff6706af655",
                    "size": 467
                }
            ]
        },
        "run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:01ee56267fdd8da9ba9ebd4bc7d41e776fba89350535cf09825507c68cc2f1da",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:326b20e912351ee1cd36eb4928f89de7420c89cff4fe26170cede56d5b53defb",
                    "size": 2592233
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f39d9f2f25dbd3d6ef3ad45ac705c80b09499c0886ce65119c20d6fc0873f021",
                    "size": 23448664
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149aacaa82b179c640f96dd6fa65cb2df58f00055c9a94c3886a4906672573a7",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7514cd29789812983b2a947f44fce3f7bcce347440875a08883bcd9b53e739f",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b84039a432480f5ffe416931d3e349c4318c99332a368f259bac7fd40b1d2c5",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85dfe6b177a514d70942f90882fe77a64a24af14ef6f9f8be9f6e0ac8271c2d2",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75ac5a1c7aa9ff94b80b26d3cff3e1a67892548f05c0ca35405a77c861a15ab8",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fb5c3095da6a78b27f64dd01bf07b7511474f59bd4f3bd5cf1e49d9925fb9d8",
                    "size": 6663588
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fedd9952b2995f2b8ae4a5d17f85f6febf8cf97c217d0b0d08875ec671732ae",
                    "size": 467
                }
            ]
        },
        "run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d4bb89489f68a81943fc4f336b1d6b08c43bfec26e6996f85d8264d870bcf94a",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:689676ef4dfbe38a100ec0fd8bde8b49c700bedf04ca010d64d0e38e212b9404",
                    "size": 2592230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20de4a94e0f41f23dbdf295a23279b3082a2b94c36276a1517ff184d9dae8e62",
                    "size": 23448793
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba17861f514dbec43f4f00bc73113c6ead88d0daf01cd5af8c0468d2e6ee6d6",
                    "size": 473577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44561f9120b7b96b19381819ea39413a89fe135ccffbc8f4f6586ce34ddef54d",
                    "size": 1011
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6246de46784e0baf4fe4448538c5536535e1dd8374a16e2e22c5fb226e3f400d",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:008ed895bd8ec822f5bbb391c610f13b97036c9b6a66d8ad9815fcd75fe5517e",
                    "size": 679
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752a73f6143a147cf9dd80aa9e2296a8678cefd5393206c50f4df7a5303521d0",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6cd4154677d67f36e5e346d8f301fb2d7a795e0179018437a64240e284e2dcf",
                    "size": 6663940
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f08a29bc4c908d16b7c53563ac04829b4303263c17bc4ccecdaa8afe75d15d70",
                    "size": 467
                }
            ]
        },
        "run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:69130cc7aa91d147ed6205efec9666c8f9ad0b90c1aa1b12e3c626a91b669fd4",
                "size": 6804
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69fff380046369a47fbc74b0aa03f61fb243f73dc5795e3ecf69c6577ee84908",
                    "size": 63118399
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d67deff5c71a351663d4faf25c3b38f412142a31bca7a8d888c8821bfe5e18e9",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef089e78d846edbce27f2669c47ec3fcef142e589e1867ef5908636b93f70a1",
                    "size": 23448814
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2e3aa275cbb3a947522d3ea6580677ee9aa12d44c091352980066a1fb89bef8",
                    "size": 473573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f9e31015a5229413246198fe29fd337da9e65c8a8af3238c1f8824969f6e872",
                    "size": 1012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a3a2d6852cd0e1051942f064efb1ca5ed52209ef47cd0bf05a7e8752026738c",
                    "size": 278
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c8080aaea2aac7e2ff9499b2a0acda4cb7e625ee3cded157d534b54c647108",
                    "size": 678
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e138be9b56c798718197323eafa69ddc869347ebd57ddc632dd70c020d34717",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca12228c4df9ecb56c55043ba57342c512cca137b6dab6d78071eac9d6f81ec8",
                    "size": 6663516
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d545636dbc59afd9ab092841d0dea999d5e2f173f81b41d35d6edbcafb3f0347",
                    "size": 467
                }
            ]
        }
    },
    "tags": [
        "20240227",
        "20240304",
        "20240401",
        "20240408",
        "20240429",
        "36",
        "36-20240227",
        "36-20240304",
        "36-20240401",
        "36-20240408",
        "36-build",
        "36-build-20240227",
        "36-build-20240304",
        "36-build-20240401",
        "36-build-20240408",
        "36-run",
        "36-run-20240227",
        "36-run-20240304",
        "36-run-20240401",
        "36-run-20240408",
        "37",
        "37-20240227",
        "37-20240304",
        "37-20240401",
        "37-20240408",
        "37-20240429",
        "37-build",
        "37-build-20240227",
        "37-build-20240304",
        "37-build-20240401",
        "37-build-20240408",
        "37-build-20240429",
        "37-run",
        "37-run-20240227",
        "37-run-20240304",
        "37-run-20240401",
        "37-run-20240408",
        "37-run-20240429",
        "38",
        "38-20240227",
        "38-20240304",
        "38-20240401",
        "38-20240408",
        "38-20240429",
        "38-build",
        "38-build-20240227",
        "38-build-20240304",
        "38-build-20240401",
        "38-build-20240408",
        "38-build-20240429",
        "38-run",
        "38-run-20240227",
        "38-run-20240304",
        "38-run-20240401",
        "38-run-20240408",
        "38-run-20240429",
        "build",
        "build-20240227",
        "build-20240304",
        "build-20240401",
        "build-20240408",
        "build-20240429",
        "latest",
        "latest-20240227",
        "latest-20240304",
        "latest-20240401",
        "latest-20240408",
        "latest-20240429",
        "latest-build",
        "latest-build-20240227",
        "latest-build-20240304",
        "latest-build-20240401",
        "latest-build-20240408",
        "latest-build-20240429",
        "latest-run",
        "latest-run-20240227",
        "latest-run-20240304",
        "latest-run-20240401",
        "latest-run-20240408",
        "latest-run-20240429",
        "run",
        "run-20240227",
        "run-20240304",
        "run-20240401",
        "run-20240408",
        "run-20240429"
    ],
    "configs": {
        "20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:30.462909864Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:30.351739387Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:30.351739387Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:30.462909864Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:9e033e761075715bfea9229a9809aa04de0eb02d1adf417fda84fe5053776cdf",
                    "sha256:f7d988453b1073c2a27e138db65db955cceccec423a703213853a45d8df812bd"
                ]
            }
        },
        "20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:48:47.996999801Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:47.881285875Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:48:47.881285875Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:47.996999801Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:a48a9047b99b4fed48db6d61520b41d2a7d5eb29a6b5bfd91d5357118401fb5c",
                    "sha256:569d0c33cf6013b10b3937ff0c18647cb74aaba0eed8261d02a75eddf55a2fd4"
                ]
            }
        },
        "20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:54.66085349Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:54.533560067Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:54.533560067Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:54.66085349Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:e671defd1d87e6b01175a50f5b09f0f371822f247fc2e3ff20533488e0706896",
                    "sha256:31ee949871c8f85a026ea3b82650659b691c7f9072c35baab9888c92a85f28fb"
                ]
            }
        },
        "20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:50.06167754Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:49.941507937Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:49.941507937Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:50.06167754Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:5a1a4b9864685cbb29b0dafc02adfd605127c9bd5a6c8adeef656cb017fe232b",
                    "sha256:572c7e4cda8c9a9cc99f38c01b1c73f134067ad73750dbf65fb33192d1c22bef"
                ]
            }
        },
        "20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:21.73106563Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:21.602549209Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:21.602549209Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:21.73106563Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:bf8d6c0a39730c49e32cfef960f349453924434ae30e38e85cdbe4e44d958031",
                    "sha256:ea2b2524e1b2dedcbc243c6cf6a173ff54579385e8687c3493864015215f3f2f"
                ]
            }
        },
        "36": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:16.337427267Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:48.382975748Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:49.114498269Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.160258289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:52.904600449Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:53.038869737Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:16.220113811Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:16.220113811Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:16.337427267Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:96e8237f4a277db04c955fec05200b74f0da4fc11acef6e970444aa8d1ac4877",
                    "sha256:eebacd7727dd5f1adf1a458419bda175ca082cd8b48b6f5ab3162ceac82ead68",
                    "sha256:6847feafbfe5a6b06d1a3180b2725497fd90858670af4d7e07d859032794fee6",
                    "sha256:2329dcac2e30f4e2a05e85f5b8dbaa8227ee8eb85ef825dd7ac0cb8fad9571fe",
                    "sha256:ca51ce238f812d151cfee4e045e109e016d9a7f7d83543fe8f0f508ebc62399e",
                    "sha256:eaa4fd10880c293c373fc3aa5f36e6d0b2267661144b4b50b13423abdc65b432",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:57d8577708926141837b5cef818df1c257b9d966cce81182c4fbc54c0cf82336",
                    "sha256:81d70fd9bd97c2fa85690bd5d68f18820386bf1bf1f5a87e9b1ac58c7292717b",
                    "sha256:77312332560c81c4d22000cb45e8badb260725d9b05c4b58445bc862375a1eda"
                ]
            }
        },
        "36-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:22.625020601Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:19.727432623Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.493667027Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.493667027Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:20.504558637Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.53410244Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.54393228Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.54393228Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:24.266191717Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.405560095Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:22.507020502Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:22.507020502Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:22.625020601Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:e864a5fd5a85ea7de7c429ad3786adc43add7b3bad7605a5267f71b74ef4f46d",
                    "sha256:f9745bfda56c8769e29c7fe4418ec400bda3547d6f7e2b94cf1578c853decfb1",
                    "sha256:3b0bb44987d7ed3bb758a262b1cdb5cc89a8bb7caa6cf17d171ec9ffab456784",
                    "sha256:b668db57138d2f4d3a3a4fe2a4fca77d7a33a1147ea5193bc7f088a29bc3df6e",
                    "sha256:4fb9cef9cd8dfd649c46b33c2804e0ed65b39895160fd2940fa1e823a207137b",
                    "sha256:bf049f60667eee7c3ab494a865bbe46c948b2953f52aa4768f5eeb0ab3e7035f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9c4d3515b2ac6333e066ae20a1676f1c14cfa2e4013e83e034c0bfd5bce0137e",
                    "sha256:0927e7723903f825f1856b6b0e311a1c7e085f96094d31d321812d6314579fdc",
                    "sha256:e590d3d5e1482f984d41844be854e072d1b307eb3cb6a7c03902484eecb9b81f"
                ]
            }
        },
        "36-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:48:43.175661838Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:21.859759897Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.326242746Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.326242746Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:42:23.336383154Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.346622195Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.377651932Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.377651932Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:42:27.266843534Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:27.402142548Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:43.049257188Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:48:43.049257188Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:43.175661838Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:b59a6b5e1477f2c1760b9fafd534430e1b3e627940f206e2a912fc7cc99e8b5f",
                    "sha256:9d921ab8193391974ec2825bcb16b8687c1a495d839300d5976a46254f5cd319",
                    "sha256:357859910e787423ff442861725cd291a1d55ae5384cd316b21cac31999aed1e",
                    "sha256:41fb44363c3ee3098b05a3a643a8fe49f2a04b7ad67bcadf125aa1c2114bfece",
                    "sha256:34423e69f4515ba4a00b47bbfdf43063c6c1a46f6ec4f63ccb4a8f263d2854b1",
                    "sha256:2fcd075d152d2c1213ae41f4155e55bdab5602455031af70a1d006c325b4f722",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d6c771aa19b713b8429a249e0328e601b8714348b76f00b828e7ae21393eedba",
                    "sha256:6561b111418513b33b8cbda47a421ac8433af8a0b97caa53634afb41d8d14200",
                    "sha256:d08986036547d9d0492af5274842cc7037a0b2e94b81aba5ffcd5ec48b2c81b0"
                ]
            }
        },
        "36-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:25.477074112Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:06.484116098Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.353362908Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.353362908Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:46:07.362716446Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.371056132Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.40557557Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.40557557Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:46:11.057940603Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:11.196274302Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:25.352000968Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:25.352000968Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:25.477074112Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0bcb93467a71db1d91f97206ca3d53ef7ed8325e886870c4f93254125506ccaf",
                    "sha256:ee5232de64f68e282c5152a2cf1ee54bf9a7144c661bb3f52975ed782c2f34c5",
                    "sha256:b5750ef0a3421417ee1aa11017b9e9cf5c58cb301c449b82d5c1db7ba06a1245",
                    "sha256:9e654b7993325650e6bdfe739d4519434ff8635d924db824318bd59c3052690a",
                    "sha256:6e0af07b0964b4201fcde2932ac07b59991415f655867d6e2b04e392114e6ef1",
                    "sha256:1a3e17d9bd0848c60750171e33d97cb75a1915a92f35b4c29e2e8e8088cbacf3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d024288ac0c97e8389226f634bba57c43cfd5b66544ada9f536ae4dc909264f6",
                    "sha256:f1e3f8362be9a0140e56c063b888dfb7cb82249aedb64169450e15f55e2332f9",
                    "sha256:c60927dcb030c7130b89540a17797dde0843062675f5b35a0b17185388f433eb"
                ]
            }
        },
        "36-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:16.337427267Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:48.382975748Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:49.114498269Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.160258289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:52.904600449Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:53.038869737Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:16.220113811Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:16.220113811Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:16.337427267Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:96e8237f4a277db04c955fec05200b74f0da4fc11acef6e970444aa8d1ac4877",
                    "sha256:eebacd7727dd5f1adf1a458419bda175ca082cd8b48b6f5ab3162ceac82ead68",
                    "sha256:6847feafbfe5a6b06d1a3180b2725497fd90858670af4d7e07d859032794fee6",
                    "sha256:2329dcac2e30f4e2a05e85f5b8dbaa8227ee8eb85ef825dd7ac0cb8fad9571fe",
                    "sha256:ca51ce238f812d151cfee4e045e109e016d9a7f7d83543fe8f0f508ebc62399e",
                    "sha256:eaa4fd10880c293c373fc3aa5f36e6d0b2267661144b4b50b13423abdc65b432",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:57d8577708926141837b5cef818df1c257b9d966cce81182c4fbc54c0cf82336",
                    "sha256:81d70fd9bd97c2fa85690bd5d68f18820386bf1bf1f5a87e9b1ac58c7292717b",
                    "sha256:77312332560c81c4d22000cb45e8badb260725d9b05c4b58445bc862375a1eda"
                ]
            }
        },
        "36-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:48.006638518Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:11.154952948Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:01.602172722Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.669154565Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.669154565Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:28:02.678110994Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.717145907Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.725640524Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.725640524Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:28:06.421086055Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:06.57556925Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:47.864918256Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:47.864918256Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:48.006638518Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0d92bca6cbdd49236d8ab390b5bb6ac41ad1f1c8d23f4e2eff84aa74e6b0a324",
                    "sha256:442f501872df89f0dc6c52cf8b623054b62b6ddedc68f22fc4d39264ea116c96",
                    "sha256:beee18a3a3563db9c8df1d299673d8892105565ce4a0fbc7ab63375155a5150a",
                    "sha256:19fe2308eeb82a5bdd2f562463979e055cd1b238180489f8127d3211082107bf",
                    "sha256:778d1a696f6513942baa52af3e55af5923b1f27ef37c676edafb2601a18fa36c",
                    "sha256:e06d6001a1da448e0bdf9cad4a5e6369a2e23db8b751ed0777b3e274c8de6aca",
                    "sha256:27daa9b0497e60e96c3080049db438971a51b6d95e6a5d96f55f19634ff03934",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:34f73f50614cc4a294d3688662502a33433d888ed3d269d982c05187c0af92df",
                    "sha256:504d6155260e5eb42cbc90d7adabced8dacab63fcf178e602f22d2a8a5b86b14",
                    "sha256:5ad46eae89a5bfbd554ed0363687d42941da2985f49460f05e463a0636f87d16"
                ]
            }
        },
        "36-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:16:51.640146474Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.363154019Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.363154019Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.363154019Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:04.379900568Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:35.627931567Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:36.537714792Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:36.537714792Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:40:36.546989379Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:36.594804758Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:36.60416499Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:36.60416499Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:40:40.28808744Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:40:40.427106425Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:16:51.526215026Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:16:51.526215026Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:16:51.640146474Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:924511e57d79442e2bf7973c38bf065598299d04b35471eab6955bf1666a94c3",
                    "sha256:d8d421b9ca9350109e786f72e6e2d479a7489487e19e121318feb6a98d6a3c46",
                    "sha256:5f3f667a8c641c7ce78a40b3ed333bb6e0ab87339c88378778963b4d17b2c9fc",
                    "sha256:e4869793269ed6124242bff3bcd0855ddbf1e6efbe60a3c37e3456e6dc608009",
                    "sha256:45eef311cbfd9b312d16fefd5aeb94279dadb57574ed18613752a3c3088c383f",
                    "sha256:9f8687764932f06956ff72250373b745763b1d67354923fbeb20dc2f0b84160a",
                    "sha256:86e05b32052b9fc5471a682b1171640ad6904bc57aab472473741d6e4d43828e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a4f57127d58c280ca985f7dd4600d1dcea09b82842510826c8a125dacdb6e204",
                    "sha256:14958f6e9dc38e3b0be19cc3b321b8f8a8b132cd8554577056995cc6c050e5e6",
                    "sha256:77c495a8a7db384104c73ddccfedcd8386a265eef33c41f8a6451af3c1b001cb"
                ]
            }
        },
        "36-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:49:09.571835614Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.448472689Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.448472689Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.448472689Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:18.25553519Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:44.522824852Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:45.462110722Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:45.462110722Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:14:45.470940956Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:45.479496771Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:45.527482553Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:45.527482553Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:14:49.280416402Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:14:49.423571008Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:09.455615017Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:49:09.455615017Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:09.571835614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:b4c9dd91c72a81ac4a202ff0748402788349045fe3597c5797e383c96bc6d5b1",
                    "sha256:2f66da14d3d811f096c502aea6eead828344d4261ec5532d960d5a2dcdbb469b",
                    "sha256:23fa17f094d5992d65ab0ef1f99d1fff0d19bb3fd83925b018b1f059aafe38f2",
                    "sha256:f0785819e675537037c3cea9aff10a75f41bed438da722737a4be828f7eefdff",
                    "sha256:042a6a8f10348e05e145155e331a88a844748f5a329d9a555e30c114ec629bda",
                    "sha256:24aae0af27aeacf4ccb8a67c40068bebf526a88e4cafdc8d4ab7ca35789e9843",
                    "sha256:960a300b6cbe4e665c6f83989be25a2cebe6fb08c225ee042d1cc9d97c62359a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8eb6e91fbc5c2b79888118e9c2ec63794a5c7a80698d9a85bcc2765b272d4017",
                    "sha256:292caa37c740c0a980f91c3049e42555e68b01f780a1060ee4d4c12858d853de",
                    "sha256:dbdd78e8757b4bec33377a371087fa97b9d3c1cf6c64d06d7d3c250b6a88fce2"
                ]
            }
        },
        "36-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:35.699330047Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:33.592232034Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:33.592232034Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:33.592232034Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:44:56.976355919Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:17:59.232940909Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:00.64397906Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:00.64397906Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:00.656438731Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:00.709323805Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:00.721159717Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:00.721159717Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:04.549668403Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:04.718901613Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:35.58263566Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:35.58263566Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:35.699330047Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:e6fde95adb90fc37e5b5652ab1bad02d60972f7659f2fcbd7bc73b2927bbb4b0",
                    "sha256:373d666da30ff7d663200959ae1ce3843b56ceca76a0eed7bd53ca274da840c0",
                    "sha256:b52cfed2ec76d493b41d4bce85ce238bd70e369d628a9a9fcbc333a0d42f3350",
                    "sha256:0989bf391c4b6d2746e580cc456361f69a21dc59a4bc93b9df4820037790200b",
                    "sha256:a091b1b5298eb3ff3dd802fa8c77cf830fe9bf937bf359254f70135971eabe14",
                    "sha256:0160428d8d81785dcc48e306f2eeb07000e5122a3bc80f3e334a10cdc09baa7b",
                    "sha256:0e99d747dbcdff2971cfeb3a61d830f90d0feb64c9f71297d4197adf8adcde97",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0625ea4b2bffeedc9748e66239136207a8bfda1fa83bd7da5d23eca35208195c",
                    "sha256:6dce8fd95cd255b918a67361088d451e8c1061f502b8500aa03aa74cb3430d1b",
                    "sha256:ae15c28df9b26b57e6a83594c85bc97b6809a85f124acc68fdcdfecf432cfbb0"
                ]
            }
        },
        "36-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:48.006638518Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.043995781Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:11.154952948Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:01.602172722Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.669154565Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.669154565Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:28:02.678110994Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.717145907Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.725640524Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:02.725640524Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:28:06.421086055Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:28:06.57556925Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:47.864918256Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:47.864918256Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:48.006638518Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0d92bca6cbdd49236d8ab390b5bb6ac41ad1f1c8d23f4e2eff84aa74e6b0a324",
                    "sha256:442f501872df89f0dc6c52cf8b623054b62b6ddedc68f22fc4d39264ea116c96",
                    "sha256:beee18a3a3563db9c8df1d299673d8892105565ce4a0fbc7ab63375155a5150a",
                    "sha256:19fe2308eeb82a5bdd2f562463979e055cd1b238180489f8127d3211082107bf",
                    "sha256:778d1a696f6513942baa52af3e55af5923b1f27ef37c676edafb2601a18fa36c",
                    "sha256:e06d6001a1da448e0bdf9cad4a5e6369a2e23db8b751ed0777b3e274c8de6aca",
                    "sha256:27daa9b0497e60e96c3080049db438971a51b6d95e6a5d96f55f19634ff03934",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:34f73f50614cc4a294d3688662502a33433d888ed3d269d982c05187c0af92df",
                    "sha256:504d6155260e5eb42cbc90d7adabced8dacab63fcf178e602f22d2a8a5b86b14",
                    "sha256:5ad46eae89a5bfbd554ed0363687d42941da2985f49460f05e463a0636f87d16"
                ]
            }
        },
        "36-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:16.337427267Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:48.382975748Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:49.114498269Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.160258289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:52.904600449Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:53.038869737Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:16.220113811Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:16.220113811Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:16.337427267Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:96e8237f4a277db04c955fec05200b74f0da4fc11acef6e970444aa8d1ac4877",
                    "sha256:eebacd7727dd5f1adf1a458419bda175ca082cd8b48b6f5ab3162ceac82ead68",
                    "sha256:6847feafbfe5a6b06d1a3180b2725497fd90858670af4d7e07d859032794fee6",
                    "sha256:2329dcac2e30f4e2a05e85f5b8dbaa8227ee8eb85ef825dd7ac0cb8fad9571fe",
                    "sha256:ca51ce238f812d151cfee4e045e109e016d9a7f7d83543fe8f0f508ebc62399e",
                    "sha256:eaa4fd10880c293c373fc3aa5f36e6d0b2267661144b4b50b13423abdc65b432",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:57d8577708926141837b5cef818df1c257b9d966cce81182c4fbc54c0cf82336",
                    "sha256:81d70fd9bd97c2fa85690bd5d68f18820386bf1bf1f5a87e9b1ac58c7292717b",
                    "sha256:77312332560c81c4d22000cb45e8badb260725d9b05c4b58445bc862375a1eda"
                ]
            }
        },
        "36-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:22.625020601Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:02.277291954Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:19.727432623Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.493667027Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.493667027Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:20.504558637Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.53410244Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.54393228Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:20.54393228Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:24.266191717Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.405560095Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:22.507020502Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:22.507020502Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:22.625020601Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:e864a5fd5a85ea7de7c429ad3786adc43add7b3bad7605a5267f71b74ef4f46d",
                    "sha256:f9745bfda56c8769e29c7fe4418ec400bda3547d6f7e2b94cf1578c853decfb1",
                    "sha256:3b0bb44987d7ed3bb758a262b1cdb5cc89a8bb7caa6cf17d171ec9ffab456784",
                    "sha256:b668db57138d2f4d3a3a4fe2a4fca77d7a33a1147ea5193bc7f088a29bc3df6e",
                    "sha256:4fb9cef9cd8dfd649c46b33c2804e0ed65b39895160fd2940fa1e823a207137b",
                    "sha256:bf049f60667eee7c3ab494a865bbe46c948b2953f52aa4768f5eeb0ab3e7035f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9c4d3515b2ac6333e066ae20a1676f1c14cfa2e4013e83e034c0bfd5bce0137e",
                    "sha256:0927e7723903f825f1856b6b0e311a1c7e085f96094d31d321812d6314579fdc",
                    "sha256:e590d3d5e1482f984d41844be854e072d1b307eb3cb6a7c03902484eecb9b81f"
                ]
            }
        },
        "36-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:48:43.175661838Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:14.922279421Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:21.859759897Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.326242746Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.326242746Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:42:23.336383154Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.346622195Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.377651932Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:23.377651932Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:42:27.266843534Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:42:27.402142548Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:43.049257188Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:48:43.049257188Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:43.175661838Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:b59a6b5e1477f2c1760b9fafd534430e1b3e627940f206e2a912fc7cc99e8b5f",
                    "sha256:9d921ab8193391974ec2825bcb16b8687c1a495d839300d5976a46254f5cd319",
                    "sha256:357859910e787423ff442861725cd291a1d55ae5384cd316b21cac31999aed1e",
                    "sha256:41fb44363c3ee3098b05a3a643a8fe49f2a04b7ad67bcadf125aa1c2114bfece",
                    "sha256:34423e69f4515ba4a00b47bbfdf43063c6c1a46f6ec4f63ccb4a8f263d2854b1",
                    "sha256:2fcd075d152d2c1213ae41f4155e55bdab5602455031af70a1d006c325b4f722",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d6c771aa19b713b8429a249e0328e601b8714348b76f00b828e7ae21393eedba",
                    "sha256:6561b111418513b33b8cbda47a421ac8433af8a0b97caa53634afb41d8d14200",
                    "sha256:d08986036547d9d0492af5274842cc7037a0b2e94b81aba5ffcd5ec48b2c81b0"
                ]
            }
        },
        "36-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:25.477074112Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:28.405977148Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:06.484116098Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.353362908Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.353362908Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:46:07.362716446Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.371056132Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.40557557Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:07.40557557Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:46:11.057940603Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:46:11.196274302Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:25.352000968Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:25.352000968Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:25.477074112Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:0bcb93467a71db1d91f97206ca3d53ef7ed8325e886870c4f93254125506ccaf",
                    "sha256:ee5232de64f68e282c5152a2cf1ee54bf9a7144c661bb3f52975ed782c2f34c5",
                    "sha256:b5750ef0a3421417ee1aa11017b9e9cf5c58cb301c449b82d5c1db7ba06a1245",
                    "sha256:9e654b7993325650e6bdfe739d4519434ff8635d924db824318bd59c3052690a",
                    "sha256:6e0af07b0964b4201fcde2932ac07b59991415f655867d6e2b04e392114e6ef1",
                    "sha256:1a3e17d9bd0848c60750171e33d97cb75a1915a92f35b4c29e2e8e8088cbacf3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d024288ac0c97e8389226f634bba57c43cfd5b66544ada9f536ae4dc909264f6",
                    "sha256:f1e3f8362be9a0140e56c063b888dfb7cb82249aedb64169450e15f55e2332f9",
                    "sha256:c60927dcb030c7130b89540a17797dde0843062675f5b35a0b17185388f433eb"
                ]
            }
        },
        "36-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f36container",
                    "FGC=f36",
                    "FBR=f36",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:16.337427267Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:22.742482656Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f36container FGC=f36 FBR=f36",
                    "empty_layer": true
                },
                {
                    "created": "2023-05-04T20:03:43.247035495Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cee460779f9d1124ed00f2513a5161d8a111efd58c800bb362e4de8ee2ff74c6 in / "
                },
                {
                    "created": "2023-05-04T20:03:44.015472382Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.289415356Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:48.382975748Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.102483271Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:49.114498269Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.160258289Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:49.171704486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:52:52.904600449Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 36   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:52:53.038869737Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:16.220113811Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:16.220113811Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:16.337427267Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 36 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:cd2d1f658717e76eb6caf0ebc0408c1c3e79889436d4de8e629563541cf3e3ac",
                    "sha256:96e8237f4a277db04c955fec05200b74f0da4fc11acef6e970444aa8d1ac4877",
                    "sha256:eebacd7727dd5f1adf1a458419bda175ca082cd8b48b6f5ab3162ceac82ead68",
                    "sha256:6847feafbfe5a6b06d1a3180b2725497fd90858670af4d7e07d859032794fee6",
                    "sha256:2329dcac2e30f4e2a05e85f5b8dbaa8227ee8eb85ef825dd7ac0cb8fad9571fe",
                    "sha256:ca51ce238f812d151cfee4e045e109e016d9a7f7d83543fe8f0f508ebc62399e",
                    "sha256:eaa4fd10880c293c373fc3aa5f36e6d0b2267661144b4b50b13423abdc65b432",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:57d8577708926141837b5cef818df1c257b9d966cce81182c4fbc54c0cf82336",
                    "sha256:81d70fd9bd97c2fa85690bd5d68f18820386bf1bf1f5a87e9b1ac58c7292717b",
                    "sha256:77312332560c81c4d22000cb45e8badb260725d9b05c4b58445bc862375a1eda"
                ]
            }
        },
        "37": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:21.73106563Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:21.602549209Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:21.602549209Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:21.73106563Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:bf8d6c0a39730c49e32cfef960f349453924434ae30e38e85cdbe4e44d958031",
                    "sha256:ea2b2524e1b2dedcbc243c6cf6a173ff54579385e8687c3493864015215f3f2f"
                ]
            }
        },
        "37-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:30.462909864Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:30.351739387Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:30.351739387Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:30.462909864Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:9e033e761075715bfea9229a9809aa04de0eb02d1adf417fda84fe5053776cdf",
                    "sha256:f7d988453b1073c2a27e138db65db955cceccec423a703213853a45d8df812bd"
                ]
            }
        },
        "37-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:48:47.996999801Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:47.881285875Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:48:47.881285875Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:47.996999801Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:a48a9047b99b4fed48db6d61520b41d2a7d5eb29a6b5bfd91d5357118401fb5c",
                    "sha256:569d0c33cf6013b10b3937ff0c18647cb74aaba0eed8261d02a75eddf55a2fd4"
                ]
            }
        },
        "37-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:54.66085349Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:54.533560067Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:54.533560067Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:54.66085349Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:e671defd1d87e6b01175a50f5b09f0f371822f247fc2e3ff20533488e0706896",
                    "sha256:31ee949871c8f85a026ea3b82650659b691c7f9072c35baab9888c92a85f28fb"
                ]
            }
        },
        "37-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:50.06167754Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:49.941507937Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:49.941507937Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:50.06167754Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:5a1a4b9864685cbb29b0dafc02adfd605127c9bd5a6c8adeef656cb017fe232b",
                    "sha256:572c7e4cda8c9a9cc99f38c01b1c73f134067ad73750dbf65fb33192d1c22bef"
                ]
            }
        },
        "37-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:21.73106563Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:21.602549209Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:21.602549209Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:21.73106563Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:bf8d6c0a39730c49e32cfef960f349453924434ae30e38e85cdbe4e44d958031",
                    "sha256:ea2b2524e1b2dedcbc243c6cf6a173ff54579385e8687c3493864015215f3f2f"
                ]
            }
        },
        "37-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:38.192070564Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:38.077880592Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:38.077880592Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:38.192070564Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:3ea3d5b77f900a95ef7b562d84f7ff4977706d15c17269e6a2f93394d02f34e3",
                    "sha256:d4f15e056c645413ae0be868ca0ab15044811fa467c874695408f7971048e0db"
                ]
            }
        },
        "37-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:52.564941487Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:10:56.098365397Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:26.894768836Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:27.841017293Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.850413212Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:31.607983559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:31.757692693Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:52.447578902Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:52.447578902Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:52.564941487Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:153f603c3b6b2529b45b12c9cb3de69de633d99488c4aac6cb5e04c6784e284c",
                    "sha256:fcda31efe0f90abdb3be0e2cc3050fddb745d7db41b962e3a08d908b3fe90c76",
                    "sha256:168e7cb2c07cd77fe30fd104d59f5ac49b7a43775f04c196367fa588f2159f11",
                    "sha256:3e98c7cf4c63c439e9045cd721cc19c243588d17804a57358309accf40b5249c",
                    "sha256:8aeb044849aef9a674a8ebde259f830df38faaa43b11f80b3bec5085ace3c264",
                    "sha256:691ea9dfdaf44533ac36d1341c6822b6735744922c3d5c304e657357f4babe33",
                    "sha256:072ee65b31efbe2110bc15922159f609d9d9c933715bc4429aeb7f4c5da9d425",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bd215b090f3f370a73aa2871e3e123516169ed4db9f68a876a6be0d4a288d6d4",
                    "sha256:e7c20d997e8afe9747b7ae0742962c41f6b8d0d9efd8b7b2c58e65600ef440cd",
                    "sha256:de3658cfcb272f1de05ba75bf7fd46f7c8270f92c9df3304536deec19b798d29"
                ]
            }
        },
        "37-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:49:12.494504246Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:07.560394223Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:33.168342892Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:34.153622864Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.190278048Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:37.906466695Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:38.054385621Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:12.372930562Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:49:12.372930562Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:12.494504246Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:5b32c6607b8e7ea89ed5bb72a3578bb0d4723f5496d0a8e7dc688bf6a3a167d6",
                    "sha256:90da55fed465de8a873bf3e2bcdea7dca9a0be400a66dfa4c0efde5fa5ad1712",
                    "sha256:d5b90a049cc6b8b6a297f2e6f8a012847c545187714f13feb3004077215fe790",
                    "sha256:ac341c2760f8397f739500c811ea7bfc967bee43cae3b5bccbc3bc6263562d17",
                    "sha256:383c3fcfa865391817fdec807ce0f15866c08261ec20642c87fdde447997f846",
                    "sha256:d8c138867fdbf59da6040e42db8f659089ae32f509c4809cd61e7b817c68284d",
                    "sha256:59113e489ab1305fec7cc3fd646933122fb6f8dfeb9f3e8146b36687dd3f8ce0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e090112138683d3816cd9299b41c91f8e2961f75a329ef3583c678904c6aa0c",
                    "sha256:8dc5d7d7cb659555e7250467278a75a27081cef2d40ee5ae66be7c67c859ffb5",
                    "sha256:cd303d5c17923a6626189be94a227a32f411af4dc382ea64feaa17530189a290"
                ]
            }
        },
        "37-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:39.74924263Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:44:46.483219966Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:11.966182353Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:13.40948656Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.42436327Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:17.292242645Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:17.441252547Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:39.638489516Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:39.638489516Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:39.74924263Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2bc63a4a3e163679c8a2399342b1daf3e005320d94db933ce217a0f80d1b4537",
                    "sha256:d75154443a45cab05ca4a85ddd827b962fedcff91b702d791e6ef9404f6c85d3",
                    "sha256:ed61218e50e513b23bae8d31f72e7c8e7a3d0090e48e2ff087a536ac362cfb81",
                    "sha256:23faadc341a4670f586fccbfa7d9b0c5a5e56be8ab46b55a4067df82e5569a5c",
                    "sha256:26696ab075f5bb87eee8a46b41f2091a3f9d7edb2116147001a7677757eaaca5",
                    "sha256:61d65d5da4322b148f9078fa00914c14291b0bdf48b073091e08240ed72a9f7c",
                    "sha256:879d60f10dea3318ceaedb2814160c1ae4cc919d4f04d2e62152d05c1ea7011a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0428822e1d59c6db13038f6502cd2c9a69bd7e2d2a033cb20fc19071849b112e",
                    "sha256:8ec0da81173ff293c6304d92d0207fc0f872bd93fad5639ae7fd3351d52babad",
                    "sha256:367f74c0eb892b598c33061ec16e31f35b1c14a53353fdd97ed3de2d8c575c52"
                ]
            }
        },
        "37-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:27.94332059Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:06.695861539Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:31.267198079Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:32.694247574Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.719346978Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:36.547683782Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:36.691463904Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:27.825595349Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:27.825595349Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:27.94332059Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3f054b5308bf8dbf3abb2dac1bc72fac6b6e9569c5d0c4d1733c57b40f98d68c",
                    "sha256:9a408e5130d5761269a2f78fe14c41bfad96906f19a9b6f231ba27a0e270536b",
                    "sha256:ce27ddfda0b79dba438fc400e0d24f635fec12b6b0b2e61ff692ddfb273b5fe9",
                    "sha256:251af411a33440438f0b2f94cdfb89f2f9ffdbc97319bda046932d48df33eb89",
                    "sha256:5482afbecbaab7a5c1e492cf2a2f03aafdc9012c4dc853b5b5c1ed9fde902db7",
                    "sha256:5d6da048fbb12c4062ff5b76617e555654e7b2043bfca3f0791046007fc79bb6",
                    "sha256:c6c5906dcd307ca53496f54734925e883c2e43f758510871473e5490706bf6a8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:42adbbc0741061b3fa0e1fde61c20ae07301f416423df023d7264ef090febb62",
                    "sha256:8813c8722d9cf42a03a0bf91cbe7ede9fbf3d598816bc3abb0a4174787e41b3a",
                    "sha256:47a9ffe03e59d6f33f27936c2789d8eb0d329d5cea4e52891ff82f452059738e"
                ]
            }
        },
        "37-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:38.192070564Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:38.077880592Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:38.077880592Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:38.192070564Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:3ea3d5b77f900a95ef7b562d84f7ff4977706d15c17269e6a2f93394d02f34e3",
                    "sha256:d4f15e056c645413ae0be868ca0ab15044811fa467c874695408f7971048e0db"
                ]
            }
        },
        "37-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:21.73106563Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:21.602549209Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:21.602549209Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:21.73106563Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:bf8d6c0a39730c49e32cfef960f349453924434ae30e38e85cdbe4e44d958031",
                    "sha256:ea2b2524e1b2dedcbc243c6cf6a173ff54579385e8687c3493864015215f3f2f"
                ]
            }
        },
        "37-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:30.462909864Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:30.351739387Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:30.351739387Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:30.462909864Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:9e033e761075715bfea9229a9809aa04de0eb02d1adf417fda84fe5053776cdf",
                    "sha256:f7d988453b1073c2a27e138db65db955cceccec423a703213853a45d8df812bd"
                ]
            }
        },
        "37-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:48:47.996999801Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:47.881285875Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:48:47.881285875Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:47.996999801Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:a48a9047b99b4fed48db6d61520b41d2a7d5eb29a6b5bfd91d5357118401fb5c",
                    "sha256:569d0c33cf6013b10b3937ff0c18647cb74aaba0eed8261d02a75eddf55a2fd4"
                ]
            }
        },
        "37-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:54.66085349Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:54.533560067Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:54.533560067Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:54.66085349Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:e671defd1d87e6b01175a50f5b09f0f371822f247fc2e3ff20533488e0706896",
                    "sha256:31ee949871c8f85a026ea3b82650659b691c7f9072c35baab9888c92a85f28fb"
                ]
            }
        },
        "37-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:50.06167754Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:49.941507937Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:49.941507937Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:50.06167754Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:5a1a4b9864685cbb29b0dafc02adfd605127c9bd5a6c8adeef656cb017fe232b",
                    "sha256:572c7e4cda8c9a9cc99f38c01b1c73f134067ad73750dbf65fb33192d1c22bef"
                ]
            }
        },
        "37-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:21.73106563Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:21.602549209Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:21.602549209Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:21.73106563Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:bf8d6c0a39730c49e32cfef960f349453924434ae30e38e85cdbe4e44d958031",
                    "sha256:ea2b2524e1b2dedcbc243c6cf6a173ff54579385e8687c3493864015215f3f2f"
                ]
            }
        },
        "38": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:46:48.442345812Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:48.329562809Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:46:48.329562809Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:48.442345812Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:e994305e2fa925f51bb562e8095f9db07e73aaea4878c9bace4da3489a5948ec",
                    "sha256:e98a37f4fe16934bc826decb98d31541613d755ea6930b282db3f237c4875020"
                ]
            }
        },
        "38-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:22:27.454061379Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.032783443Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.794960795Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.794960795Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:17:06.805447066Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.814310203Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.84911684Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.84911684Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:17:12.388615628Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:12.526606922Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:27.340547675Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:22:27.340547675Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:27.454061379Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:80960cca51c97684b3a9cec28adb8fae3034898f76cc4de09b5756e99bab5f4d",
                    "sha256:ebcf328ef783f06a08c6855ef399097abd7849454cb754d92656f855c8e72f7b",
                    "sha256:ed8c17efb3a45a5c116d8b29102ee94853c6c7d78b68917765166a90efdbe456",
                    "sha256:4c2fcb2aa7c87c35350e78cfb39cc8d48e14a39322897c5816cbba6875385aeb",
                    "sha256:9fb9429b38105cbccdabce561ae817ae56aa3fbe6943dabf073a3e077a0a4726",
                    "sha256:5e5d3ed39b0bae147112243675b89add16961c507d1a96d8c12543619f3631ab",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9659c666f25fc0ca79916fc32cd405a174b567f47816d637061022910382150c",
                    "sha256:09f2273613c1103a0d5f64225dcc96bc065e6e90dec804805f2479e8ab4f5fb4",
                    "sha256:92c6858f54379544ecce91d68a8733b6689ac42c03e09ee6e96ce5e159a6f7fe"
                ]
            }
        },
        "38-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:55:49.005674614Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:00.912192201Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.006895963Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.006895963Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:56:02.016355085Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.026794369Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.060541718Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.060541718Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:56:07.655736223Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:07.807291644Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:55:48.889052496Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:55:48.889052496Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:55:49.005674614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ea79a218147f67e84cc5ebc832b9460a07c042175b9c6c064e2b46cc1dc1a3a4",
                    "sha256:30e3fbd8e717f3b8a564afd4ee36b43ec6b6d86b01c9f556f1c1569211d3f246",
                    "sha256:4f6c240ccf870cc5e7845a32d4625252e557b98a1ca959ee903a50fae49f5292",
                    "sha256:52333195f351cb7f05d374c425fd2d08bfc9a7b292673ba1bc72b65cfc337fda",
                    "sha256:8fa793cc56273ff76f01fe7a2fa04001b8a835021eb98a84aac458c70142805b",
                    "sha256:2d3cbcbb63899f70da15473b7e05cdcb41b7bb7057040d80f9a5a063821b0133",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5bb1ea72b4125dbbfb8204982aadcd3846bffd331433fe0e24dc13c017b2badd",
                    "sha256:ee9cca0f736957994f0d067984e67a345437b4e57e4b82c50ec98851d9668c13",
                    "sha256:c040ec850130a15fe052f0036ff9bcf63e4e332e2a60eaba6d054d5d1675150c"
                ]
            }
        },
        "38-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:54:42.668876047Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:18.953503933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.727911729Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.727911729Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:53:19.739193593Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.779094073Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.789079698Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.789079698Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:53:25.296074915Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:25.441838461Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:54:42.545827222Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:54:42.545827222Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:54:42.668876047Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:b20e668d1a141e0d94ea1512d98fa306aef98b2f4894ff4310a4b368ecae46f1",
                    "sha256:8d53a1ae6a6876501ddfee3882f044e95cf4bbb5c5ee113c33b6a630df50f37d",
                    "sha256:9b2f37627416daf809729f9b7b129b588d6d27b685e6a6f70b7efd53604d8c77",
                    "sha256:58e2ad029c294aaf061847a738e97e4ee92cfcc02568fde36d2c42014b29bc2a",
                    "sha256:0370b041d7751b62b4759a10fd68fe5d529500000af334c432dda8ff0e6bdc19",
                    "sha256:4fda59f91c1283cdc0171b9d775c4c59aed809bf6eb8969c1dab000deccefbfb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0fbb16bb412f29fbd6bf22b0270c66acce1dfff1273a68ab07e7a24a347da177",
                    "sha256:c40cdf57c5aba046d212d120987a6b08078f296f5d1fabe60d8b4b58a2a4e747",
                    "sha256:7ba30954363efbf8915f7c94463a884db06d02df0b524f6f47738cfa7be2eb54"
                ]
            }
        },
        "38-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:08:08.461705247Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:08:08.344980461Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:08:08.344980461Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:08:08.461705247Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:692107911561201b923732ab8945a3b856976aca25dcdff6e223658561a4f8e2",
                    "sha256:61c81b4ba846d26c9248e892456b8a17e9341af4b462afbefe3900852b8683f5"
                ]
            }
        },
        "38-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:46:48.442345812Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:48.329562809Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:46:48.329562809Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:48.442345812Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:e994305e2fa925f51bb562e8095f9db07e73aaea4878c9bace4da3489a5948ec",
                    "sha256:e98a37f4fe16934bc826decb98d31541613d755ea6930b282db3f237c4875020"
                ]
            }
        },
        "38-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:46:33.23077671Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.028048975Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:21.757628005Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:23.226391702Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.30237909Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:29.124459273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:29.273317952Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:33.104581186Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:46:33.104581186Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:33.23077671Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:63a7727c4e76d8980cf4568202bf9297aab0020244e4d7a59ff628633c5c379a",
                    "sha256:8764364fcb36a10eca0e326c313d32654e5e4cc55abfe0014974d53c364de48b",
                    "sha256:281dd00215836c81475c699f61f89c9eb55c5d69014f819f8772cffe433ace26",
                    "sha256:abb63b2c733f69ae08cbb6bfe1f32da0004658166581cc3bdb67901ede1ad33a",
                    "sha256:763bebfde6ac1ad7e8b6195d9c95001b4b273ad9936cd9971295674105101ac6",
                    "sha256:f67b7e4a6f4e48584da11a524adbebbbeeac629a1cb524f5df51ee88bdd71055",
                    "sha256:74f1d6cf90e9f178497078c8e6f3941cbb3265478d0f1a806521824a183837a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c7319dfdfe03afc9fe26d4be768e94cfc2d546d63404d22deff0f8426aec9488",
                    "sha256:3ff85c5abe207674377218bfa0c37fabde5fa4ad0755a02d0638e99863b971f3",
                    "sha256:0f3663f40e41ae16ea7c0cf6ea7d1d81b69ca6a5eb5489d1940724a0e3ae768e"
                ]
            }
        },
        "38-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:25:22.370839792Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:09.897108948Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:09.897108948Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:09.897108948Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:41.622789278Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:05.447968861Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:06.868381508Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:06.868381508Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T22:00:06.876880217Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:06.884443525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:06.89206315Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:06.89206315Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T22:00:12.313673259Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T22:00:12.450188912Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:25:22.248677092Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:25:22.248677092Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:25:22.370839792Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:dcd8bb5e551d78e1a7df5e9cdd2248b7d42057d58efd29aa1ad3efe95e0913c5",
                    "sha256:2696167d857e43eb0db4659dede3b81939d5154ee8a5e6d12e113a040b6747d2",
                    "sha256:56cfe201bf279dd8fd7504ca76ce1b5094b6f3161e9777ba459f906286d57fdf",
                    "sha256:0b8997bfc9afb5b27ee51157a08242a25874b2dd0976ed9e47b36c4f7b14b297",
                    "sha256:86c439966c35d3ab8165dcf9633e6b36cfcf033ae4c29d365ebe695d8bc58942",
                    "sha256:10f572daecac3c558b319d28232e1173f0858776886df6b1cdc424c42f8e8e3f",
                    "sha256:aa5e3449d39b98667137cf1c65cae973283bd3121a9ca13218cb0d36b77e58dd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c660f1c1924d53f2e4fc005f2651b9934e150d1d84904a166b2dcb9346f00b9",
                    "sha256:cecf0352f1f723f719ae1a09fbc623efc8e0699bd0ea4acdc7a6e7e99a3a689f",
                    "sha256:d0aecd371648bd70da30f923837732a4cdb0b8af754f99ba469c40a73ff5ef30"
                ]
            }
        },
        "38-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:56:19.969296833Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:16.349458836Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:16.349458836Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:16.349458836Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:55:05.687723743Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:49.378748765Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:50.702042504Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:50.702042504Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:37:50.714635736Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:50.725004801Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:50.754135385Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:50.754135385Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:37:56.380991734Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:37:56.522737005Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:56:19.853757937Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:56:19.853757937Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:56:19.969296833Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:f48c9eddbc1f2401f9c01b5f49d65066cc6736cd10bf3d6367fa58871aa67da8",
                    "sha256:16ce41fd80fa45ee8fcdc2ca2d70fad8b5097608f6c8a9b4145ffae05c23c76f",
                    "sha256:e4dcc4fba13876e7b4a37d11f0c7383b33585abc7f3abdc003ba562492baed50",
                    "sha256:0cb56a3846c1330baad18db7d66a457ecdf321da02638674f8809d5f4aa9661b",
                    "sha256:d9a6ad25b762536264befadb27fc4671eb2a4a02541698ad56a0ae82e259f86f",
                    "sha256:4ee7f0074669d7ed543f5d236c4459720df4ba65c94ce074a89e3992a3d607ba",
                    "sha256:fd299532500fa1f9ce624643d5c5045d99e44584dba65bc545b8a0af95e50cb5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:16908c6f2ecc55d57fc82a43723b3cda63502febd87f5703334949536ff29731",
                    "sha256:de70489297e679eda528a17454eea9395d814bec869fb5807063a5563044484f",
                    "sha256:77117ee429c0323e989b600f74ce8b5c16fff3d0b292da29683ff520bbd4994f"
                ]
            }
        },
        "38-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:55:34.373809737Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:27.794199455Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:27.794199455Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:27.794199455Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:24.859684991Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:54.53195295Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:55.573159674Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:55.573159674Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:35:55.583778037Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:55.619703511Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:55.631911386Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:35:55.631911386Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:36:01.151366691Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:36:01.327877549Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:55:34.252773446Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:55:34.252773446Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:55:34.373809737Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:94a2eb048e21c8e71a8f03f32b564849ffd038b53e0ec2f2f7a1b037864e56b7",
                    "sha256:59a91752dfc62cd44359a2f8bc83b2f25cbbfebc3353272c6e2ba1956b7424e6",
                    "sha256:0cc5d557067682c6f19a068bdb4478439103c75b9281bb3ab05b99facd1edade",
                    "sha256:b08f87d0f885239dd0932f0486855fd95c77870fef393f1df0c6bcc0f6f6896c",
                    "sha256:a757830347f79113e6a42976e11710e4ffcacb6ee62436dce15f86ebbdb45e8a",
                    "sha256:07c5e99401dfe47101d29db3d9a891b806e9a404bb3045c237045f7ea0f67196",
                    "sha256:a9360846f37548f0498d091863fef7f0c43471e0580eb2749779262e309b8136",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fe231abe20b0907f6e177a0aef47202b43250922d34794deb46c1b9a765db26a",
                    "sha256:6fbdf0175ea93510a34b2abefd8be1ba1b68525763d3c1f4adaaf5c9a4618d8c",
                    "sha256:625ffb43010e1103a10ca774492a18b43cf2dea7040e3442bf78a6add95c75bc"
                ]
            }
        },
        "38-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:08:04.908216754Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.028048975Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:21.757628005Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:23.226391702Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.30237909Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:29.124459273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:29.273317952Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:08:04.791139957Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:08:04.791139957Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:08:04.908216754Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:63a7727c4e76d8980cf4568202bf9297aab0020244e4d7a59ff628633c5c379a",
                    "sha256:8764364fcb36a10eca0e326c313d32654e5e4cc55abfe0014974d53c364de48b",
                    "sha256:281dd00215836c81475c699f61f89c9eb55c5d69014f819f8772cffe433ace26",
                    "sha256:abb63b2c733f69ae08cbb6bfe1f32da0004658166581cc3bdb67901ede1ad33a",
                    "sha256:763bebfde6ac1ad7e8b6195d9c95001b4b273ad9936cd9971295674105101ac6",
                    "sha256:f67b7e4a6f4e48584da11a524adbebbbeeac629a1cb524f5df51ee88bdd71055",
                    "sha256:74f1d6cf90e9f178497078c8e6f3941cbb3265478d0f1a806521824a183837a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c7319dfdfe03afc9fe26d4be768e94cfc2d546d63404d22deff0f8426aec9488",
                    "sha256:e4d65175ac3419f5823c8f0701b09cd4a000596d4f7813698d148d42f19af672",
                    "sha256:b66ee89edd27ba53111bb453bf58371baad7990eb434f36c7a627153c8691ca5"
                ]
            }
        },
        "38-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:46:33.23077671Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:53.014397748Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.028048975Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:21.757628005Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.21693759Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:23.226391702Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.30237909Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:23.312751251Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:45:29.124459273Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:45:29.273317952Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:33.104581186Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:46:33.104581186Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:33.23077671Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:63a7727c4e76d8980cf4568202bf9297aab0020244e4d7a59ff628633c5c379a",
                    "sha256:8764364fcb36a10eca0e326c313d32654e5e4cc55abfe0014974d53c364de48b",
                    "sha256:281dd00215836c81475c699f61f89c9eb55c5d69014f819f8772cffe433ace26",
                    "sha256:abb63b2c733f69ae08cbb6bfe1f32da0004658166581cc3bdb67901ede1ad33a",
                    "sha256:763bebfde6ac1ad7e8b6195d9c95001b4b273ad9936cd9971295674105101ac6",
                    "sha256:f67b7e4a6f4e48584da11a524adbebbbeeac629a1cb524f5df51ee88bdd71055",
                    "sha256:74f1d6cf90e9f178497078c8e6f3941cbb3265478d0f1a806521824a183837a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c7319dfdfe03afc9fe26d4be768e94cfc2d546d63404d22deff0f8426aec9488",
                    "sha256:3ff85c5abe207674377218bfa0c37fabde5fa4ad0755a02d0638e99863b971f3",
                    "sha256:0f3663f40e41ae16ea7c0cf6ea7d1d81b69ca6a5eb5489d1940724a0e3ae768e"
                ]
            }
        },
        "38-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:46:48.442345812Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:48.329562809Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:46:48.329562809Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:48.442345812Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:e994305e2fa925f51bb562e8095f9db07e73aaea4878c9bace4da3489a5948ec",
                    "sha256:e98a37f4fe16934bc826decb98d31541613d755ea6930b282db3f237c4875020"
                ]
            }
        },
        "38-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:22:27.454061379Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:50:11.174745295Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.032783443Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.794960795Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.794960795Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:17:06.805447066Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.814310203Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.84911684Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:06.84911684Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:17:12.388615628Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:17:12.526606922Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:27.340547675Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:22:27.340547675Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:22:27.454061379Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:80960cca51c97684b3a9cec28adb8fae3034898f76cc4de09b5756e99bab5f4d",
                    "sha256:ebcf328ef783f06a08c6855ef399097abd7849454cb754d92656f855c8e72f7b",
                    "sha256:ed8c17efb3a45a5c116d8b29102ee94853c6c7d78b68917765166a90efdbe456",
                    "sha256:4c2fcb2aa7c87c35350e78cfb39cc8d48e14a39322897c5816cbba6875385aeb",
                    "sha256:9fb9429b38105cbccdabce561ae817ae56aa3fbe6943dabf073a3e077a0a4726",
                    "sha256:5e5d3ed39b0bae147112243675b89add16961c507d1a96d8c12543619f3631ab",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9659c666f25fc0ca79916fc32cd405a174b567f47816d637061022910382150c",
                    "sha256:09f2273613c1103a0d5f64225dcc96bc065e6e90dec804805f2479e8ab4f5fb4",
                    "sha256:92c6858f54379544ecce91d68a8733b6689ac42c03e09ee6e96ce5e159a6f7fe"
                ]
            }
        },
        "38-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:55:49.005674614Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:19.415187376Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:00.912192201Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.006895963Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.006895963Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:56:02.016355085Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.026794369Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.060541718Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:02.060541718Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:56:07.655736223Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:56:07.807291644Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:55:48.889052496Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:55:48.889052496Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:55:49.005674614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ea79a218147f67e84cc5ebc832b9460a07c042175b9c6c064e2b46cc1dc1a3a4",
                    "sha256:30e3fbd8e717f3b8a564afd4ee36b43ec6b6d86b01c9f556f1c1569211d3f246",
                    "sha256:4f6c240ccf870cc5e7845a32d4625252e557b98a1ca959ee903a50fae49f5292",
                    "sha256:52333195f351cb7f05d374c425fd2d08bfc9a7b292673ba1bc72b65cfc337fda",
                    "sha256:8fa793cc56273ff76f01fe7a2fa04001b8a835021eb98a84aac458c70142805b",
                    "sha256:2d3cbcbb63899f70da15473b7e05cdcb41b7bb7057040d80f9a5a063821b0133",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5bb1ea72b4125dbbfb8204982aadcd3846bffd331433fe0e24dc13c017b2badd",
                    "sha256:ee9cca0f736957994f0d067984e67a345437b4e57e4b82c50ec98851d9668c13",
                    "sha256:c040ec850130a15fe052f0036ff9bcf63e4e332e2a60eaba6d054d5d1675150c"
                ]
            }
        },
        "38-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:54:42.668876047Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:30.063655578Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:18.953503933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.727911729Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.727911729Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:53:19.739193593Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.779094073Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.789079698Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:19.789079698Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:53:25.296074915Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:53:25.441838461Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:54:42.545827222Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:54:42.545827222Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:54:42.668876047Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:b20e668d1a141e0d94ea1512d98fa306aef98b2f4894ff4310a4b368ecae46f1",
                    "sha256:8d53a1ae6a6876501ddfee3882f044e95cf4bbb5c5ee113c33b6a630df50f37d",
                    "sha256:9b2f37627416daf809729f9b7b129b588d6d27b685e6a6f70b7efd53604d8c77",
                    "sha256:58e2ad029c294aaf061847a738e97e4ee92cfcc02568fde36d2c42014b29bc2a",
                    "sha256:0370b041d7751b62b4759a10fd68fe5d529500000af334c432dda8ff0e6bdc19",
                    "sha256:4fda59f91c1283cdc0171b9d775c4c59aed809bf6eb8969c1dab000deccefbfb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0fbb16bb412f29fbd6bf22b0270c66acce1dfff1273a68ab07e7a24a347da177",
                    "sha256:c40cdf57c5aba046d212d120987a6b08078f296f5d1fabe60d8b4b58a2a4e747",
                    "sha256:7ba30954363efbf8915f7c94463a884db06d02df0b524f6f47738cfa7be2eb54"
                ]
            }
        },
        "38-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:08:08.461705247Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:08:08.344980461Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:08:08.344980461Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:08:08.461705247Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:692107911561201b923732ab8945a3b856976aca25dcdff6e223658561a4f8e2",
                    "sha256:61c81b4ba846d26c9248e892456b8a17e9341af4b462afbefe3900852b8683f5"
                ]
            }
        },
        "38-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f38container",
                    "FGC=f38",
                    "FBR=f38",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:46:48.442345812Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:41.041894598Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f38container FGC=f38 FBR=f38",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-20T23:39:45.493041732Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:50f76cb2e29e780d80bbc023f0bbb552e413a0191d6fab7fedce9f032d7c55ec in / "
                },
                {
                    "created": "2024-02-20T23:39:46.885294079Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:45.909708183Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:01.590555751Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.351225239Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:02.360749405Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.369270986Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:02.405864798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:02:07.899966098Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 38   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:02:08.045611622Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:48.329562809Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:46:48.329562809Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:46:48.442345812Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 38 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d9224901c4254002370ad869c45d487779ce52e983554fc3c651d1283143025c",
                    "sha256:ebcf910b3bd968c69298ac824583cd1528883f4a382541565a04a486c658c20b",
                    "sha256:c24ea502f2f1577b4278e978c5db52a3b01de7a26e6f4724887ceeba23daeba2",
                    "sha256:793d820a1dccf3d247ece3546ff7db37debcbeed40e828cb75bb4cb13b7aebab",
                    "sha256:553772b6df64fc5ba696a001383c6ffd5b481fb5f850cde63456cadf5cca043f",
                    "sha256:f4ac866915cc972c7c4d1726ddc5effabb4cc90debfacebc71ef6f4541bf63ef",
                    "sha256:8e85cb2120afad8b568aebbb01c8c1d2a29b17f9b8f160299e7d4c9843c607d2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2579e5f7d4e51b9a0d613c0c3be4660311f4b1324ea68a59aa3c2a222a1785eb",
                    "sha256:e994305e2fa925f51bb562e8095f9db07e73aaea4878c9bace4da3489a5948ec",
                    "sha256:e98a37f4fe16934bc826decb98d31541613d755ea6930b282db3f237c4875020"
                ]
            }
        },
        "build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:38.192070564Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:38.077880592Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:38.077880592Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:38.192070564Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:3ea3d5b77f900a95ef7b562d84f7ff4977706d15c17269e6a2f93394d02f34e3",
                    "sha256:d4f15e056c645413ae0be868ca0ab15044811fa467c874695408f7971048e0db"
                ]
            }
        },
        "build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:52.564941487Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:10:56.098365397Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:26.894768836Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:27.841017293Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.850413212Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:31.607983559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:31.757692693Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:52.447578902Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:52.447578902Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:52.564941487Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:153f603c3b6b2529b45b12c9cb3de69de633d99488c4aac6cb5e04c6784e284c",
                    "sha256:fcda31efe0f90abdb3be0e2cc3050fddb745d7db41b962e3a08d908b3fe90c76",
                    "sha256:168e7cb2c07cd77fe30fd104d59f5ac49b7a43775f04c196367fa588f2159f11",
                    "sha256:3e98c7cf4c63c439e9045cd721cc19c243588d17804a57358309accf40b5249c",
                    "sha256:8aeb044849aef9a674a8ebde259f830df38faaa43b11f80b3bec5085ace3c264",
                    "sha256:691ea9dfdaf44533ac36d1341c6822b6735744922c3d5c304e657357f4babe33",
                    "sha256:072ee65b31efbe2110bc15922159f609d9d9c933715bc4429aeb7f4c5da9d425",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bd215b090f3f370a73aa2871e3e123516169ed4db9f68a876a6be0d4a288d6d4",
                    "sha256:e7c20d997e8afe9747b7ae0742962c41f6b8d0d9efd8b7b2c58e65600ef440cd",
                    "sha256:de3658cfcb272f1de05ba75bf7fd46f7c8270f92c9df3304536deec19b798d29"
                ]
            }
        },
        "build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:49:12.494504246Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:07.560394223Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:33.168342892Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:34.153622864Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.190278048Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:37.906466695Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:38.054385621Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:12.372930562Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:49:12.372930562Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:12.494504246Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:5b32c6607b8e7ea89ed5bb72a3578bb0d4723f5496d0a8e7dc688bf6a3a167d6",
                    "sha256:90da55fed465de8a873bf3e2bcdea7dca9a0be400a66dfa4c0efde5fa5ad1712",
                    "sha256:d5b90a049cc6b8b6a297f2e6f8a012847c545187714f13feb3004077215fe790",
                    "sha256:ac341c2760f8397f739500c811ea7bfc967bee43cae3b5bccbc3bc6263562d17",
                    "sha256:383c3fcfa865391817fdec807ce0f15866c08261ec20642c87fdde447997f846",
                    "sha256:d8c138867fdbf59da6040e42db8f659089ae32f509c4809cd61e7b817c68284d",
                    "sha256:59113e489ab1305fec7cc3fd646933122fb6f8dfeb9f3e8146b36687dd3f8ce0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e090112138683d3816cd9299b41c91f8e2961f75a329ef3583c678904c6aa0c",
                    "sha256:8dc5d7d7cb659555e7250467278a75a27081cef2d40ee5ae66be7c67c859ffb5",
                    "sha256:cd303d5c17923a6626189be94a227a32f411af4dc382ea64feaa17530189a290"
                ]
            }
        },
        "build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:39.74924263Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:44:46.483219966Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:11.966182353Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:13.40948656Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.42436327Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:17.292242645Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:17.441252547Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:39.638489516Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:39.638489516Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:39.74924263Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2bc63a4a3e163679c8a2399342b1daf3e005320d94db933ce217a0f80d1b4537",
                    "sha256:d75154443a45cab05ca4a85ddd827b962fedcff91b702d791e6ef9404f6c85d3",
                    "sha256:ed61218e50e513b23bae8d31f72e7c8e7a3d0090e48e2ff087a536ac362cfb81",
                    "sha256:23faadc341a4670f586fccbfa7d9b0c5a5e56be8ab46b55a4067df82e5569a5c",
                    "sha256:26696ab075f5bb87eee8a46b41f2091a3f9d7edb2116147001a7677757eaaca5",
                    "sha256:61d65d5da4322b148f9078fa00914c14291b0bdf48b073091e08240ed72a9f7c",
                    "sha256:879d60f10dea3318ceaedb2814160c1ae4cc919d4f04d2e62152d05c1ea7011a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0428822e1d59c6db13038f6502cd2c9a69bd7e2d2a033cb20fc19071849b112e",
                    "sha256:8ec0da81173ff293c6304d92d0207fc0f872bd93fad5639ae7fd3351d52babad",
                    "sha256:367f74c0eb892b598c33061ec16e31f35b1c14a53353fdd97ed3de2d8c575c52"
                ]
            }
        },
        "build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:27.94332059Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:06.695861539Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:31.267198079Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:32.694247574Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.719346978Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:36.547683782Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:36.691463904Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:27.825595349Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:27.825595349Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:27.94332059Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3f054b5308bf8dbf3abb2dac1bc72fac6b6e9569c5d0c4d1733c57b40f98d68c",
                    "sha256:9a408e5130d5761269a2f78fe14c41bfad96906f19a9b6f231ba27a0e270536b",
                    "sha256:ce27ddfda0b79dba438fc400e0d24f635fec12b6b0b2e61ff692ddfb273b5fe9",
                    "sha256:251af411a33440438f0b2f94cdfb89f2f9ffdbc97319bda046932d48df33eb89",
                    "sha256:5482afbecbaab7a5c1e492cf2a2f03aafdc9012c4dc853b5b5c1ed9fde902db7",
                    "sha256:5d6da048fbb12c4062ff5b76617e555654e7b2043bfca3f0791046007fc79bb6",
                    "sha256:c6c5906dcd307ca53496f54734925e883c2e43f758510871473e5490706bf6a8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:42adbbc0741061b3fa0e1fde61c20ae07301f416423df023d7264ef090febb62",
                    "sha256:8813c8722d9cf42a03a0bf91cbe7ede9fbf3d598816bc3abb0a4174787e41b3a",
                    "sha256:47a9ffe03e59d6f33f27936c2789d8eb0d329d5cea4e52891ff82f452059738e"
                ]
            }
        },
        "build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:38.192070564Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:38.077880592Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:38.077880592Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:38.192070564Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:3ea3d5b77f900a95ef7b562d84f7ff4977706d15c17269e6a2f93394d02f34e3",
                    "sha256:d4f15e056c645413ae0be868ca0ab15044811fa467c874695408f7971048e0db"
                ]
            }
        },
        "latest": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:21.73106563Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:21.602549209Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:21.602549209Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:21.73106563Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:bf8d6c0a39730c49e32cfef960f349453924434ae30e38e85cdbe4e44d958031",
                    "sha256:ea2b2524e1b2dedcbc243c6cf6a173ff54579385e8687c3493864015215f3f2f"
                ]
            }
        },
        "latest-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:30.462909864Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:30.351739387Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:30.351739387Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:30.462909864Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:9e033e761075715bfea9229a9809aa04de0eb02d1adf417fda84fe5053776cdf",
                    "sha256:f7d988453b1073c2a27e138db65db955cceccec423a703213853a45d8df812bd"
                ]
            }
        },
        "latest-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:48:47.996999801Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:47.881285875Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:48:47.881285875Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:47.996999801Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:a48a9047b99b4fed48db6d61520b41d2a7d5eb29a6b5bfd91d5357118401fb5c",
                    "sha256:569d0c33cf6013b10b3937ff0c18647cb74aaba0eed8261d02a75eddf55a2fd4"
                ]
            }
        },
        "latest-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:54.66085349Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:54.533560067Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:54.533560067Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:54.66085349Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:e671defd1d87e6b01175a50f5b09f0f371822f247fc2e3ff20533488e0706896",
                    "sha256:31ee949871c8f85a026ea3b82650659b691c7f9072c35baab9888c92a85f28fb"
                ]
            }
        },
        "latest-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:50.06167754Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:49.941507937Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:49.941507937Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:50.06167754Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:5a1a4b9864685cbb29b0dafc02adfd605127c9bd5a6c8adeef656cb017fe232b",
                    "sha256:572c7e4cda8c9a9cc99f38c01b1c73f134067ad73750dbf65fb33192d1c22bef"
                ]
            }
        },
        "latest-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:21.73106563Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:21.602549209Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:21.602549209Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:21.73106563Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:bf8d6c0a39730c49e32cfef960f349453924434ae30e38e85cdbe4e44d958031",
                    "sha256:ea2b2524e1b2dedcbc243c6cf6a173ff54579385e8687c3493864015215f3f2f"
                ]
            }
        },
        "latest-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:38.192070564Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:38.077880592Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:38.077880592Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:38.192070564Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:3ea3d5b77f900a95ef7b562d84f7ff4977706d15c17269e6a2f93394d02f34e3",
                    "sha256:d4f15e056c645413ae0be868ca0ab15044811fa467c874695408f7971048e0db"
                ]
            }
        },
        "latest-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:52.564941487Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:59.807334412Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:10:56.098365397Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:26.894768836Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.831671197Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:27.841017293Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.850413212Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:27.858829391Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:45:31.607983559Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:45:31.757692693Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:52.447578902Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:52.447578902Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:52.564941487Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:153f603c3b6b2529b45b12c9cb3de69de633d99488c4aac6cb5e04c6784e284c",
                    "sha256:fcda31efe0f90abdb3be0e2cc3050fddb745d7db41b962e3a08d908b3fe90c76",
                    "sha256:168e7cb2c07cd77fe30fd104d59f5ac49b7a43775f04c196367fa588f2159f11",
                    "sha256:3e98c7cf4c63c439e9045cd721cc19c243588d17804a57358309accf40b5249c",
                    "sha256:8aeb044849aef9a674a8ebde259f830df38faaa43b11f80b3bec5085ace3c264",
                    "sha256:691ea9dfdaf44533ac36d1341c6822b6735744922c3d5c304e657357f4babe33",
                    "sha256:072ee65b31efbe2110bc15922159f609d9d9c933715bc4429aeb7f4c5da9d425",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bd215b090f3f370a73aa2871e3e123516169ed4db9f68a876a6be0d4a288d6d4",
                    "sha256:e7c20d997e8afe9747b7ae0742962c41f6b8d0d9efd8b7b2c58e65600ef440cd",
                    "sha256:de3658cfcb272f1de05ba75bf7fd46f7c8270f92c9df3304536deec19b798d29"
                ]
            }
        },
        "latest-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:49:12.494504246Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:07.032483717Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:07.560394223Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:33.168342892Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.140220764Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:34.153622864Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.190278048Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:34.204411016Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T09:18:37.906466695Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T09:18:38.054385621Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:12.372930562Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:49:12.372930562Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:49:12.494504246Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:5b32c6607b8e7ea89ed5bb72a3578bb0d4723f5496d0a8e7dc688bf6a3a167d6",
                    "sha256:90da55fed465de8a873bf3e2bcdea7dca9a0be400a66dfa4c0efde5fa5ad1712",
                    "sha256:d5b90a049cc6b8b6a297f2e6f8a012847c545187714f13feb3004077215fe790",
                    "sha256:ac341c2760f8397f739500c811ea7bfc967bee43cae3b5bccbc3bc6263562d17",
                    "sha256:383c3fcfa865391817fdec807ce0f15866c08261ec20642c87fdde447997f846",
                    "sha256:d8c138867fdbf59da6040e42db8f659089ae32f509c4809cd61e7b817c68284d",
                    "sha256:59113e489ab1305fec7cc3fd646933122fb6f8dfeb9f3e8146b36687dd3f8ce0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e090112138683d3816cd9299b41c91f8e2961f75a329ef3583c678904c6aa0c",
                    "sha256:8dc5d7d7cb659555e7250467278a75a27081cef2d40ee5ae66be7c67c859ffb5",
                    "sha256:cd303d5c17923a6626189be94a227a32f411af4dc382ea64feaa17530189a290"
                ]
            }
        },
        "latest-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:39.74924263Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:32.436538725Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:44:46.483219966Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:11.966182353Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.396726412Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:13.40948656Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.42436327Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:13.435538637Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T22:18:17.292242645Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T22:18:17.441252547Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:39.638489516Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:39.638489516Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:39.74924263Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:2bc63a4a3e163679c8a2399342b1daf3e005320d94db933ce217a0f80d1b4537",
                    "sha256:d75154443a45cab05ca4a85ddd827b962fedcff91b702d791e6ef9404f6c85d3",
                    "sha256:ed61218e50e513b23bae8d31f72e7c8e7a3d0090e48e2ff087a536ac362cfb81",
                    "sha256:23faadc341a4670f586fccbfa7d9b0c5a5e56be8ab46b55a4067df82e5569a5c",
                    "sha256:26696ab075f5bb87eee8a46b41f2091a3f9d7edb2116147001a7677757eaaca5",
                    "sha256:61d65d5da4322b148f9078fa00914c14291b0bdf48b073091e08240ed72a9f7c",
                    "sha256:879d60f10dea3318ceaedb2814160c1ae4cc919d4f04d2e62152d05c1ea7011a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0428822e1d59c6db13038f6502cd2c9a69bd7e2d2a033cb20fc19071849b112e",
                    "sha256:8ec0da81173ff293c6304d92d0207fc0f872bd93fad5639ae7fd3351d52babad",
                    "sha256:367f74c0eb892b598c33061ec16e31f35b1c14a53353fdd97ed3de2d8c575c52"
                ]
            }
        },
        "latest-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:27.94332059Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:50.964198867Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:06.695861539Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:31.267198079Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.683562935Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:32.694247574Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.719346978Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:32.730408486Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T14:30:36.547683782Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T14:30:36.691463904Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:27.825595349Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:27.825595349Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:27.94332059Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3f054b5308bf8dbf3abb2dac1bc72fac6b6e9569c5d0c4d1733c57b40f98d68c",
                    "sha256:9a408e5130d5761269a2f78fe14c41bfad96906f19a9b6f231ba27a0e270536b",
                    "sha256:ce27ddfda0b79dba438fc400e0d24f635fec12b6b0b2e61ff692ddfb273b5fe9",
                    "sha256:251af411a33440438f0b2f94cdfb89f2f9ffdbc97319bda046932d48df33eb89",
                    "sha256:5482afbecbaab7a5c1e492cf2a2f03aafdc9012c4dc853b5b5c1ed9fde902db7",
                    "sha256:5d6da048fbb12c4062ff5b76617e555654e7b2043bfca3f0791046007fc79bb6",
                    "sha256:c6c5906dcd307ca53496f54734925e883c2e43f758510871473e5490706bf6a8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:42adbbc0741061b3fa0e1fde61c20ae07301f416423df023d7264ef090febb62",
                    "sha256:8813c8722d9cf42a03a0bf91cbe7ede9fbf3d598816bc3abb0a4174787e41b3a",
                    "sha256:47a9ffe03e59d6f33f27936c2789d8eb0d329d5cea4e52891ff82f452059738e"
                ]
            }
        },
        "latest-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:38.192070564Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:43.57977131Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:19.941756159Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:57.000511545Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-clients \t\tsubversion \t\tautoconf \t\tautomake \t\tbzip2-devel \t\tglib2-devel \t\tgcc \t\tgcc-c++ \t\tImageMagick \t\tImageMagick-devel \t\tkernel-devel \t\tlibcurl-devel \t\tlibevent-devel \t\tlibffi-devel \t\tlibjpeg-devel \t\tlibsqlite3x-devel \t\tlibxml2-devel \t\tlibxslt-devel \t\tlibyaml-devel \t\tmysql-devel \t\tmake \t\tncurses-devel \t\topenssl-devel \t\tpostgresql-devel \t\treadline-devel \t\tsqlite-devel \t\tzlib-devel \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.118390256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:20:58.12798187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.136722317Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:20:58.164403522Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:21:01.984279759Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:21:02.133999332Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:38.077880592Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:38.077880592Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:38.192070564Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:40252cde73a60fe319f0dc295c7b1e421631974cfbe16656b81f7c86e773254e",
                    "sha256:4a4de46c8a70d5743384977bb42ebacdec5e3cb5490677a398f1d36366084aab",
                    "sha256:1523c4d5a73b8f8409b03635be1be78f6592c3915fd459908ffe5c04fb7ca684",
                    "sha256:3165ae98a25560d143d61c6f8a3cc9b4f73d0c009bfd9de33cefc4747c481229",
                    "sha256:802383c11ce70505808614d078d961ddc3cfaf46a58ac795624520a44e2a7860",
                    "sha256:0590d31cf7630143e0d0e5677bb4407b0d1c0b49a56ef3a87a860603dcea1282",
                    "sha256:6f5ffd7cbb1f8862606014326bb38c35022c8eb43d2a0aff0af32878db49dbdc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8c0b4113e6a87b2271a715a924b205a5c9534f5b51c4f3d05b39a48bb6ad75be",
                    "sha256:3ea3d5b77f900a95ef7b562d84f7ff4977706d15c17269e6a2f93394d02f34e3",
                    "sha256:d4f15e056c645413ae0be868ca0ab15044811fa467c874695408f7971048e0db"
                ]
            }
        },
        "latest-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:21.73106563Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:21.602549209Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:21.602549209Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:21.73106563Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:bf8d6c0a39730c49e32cfef960f349453924434ae30e38e85cdbe4e44d958031",
                    "sha256:ea2b2524e1b2dedcbc243c6cf6a173ff54579385e8687c3493864015215f3f2f"
                ]
            }
        },
        "latest-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:30.462909864Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:30.351739387Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:30.351739387Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:30.462909864Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:9e033e761075715bfea9229a9809aa04de0eb02d1adf417fda84fe5053776cdf",
                    "sha256:f7d988453b1073c2a27e138db65db955cceccec423a703213853a45d8df812bd"
                ]
            }
        },
        "latest-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:48:47.996999801Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:47.881285875Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:48:47.881285875Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:47.996999801Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:a48a9047b99b4fed48db6d61520b41d2a7d5eb29a6b5bfd91d5357118401fb5c",
                    "sha256:569d0c33cf6013b10b3937ff0c18647cb74aaba0eed8261d02a75eddf55a2fd4"
                ]
            }
        },
        "latest-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:54.66085349Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:54.533560067Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:54.533560067Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:54.66085349Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:e671defd1d87e6b01175a50f5b09f0f371822f247fc2e3ff20533488e0706896",
                    "sha256:31ee949871c8f85a026ea3b82650659b691c7f9072c35baab9888c92a85f28fb"
                ]
            }
        },
        "latest-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:50.06167754Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:49.941507937Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:49.941507937Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:50.06167754Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:5a1a4b9864685cbb29b0dafc02adfd605127c9bd5a6c8adeef656cb017fe232b",
                    "sha256:572c7e4cda8c9a9cc99f38c01b1c73f134067ad73750dbf65fb33192d1c22bef"
                ]
            }
        },
        "latest-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:21.73106563Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:21.602549209Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:21.602549209Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:21.73106563Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:bf8d6c0a39730c49e32cfef960f349453924434ae30e38e85cdbe4e44d958031",
                    "sha256:ea2b2524e1b2dedcbc243c6cf6a173ff54579385e8687c3493864015215f3f2f"
                ]
            }
        },
        "run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:21.73106563Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:21.602549209Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:21.602549209Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:21.73106563Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:bf8d6c0a39730c49e32cfef960f349453924434ae30e38e85cdbe4e44d958031",
                    "sha256:ea2b2524e1b2dedcbc243c6cf6a173ff54579385e8687c3493864015215f3f2f"
                ]
            }
        },
        "run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T23:15:30.462909864Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T20:49:58.705358685Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:24.834287933Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.565567755Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:25.579271093Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.617204263Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:25.629384601Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T21:08:29.321790107Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T21:08:29.46619614Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:30.351739387Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T23:15:30.351739387Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T23:15:30.462909864Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:bfe341409759f9ccd364ecb2d335246560d19282f3ecf321c53836e101a82d2a",
                    "sha256:22279a1bcbb3b6a49c8d9ada414e0b58c5c83f35e20c9a33acc65e0aedb733a1",
                    "sha256:59b3dbe842a8cbc03ed09e65a15a87e8c46f6653b87eb93c5b37d8ab77060acf",
                    "sha256:2ad87538d509ffa4457cec4d29a36d570c8392257dab445452209d4097b7bf52",
                    "sha256:4b3f303bc53eefd36ad3db9ee937836bf0e5855a96ec2546c67cb8238fa8c5bc",
                    "sha256:27f44cee2cfb128916d178e2e1dd253065b766fcffe0f37cdb2588702c65bd5f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7f5845d6da8e4b02efd4b375c5222854a386a7b02c491fe3b96307345b96014d",
                    "sha256:9e033e761075715bfea9229a9809aa04de0eb02d1adf417fda84fe5053776cdf",
                    "sha256:f7d988453b1073c2a27e138db65db955cceccec423a703213853a45d8df812bd"
                ]
            }
        },
        "run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                },
                "OnBuild": null
            },
            "created": "2024-03-05T10:48:47.996999801Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:24:13.360409226Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:22.770169859Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.650621519Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:23.66033272Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.670216283Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:23.695421657Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T08:43:27.455502812Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T08:43:27.593974423Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:47.881285875Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-05T10:48:47.881285875Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-05T10:48:47.996999801Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:28463901e499aa0a1515b57d0fbafa9cb9a2cc02cc10ed1687c180941c557184",
                    "sha256:0ca6f2444de4ad55ab4af4fd74364d376cec4fab74ebda60cba78c9fa2d7e649",
                    "sha256:cfc10fd96b96916769b790f45b5a4f0a1a17202f2532d659330de963d4494ebf",
                    "sha256:d2c34fbda1de7685d96923948d480fbe0ebab10b9087bfebda73744dbe2a6f9a",
                    "sha256:0d88f38f1e25f8d79cc6f17c26de206e21378fdd492c88062ab3e718003d32df",
                    "sha256:01e1144fabf916d9df9dbc69c087247ccbb1e57b391ed28f7dac24153a50d7b2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7ad9ead66349340e94a99303f594e85c786a6fabee7368153801d079722794bc",
                    "sha256:a48a9047b99b4fed48db6d61520b41d2a7d5eb29a6b5bfd91d5357118401fb5c",
                    "sha256:569d0c33cf6013b10b3937ff0c18647cb74aaba0eed8261d02a75eddf55a2fd4"
                ]
            }
        },
        "run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-01T23:47:54.66085349Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:26:29.343455526Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:10.957762154Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.852141047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:11.862471903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.872331413Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:11.898584749Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T21:45:15.686171825Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T21:45:15.820771715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:54.533560067Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-01T23:47:54.533560067Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-01T23:47:54.66085349Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:3a6d39f67382783e2c69d9a448aa59d1d7654260210364d05c2cae2ef469e3c8",
                    "sha256:8b316e0949cd1905304ca774963ddae530565f690a65de9db1a2dafa9aed0363",
                    "sha256:7fa4949a4c79caf7d749cc4abcbc241a5dd3a5c8d0155458cf6d4d83ac483646",
                    "sha256:0a0eea417236fa5be4e06c1d20766fd9f3b0e064419a66f356dea0f1f6d794df",
                    "sha256:ad31ce618fd1f26b74bc2900fbd27319ed86917e85375f90b57d28b291156d51",
                    "sha256:7b8582873ef4cde2aca83ece090a3993ca7c4f8fe0b13c3b0b064f08c7b21c21",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8050b5f7d3d161f91b3bad0576691d8640130b32c0b8f23db87cdd4fee47c82e",
                    "sha256:e671defd1d87e6b01175a50f5b09f0f371822f247fc2e3ff20533488e0706896",
                    "sha256:31ee949871c8f85a026ea3b82650659b691c7f9072c35baab9888c92a85f28fb"
                ]
            }
        },
        "run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-04-09T20:00:50.06167754Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:52.915602222Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.100191166Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:04.963844501Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:04.973366628Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.001513857Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:05.024710968Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:54:08.797015979Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:54:08.943058393Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:49.941507937Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T20:00:49.941507937Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T20:00:50.06167754Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:03dd9a4ed991dc43e9a504ad71941782bb6fd4cd57f8ade649bbe25b622e3902",
                    "sha256:d24e8e6aec171dc7068d2c19b85d8c6341381b2f0cf4e1d1a20d5419f2d1ec53",
                    "sha256:e743a07ebcce27b755341d992eb4148fe86bd04481c6d8f2b6fe7364a942af19",
                    "sha256:1c988fbb0bdd3374b1f72bebc1953bd62853c7e33608dbc885ff64eba44dc1eb",
                    "sha256:7fad6968fdbdd1afee5f76e3b2f3df1829677bc85be4fa920cb57db14562699c",
                    "sha256:2999088cf700c485af0973e03dd5e2ff9d96b3f604f5908307f3edb5377c6d58",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a75c43802eb36b20a7183fe5c30e33ef495a904237a7483d5c73c1df1691887b",
                    "sha256:5a1a4b9864685cbb29b0dafc02adfd605127c9bd5a6c8adeef656cb017fe232b",
                    "sha256:572c7e4cda8c9a9cc99f38c01b1c73f134067ad73750dbf65fb33192d1c22bef"
                ]
            }
        },
        "run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "DISTTAG=f37container",
                    "FGC=f37",
                    "FBR=f37",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "iot-gate-imx8plus-d1d8",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64",
                    "maintainer": "Clement Verna <cverna@fedoraproject.org>"
                }
            },
            "created": "2024-05-06T10:39:21.73106563Z",
            "history": [
                {
                    "created": "2022-11-03T19:58:13.618756383Z",
                    "created_by": "/bin/sh -c #(nop)  LABEL maintainer=Clement Verna <cverna@fedoraproject.org>",
                    "empty_layer": true
                },
                {
                    "created": "2022-11-03T19:58:31.895761202Z",
                    "created_by": "/bin/sh -c #(nop)  ENV DISTTAG=f37container FGC=f37 FBR=f37",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-29T00:47:03.16713451Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:270e11b4c18af1c1efb8b8579be7fbda5255d56dd69f83ef7d933cfd2c685e5c in / "
                },
                {
                    "created": "2023-11-29T00:47:04.125919026Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"/bin/bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:28:47.993183335Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:56.501476974Z",
                    "created_by": "RUN /bin/sh -c dnf update -y && dnf install -y   ca-certificates   findutils   gnupg   hostname   tar   udev   which   curl   iproute   && dnf clean all   && echo $'#!/bin/sh\\nset -e\\nset -u\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    dnf update -y &&\\n    dnf install -y \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"dnf failed, retrying\"\\n  n=$(($n + 1))\\ndone\\ndnf clean all' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.631980985Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:47:57.644124262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.678847981Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:47:57.688494096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T09:48:01.526529414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh fedora 37   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T09:48:01.665893428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:21.602549209Z",
                    "created_by": "LABEL io.balena.device-type=iot-gate-imx8plus-d1d8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-06T10:39:21.602549209Z",
                    "created_by": "RUN /bin/sh -c dnf install -y \t\tless \t\tnano \t\tnet-tools \t\tusbutils \t\tgnupg \t\ti2c-tools \t&& dnf clean all # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-06T10:39:21.73106563Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo $'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Fedora 37 \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:22de68abb450063be7e40efd22fd3b41bec469efafdd95e25c65998648e52b28",
                    "sha256:ef64ad49ccf58709af070779ae49d014558d78a8b6a21fcc279c09ddac79e6c9",
                    "sha256:486e799e950e2b998ed0a1a7221aed44130002259c2b437524c7a8a72b725a56",
                    "sha256:5ad52f9d14deab1b2c3a79dfb68bf730440e209f5926a2cd2ebd561c519a08de",
                    "sha256:73001e4334a2e5a98b50faf87e712eaf851af09ac903e83a569150844ce9eda1",
                    "sha256:696c197b14bb7731bf0a36bbdc5e5272937b693f192b143e02dac747a1305ba1",
                    "sha256:f27b4f97c199fdc59cc49eb91fc7a348daf160285ca6bfce88ede5b64e4bb0a9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:22341517b8222bb5810db07c816fbd0de10749523856c0263caf14789e77d27d",
                    "sha256:bf8d6c0a39730c49e32cfef960f349453924434ae30e38e85cdbe4e44d958031",
                    "sha256:ea2b2524e1b2dedcbc243c6cf6a173ff54579385e8687c3493864015215f3f2f"
                ]
            }
        }
    }
}