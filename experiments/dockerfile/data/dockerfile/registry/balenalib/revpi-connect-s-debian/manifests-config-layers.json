{
    "manifests": {
        "20231025": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f451877547373e13c713dc6177acb56e85fe907bbb1b407ddf0b06111b9c2b05",
                "size": 8336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc521c5b98350f6fd8c72ace1e48558bb7b53cb3db201a2a3b42095401cd02f1",
                    "size": 30062869
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b6d5aec1849ba1833ac051cde7c3e335daed8c39218604d525e45e43890fc24",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3aa649aae7c6dc26b73a8c19a91f6b451d8e1ed1abec0bcc0ced6ffddcf46c9",
                    "size": 13085478
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd5714ed45a495a2f2fe046f974b9b5a91d77aaf88912e286d7ee62027995595",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63400a67202becdcf50b485680cd744b529f946af5649b926217a854ffcbfd7b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9dc3da9d38e8fc0df94ce84b3a5ab08ecabafd7c46c2ee6357c21c6953bd5d6e",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e69ac7887adb8cfab33ae868d6da7936db42daaab9a00619232cad3a897d189d",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34dfe2f4d9f225a37cd3871771032c11d329865018fdeaafaf0b7cf56dfafe74",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ce92e5345643eb483546e58c62c7725070f28f4f6bfddab07955685cdddf971",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89cef4ac0d76669fab5e4527bd8afc5b4370756b8236c796f7792fd789401ee5",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:461d1147a2f6747d83493c34b582ad1370c938758f41d70f0a78cb1c597d6782",
                    "size": 12068359
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa3e73f8f488d8fe184541ab81f75caa64a48e9bacaeb9e7d5ffc3a7aca9d29e",
                    "size": 472
                }
            ]
        },
        "20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7ee27a8e16f68f1c4acbcda94e6a2ed257e7e127bbeb0628e14b6bcf67e41930",
                "size": 8333
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e498137f0ed1053c364a5c8a688616b4abee72496a0b97cc71ea5e603565070",
                    "size": 30063905
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a962e6b7bd5dd90696c0bc1f9ac2a568eaaef3a22219d2eff13d9cb195597150",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fea786d312ef286d16b7d4e6ee8458d322aaa20415efe207488a22742e42f8d",
                    "size": 12976925
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9add177ed94e43eaf6152516d89bd8666c4c3b9f857e372cccb741d0f7a6051a",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:646acc1e4f4b0b6f673fec5ded08359096d8777738cda925b31778674455bb32",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c1bcca44c46f2bbeb7afc7826d48e466466a20fc5cbba593009939cf9ea7a87",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ecfea6abe9c0abbae44e7409aca8146de0eb54a867e1f0a0d100544361636b3",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e586601c5bfdd14477ff2d23a36db89885dbdfd7083cd1b32eaf4e60d31f87b4",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d710085f990e47cc061e932da1b0191a372d9e5a46dad800ff0ea7e8fb5de6bc",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01cbf7d6dd9b96f736ac48f4051e375034938bf88414085967543bb229f89b57",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a21628236f54a69d165940605451fb93a5298f23e09803be89c9a62f859fc88e",
                    "size": 12068172
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62f08df4fa32064914931605ff563617e44bafca90ec3b37aa2788f7bfdbb36f",
                    "size": 469
                }
            ]
        },
        "20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:00a186d12f8cfbcb0aa36cdda387ed8da4871e1ce2243018a9dd41860b94f473",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdd8361700a94c6e67ce55f6ca64efee6a4959612611750a3ad39607c92bcf8c",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29e56eeb3070309116d2179ec9e8118e82e9bdc22c115d9692d83fc1fc589b59",
                    "size": 12977479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:817b355e7456790f98bbc69c6b6374e2cb821bbc37f68b35b7ab2c3955b097ee",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2b466f8b07788cbdfdd83414f5ec111db7be424576ead82ef99ece822ed5e05",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ede96550fcfdad8aa28e78cc1499a08832097d591d7af3d4eecf153531d52d7e",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ac35e5e5f201c367dfeb909a064d5217ad9a39bc499aa885e95fe690822ee53",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92c69709be30d91bf7d4dbb1ad1976d4cc863bc5d0dd282ba18196143797996a",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1f4a072f19c88d4708ab8a80b4053b0d8928dd3382ce1266a221bf2fb2291e3",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3104bb9ca5f6b3448e2866e4c0cbc6d6ee330fc76b354795d642d712381adf48",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:671b2be499a1c1569c41e4ffbfb8de0c817662282829e92f032ce1b266b9ac8e",
                    "size": 12068089
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a488a091569ea54f40ced18d189edbcf1e3d7a9655b1a9c83c60da9a3dcee842",
                    "size": 469
                }
            ]
        },
        "20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:975fc0499700f5f503e4f0434ced410bba70e8e39beecf83e4d53095585d7d94",
                "size": 8335
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2fe9143d82b48fb4af3e438fff9e9e9ab593d054ee425414d772860c287c00d",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5767a74deab1e8695fac2d12bf558a7262e2f85d66255fe8c34bdae2aa79d09",
                    "size": 12977474
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f51dcc23055a6ce088fa403c9dc23c807eb3b73ef54a32c56e81a2e6e5684c36",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:413a9f60ae65fdeaa8c26f3dcfc25b6897068e9cfc74d7d32ff3b76b9a1901f6",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b49d769a1ef19d9fc4421bb0ef1ea00ec90e373b77fc43edded2f5df83fa991c",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a38eb8870d72f89d84fe232f13f96d72d354a63142c9ef4ca170c7733e81d2c4",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1efd48e691e3602b17ddd9bac6c2956fa2de2e9606dd60f69429965889d8cf2b",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12a89b279e10b7cb86fd57f8f8a4bb6943a14ab080a533ef7be0903d48ecf13f",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d0bfd75d90a345ab4adcc7ddc2bed23e515dcbd8a39149f6b50fea1339c42f9",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57089c6e47553dcd9bfdc88c282220805f6785996abc742648a87d82aca9d8a7",
                    "size": 12068234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31171868d9f07fdd0b5a825a99df5ebeddc98fd1d56621b857bdf83e9e65cb65",
                    "size": 470
                }
            ]
        },
        "20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f1d5eeb6462ace2cbd6d22e5f7b4ae71fe705d4879321a6063017172268ea830",
                "size": 8336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c5073fd4983645e56f2d7c43b0578ce93e7729da21e2f1ff2afb8400b76479d",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de96a9d1ddaa697a3579450a1028384ce039da07321441a43a0a59bbd3c1b15d",
                    "size": 12976677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1a90dfc49a156d7b3ac0247618be2b6d6fd50b77bca58f5f95a58cb555bc90d",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a70c314166755c7a85177e5eda327d48423ddd1470a5d8a343315bdb7830bc64",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d439ea52060fa5611f07ae0a691cd2b8b1bdadfd6d9b73510b64983169413a",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:480d7642da0ddaa1b99731162951f73f0ab9f1dcc74e511a5d9fe681fd5c3356",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6736fe6e47ba3d229fdbaf7bb7071b97152d2f88a9a0582de1426bf7efe0d26c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:208a0669d184f22fac9b22d3aa8c57f1420fc47d5128c0745500d0e2e8260cd5",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e52cb06c0f7706fb99b300cd78287782989b48ee6b4b47145d82e947cd7e3d3",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:681f2eece34efb6245cec26c1a78fa11176abe12d00843154d8e4174024d39f8",
                    "size": 12068141
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ddaa96c23eee550f3042d563c4d2d009007989b9aac976a16abec9cdd6d40ee",
                    "size": 471
                }
            ]
        },
        "20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:985a17b47997baa440509c024e676299f35e436d50a18e075ea5450c30b5f837",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fed5e00f3daec5a11cac1dba82d5c7764f3034fc44920b4ea013d3d3b50adff",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9e4ec748abce4cea17e5fc65089ba82a57ecb5fa64f8eaebd2b1fe5bf63bbc5",
                    "size": 12976746
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5bbb9dd26458939c671a6ae3689e843bae70bf30a829ffa9b87a8d65c0c263d7",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c13bee8013c60572d5d138af920973ce92631407d6cfe4b249bd7dd36ddf367f",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7c1703e38bd0c10adb8cb901cd9fbe718ca7fe73bb69410682937d6f2fae65d",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8a8c78768260afb3511b13b7909bb2c18e6bbba87bcd638426426e04c76a185",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f549f42f4d4d0f9a0d91a794420c324a67330cad829e4345c51696aed5501c5",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2520845ff73ed6ba9127c4faf4f25f15c350c37c20c714eca2496cb906ac7ca8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c712c29de2fcef7400e58bf9964f2aae8dabeda214946b45459050ceba5377ab",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3fd854beb1e43faa985824d8ff4d6a19672c706279ef2f4b5ae1353e7e645d78",
                    "size": 12068279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e20029bfe38d57c696eb67d20206850cdcc25cb85a90dfe4c61c82c739e1bb9",
                    "size": 471
                }
            ]
        },
        "20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4cbde4a792c9461d64618b03052837616b0da6793695e692b14519499a347e65",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3508bfa687ca31d022999303de1fa4b505f43436280313e4f79483dba56a54fd",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29fa4cacbb55bbe4c2f43337598c7e214d4db670a1b8f9ef77d5263a6f974ac8",
                    "size": 12976770
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb687a9ed447b9ba7e0c7e1d6499b3ccdadd73a79be8f4d69cda9fc53ba267b1",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8989164d23ea6e023e214b59c81f995a35e28d00205cb3b7763e1a02027bd6ee",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0c00bb9a3ed83463b51562d150ff8a703d89c3b5f299b1e78bff960f9a631fc",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb505b74b504315c6296202f5b1c2fbbcacadb506f7ccc5f9c99db08a56c42dd",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09d4197c190e339573857337d4424733743c266e75bcd25453e4e90d6de2ad0f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1bfb8ded4ee9cd7afa32e3671ae3078be45e9060e3c955b92ab87480ed03b5b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8876f8e5f597d56ef198459db6931f35141fe8ca9e468ab6b8a7008b6ad1ec5f",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b31460e22d44a134aac839c48ce8f82f786565ad87c91fc0bfeb21669f2f4e66",
                    "size": 12068381
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e5d24befedb90c3a9877529a338e7cb9f39804834d254878cfe14ba465a83bf",
                    "size": 470
                }
            ]
        },
        "20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:15aa57be64bc8698342633d4547891f53cdcf82f9cf691ca9ffd2385a0be4e66",
                "size": 8336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdc982aa2cd91f3d8c1a394fe291b9b4617ab5a3e8621be17f7e8f448df865f1",
                    "size": 12068260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e65fda39b25177d70108060aadf1a969b2f7159771ceff42389d53ec6a54a18b",
                    "size": 470
                }
            ]
        },
        "20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2b7013c37d6b2c1d1431abcffc4718dc49a841a78d7c5b3752bed41c184b2c66",
                "size": 8332
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3b02ff1abe5dfe9791505936f93c8316422232986a64a09149fe3aabb8be2d9",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:759907076afe713c4234fb5987290ccfa61dd49daebced99e301665b885062d3",
                    "size": 12975152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d19c37c9190edbe13b45b66a2b8056c396ee43a72916ba1d9ca757dc398c27d",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdba65c7a86f749c1d475ca45f2a65c80d5ad0525db04e84db2da8803614bc1b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9f4c9bf8626165f2f2e675cc143ca800c95ac74558ce5c1cdc0928136b2a45b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33c9823ab36b119e618993bd63dbbc9cfebe37d67ba4ce036ffe5203e4de0be7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd83e03f85224ec03d743a072160fb9deddd86af0bf9cd2e7b6a4f2dbe221b58",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a42f72c7f4eb3e1399bfe85d2f32518ba7277a04b897820a0030797b4825d57",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5324c9bc68271cfdebc5291757fad42a9cd8e644ccef3fa6b3820e6dc0e61cd6",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89b2cbadb70cd196f31440ee26009b58f03e311d2d8caee65ebb2c1bf1632079",
                    "size": 12066196
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37daad9c305eaeba9f7300290ab5bb83040a3fbf4deb76a9ff3c75463603be29",
                    "size": 470
                }
            ]
        },
        "20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:df25f7dfa80e8dc1dfae217927a52846b9d87d2d51bd9917ccf4fb7292204e02",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4e883aee71b5ef97bf1ffdfd139669e73ef006c560365d29cabde27caa6b13b",
                    "size": 12975050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f03e14fe93efd751580a2d51cb4489a57eac27b5db895225befd9a2299711fd",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef2a23d56797032756a4a8e8bd01b2c71a198c10e4e75e46bb3508b707d88d5",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de945cb97c6374ff7ea085bcb2edf737114d2f71f921c9a5a72c2168a40dfaad",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f482a15b31fc59f209b49b1e3bb7a58f1c350c673db22910a5cfdc4dc3ae6685",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9571608af5da43a8c78a43bfb08a829b5fcafda5e8292e393472cabbf0f804f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9614d73f006a2cb00875772e38550a822b7ee1914fa1a3a9ca724b0f0acb02aa",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55d55aad7abd855b5bd072003c07952d0f3605bcd5c55718c85dfbe5501b78bc",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a011bab6378ab6beb8adb79c7af1b10f94ce9b1bbf98c9409d30d40a1600b18",
                    "size": 12066147
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7c31778d110c356aa857f034acd571c7157c60f45598f02a7372f1e09405d9b",
                    "size": 471
                }
            ]
        },
        "20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a37872969e0ca00603e64b2f430e814a4c79dbafa41591fc4b6a1587e3ed0bde",
                "size": 8319
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd08d71f9e4be4f65e14231b96b47eba749b90731d6ac89a6b122102497f0520",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ced2846c7ce7b5358d8d1ca581b422091108201a9283aa8f845b5b6acf13b45",
                    "size": 12975074
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc714b302c222d2337d2a96a68bd0f8e2f6e8b6141b063613b4201f1b9bf88ff",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91059ecb4797f7ed53ba6123bc3708c97ed915820284c6e9ab28d76f72973580",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10793d475cc903a3e7298e67feaaaa5b1ab39b699349227473a13d747c7bebd1",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7e5860cbb43236bbbe750bd6abf586a8856e076ee2e1c38f33fb4bc6cc9129f",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3528b47aa83bdaf2eca21dffd496e9b26a4c6c17e7ef544f7a136ea69eb5b829",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8d887e8d98a1d19fda084161bdcdc428bc666757604d237cc331b3e96e3773b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c42376533b2b7356cd47d1c5d2930bb9f16c8bcf09939ec53070c484056a89",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d7c41e39073993a13a4c1389895a0a67c9430fc38339a95fe90acee84aaae37",
                    "size": 12066179
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:121fc3a200e7784ad770a628bad000d2461cf083a2786f2796fe5dc6778fd548",
                    "size": 473
                }
            ]
        },
        "20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:97771640e96933a22e5920b479f26bfde1f76f6ccc1d7295998a55274e601fcb",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a0e48841b8e49c36f6b1a8ad4efb4d37c6e10ef8dde5cd91f4dc437d1d8405",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55a1946130ccc17b581e6b524cf631bab9e5fcee60de01f0d39244a87686b92b",
                    "size": 12974885
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9858c7c5616b7ed0d90d6fd0d87ceef7f797f9d35758625edeb82f9e028aec60",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efe8622a8e40ac44137b3b5fd0dc0f14ad5e810e0338dc547f692d8b6a35c977",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c78e7355e42143ed74045da95e7de3ad92272199e0776d1b7228a150a65f47",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75b07c5fa13c3200be81dc39d20abbff29122ce62e20ebfe91047e7eaf0fbfb2",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a595d9ac359dba0005931f718e650d9edb7c0a1e3f6d9d8acce991fa76ed260",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95af7d2de70e46a0ae3136c3e62f38101bc59d80d433aa5f5bbde3da44a6280d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15bfc11c903d27a21ce686bae35210aa061831dd4dbc80e0104e5cc4ac5d9643",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8ede8ae4094991acedbee726d1b6e919b13bf5c2e9e9310737a8c0024c2b922",
                    "size": 12066255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b182c8f04a9cd679de5170fb46f659df5da9d9291948137fab51b103a096ee0a",
                    "size": 470
                }
            ]
        },
        "20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b120c5f973e16b50b3e4435a2da200209ec6a92ca85b90102459d553a33406c0",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b526ec3ffa40824ba07a65cbad89904ee73075f504d2e71b9d2c95bca96c7510",
                    "size": 12063909
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8649c253d819480620bc59d342cd10f3a09881624067a80329d8b0b1e0f84af",
                    "size": 469
                }
            ]
        },
        "bookworm": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ff597891452f426bb62de1a7678204597df069ff8b66acff3294149a0e280d0b",
                "size": 8318
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d97f6a5d13532e867231d23d92620a81874d51a456196be50154eeb32edc08",
                    "size": 29179935
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08716b5fa8a8dac5841f12bdc0f31f54a3da830bf70141133f8b255f449333be",
                    "size": 17295027
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707b3d6c371920b46276983c9a35f9680115a8ad4a7f82225ed6cf6c76b8d41b",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31a3dc6ecf78d0ebc1a862ebfeccbdb6939c1a0cf8ab2b8037d0aca0f2437f3b",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f660eb8a77d80d8a5a87d71e115c39cd0576f6873d9bd48a8b6793b854175762",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:816d20494215f3bff15f5cd2965cec4a1413966bec1ff4ec002dc9a679cae73b",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:970ed101c6a8f4095e4e06be742d325311d65ad843eff671ab7de983a7f96cc3",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1327e46d226352fe2f149d16f29321beb31604d092f1f1749320db5badc17a4",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fd33dd779ac3b2106c4698d36c170f69458794dd9cd587e87a5846d4c1e49e6",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42c8746a4806d48a61d3e5114011b82f9988cb5a4e691f6c473465d14b8c07f7",
                    "size": 12458524
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:93bea923312a363f7127d656ff3b9a70546628ba629bfb4ac723b97f996fa894",
                    "size": 471
                }
            ]
        },
        "bookworm-20231025": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9b19de645ef06b217c223a0c741407fecd43c2889cbf8eb1f9da0fbe184d3a91",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e886f0f47ef56fcadb6ecaf2116056bbdb273e0afe07ed034498b198d386c04e",
                    "size": 29157221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:02899d35a777505c10a815ca948488b4bd8077c9687856425f8df68788d4e54e",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a77c695e24ea2f91a2e8114ddd3196431ab3ae6a7d952c02c6caef2c67a95064",
                    "size": 17687909
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6255cf92406207dc3272d7c58efdc47254cc3715de1f74acf5917140f4d1f965",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c51075456f0ae02428be39b8d38ef1ad7b3e1e7e7aa975b72d4c729426b1d54b",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7b5b2d9bae12061d3f34f5c84049945b4fe7623c7bcc2d53f7e97473a01edab",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6c6ca0a2599f4fd29dc03acedb740480df334dc4599fc3cabbaddb751a700ce",
                    "size": 1003
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc2c706559817e0067231e3f0fef86b2b1b56f7fff46968c2487e8d42cbafc21",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:451d7720da59e6593969056c3efe6930200eb5f9ed8e87d44c6e3f3a559c6bbf",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c21d9ed73dd797e536ebe3d297882c9149da8e17655153e7f6f9589735f8a1a",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5edb08e8b7e7c0741524382b0c5f177c4d51afbc256e0b86b4f02e3069429786",
                    "size": 12461249
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f592771dbd551a6b247263f1d6642f3fd9d5f317b79479201c44e76b9e7bf1e",
                    "size": 473
                }
            ]
        },
        "bookworm-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4f4fca30b00c293b8e138bab1603e6768b26203f324d9f078d2fbe39f33406d2",
                "size": 8337
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31ce7ceb6d443e2ab4ae91695fea10e1443417fd94c40a46994d5a96940ea1ca",
                    "size": 29179119
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d62f5f136a045d408e88f3c40511f9e1892e7e107c5350d6ebd16693c9eda71",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e86d4629efe4561d16b9a3b61901dbe4cbdd729a2292959129a56ac6a8e72e92",
                    "size": 17232869
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:910f18af10214fd30473ef6f3f29ba9c2d6e07dcd25fbf88c7707a091a867073",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75bc48f877063bfdcb06098372113700ab318ef7272a2ec2a8e911122bcf45e6",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85c354e827088b1deb418e2c1213e81a739de00270f36bcaa86099abe8ec50e0",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c041dd20ad0e29f3551883a8a525b2f1d6c1e902fa751cbf757b83abee8526d7",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6c7bce52c2ba5d58d84b10cb3ea66b4fc2d07f04a080765da3f1bfa79300964",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1cb064a3f772acb5639ab3fe4449f9efc98792aa3b55ff9bc4d620d40df4e6b",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:795a7145169b3108fd1f1ee75d117da32f67517281f6741eef2b5a29dde71e23",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68a253c79fdc306796a3d713ca9876897aea0b3811e114d6604f61d03c8cd1a4",
                    "size": 12461212
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:381e7f7236afd8bf40a3fa3d03be939e7159e7c42bcba83608d814ddf131d624",
                    "size": 471
                }
            ]
        },
        "bookworm-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:af5003eafd26ae7482cfcb344ea2d924fbcc7794c2ee3e9c47b7f6978509d32b",
                "size": 8338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c6d21737d8318aa15c4cc838475029a5efc36c0429e3d8da80d97d0b96d9aaf",
                    "size": 29179277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84b5f7b594b419e106519389a7f664956cc1e4d0d13aa5aa4572f25273581de1",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34adb20a00d4cbd68b0b3d7f4c29ec193ca54d462a1a4f1f987df86125d9b678",
                    "size": 17233234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c38e9a4548f72178fbc193313b70a4630d021981b0742e5b5b1e4a82f1b8436",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:911ef0b38c947d1fc9954382a720e14510cab7a30fd023d58b0072789ee97dbf",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d2b2e7db1f23405ea6af4a05867062369851c486bb82ee4a32539e47c4b27dc",
                    "size": 256
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7eed199fb526c966b7a68e813c4f744a182300e41896eb3ca3512d2d751f0c8e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c01e1a7a6c6a2a71ccee156b0f5c00619da72be3b72ec36ee85a2efcde03c743",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:676a484c9481b7f9ef360fc6c120bacba3039763b9078cb7a0f4b272a77dd9a3",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:668efd96296de5a6ecde068fac9aa699b4a3c9122cd443904bc45716ee2c05a9",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d781496e1716e6c7d7cf12ee58eadf0dafa7a0b4717434e90ac9d476b9920cad",
                    "size": 12461012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a56a778236d27d30c009551b8f29a3ffd0007abaa8641fe7602c2f711032dbb9",
                    "size": 470
                }
            ]
        },
        "bookworm-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:31736d0dc6f038ac73ed193f10ec9f0e4d5623548e08cd6bd59c70944b3833e3",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c6d21737d8318aa15c4cc838475029a5efc36c0429e3d8da80d97d0b96d9aaf",
                    "size": 29179277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0ed2dcbe8e41b5a646daad99d68812e69f8b100876d4c17e25c307761b3cb17",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34a34dc8a79ff7d9795881f77bc1031e4aefe365d9f51665565f59dafd03cb01",
                    "size": 17233391
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:671b3dc33eb969e87fe43e57eca3ce3d21c4bc79b63e2fe963ba25d42917e865",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2373e036d8e36b4ba9f1b31ee80d714f2394df16fe7e9100fddad80ebd53c047",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:884ec4f0647b7f5b0e13b995b81336b448606d3069d223505092f6f7df0b87f9",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce83390bf9352f97337ac7b24fa8834327f9a273dbf6ccc3cb3c2ca6952f5775",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6df0776f8fc114913a724161aff5b08d113181efef23ef164ec8b6de5d66cfac",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cb71cd58a25d674182c5b455327177d92d4d1d5a934f01abdf6b3d70bd030a8",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf036aeba5201d8f3d9cc3b88045bc8bc13e376240deccfbaefdd0405bd1097c",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99680a75938ac6e942f00ce5ceae90a2240bf55e8487fad59d3d06e087ae7eb4",
                    "size": 12461079
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e63bde2550deb62b5c82192289a1df7ee9db3bddd3c9fdf5a88291a7b436de2",
                    "size": 470
                }
            ]
        },
        "bookworm-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:98f4e5efee1c5a4a55ce078131c0798d143fc44e1110af691b8c332a59581289",
                "size": 8338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24e221e92a36ab5b0075dd156b4f2ff095532a9b0927946cf6070bb1bea208b8",
                    "size": 29157269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0575abbd7cf8af271349983fe534ae3e04681cbb9b590c83d74e187b870bebe4",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed333f41be544ee74834fb8bc9f769211a29221f7f89c5a6b84903bcadc0c102",
                    "size": 17270116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46a48fd13877c0ef9821613dd99ad2d58c00a14d14920fabf252f4d7c2d13b81",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49937eeacb156c7d3897c83a2ccbf06c01f4fde677eb70f43ea753fb657a7c86",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4dff182a5a15eeefaa0f1601eca307ef5ef4227b8a96566b1f0b052304b3885",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac946561aabdcbaa7a56471c7432f706891faf1270440615e5fe227398cef286",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8247794ee4e56114f27b3912dac33719e83cac8e6dc4500ab7046cc833bb7478",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4570e560d135bb2e16df82ebcc0250b06af90268586e9ebebcd4497595f2e990",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8571e225437eb8984303849c28bb9dc91a0d8d9027155b331338a8ab24d24230",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff55dd7008302751137fc4ba9619452d9d895deb850c087f831845a1e1e2513f",
                    "size": 12458320
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a44111d01c5b1bace528ced49136d3a9e4a8450a1ef6e58dbb3d2090800a0c76",
                    "size": 471
                }
            ]
        },
        "bookworm-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:61c28b9a1d0c175a3093f30989d319a094434ca683a90ca27c90b081fe3315ab",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24e221e92a36ab5b0075dd156b4f2ff095532a9b0927946cf6070bb1bea208b8",
                    "size": 29157269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5813a1c0e348f0d85925d51173b2f2a36fb33de268820e927f1398edb089a72d",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95f1dad3adb10e73750e5eb9f989d177dc502764e1bdddd579c1b05cead36d0c",
                    "size": 17270089
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a0002a21e3981691653171d979d774351642122db5cd787ec4ab01396a5460c",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d808756a9ef382f423d5683b5483dae56515329606319f8d013b9da611fccd9e",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1728099dfcca585525899542066bf8075f6ecf071e7d29d4f9804dad8233b5b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:108e087dab4d988c5d111ed64fdb7ea774d1ba000f8048e215f44a21a507b42f",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62d8d4db13500e4117218004cdf4f07b1b124fd47b9edb96c3904b6066fe773d",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8aeab0168b99b814facc9b5063b2100fd0568ca19ebb6d7a97f4fd517e83b5f0",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a36ca96a7ac822d1933baa344230d413cc53e4d1d4cb3aefc515df9ad76eccbb",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6cb7f59c85b9667b4e1a3964bca4f521d5dde7070bdaa8c39d760b5e7a91dd7a",
                    "size": 12458271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f98a857a6cdfa95461709c15f4c713e9319610997fa522259a80ce4c16e6ee5d",
                    "size": 472
                }
            ]
        },
        "bookworm-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:65dda92a43405dc895b160ff35a61cfff671c98fde09401c743667f7076944d6",
                "size": 8338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24e221e92a36ab5b0075dd156b4f2ff095532a9b0927946cf6070bb1bea208b8",
                    "size": 29157269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cf99189dbb7780acbaa1388bc434d16873c04af8d2862d1fca3553b4a6b1514",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c7dbe3aacd7d6b8ba7a0d518925d2cc655c1ef1d46ec0ccc602a38bbe432365",
                    "size": 17270146
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c7a68559da92859ffa5ba2f918f20e97ef75145181a654c49f3d02e4eb2afe0",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4290deb6673f9b01d9d62c77a688018c9308c974bcee7b60b3e9446e38000b2e",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ccd16cf299c83dba929bbf9b04fc4664c6d417114890f2b4f2bede4c824ef70",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5f5ab777edd1cb6c5ad5fa6e175ca61fddacef26554ea8030419c64122dff7e",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed9ef477fa91d5018787983feff4ec50be6b49b661dfe7256a636f85bc10bc48",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56a7a0b9c3aa08fce71d30eadbd8c091d9182053709a315f909922fe02452ea0",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b11bd33784096d80050fd692dc9410f4c89b92903b5fc031315cf455c7164c1",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:50a107745a14623996f616fd55fd048c8c82dc78bd8575a5d82590112b25ff9e",
                    "size": 12458256
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:101d64b8b4e24b329ccfee852448229ff117f39dcda27facc59ae2a1342e73c3",
                    "size": 471
                }
            ]
        },
        "bookworm-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b8df303242d0accd65725bb582db82f7913a57fefb51152745aa6fc1a54a495a",
                "size": 8338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d3892798f8b99159e3c1136799bfed560027ce451b50d57d961f4f02577ff5",
                    "size": 29180832
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22069614d8d2b1e1dafd01c41d152b132c654b98ba235d377a890142ff429b66",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f1e5cf9e00a7902e00b008334219b4dae959090af2b16675f3f2f720532deb7",
                    "size": 17273540
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4c4da917d07212eb3e7f85700575e40991d76315cb22f1805cbfbfa85b662b6",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e5bc3830aef79da8b1044f04713b4788900bb31cff4f080f19351b9bfd86b8b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a0744c44cf23afb818633a88bdb1ddcbb9ccf74d19f52e7e193f28395b5d511",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:084eadd63883d9b6ca3449d2f98a6ea2d0f1bf317880dbbf30103967fa9cacf5",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ffe3db22496cffe06e688fb7689a5d391fd57d5b4ba6102ceb2d1128baaebd4",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46e10719b76d682284f64b11ad7447c82d5cdecb3ffb5ee720779a55ab7d60ce",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0674ad36c00d191ad5d966d21d2566ff273b95573cddc81b7f7fd537f899f35c",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:933d5fbda7493a81927d903810d713359d1b18f81b50ba6d55622e516902da80",
                    "size": 12458315
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f49aeacf7cad0b92eb460a9fe7415d036751f418f1a4f4043621978e23e69d78",
                    "size": 469
                }
            ]
        },
        "bookworm-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:39d3d51b3e45ca6e92167fa24ce367c90cb2d11bf7c9c5441d464af88d582051",
                "size": 8335
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f546e941f15b76df3d982d56985432b05bc065e3923fb35be25a4d33d5c0f911",
                    "size": 29156363
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8440b90072f5ddf2b3a5cc44aa712305ddaaa3a499515c126bf7897cae869963",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7429e5f92c211b44f138a644afb74ccaa1475b6f1a4f95e870dc47eaf805336a",
                    "size": 17291102
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:28b55e040c13344e0180fe961d66474a7a824da112b5b04a9efe022ad7b8cbe4",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ff418b76b81ced646377e5144cb3c6e64855ad72a8094924a4adff2d55b8cf4",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32ce0e96c33ce0b25fa917bdaee0892501cc39098d254878ef647809ad250f12",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16f62a7d423456619f8e8f6ee4fefd83ab831b40ddc35bd276bf11fc71552839",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9eb1f910289b61fefe4c7145e16e9859c20895ac646dcc3b40c0918f734ae17",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5b70e90f9506e910bc421205adc0c978b3c3389bbcd0858c5c9b44421a52c6be",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78efa179cf8468ff2e8295822c76e8828a09bf51493689655ac9d74dc722684b",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:532867178f1e39f3f8e8624a5b3297b8a3370f2c73756d2ac50f1bc9e7e6c28f",
                    "size": 12458522
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74e415594bf22cec8934b2ad3ca5a62bb8e0c74ca9c5c461af8225c48ad62e17",
                    "size": 471
                }
            ]
        },
        "bookworm-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8533022665f96d20089bbb957908832081b5dfee2e0113d51938492784cd4b7c",
                "size": 8333
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f546e941f15b76df3d982d56985432b05bc065e3923fb35be25a4d33d5c0f911",
                    "size": 29156363
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e800a85078ae7f67f3aa27d4f7232ccefe892223ec61bb36f7afd7f90bcc45c",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32309a8011bc1274781616b4be13eefa5499c77cf8bfc6f3076ce3e0ddfd917b",
                    "size": 17291043
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:97d7090362df78d466f9190e06bd71fcc237a681dec956b3621a20b1e415c65c",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:67510a8ec989165dd38736bcbb8c1840ccf684a59e5c3b2fc13a3aeb32275b31",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:907cde37128c833ba7004720ffb574fef7fbfc3d404664e2a53a530bd663a6a4",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc358e5ff00366d28275b125563e5006feb44ad171f01d734000d8c65fda4c74",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc5e95871931dc2b21adcc9684eab6071e5f29b3a96403eccba366756f469421",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c223d83464ff8f9a3c5441e15ef4ba9161f078a757682e057abdbca6c20a01e",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a157128dc3d8e991b45944b6188a163c93dccf448c830ac310f07ebad350165",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:06a3b1f39e5155c23c3428246fbf4d438fdf0370a6e81ed69db55ccca84358c7",
                    "size": 12458534
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8981a03ef27a21bebf86e0553d2923f3dc1fb8292eed6709fc7b9d6abe038a4",
                    "size": 470
                }
            ]
        },
        "bookworm-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c51924050cd22aba67b68648a9cb0c0248d4493cdfcc5799a70c64e15bfc9cb",
                "size": 8323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f5764b1f6d170ea07ca424965974024a14970ff826e9ffa3489c90dc040c24",
                    "size": 29156434
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91450bce0ec14ebc0a122b25141e10506f4769bca9e06f74ee4089baed5340ef",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b78547d2411f55322cb033b89fe4d30349d950b0505e6766c92d76fe032e446e",
                    "size": 17291107
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5fc3f1f26f8b59cddf39ac0a0e8fdeae71593ab5936f9b3d06973e02ec4b19ad",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:488f4edf6c1cfaf874f5b398ac0fb9ecfd19f3d1420ab593aef8497d19611a22",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc36d679b21baae7c2264d50eb37360ae1e0b470779a8788cbecd70ea09e574f",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:019760aa07be10ca58cd3576aed2e432ff9e599e9b5c90dc07943b7bfdaea7ff",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f42f6e9fbc5b750e5fe424587cbcafc4d4bb185dc62678ab031d04e27cf4d271",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c44ab3b6ef2c95d5f7a2794f49df47e851805fe0b0c88f18fe4745dcd05de83",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e710365fac4f74ff84332ccb7510beb82edc7e05c4be21dc53fb84626f505e1f",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42c9b26ea233b1e5f97a9b7e3e777018ff60c4e906d0e0d13af42aaf8c48d065",
                    "size": 12458656
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:230b169995b5a1a2df3d093a9b7b1f620f9c88c40c63901468b321cac7c0f098",
                    "size": 473
                }
            ]
        },
        "bookworm-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0386bac0705d88133ee897a647eeef871de86eae408cbecdd46655ced117059c",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f5764b1f6d170ea07ca424965974024a14970ff826e9ffa3489c90dc040c24",
                    "size": 29156434
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d25f96231021b5dcdfc6f17458892f12f71c910cc88f63f29dc071efbfb8f8a2",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb18e33e1cafb6f9d6e42633acb9b3d88bde59039fa9eea07a6d1721ed717087",
                    "size": 17291138
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d20bfb20cea478be56142533eb3913cc4926be97a8bb8d6f3aa1f4216e31495",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e19e63a023809499cf82eb5d5f248663666dd33b9ef2cfde3de11eebc66d034e",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86ebbdeb7b51b2170c1d43b47068820392ed517076b670147107730a7aa51c44",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:479634a3547768dd871b09166a515e995681aa46371ad1e429a3d6a91da463f5",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcab80059af90d56875c035653f2e3fbeb918fc69bdcced6433c73df985ac152",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5442132ede36f409d268414f7237498b5c1216b1411e94801666fd83c68ecfe4",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3ce9eb5ac756f15aca1e8e0c4f39a4db2bef4fdc12880d2cc39e0e81af3bd9b",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09eca76352b94ab77216ed9d0426ee6508c93359958c46cdf05aaa5bf53ba083",
                    "size": 12458721
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:72ac26a9b6bf979d913b36b3c46a239186dd639931cf9d62f4843018c813bc52",
                    "size": 472
                }
            ]
        },
        "bookworm-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ff597891452f426bb62de1a7678204597df069ff8b66acff3294149a0e280d0b",
                "size": 8318
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d97f6a5d13532e867231d23d92620a81874d51a456196be50154eeb32edc08",
                    "size": 29179935
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08716b5fa8a8dac5841f12bdc0f31f54a3da830bf70141133f8b255f449333be",
                    "size": 17295027
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707b3d6c371920b46276983c9a35f9680115a8ad4a7f82225ed6cf6c76b8d41b",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31a3dc6ecf78d0ebc1a862ebfeccbdb6939c1a0cf8ab2b8037d0aca0f2437f3b",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f660eb8a77d80d8a5a87d71e115c39cd0576f6873d9bd48a8b6793b854175762",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:816d20494215f3bff15f5cd2965cec4a1413966bec1ff4ec002dc9a679cae73b",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:970ed101c6a8f4095e4e06be742d325311d65ad843eff671ab7de983a7f96cc3",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1327e46d226352fe2f149d16f29321beb31604d092f1f1749320db5badc17a4",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fd33dd779ac3b2106c4698d36c170f69458794dd9cd587e87a5846d4c1e49e6",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42c8746a4806d48a61d3e5114011b82f9988cb5a4e691f6c473465d14b8c07f7",
                    "size": 12458524
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:93bea923312a363f7127d656ff3b9a70546628ba629bfb4ac723b97f996fa894",
                    "size": 471
                }
            ]
        },
        "bookworm-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:35a400b863f545a3125c99b33d443d718ddd5e06e29cbe31c3801814d10988ee",
                "size": 9294
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d97f6a5d13532e867231d23d92620a81874d51a456196be50154eeb32edc08",
                    "size": 29179935
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:808423f49e64d17ef6b295f72e203353559e27a632d6cc0c0bdff99024a0cca4",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c39dec34bc2c5aed1bf661eafec40178bacde431c055357adb5f208c652f441",
                    "size": 17295095
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8df9f86e854b5f331d6b082bf72d029678a866b2f0b7b2a1083b1a56d4b2729",
                    "size": 235017563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac0d073a69c158df65f9a9f80abaab3372b5e1fdf3240d69f8b4b13d21f47af4",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:284ef30e3160a6ea3e296c3574ff5153d441febf4015d8030e0cf3e21aeee912",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f415827183e08da6837e069146285665e860787daa8c7a79ddc0b11663207415",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab0d0c5a6253847fbf508b52647cd500afa441300588b0a752f1ef9a93196c6e",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f82a4b9b283623f9d283f79e12b2cae49850a51b4d70e6cf1f004f4df2c61d81",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a2ab8a049f67ffed970a5cccc56dffb288443f37980937840b02432755e1e94",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7cb121812cf852cf05746939c05eba760e654cd434baaa8ed3e3e69f296f3620",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db580398122863291111d1af0e04696dbdfd11f98ec1908b1cf7bbcb8b5e4f2b",
                    "size": 1177894
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:800e6220ad742eccfc8d3b237258f10d0b7ce6ad218083537838c8bff9000454",
                    "size": 469
                }
            ]
        },
        "bookworm-build-20231025": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:829030b22c4ced7f34f732da1bf1c008a05439363993d5625de658c84754c175",
                "size": 9312
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e886f0f47ef56fcadb6ecaf2116056bbdb273e0afe07ed034498b198d386c04e",
                    "size": 29157221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9b215030ee7f265ad0613aa11815f8a88c66ed92c0821dd77dc91fad7ecaa09d",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:224e95dbf3e769dd2d922af4ae5fd6ce81afedd5cb3d1b8e05cd59a3b24fc940",
                    "size": 17687993
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8a65ab12a1218ef96ebbf9b8e8024509bde04d66adf5139d193bd71ed31c214",
                    "size": 235003353
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91a97a1de66b8ce3b62916a2ae9832b62c74cdb224abbe2920fc463f11a5829c",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6958f987cbb1f18e2d9398f3928f1f57f92ec61667dc7e4c617bb5249e1d8bd3",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cbe0e81c71642f856028c55c91bb0a46aeef909ad05298453ca6d4be92360c7a",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7ffd0000df4f5aa2524a9d87a001a378bb7ceaa62349a31eb08f3b337690840",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e0cf2558466fa32d1b8910da5044845bfbc1042fd4cb0fc3cfbbfa69fae7624",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:915ef34e92680adb2e8aa7bf32ac3599c8ac2bc4250f8d93792d56e25df9e82b",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3d365ee4c7e91e0565e3ac658817aab8ac601d7af587dfb1f741f33be38933ea",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4265361994500cf8aeac36b60812648bd12949c7322abfdbc98c2b21db6cbcb2",
                    "size": 1177750
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac4d2885dbd71e815c544d587216a1002a2ddc6895851c532c2c4171adc2c65b",
                    "size": 472
                }
            ]
        },
        "bookworm-build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:44338cf47c301195c4e38231dd19845df9027672e44834030fa35232d6ff4d9c",
                "size": 9308
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31ce7ceb6d443e2ab4ae91695fea10e1443417fd94c40a46994d5a96940ea1ca",
                    "size": 29179119
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69b718b6fb847288f6ca57dc5078ac360b38b3b3c93f1de157a931b0f48bcdb6",
                    "size": 2592216
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6120febd16d0e5d1534ee95cdff781744c4cac62c28738613371bfc7f9794f9",
                    "size": 17232731
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0b54b6e9638d488c7cdad4881fe9a8eb58040f0fef0fcda1c176335d7c794ec",
                    "size": 229232645
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b3c64f02e47429f9dc53ae25d91794498eb36feb0bd6bec67af91d1fb112643",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c56d3ed552a849c9c3af0216730877fcc28fc55f508a15b1583053e331fc0d0",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1388e8a7d4fcc75fb088e0d4fd2c1699046526231b3b69f57651414d9d12a3e0",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ecd5e9dd3dc54f39b427fd8ac34cfbcb90a27a722fd97b52af93f66f23398c79",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6b709a2a1a25d70203de8d3a45e9c0043b7121732c872182c68da1551892d60",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0370c6559af9091e818d64c970a64cd1aa64bae62a9d27773cfb4cd707ad8124",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89d823c1cbb0a8d117b29131bc4b87e156e972acca3f7938f37564aa062036c2",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef86b80d2a7590e21c94fd201821637be514b4c9ed536ecf5cb1a44ccc5de85b",
                    "size": 1177164
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ee726c1713af3cb72f79b24eb1d3161d8a15820a05870a6f210945d29b95f9c",
                    "size": 471
                }
            ]
        },
        "bookworm-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f6a132dd5d2e142a485c9e66e48d6ce6e855dac0ca36e8e6964750f51190d1de",
                "size": 9312
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c6d21737d8318aa15c4cc838475029a5efc36c0429e3d8da80d97d0b96d9aaf",
                    "size": 29179277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8763b21ad57719252966111e137d5b1b1c11db200b363c3ca0caf6002cf0a15b",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55e4f744465ffe29417fb368f9124fa3e89592783bffa5dacbef57c7d059e989",
                    "size": 17233221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c05c3229ffd319aec16a8d48e898f90998ad58cd6b17f352d609c02b930f53d",
                    "size": 229231006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df544244a278b784a27db58e7236b7c6c10c4773e57750f9398b8ce387c89701",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:922dcbbacfc1c9c1dbbdf3ed1e4b7edda2ecf9ea4a52b05554887a47c1cba4c8",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ddc97fb038828412f8c386e634008a62d2b2e7f3c8c275844101a488cad286f3",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2519bceb60f54aebfd5b631fa4d09ae7af0d4f1af1a5e3c53690e34e0f273b2f",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db43b162605207dedede99d52cb0cbbbdb785aeaca3744dcfcea1adc2c6917ae",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01991c8ee530a1b11316cb79aa874eb416e82ff4fd1bc6f73742b65fb470e7f9",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:223b7e44fe2988d5574c325d5f1dd3d8c4e072def9ba7f97f6984954984ebed3",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:36346651687bac88e1fa78431ba9bf2111f529b8495cf39f5e92afc03f6dad2b",
                    "size": 1176896
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:73668fb67d0f86c0750056e955f0cb2db6eb3bfce0ebd74b3a602e9ea7f7855b",
                    "size": 471
                }
            ]
        },
        "bookworm-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0f63aae109de0f47b1906a7bc56bce82e3d016463c368e1865efa1e835190e1c",
                "size": 9300
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c6d21737d8318aa15c4cc838475029a5efc36c0429e3d8da80d97d0b96d9aaf",
                    "size": 29179277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2fe9143d82b48fb4af3e438fff9e9e9ab593d054ee425414d772860c287c00d",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:289930a23525b738766964bc6e2fa97bb9dc95de6405b2a7d204d03adc619643",
                    "size": 17233303
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:53ca5685339658d7a6816f4c92fae975748c058c61be05148dec0cd3adf50047",
                    "size": 229231147
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb3d8b3669d7c2db08b7e9a7af1ac2479951e2a6d200d3e8813125d6fdc48a39",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24ff94e0bb30f8de02acedf100810bfdc0ab606fff865fbebcee49046a63a52f",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2044244d711937f0785bded35d5832e99144db6bd15ecad28be79722a3a21bd5",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9e8fbf33ac06db2e047d6317885ea4c274dfd59b6689df5926c5d00dc6bf02dc",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99fa8c926fdf095db6143f39f3dd3bc83fdf7e84bbbdc6516eb1628477639bcc",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc7ece7b86a426f914e1b604a90a72e219a82d2ac23dfa99f8a4b3471695ab5f",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7049d0e3df2c98df67d1af7df0e50a9883b70824dd22ccf554b7dc9f37b75bb9",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74a2b714612b4499a65f38bc62140b441ee60ad5bcba6833310f1138846ad237",
                    "size": 1176938
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9514df4933ed1b2ea62bef5937b4c46214405a8d2a70f6aec0825650a517f5d2",
                    "size": 470
                }
            ]
        },
        "bookworm-build-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:14fc9813438df2a0a09ef66c780750cc05ac9f95ccdf9041b7d88af8780acf79",
                "size": 9309
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24e221e92a36ab5b0075dd156b4f2ff095532a9b0927946cf6070bb1bea208b8",
                    "size": 29157269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0575abbd7cf8af271349983fe534ae3e04681cbb9b590c83d74e187b870bebe4",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:004cb8021d8450918fb183fe3f016c0e7100229f06860f9452f7168858b1d1c0",
                    "size": 17270019
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c99787fc33e68ff964c21841eeaaf1ad6d5b07259f79d6ce22413f1066092e4",
                    "size": 229229049
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86059a75093e16e085a307332a7b3cda28029c6e00ce10cfd74a169fb1b97af9",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:248ebda4592460b67f68741ca8161b6a0715af0c5d4fec513d5f1d8cfa5bcf5d",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:869d5912c0f749a54e3e536d282c6de6c1719e3b64dddd877cd2fabfedb094fa",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ebf93edf2d751cd55120f1873e8dcbabc6c30baa892028d938ecb82a196bc43",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ab275e8b5b3670e8235d64d2465b13399e77fa4a7b93a0d1a5481295586ea3e",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8da4c88fbb72a483ffe7b0e168b97017598efd3ec9d0bf48d478ae676e522365",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e1d1951a0dec9041f4458614b02bfb7704ce8235915007c1dab5a7eed595123",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e84ec3c61afb8bdfa677cc6f430bf59465c879daeacb782bc387c7c7d8183b03",
                    "size": 1177000
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec63ac2fd74dee1ed82cdda98b738637456e9df96f3c5ae22aed084b8688708b",
                    "size": 470
                }
            ]
        },
        "bookworm-build-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:40654c406526b3f95d6d300dac80742a687baf5a9271cc8f5f0fd82d6e2d52bc",
                "size": 9309
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24e221e92a36ab5b0075dd156b4f2ff095532a9b0927946cf6070bb1bea208b8",
                    "size": 29157269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da2f9adb36126e173992f21bc755695ca5bcc0756839781ec6e130b04e7e6973",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ceb36614d5c7b9d8e35a7827f6c5337a7337972cb149f1685fac24553253cd87",
                    "size": 17270044
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f721e1d26261a318a0b15d933ea95f5e3f27fbb3efc0fe705b907c560e6112ee",
                    "size": 229228922
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71bfa479a4cd69dde40ad71ae8f1d4cd69c381f3b76b4abdb9685f728b9ea81f",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19e1e0ea94790940d72110ad690c2c53067d6acde752c9718af3641ae8fa2bf0",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d12c21ccfc339ee44cd11490e2237a3fa999e9c621d2fec707df9e3ff296496",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ee76f19a6859e212fec948a72e9a860320beb0d29513ddb662a6ceac9086ac7",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2133bdb856a3882f948baabbeb919ccd725679e2def0fce787670b81f7dfbe9c",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a3a19033713d9964c1077162422af2f383bb0aa2ef1d31ea56e7e12733863c23",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16666bd9ed438b34f2c406e7baf24e177f81aa1e993f1f69fd5eead93a01f9d5",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:93a0f279f27ac466c046f0471563e1844573cbf9137425ae99158dc6cfaa6629",
                    "size": 1176969
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da1fd76c8b59361b016da576586a56d4438b98d35485d9a77d4cadc984ba5595",
                    "size": 470
                }
            ]
        },
        "bookworm-build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f027a2e0cdada166975421c7abe9ddde88c4e66d2d89256d2de84a11e1f91054",
                "size": 9301
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24e221e92a36ab5b0075dd156b4f2ff095532a9b0927946cf6070bb1bea208b8",
                    "size": 29157269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:813025d273cfb2041642a065fd00cbac2c4850d1d3f51e10b9ac758ca2266510",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c9011cb1250527b33a9c592e9341b1cf4b45542b95b5df8e6e4dec263387184",
                    "size": 17270042
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c06124109d62b6713ea30a98155e8310c9afd36dcc2e1c950bf6b3bbd778f00",
                    "size": 229228809
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bf35e7c9655884fffaf4e67dba7b18f2e02560fadae16d407f1c49a1bfb627a",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:faa8c8271959c83a69fabf8c794fa1f1e8578e8efba2c0666400f50883d621a3",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6661c0994cc9a39a1140eb40b7001f76ac06d805c2510d6f0cf7964e9edd778f",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:132c26eb4402d32bd17d90f9630b9ce867d8e354aacc0eb721810a548df934c3",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e41ff3006a5e409fca6b0f979d73d44bb6c8f8a072c05b6459b62e18f7513518",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92712c41d3ee6449dd4b27f36b57a34b6c3ec218a1aa70c0f07ee1a5598fe06",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3bc482a498c598c8c96352caa9bcce6dfc66d77190c4fa6c6f97e2b35dffd53c",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:046f7e72b404d63e17fac96b868306c6529ca87d6c812fb70a0f4ab698e979ff",
                    "size": 1176886
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b855e15c09d8acc8470c186a9581b7cbd529353198ac077b56186d37782a057c",
                    "size": 470
                }
            ]
        },
        "bookworm-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:6bc197178628875d68e12b522e413c205c31b717f209b3cb277b13abdd89e439",
                "size": 9312
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d3892798f8b99159e3c1136799bfed560027ce451b50d57d961f4f02577ff5",
                    "size": 29180832
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22069614d8d2b1e1dafd01c41d152b132c654b98ba235d377a890142ff429b66",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66347343106088351a16e07b492f2033e8faf8542b82791d6ac8cca23afaac1c",
                    "size": 17273507
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09a3a1e94ea04a826ddc0ce63493eb99923768d4c7f29a20b1d489711fae172e",
                    "size": 229229406
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b20e38a8193f0aeb12d6ac5e9b52b9cd32729cc6c489d6ec187e8fde5be0572",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aeec2d3b1227a243fcb201cf66d1c85c7eb66596477be0aa3bfa7df7cbbbbc83",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3af674f03068129934029ed6b31ae5add0e5210e3770a002ae5c5d9c0cd74adc",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85cb7fa8b533ce087bafbb0becd0a58fb36151e5040ee20ca0cc62b532a9cdc3",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:107ffc46127bd35ca0381c88a3f2fb4a3ecb03036dcf0974e718fce5b3c33e27",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7b5278932798885d4922c426e9a2f2506d531fef000848e774519fa47df6fac",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb47b4ea91a9083e66c7e5ce8b123e88af334101fc31d3c09f6e51785fc4b937",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a54b15843460212ea3516a493f9d1a23111b1f09ffaece0a99916f3e388aee6a",
                    "size": 1176981
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1e93d0ad40858cb349406741a6f8cded03e0facab0c15b87e80ee8c83071c1c",
                    "size": 469
                }
            ]
        },
        "bookworm-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2aef12ccac8d950159ec5ecf5b0c365078feec29101393d968772835b7d98e5b",
                "size": 9312
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f546e941f15b76df3d982d56985432b05bc065e3923fb35be25a4d33d5c0f911",
                    "size": 29156363
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10158869648bba4ab22fe71fffd940c1526ecc20bdd01c533ff36825e5ec95fd",
                    "size": 2592216
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1de25cab7f01661221356f745a81b66df6ea503f9d3c4d09c372b19cf1d1852",
                    "size": 17291255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0487ad88fe75223e784271134fc7820764e5b0d191cbb8f5dfbd436c450fd815",
                    "size": 229238598
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2aa8212993bc54985488a64ddd274286dceaf86efb8e7148b592f278d88c4620",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01f811ce1874bcd8ab99ecb61949119f8725c5ec1fc6ff4af7cfdbd63e11b266",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c31e988a5b008efafd64f9baab9639a27dcc22f714ea40825fb7a3f28c312feb",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b69a5bdd70edfdb1dd8681c22af3b62328b9b8d683bf8ceb80e89cc91ca5c8e5",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ffdac86cd97ac841b0566abaeaf53eaf0eaf31c7f32c0802a7cac820cba4d28",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa00a1b9731245ce6b5e954912bf3bc13b652aab00e591f3afb4c1ea20ead10c",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4820af98bd74884c1861f2adfa9f8d5186a9698b4c56efd13704b718658d0879",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:645180246e3016f86e51a72eef2625cbaecbd522b4557c9d040ed8897e86be48",
                    "size": 1177378
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe9284a50b36d3071cf236fa9eb92785a8c101bda2d504b17fa7b45bd4ff9d8b",
                    "size": 471
                }
            ]
        },
        "bookworm-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f5ed77d4a2b185965a0bd0c82aecdc7eb01ebc7f721b3096c85d59026c990c92",
                "size": 9310
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f546e941f15b76df3d982d56985432b05bc065e3923fb35be25a4d33d5c0f911",
                    "size": 29156363
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7fb4092ed45f90f756e5616373ba9f1b371f83653aec14f40f8c4f898004c9d9",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37b94fe7973eb4190eb1eea9a6bab9809067b86d40a1303e07f7bef54513b46e",
                    "size": 17291096
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:39e017d2f8cc21b026845424cbf4b979fb7e1f0466e45ff78d5943a35958780f",
                    "size": 229238744
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9138cc4c084667120af9bcb0bb3f36876559e26732ab8b17553d142dde900576",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4712502da27ca7b8f805ed307245ba4c77b5d5e74459968ef59d522feca9676b",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c88124fea14316c882b6807bd55cf64b582f8302ee7c45b80a42d5f381e6a4b9",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f22a4b7b7dffdf8c613d78c62c28f881708e3894f19ad9a6ce9651225996993",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:60b2b2ab5bfe45c22594e1356a956c0b62a0eab765bb4774fa1acbb91595fe19",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdd70c9bfbbc490040b46495baabcfa2206d33850a71707990b8e4a82d8daa1a",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd068792a3916adfc505c16be110d9d3c1aaa19f47b37e2e6a2d2e2156ccec35",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297313c0c1c6a43445ab797afdb3cdcc0c1ebd272a0f2f4195af590d4e3ac280",
                    "size": 1177412
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b912ff5e9ac975eee14c92ac830c81f69d581e8d476d70e0dcef8beb86adfd09",
                    "size": 470
                }
            ]
        },
        "bookworm-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:35da80814c0274e2245a027d5776317b1b4208f431f8f5822e1526800fb82a75",
                "size": 9297
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f5764b1f6d170ea07ca424965974024a14970ff826e9ffa3489c90dc040c24",
                    "size": 29156434
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33da92ea60e23811a87625226b9e600a8bc0127ca64388a40010dc94470328c6",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6c0b4cd12f501a494916ae968cec58fa7b22db3b28300928b809a4c3fa18d09",
                    "size": 17291183
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7be111a8a531d01aaaa6d3f4c797d2ca72ed282b4ccd182eb6449b1d1927799c",
                    "size": 232258017
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d625a78e3e3dac079cc6a56b3c95eeba9b4cb55fcb0cbf56824471a2c580f90e",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8acadf268d79f3c2316c257697ffa60fa8457a87a62be1e76b33b1b24c80766",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c843d3190475faeaa4c874e8c7c86e18ac89972ec2f9bd7440b099eae3125a4",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a873bacb6591769e6db43053949da608f480b308f090dbf68c1a8fe8a351298",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00027e804f079f4c3a482625568ce7765a920620543c425656cd5a2122102556",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a03cc2997998e6e60eb2bb472631ae80662cb3348a4642d4fe0cef0f5c861504",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cc5491651050fedf7bb34f3ca3e36f2cb936c1635cd06a24755e362913716aa",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01ad1fa12facb4e6633a5dcbe1e952c489d16857d39fee9c181122b0850a6bf4",
                    "size": 1178323
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0812e1e50bed9bb1a0af1ef0d34b9b52b880bcd948c6e50a84b19d7e80998969",
                    "size": 471
                }
            ]
        },
        "bookworm-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d1e487a0ba444dfd157ba919d8e878d526ee3c64849c4c4c0474ea4e69e5e3ef",
                "size": 9295
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f5764b1f6d170ea07ca424965974024a14970ff826e9ffa3489c90dc040c24",
                    "size": 29156434
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bdfbb4fb728f6794c23ee8d5ba2722743cae1ad303f64fc933068d748f5c445",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7145248d2af1b8f7c4c2277e38b0a3ee949422ab3b686073028c47482e0d065",
                    "size": 17291179
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:06b5eb7f4e0fd95aaae0bb3b6e39651e2b19d67e0496d87bde2cd288d0d29db7",
                    "size": 232257717
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5565731500a80296519b60eb00a21a114ba0cc388d1006b84db7a683d4990137",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38d97d9fa042c6b3707691c915c2dfe482e63cae34ff8c416aded5a59689779e",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5e6ae6a61551024092c08cdf53390f3b415e395700eec097939f1dc1033a3c3",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:414b96251c92e123c79e97904a2be1a14a4dad7960270cb8da0f10dc9f9d751d",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1d1fd9f3f7a0484bbf636984b08a6c8bce8cdac318137ee46cdce5dea4469e6",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f30f2bfa377f86d951d358135fe4c23b05ae32c403bd80a3662d31b0c4912dbe",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d682904173d00a6f756226f9c8bf600b1e04c8f2c8cd9b7fe51947bc0864b32",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cda90623f60f9de6d9699d71303f90100e8d53b409dfbf339550554d3bc22b3a",
                    "size": 1178244
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c666c41eb5b3d5a03670e5340ec8baf0586f828b76fefd66c023dbc8b16a4a94",
                    "size": 472
                }
            ]
        },
        "bookworm-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:35a400b863f545a3125c99b33d443d718ddd5e06e29cbe31c3801814d10988ee",
                "size": 9294
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d97f6a5d13532e867231d23d92620a81874d51a456196be50154eeb32edc08",
                    "size": 29179935
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:808423f49e64d17ef6b295f72e203353559e27a632d6cc0c0bdff99024a0cca4",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c39dec34bc2c5aed1bf661eafec40178bacde431c055357adb5f208c652f441",
                    "size": 17295095
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8df9f86e854b5f331d6b082bf72d029678a866b2f0b7b2a1083b1a56d4b2729",
                    "size": 235017563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac0d073a69c158df65f9a9f80abaab3372b5e1fdf3240d69f8b4b13d21f47af4",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:284ef30e3160a6ea3e296c3574ff5153d441febf4015d8030e0cf3e21aeee912",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f415827183e08da6837e069146285665e860787daa8c7a79ddc0b11663207415",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab0d0c5a6253847fbf508b52647cd500afa441300588b0a752f1ef9a93196c6e",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f82a4b9b283623f9d283f79e12b2cae49850a51b4d70e6cf1f004f4df2c61d81",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a2ab8a049f67ffed970a5cccc56dffb288443f37980937840b02432755e1e94",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7cb121812cf852cf05746939c05eba760e654cd434baaa8ed3e3e69f296f3620",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db580398122863291111d1af0e04696dbdfd11f98ec1908b1cf7bbcb8b5e4f2b",
                    "size": 1177894
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:800e6220ad742eccfc8d3b237258f10d0b7ce6ad218083537838c8bff9000454",
                    "size": 469
                }
            ]
        },
        "bookworm-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ff597891452f426bb62de1a7678204597df069ff8b66acff3294149a0e280d0b",
                "size": 8318
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d97f6a5d13532e867231d23d92620a81874d51a456196be50154eeb32edc08",
                    "size": 29179935
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08716b5fa8a8dac5841f12bdc0f31f54a3da830bf70141133f8b255f449333be",
                    "size": 17295027
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707b3d6c371920b46276983c9a35f9680115a8ad4a7f82225ed6cf6c76b8d41b",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31a3dc6ecf78d0ebc1a862ebfeccbdb6939c1a0cf8ab2b8037d0aca0f2437f3b",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f660eb8a77d80d8a5a87d71e115c39cd0576f6873d9bd48a8b6793b854175762",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:816d20494215f3bff15f5cd2965cec4a1413966bec1ff4ec002dc9a679cae73b",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:970ed101c6a8f4095e4e06be742d325311d65ad843eff671ab7de983a7f96cc3",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1327e46d226352fe2f149d16f29321beb31604d092f1f1749320db5badc17a4",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fd33dd779ac3b2106c4698d36c170f69458794dd9cd587e87a5846d4c1e49e6",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42c8746a4806d48a61d3e5114011b82f9988cb5a4e691f6c473465d14b8c07f7",
                    "size": 12458524
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:93bea923312a363f7127d656ff3b9a70546628ba629bfb4ac723b97f996fa894",
                    "size": 471
                }
            ]
        },
        "bookworm-run-20231025": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9b19de645ef06b217c223a0c741407fecd43c2889cbf8eb1f9da0fbe184d3a91",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e886f0f47ef56fcadb6ecaf2116056bbdb273e0afe07ed034498b198d386c04e",
                    "size": 29157221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:02899d35a777505c10a815ca948488b4bd8077c9687856425f8df68788d4e54e",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a77c695e24ea2f91a2e8114ddd3196431ab3ae6a7d952c02c6caef2c67a95064",
                    "size": 17687909
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6255cf92406207dc3272d7c58efdc47254cc3715de1f74acf5917140f4d1f965",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c51075456f0ae02428be39b8d38ef1ad7b3e1e7e7aa975b72d4c729426b1d54b",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7b5b2d9bae12061d3f34f5c84049945b4fe7623c7bcc2d53f7e97473a01edab",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6c6ca0a2599f4fd29dc03acedb740480df334dc4599fc3cabbaddb751a700ce",
                    "size": 1003
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc2c706559817e0067231e3f0fef86b2b1b56f7fff46968c2487e8d42cbafc21",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:451d7720da59e6593969056c3efe6930200eb5f9ed8e87d44c6e3f3a559c6bbf",
                    "size": 667
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c21d9ed73dd797e536ebe3d297882c9149da8e17655153e7f6f9589735f8a1a",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5edb08e8b7e7c0741524382b0c5f177c4d51afbc256e0b86b4f02e3069429786",
                    "size": 12461249
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f592771dbd551a6b247263f1d6642f3fd9d5f317b79479201c44e76b9e7bf1e",
                    "size": 473
                }
            ]
        },
        "bookworm-run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4f4fca30b00c293b8e138bab1603e6768b26203f324d9f078d2fbe39f33406d2",
                "size": 8337
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31ce7ceb6d443e2ab4ae91695fea10e1443417fd94c40a46994d5a96940ea1ca",
                    "size": 29179119
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d62f5f136a045d408e88f3c40511f9e1892e7e107c5350d6ebd16693c9eda71",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e86d4629efe4561d16b9a3b61901dbe4cbdd729a2292959129a56ac6a8e72e92",
                    "size": 17232869
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:910f18af10214fd30473ef6f3f29ba9c2d6e07dcd25fbf88c7707a091a867073",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75bc48f877063bfdcb06098372113700ab318ef7272a2ec2a8e911122bcf45e6",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:85c354e827088b1deb418e2c1213e81a739de00270f36bcaa86099abe8ec50e0",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c041dd20ad0e29f3551883a8a525b2f1d6c1e902fa751cbf757b83abee8526d7",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6c7bce52c2ba5d58d84b10cb3ea66b4fc2d07f04a080765da3f1bfa79300964",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1cb064a3f772acb5639ab3fe4449f9efc98792aa3b55ff9bc4d620d40df4e6b",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:795a7145169b3108fd1f1ee75d117da32f67517281f6741eef2b5a29dde71e23",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68a253c79fdc306796a3d713ca9876897aea0b3811e114d6604f61d03c8cd1a4",
                    "size": 12461212
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:381e7f7236afd8bf40a3fa3d03be939e7159e7c42bcba83608d814ddf131d624",
                    "size": 471
                }
            ]
        },
        "bookworm-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:af5003eafd26ae7482cfcb344ea2d924fbcc7794c2ee3e9c47b7f6978509d32b",
                "size": 8338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c6d21737d8318aa15c4cc838475029a5efc36c0429e3d8da80d97d0b96d9aaf",
                    "size": 29179277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84b5f7b594b419e106519389a7f664956cc1e4d0d13aa5aa4572f25273581de1",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34adb20a00d4cbd68b0b3d7f4c29ec193ca54d462a1a4f1f987df86125d9b678",
                    "size": 17233234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c38e9a4548f72178fbc193313b70a4630d021981b0742e5b5b1e4a82f1b8436",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:911ef0b38c947d1fc9954382a720e14510cab7a30fd023d58b0072789ee97dbf",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d2b2e7db1f23405ea6af4a05867062369851c486bb82ee4a32539e47c4b27dc",
                    "size": 256
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7eed199fb526c966b7a68e813c4f744a182300e41896eb3ca3512d2d751f0c8e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c01e1a7a6c6a2a71ccee156b0f5c00619da72be3b72ec36ee85a2efcde03c743",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:676a484c9481b7f9ef360fc6c120bacba3039763b9078cb7a0f4b272a77dd9a3",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:668efd96296de5a6ecde068fac9aa699b4a3c9122cd443904bc45716ee2c05a9",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d781496e1716e6c7d7cf12ee58eadf0dafa7a0b4717434e90ac9d476b9920cad",
                    "size": 12461012
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a56a778236d27d30c009551b8f29a3ffd0007abaa8641fe7602c2f711032dbb9",
                    "size": 470
                }
            ]
        },
        "bookworm-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:31736d0dc6f038ac73ed193f10ec9f0e4d5623548e08cd6bd59c70944b3833e3",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2c6d21737d8318aa15c4cc838475029a5efc36c0429e3d8da80d97d0b96d9aaf",
                    "size": 29179277
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0ed2dcbe8e41b5a646daad99d68812e69f8b100876d4c17e25c307761b3cb17",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34a34dc8a79ff7d9795881f77bc1031e4aefe365d9f51665565f59dafd03cb01",
                    "size": 17233391
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:671b3dc33eb969e87fe43e57eca3ce3d21c4bc79b63e2fe963ba25d42917e865",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2373e036d8e36b4ba9f1b31ee80d714f2394df16fe7e9100fddad80ebd53c047",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:884ec4f0647b7f5b0e13b995b81336b448606d3069d223505092f6f7df0b87f9",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce83390bf9352f97337ac7b24fa8834327f9a273dbf6ccc3cb3c2ca6952f5775",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6df0776f8fc114913a724161aff5b08d113181efef23ef164ec8b6de5d66cfac",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cb71cd58a25d674182c5b455327177d92d4d1d5a934f01abdf6b3d70bd030a8",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf036aeba5201d8f3d9cc3b88045bc8bc13e376240deccfbaefdd0405bd1097c",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99680a75938ac6e942f00ce5ceae90a2240bf55e8487fad59d3d06e087ae7eb4",
                    "size": 12461079
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e63bde2550deb62b5c82192289a1df7ee9db3bddd3c9fdf5a88291a7b436de2",
                    "size": 470
                }
            ]
        },
        "bookworm-run-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:98f4e5efee1c5a4a55ce078131c0798d143fc44e1110af691b8c332a59581289",
                "size": 8338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24e221e92a36ab5b0075dd156b4f2ff095532a9b0927946cf6070bb1bea208b8",
                    "size": 29157269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0575abbd7cf8af271349983fe534ae3e04681cbb9b590c83d74e187b870bebe4",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed333f41be544ee74834fb8bc9f769211a29221f7f89c5a6b84903bcadc0c102",
                    "size": 17270116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46a48fd13877c0ef9821613dd99ad2d58c00a14d14920fabf252f4d7c2d13b81",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:49937eeacb156c7d3897c83a2ccbf06c01f4fde677eb70f43ea753fb657a7c86",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4dff182a5a15eeefaa0f1601eca307ef5ef4227b8a96566b1f0b052304b3885",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac946561aabdcbaa7a56471c7432f706891faf1270440615e5fe227398cef286",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8247794ee4e56114f27b3912dac33719e83cac8e6dc4500ab7046cc833bb7478",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4570e560d135bb2e16df82ebcc0250b06af90268586e9ebebcd4497595f2e990",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8571e225437eb8984303849c28bb9dc91a0d8d9027155b331338a8ab24d24230",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff55dd7008302751137fc4ba9619452d9d895deb850c087f831845a1e1e2513f",
                    "size": 12458320
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a44111d01c5b1bace528ced49136d3a9e4a8450a1ef6e58dbb3d2090800a0c76",
                    "size": 471
                }
            ]
        },
        "bookworm-run-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:61c28b9a1d0c175a3093f30989d319a094434ca683a90ca27c90b081fe3315ab",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24e221e92a36ab5b0075dd156b4f2ff095532a9b0927946cf6070bb1bea208b8",
                    "size": 29157269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5813a1c0e348f0d85925d51173b2f2a36fb33de268820e927f1398edb089a72d",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95f1dad3adb10e73750e5eb9f989d177dc502764e1bdddd579c1b05cead36d0c",
                    "size": 17270089
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a0002a21e3981691653171d979d774351642122db5cd787ec4ab01396a5460c",
                    "size": 473574
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d808756a9ef382f423d5683b5483dae56515329606319f8d013b9da611fccd9e",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1728099dfcca585525899542066bf8075f6ecf071e7d29d4f9804dad8233b5b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:108e087dab4d988c5d111ed64fdb7ea774d1ba000f8048e215f44a21a507b42f",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62d8d4db13500e4117218004cdf4f07b1b124fd47b9edb96c3904b6066fe773d",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8aeab0168b99b814facc9b5063b2100fd0568ca19ebb6d7a97f4fd517e83b5f0",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a36ca96a7ac822d1933baa344230d413cc53e4d1d4cb3aefc515df9ad76eccbb",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6cb7f59c85b9667b4e1a3964bca4f521d5dde7070bdaa8c39d760b5e7a91dd7a",
                    "size": 12458271
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f98a857a6cdfa95461709c15f4c713e9319610997fa522259a80ce4c16e6ee5d",
                    "size": 472
                }
            ]
        },
        "bookworm-run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:65dda92a43405dc895b160ff35a61cfff671c98fde09401c743667f7076944d6",
                "size": 8338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:24e221e92a36ab5b0075dd156b4f2ff095532a9b0927946cf6070bb1bea208b8",
                    "size": 29157269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cf99189dbb7780acbaa1388bc434d16873c04af8d2862d1fca3553b4a6b1514",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c7dbe3aacd7d6b8ba7a0d518925d2cc655c1ef1d46ec0ccc602a38bbe432365",
                    "size": 17270146
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c7a68559da92859ffa5ba2f918f20e97ef75145181a654c49f3d02e4eb2afe0",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4290deb6673f9b01d9d62c77a688018c9308c974bcee7b60b3e9446e38000b2e",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ccd16cf299c83dba929bbf9b04fc4664c6d417114890f2b4f2bede4c824ef70",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5f5ab777edd1cb6c5ad5fa6e175ca61fddacef26554ea8030419c64122dff7e",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed9ef477fa91d5018787983feff4ec50be6b49b661dfe7256a636f85bc10bc48",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56a7a0b9c3aa08fce71d30eadbd8c091d9182053709a315f909922fe02452ea0",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b11bd33784096d80050fd692dc9410f4c89b92903b5fc031315cf455c7164c1",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:50a107745a14623996f616fd55fd048c8c82dc78bd8575a5d82590112b25ff9e",
                    "size": 12458256
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:101d64b8b4e24b329ccfee852448229ff117f39dcda27facc59ae2a1342e73c3",
                    "size": 471
                }
            ]
        },
        "bookworm-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b8df303242d0accd65725bb582db82f7913a57fefb51152745aa6fc1a54a495a",
                "size": 8338
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d3892798f8b99159e3c1136799bfed560027ce451b50d57d961f4f02577ff5",
                    "size": 29180832
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22069614d8d2b1e1dafd01c41d152b132c654b98ba235d377a890142ff429b66",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f1e5cf9e00a7902e00b008334219b4dae959090af2b16675f3f2f720532deb7",
                    "size": 17273540
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4c4da917d07212eb3e7f85700575e40991d76315cb22f1805cbfbfa85b662b6",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e5bc3830aef79da8b1044f04713b4788900bb31cff4f080f19351b9bfd86b8b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a0744c44cf23afb818633a88bdb1ddcbb9ccf74d19f52e7e193f28395b5d511",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:084eadd63883d9b6ca3449d2f98a6ea2d0f1bf317880dbbf30103967fa9cacf5",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ffe3db22496cffe06e688fb7689a5d391fd57d5b4ba6102ceb2d1128baaebd4",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46e10719b76d682284f64b11ad7447c82d5cdecb3ffb5ee720779a55ab7d60ce",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0674ad36c00d191ad5d966d21d2566ff273b95573cddc81b7f7fd537f899f35c",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:933d5fbda7493a81927d903810d713359d1b18f81b50ba6d55622e516902da80",
                    "size": 12458315
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f49aeacf7cad0b92eb460a9fe7415d036751f418f1a4f4043621978e23e69d78",
                    "size": 469
                }
            ]
        },
        "bookworm-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:39d3d51b3e45ca6e92167fa24ce367c90cb2d11bf7c9c5441d464af88d582051",
                "size": 8335
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f546e941f15b76df3d982d56985432b05bc065e3923fb35be25a4d33d5c0f911",
                    "size": 29156363
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8440b90072f5ddf2b3a5cc44aa712305ddaaa3a499515c126bf7897cae869963",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7429e5f92c211b44f138a644afb74ccaa1475b6f1a4f95e870dc47eaf805336a",
                    "size": 17291102
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:28b55e040c13344e0180fe961d66474a7a824da112b5b04a9efe022ad7b8cbe4",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ff418b76b81ced646377e5144cb3c6e64855ad72a8094924a4adff2d55b8cf4",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32ce0e96c33ce0b25fa917bdaee0892501cc39098d254878ef647809ad250f12",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16f62a7d423456619f8e8f6ee4fefd83ab831b40ddc35bd276bf11fc71552839",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9eb1f910289b61fefe4c7145e16e9859c20895ac646dcc3b40c0918f734ae17",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5b70e90f9506e910bc421205adc0c978b3c3389bbcd0858c5c9b44421a52c6be",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78efa179cf8468ff2e8295822c76e8828a09bf51493689655ac9d74dc722684b",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:532867178f1e39f3f8e8624a5b3297b8a3370f2c73756d2ac50f1bc9e7e6c28f",
                    "size": 12458522
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74e415594bf22cec8934b2ad3ca5a62bb8e0c74ca9c5c461af8225c48ad62e17",
                    "size": 471
                }
            ]
        },
        "bookworm-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8533022665f96d20089bbb957908832081b5dfee2e0113d51938492784cd4b7c",
                "size": 8333
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f546e941f15b76df3d982d56985432b05bc065e3923fb35be25a4d33d5c0f911",
                    "size": 29156363
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e800a85078ae7f67f3aa27d4f7232ccefe892223ec61bb36f7afd7f90bcc45c",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32309a8011bc1274781616b4be13eefa5499c77cf8bfc6f3076ce3e0ddfd917b",
                    "size": 17291043
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:97d7090362df78d466f9190e06bd71fcc237a681dec956b3621a20b1e415c65c",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:67510a8ec989165dd38736bcbb8c1840ccf684a59e5c3b2fc13a3aeb32275b31",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:907cde37128c833ba7004720ffb574fef7fbfc3d404664e2a53a530bd663a6a4",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc358e5ff00366d28275b125563e5006feb44ad171f01d734000d8c65fda4c74",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc5e95871931dc2b21adcc9684eab6071e5f29b3a96403eccba366756f469421",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c223d83464ff8f9a3c5441e15ef4ba9161f078a757682e057abdbca6c20a01e",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a157128dc3d8e991b45944b6188a163c93dccf448c830ac310f07ebad350165",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:06a3b1f39e5155c23c3428246fbf4d438fdf0370a6e81ed69db55ccca84358c7",
                    "size": 12458534
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8981a03ef27a21bebf86e0553d2923f3dc1fb8292eed6709fc7b9d6abe038a4",
                    "size": 470
                }
            ]
        },
        "bookworm-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8c51924050cd22aba67b68648a9cb0c0248d4493cdfcc5799a70c64e15bfc9cb",
                "size": 8323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f5764b1f6d170ea07ca424965974024a14970ff826e9ffa3489c90dc040c24",
                    "size": 29156434
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91450bce0ec14ebc0a122b25141e10506f4769bca9e06f74ee4089baed5340ef",
                    "size": 2592229
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b78547d2411f55322cb033b89fe4d30349d950b0505e6766c92d76fe032e446e",
                    "size": 17291107
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5fc3f1f26f8b59cddf39ac0a0e8fdeae71593ab5936f9b3d06973e02ec4b19ad",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:488f4edf6c1cfaf874f5b398ac0fb9ecfd19f3d1420ab593aef8497d19611a22",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc36d679b21baae7c2264d50eb37360ae1e0b470779a8788cbecd70ea09e574f",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:019760aa07be10ca58cd3576aed2e432ff9e599e9b5c90dc07943b7bfdaea7ff",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f42f6e9fbc5b750e5fe424587cbcafc4d4bb185dc62678ab031d04e27cf4d271",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c44ab3b6ef2c95d5f7a2794f49df47e851805fe0b0c88f18fe4745dcd05de83",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e710365fac4f74ff84332ccb7510beb82edc7e05c4be21dc53fb84626f505e1f",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42c9b26ea233b1e5f97a9b7e3e777018ff60c4e906d0e0d13af42aaf8c48d065",
                    "size": 12458656
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:230b169995b5a1a2df3d093a9b7b1f620f9c88c40c63901468b321cac7c0f098",
                    "size": 473
                }
            ]
        },
        "bookworm-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0386bac0705d88133ee897a647eeef871de86eae408cbecdd46655ced117059c",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59f5764b1f6d170ea07ca424965974024a14970ff826e9ffa3489c90dc040c24",
                    "size": 29156434
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d25f96231021b5dcdfc6f17458892f12f71c910cc88f63f29dc071efbfb8f8a2",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb18e33e1cafb6f9d6e42633acb9b3d88bde59039fa9eea07a6d1721ed717087",
                    "size": 17291138
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d20bfb20cea478be56142533eb3913cc4926be97a8bb8d6f3aa1f4216e31495",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e19e63a023809499cf82eb5d5f248663666dd33b9ef2cfde3de11eebc66d034e",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86ebbdeb7b51b2170c1d43b47068820392ed517076b670147107730a7aa51c44",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:479634a3547768dd871b09166a515e995681aa46371ad1e429a3d6a91da463f5",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcab80059af90d56875c035653f2e3fbeb918fc69bdcced6433c73df985ac152",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5442132ede36f409d268414f7237498b5c1216b1411e94801666fd83c68ecfe4",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3ce9eb5ac756f15aca1e8e0c4f39a4db2bef4fdc12880d2cc39e0e81af3bd9b",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09eca76352b94ab77216ed9d0426ee6508c93359958c46cdf05aaa5bf53ba083",
                    "size": 12458721
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:72ac26a9b6bf979d913b36b3c46a239186dd639931cf9d62f4843018c813bc52",
                    "size": 472
                }
            ]
        },
        "bookworm-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ff597891452f426bb62de1a7678204597df069ff8b66acff3294149a0e280d0b",
                "size": 8318
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:22d97f6a5d13532e867231d23d92620a81874d51a456196be50154eeb32edc08",
                    "size": 29179935
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08716b5fa8a8dac5841f12bdc0f31f54a3da830bf70141133f8b255f449333be",
                    "size": 17295027
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:707b3d6c371920b46276983c9a35f9680115a8ad4a7f82225ed6cf6c76b8d41b",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31a3dc6ecf78d0ebc1a862ebfeccbdb6939c1a0cf8ab2b8037d0aca0f2437f3b",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f660eb8a77d80d8a5a87d71e115c39cd0576f6873d9bd48a8b6793b854175762",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:816d20494215f3bff15f5cd2965cec4a1413966bec1ff4ec002dc9a679cae73b",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:970ed101c6a8f4095e4e06be742d325311d65ad843eff671ab7de983a7f96cc3",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1327e46d226352fe2f149d16f29321beb31604d092f1f1749320db5badc17a4",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fd33dd779ac3b2106c4698d36c170f69458794dd9cd587e87a5846d4c1e49e6",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42c8746a4806d48a61d3e5114011b82f9988cb5a4e691f6c473465d14b8c07f7",
                    "size": 12458524
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:93bea923312a363f7127d656ff3b9a70546628ba629bfb4ac723b97f996fa894",
                    "size": 471
                }
            ]
        },
        "build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:40cb42ff2d5e7fead725bc011ce4dacf9160868839fde5846c45ef390504c5e4",
                "size": 9291
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e679cebe0849bfa7cb31bc37c02c65ff1e2ba1af6c7610130ef4a0662642da9",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8018fd0de9417ceff54d5e970ffba51a3bd4381b66ff525be5a1b8c5ca7763e",
                    "size": 12976453
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a7e897f2afcd8ba780ee63974b25f8796cdaeff7b3253da3c3a8dc54e841c49",
                    "size": 202407153
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d232fe9fe2541d304164f5c0df34e5f68fe7099328fb3de15e15b02e89a54a07",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08abf86fab1b55cb6405a9f9e324ff6f48ef08200bbf35f8d8189e0db23960f9",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1aeaee01325f1a632dcd37d0732234af47f4f122e8a845d01854a7caf4264961",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363f1af776176365556af6c9c3ff5817d8675e57829101a6a0f3779325b85f6",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be1d5d2ac84db3d2f73bccd4820102bf030a95bfca47a780431f6bff75d934fa",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd25f72f3d784a43ae14ac9f58af7e1b42eca095bd0e4697ffbfbd3e7def3e17",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff19cd906c274030a179f0f967ebcb4ba25f4a57a5d79d2777f3591891e59cb",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dacb9c492de71aaa3cb6afa6611a2b988decbede9f3cc330dd1fd58542b76eac",
                    "size": 1157599
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62aa44a739073bf6fcd210b0e6b1b510812e709ca60a87a43417b06c52681e7d",
                    "size": 468
                }
            ]
        },
        "build-20231025": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:90bc0de66a0ea601853957994f789f5713ac867a361da6bdaa12577706001a6d",
                "size": 9307
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc521c5b98350f6fd8c72ace1e48558bb7b53cb3db201a2a3b42095401cd02f1",
                    "size": 30062869
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6637d78cd3f40ff882e999a785f182bb3fa1a01d5ef761c1e181b6d870a7fcbd",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b06450eff9af15b75445dea963f162cf7858afeda6fe48f1b83b97ad56bc711c",
                    "size": 13085514
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59e41231059668e489f6559603117d46e9cf19f77a5f7a16d94229cc05986d27",
                    "size": 203957589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c5dd089081c30235ff6f44d1664bc8e6d18f241419d788ef106895706dd5193",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb7dec6a6039502bf674300a9f0e24570fb7fb60e047587cb4e5499b2359a7db",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2795a48a5b0eb1d3b686968922bf944b47a1b1a49853ee357c41342996c957f",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e05c2c29011c5ee6d24c7fbcc46acc54af25f6517dc0c00f9591c13dc925a93b",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:182c297ace30796393d7c5c9a342cafd081cf498c28a891a8d64964cd63dffe7",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2cfb84ea62623647212412015438bc5e3cf43fb37a29a311f889c2689fb2c2b",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71f9d667329d6aa529a7956b8c4ba73770477232fc648bcfb3954a17d8787a76",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:73814f1174c5deb08eda455f022023bf1ac10664c83efb3a1c2f41d7ec3c29f8",
                    "size": 1154494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7b85b74093ca1a23021e9406204e88234532df7bcd4d53a4bee08eb3f32c85b",
                    "size": 471
                }
            ]
        },
        "build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b0ec95fd669b5489a7c07e2cc55ee1ec5d519d49cbea1523ced9c294af1966db",
                "size": 9300
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e498137f0ed1053c364a5c8a688616b4abee72496a0b97cc71ea5e603565070",
                    "size": 30063905
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:222267fe04b6ef131a3721c20636fb4bc37610876c6e79210bd9770023b15e9e",
                    "size": 2592216
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d11ff54f08292ea7b9f8f9646b0b46b9c279b7dc30755643c8b1812dd264079b",
                    "size": 12976819
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:559acca2b7f889e15b52a6855fcaa4d26ca66e38abcda80da1097a9504f0383b",
                    "size": 198242397
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d75d772ca368aaac39790f5b6db9861cc40bf4eca9efd2927835d17017cec794",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01718caffadee8ba197c2d922f7e4b71a0235082e0bbc940d88b3bc1c1adcbda",
                    "size": 258
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:014c854091246120945ad9377ec757ccaccc4dd3fece836394e19711f7bc9949",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a271c6111eb7b6a014490e1a09f0a8257ee7a9f7f093bf46416f0326efb0b992",
                    "size": 1004
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4a8ccaca76e2f0a8246d693ffb6acb6b38fcb294bf1f85d660f7daa02ad7c83",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a21f15edaad1a3b89b2992ad968ab4e28b3cd217b394917dc57e8d73035daa14",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0abf0889485dca1bfe3c1a85f92cc411eca9c3fb16faa4cc71ec53f8d7fbab47",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:48efefc369bc69d192a2d4b0f9f110ebb48a204c719364cd9274d5a4a7a3c7ef",
                    "size": 1153799
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c69b1e8db0a87f7cf080974eafec2260df9f2ed25ff39d0a8db440e1d1641c16",
                    "size": 471
                }
            ]
        },
        "build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:864d049ff36389bb4f0a18b13d334b9f2561173f4186c84abd26c5fed0b6585a",
                "size": 9306
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00a375dddab470a2b283c99e80e85649bad31584427ec9a4b3e51c6451312720",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:449d32c9e52b27aa72b2f52a24a1efb47133b820af075f40f191cd8e10a3e336",
                    "size": 12977481
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2baa28e7426d319563465be4c2b0847aa8d2286b2aabf4159075b2c16900665f",
                    "size": 198242553
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5c8885ec7888248d72f5e4ed640ee91ee931fa3844f2e32257512303c4f77e3",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:758ba1e197e99d9501f27f0d401bb2e3d57b12ce4a350e0830eb6f7f42b1fefe",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb0eb8a31195747cbcc985084c6b63b8eb607a42ccbd5bfbaf699c82963c24c1",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:434734840112a44e60d24378b399e4e18128267f9c07f7c424941caee1e45633",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:973ec5288608f45fbc92e7dae14c3935d7d2a845d04620442c3e42342ea6d04e",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c5c9d449e62b4584fdc1e18a7031a4e1dc0f3e2178c78da050929d87d8176ad3",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca6435991ce34103ce2a47bf803e0c2e0760ac418d37d30d3c84a2a83d939d3d",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f07795274ba28387e001b3318866a93ec82273e3d6ba19ce841692e522b61a23",
                    "size": 1153851
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7e60ec87e9bab8ce6f306a478cbc8aeecf818509f07ee91d4a54d59bcdb3e9e",
                    "size": 469
                }
            ]
        },
        "build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:278ee442d334797f9b310265ea7d3e318ba588d6ad94c16b2a13ed41779f9490",
                "size": 9297
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1b33149dcc273345736a83f631f8e2de7d9a551d977f274ec8112d80767d02d",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae956e5b517d8c58bd3519db6b8781cb386ffe87e78b3cd012e526d8072ef31c",
                    "size": 12977423
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df8a816a717a21f068fcfa0207d660635a640d27b3b74ab51f20d7faca6a6fde",
                    "size": 198243441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:913274a0c0a02e2c567e257d40d1379235cc5821c08a685704a52c7dbbca914a",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff0224ffebb6a46b2a2c5199ab8b199efb78048eeb36a1ee5e9a3a95e79b03c7",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44abde36326ac7bb957c906351a71980883f91abf668835904c8d2acee13ae6a",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7d06cb4842538058c0dc848a8894e827ef3dd6932e7ea63683d1ead19007e85",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c30f20aac049c3edff56c046ff9e0790f627f8dcfec2fe8affa90642c4a810de",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9935a0f62d1cf7c931f4454c1784f7ea3241c0d4e549d1b8de4dd00eff34c31f",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5eaca4aa781d5af8a64f1137130d7eb69a1250b6172add8205cdcfc598d17fc1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2760669758e71477b04c90ba4238c28caa35ec077260e647d7ee72f3286bc000",
                    "size": 1153857
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86246463d223117a1435d40539350cb8e06078c66015fa2b3c3510168cd18259",
                    "size": 470
                }
            ]
        },
        "build-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c291d4972fa7feeb65487c7359625020c59c23802bc1950c8c59d68fb88911e4",
                "size": 9306
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b59bf67779304f302bd3132f3a2be8a363a1a257d165fbef5d4c1fdcff6ccebe",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e2cf320e7eab57ab8e4918af133a88fdfd6898ff89531cb22d7ea938676c0ba7",
                    "size": 12976674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5389bdd24bf65b5c2066451967db2d7cd09cefc838631b7b74da30132ddd6e6",
                    "size": 198247608
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c134f0570364397dd703b12e89007b55e7c19c7524b3e3a4f1d916dbebd0aa10",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10bfa8b75bfb934917da80f01cd0be8269133bfa6af8ebe617c2c44a3669acfb",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:341b53b10ed2dd5ccca3974c41a73afa9798c70b118bf978b54ba6e5e067ca6a",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bbe31f685f1476284a13cd445d483e31c63844244db393ff69745c76a4b956f6",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da3ea8150c216ae439a8f06b9f1d6c195baba9d9686a11bda4e1729f280460f5",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:028422a551c7104b5f0b143aa478c6e5d146533d93c1dead6e8d79efa9f97217",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2c062bce3a1a52c6a866e310bdf328acec7c0ca4f0d3f79c595e82d88c13eb6",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fd912411da04368bc75e3ab52e2844d0c38f821e6b9c7506ca2f392ffcead3f",
                    "size": 1153897
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4de81396170a87521d68162ba60c376f6c926e5e115c0f56131a3dbe23403ebf",
                    "size": 471
                }
            ]
        },
        "build-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:200866beedbd261ad90ec8a6361465c62657e696318bc50a763fa92580d4334f",
                "size": 9311
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:680ba1f3235a9d8c571179d2b4a34a2093ecd6d6eb0ccd48f3d4c79bd460d33c",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b5fe31d070602b084490e298b58f47c059826a05048f721d13a3883f5245bc",
                    "size": 12976816
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cd412f8fac3867866cdab9c85df150f5f1f81edc833646115f2a229d60368e9",
                    "size": 198248704
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a15c086c4541f3fc849f0b885720624d014d998cf43bc983432d9acd3219607a",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:965d251b89ec3750ea3b1bf3588f59f4b9b1097d6b6df85f4052147d39f1bd0f",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f363d61ae45e4a13ba7331124b73ab793d5f09559c511797e1ac3bd247e262ea",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:371138ba663299ae743c170ce32994e2499b11d3d0b6b9565ad4ef7d10fdbb6c",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bb52e8236270316c95fdf5be1cd4689fc3b577e262599eb983f0fb25c79d63a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e01009a60bfa66916967a536a8469ce2e78fb74c6d76d11a8e899e31fcacc9f6",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9503def2f9871285ad40d27c697d5f7fa0650b692d0d359616df8c0d9495a08c",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f5aa47a62e8ab52d791cf4731c295c109812ef18152295372bc2ffe3a3316f9",
                    "size": 1153854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1c29b924c93b4fdd15826d61972ea566dd89b275be4b56a51fadf4d97f63e3d",
                    "size": 470
                }
            ]
        },
        "build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9b5ccb7d7b7a1c81dea6c772a3ee525d5af593751396d4e7484a5670470bfb51",
                "size": 9310
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6db57d1112d030c8e1c89b4d774b2d9231eff939606301294c70ce1455d932a6",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9e2203ac993142853b9ffc31e205ebd9bc0edc708cf664fffefe5b1d1d7d32e",
                    "size": 12976674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dccaa466346cb8478da79f73725065d8238a66c7137327093d83bc839ac40f3",
                    "size": 198247212
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0752dfa164d11ba28771aa6633236b262008fa3015b5b2bf8b700e625d0b640",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcdcefe505f624eb2a9d6b0bf1da0e0c77f3c486c23f96a9f4b6f86fe6534687",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f74ae1aa34faca98ebdaa34a726f859372777e03cee8b5c3a755e1e95b9e3d4c",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8084e5e8d8b5f574ded52ec9377c6d83b6efb58ae1a3476d3504e937ba20451",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34499303306f69fbef2cb2e91266188bf1e4ebbdb0cdcdf349a45eb1ef739cad",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1124e94d2ecfc0e4393a596af6a31106140c6064eb182da578be3bf4d3fed92",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f11299395e09774e46f86b8ee8054bc2389bf046d21b01e0a121cb5dd46a9a60",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1edb3afa64aabfc4ff7dc8ee8e672f70db0216eed313b55c6f5c09e30663e1bc",
                    "size": 1153890
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d442f2c49a70d1b02ef47ba1488b8091bf2bf36b716468a717abc02171b7a2e6",
                    "size": 470
                }
            ]
        },
        "build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:36e474620a5fcf0849b8aeaa210b4eeaed75aaea35c438129a960da6595acebe",
                "size": 9310
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84642ed2f5842e77f6ce5b7f04d267c1d999850b7464bc250930f7fd81198663",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18b6f561d414a7fa5d738b1fea176f906742ede82ffbc4fbadca42ea8da00ab8",
                    "size": 12976765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aecc55ca63d63ea52a00d80a4095c0f16fc39e85a3f1cf79f8df391d3ccb3f94",
                    "size": 198248312
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:030eeff4d1ac1b1b9917e3b089c69df05f6efe48cf505703a4cb63782ec5a56b",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ecf8e349dc4b765d6364166adaff7550943ad9eeaffefca4316ac625ff4a7a5",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfc66336b9ad79402a7cf71cabb33b9456c5e145f9a23723e1d849021404c057",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d697352f61ac44c0070abc2678af71534abf040b05ea7130dcc922c022cd5898",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df627d84b57294a6988ae9668cc0c13d6f0abf5a02dc7e7ce41ea92ef3d7e05d",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9842b82317c431cd0b82234e40c31821fa2f99d0b114f0e16bc2e95d1097331c",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f381b65dee23d18d5f7a3ecd6e7e78172fb7fca7276fad534ac20d294b552211",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1bbc059d53515f935f8904edf78d40a8dcc0280a64bb4757abd71f4f81302fd",
                    "size": 1153902
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ac4232aeab9c66f4aeabd04691544ea516c0f9f55003976d740a1cc40783768",
                    "size": 470
                }
            ]
        },
        "build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f54716c960b7cefa8a07a2a57a6da83b883f456b1192e2bd5ef3876dfa9cf49c",
                "size": 9310
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e6d2876027888d3ee57d853179c6ae4108810c0a1e8ea542ccd2e772cbdf72de",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46d4ee457740b37623f08bbcbd1b02947925c0c192b88f9de41e105b213f3037",
                    "size": 12975118
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a6b14450d604ab6bb7341457c11b5c4e501f9e3701f9e81c495327141b20945",
                    "size": 198237483
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c5bb2387dea7477d9b0a9474c920b1f83e2de84b2118bbe5533ccb5d6810d9a",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e5ec705e490c3943e6f9ed2dc00d2002ab2cf4f0e92e7e2b25ff6443139eae3",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c69ff9177e27b334300cd4a305ec82f2ee6a9ce2b4a69158589c4fe38c836ce",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:277c46c61d7fba09b1d3e5f33c8dd6f3f8950716b93f695d08009cba37045d74",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64f544d305b2294bd574c661a7cbe2e8737d2f5736c0fb92e88f66897a9c537d",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b1364ac1dfefc426e60f0a8f6f6ac2ca41ad9da5c8f4b032b22f0267af4d867",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0dc6fa7fe1b76c096420ed4c5b6ffbdaa17115c327660124752324da781f220",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:badade7589aaa1c29e29b3e65224ac6e55526e68fb1a2bba4a50176e4930556b",
                    "size": 1153893
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:61e89e0ca5660bbf3a16588e95ea1944efebe59f631dea3a6c6dcfd625a3ab1f",
                    "size": 470
                }
            ]
        },
        "build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:24e95967275bab2f9a40760e525cccc6e01aff709b03d0ec814f23184f6fadda",
                "size": 9301
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e002e62693644c1b7d6e4f47f7eff0f4b07447854f1a354762c5faa8407710ca",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a9b01329934717e99144a7efaa632c6c80243af996f43d870a12ffe3ba463a6",
                    "size": 12974968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:872fdfb1a4b78cad02f72565e6b5df8fb9d395d99c7b9571df6778fa5ab1e640",
                    "size": 198238960
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6048c8b8684c8f4fb651632b9fa013a8526964e3f8abab3a969dc6f1cb68d9ae",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:269df0faa1899a56ca4217248617e058791dcba067437ef71356ae68960ce716",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:929b77287b8d44f9ca3348277249579589d6630e4e790d3427b783f0dd9325e4",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c866449afa453b0eed477471bdb56140bd2bce6b088e5583c628196c7cddd98",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10e8e21417f2bcfc41f184882e2b9aa6ac0e37ddd424ebd1c0ccd3dc2554c0fc",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:843f45cce595e7bc1ce03c2311718eb90fc2500ef2ea503b3496747efa80ee26",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:404603e2a43c44ed8901f778799a084d038b1064663c406f1e0a228ab46d7006",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2da1d53ee456eb9ade068e41f280966ea65e7419faf4ec3d80bafc720949f62",
                    "size": 1153994
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e4465dd3afff9f2f11de8613eb576e4f3584e545112e46e7bc5ad47701c4b61",
                    "size": 471
                }
            ]
        },
        "build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:048e780b2dc7cdcac47c0eea219d85cf8c8a10fe7062aee1c5f1330c277242dd",
                "size": 9296
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcba2f78391733a47fa6301e4aaa906cd31b5772535c1582562079b78c5f5ae8",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c258bcf90db36e2970a505ee6e14dc01fd96af73aa4051879fbf892fbb7cf0b",
                    "size": 12975045
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d305429230d5b47f1cede9ff9171605bf960fc0f07ecf3d5f0be446a9ab480dd",
                    "size": 198574000
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d85d43053080c4587c7856378ffb4165e3f60437c56d535c40fb60e2b71249f7",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7d3c5e68f9537b5e91a334f71a210c2aeaf92c14ccdc35996d2a5ba8f2878b0",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00a29b6223ba1cfb59486affcb2a59771c561cca23b716b1aafb0732c34f1e94",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db231b5fdcb87d43878f52d15271bd9810030c4478e9fd27ba42275124d6a245",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4529c36f3a81a1a33876b8be756716bce7e469a6e8bbe7256a68aa7baf11b7b",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e69b17c2ab37f3b7c6850e5e51e9b8a2f027e059aaae5edd9bdb1fe4db2a9a61",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c54e551e3da7490bde6cb993af0bf12073e9059bec98783a7ac1b1ef92675cb5",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:914e1c7ae5911b2833526f415099fb8a123e26d46462cb3ec7ad0ecb0a18cdb1",
                    "size": 1154246
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a0b5726d499f0f2d0a034e0046f54ce8342eb43ef8a5feb49c276c0fd38b87d",
                    "size": 472
                }
            ]
        },
        "build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7c973ac9efec74e01af01d1b4472e34a0b073d02de17a3fe0b75f49fbc65a45e",
                "size": 9290
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e30d3bfa043a37234529256a2ddbafcb7d76b87fc53ce2ee153cd303fda2d6ae",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d22075c9bb7061f6b7a8955728b997b57b08a406bf3c98dd569b2822de3796a0",
                    "size": 12974924
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7e9c0263de6c0544a8417547a1595cb696b2b910a0174db6ccb5fc99e656246",
                    "size": 198573136
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dde5e8304a334dc4b9a1dbeb79713473361114d34c14a984ad0e76839ce179c2",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56cd23d43464d40481e4fbb571c2d9872a49b9b692af94b9f5d66090c16c54e6",
                    "size": 257
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f577bbc75fd07fa7b71b7ed4314155d827c4c786ca8b91ebce3e6ae99fcf70b2",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f08c256037939d84637466f41bf6d4269ac0af747c3d79ed3e62d9d34e4eb21c",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c1e7798cf49b6bda92f33efe657ceafae3fe1aecf8040704916f42a83fff8c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de486aee6a55011bdfd9cf642f227a6d2d45c2d8b825f45b46429307fa683b2f",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f57bb210d903b265ac8af7d74783fd1353f301da5e2d63b68caa267c2e44d01",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64608d2c6331e316a3f8991b780e87363ccc324989feebc4f22eecf7f4ff949f",
                    "size": 1154246
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f97296189e18fbd3408a25cb4ce17991e0f903aaaa5c8bd578af17525e1d53ef",
                    "size": 471
                }
            ]
        },
        "build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:40cb42ff2d5e7fead725bc011ce4dacf9160868839fde5846c45ef390504c5e4",
                "size": 9291
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e679cebe0849bfa7cb31bc37c02c65ff1e2ba1af6c7610130ef4a0662642da9",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8018fd0de9417ceff54d5e970ffba51a3bd4381b66ff525be5a1b8c5ca7763e",
                    "size": 12976453
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a7e897f2afcd8ba780ee63974b25f8796cdaeff7b3253da3c3a8dc54e841c49",
                    "size": 202407153
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d232fe9fe2541d304164f5c0df34e5f68fe7099328fb3de15e15b02e89a54a07",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08abf86fab1b55cb6405a9f9e324ff6f48ef08200bbf35f8d8189e0db23960f9",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1aeaee01325f1a632dcd37d0732234af47f4f122e8a845d01854a7caf4264961",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363f1af776176365556af6c9c3ff5817d8675e57829101a6a0f3779325b85f6",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be1d5d2ac84db3d2f73bccd4820102bf030a95bfca47a780431f6bff75d934fa",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd25f72f3d784a43ae14ac9f58af7e1b42eca095bd0e4697ffbfbd3e7def3e17",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff19cd906c274030a179f0f967ebcb4ba25f4a57a5d79d2777f3591891e59cb",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dacb9c492de71aaa3cb6afa6611a2b988decbede9f3cc330dd1fd58542b76eac",
                    "size": 1157599
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62aa44a739073bf6fcd210b0e6b1b510812e709ca60a87a43417b06c52681e7d",
                    "size": 468
                }
            ]
        },
        "bullseye": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b120c5f973e16b50b3e4435a2da200209ec6a92ca85b90102459d553a33406c0",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b526ec3ffa40824ba07a65cbad89904ee73075f504d2e71b9d2c95bca96c7510",
                    "size": 12063909
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8649c253d819480620bc59d342cd10f3a09881624067a80329d8b0b1e0f84af",
                    "size": 469
                }
            ]
        },
        "bullseye-20231025": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f451877547373e13c713dc6177acb56e85fe907bbb1b407ddf0b06111b9c2b05",
                "size": 8336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc521c5b98350f6fd8c72ace1e48558bb7b53cb3db201a2a3b42095401cd02f1",
                    "size": 30062869
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b6d5aec1849ba1833ac051cde7c3e335daed8c39218604d525e45e43890fc24",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3aa649aae7c6dc26b73a8c19a91f6b451d8e1ed1abec0bcc0ced6ffddcf46c9",
                    "size": 13085478
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd5714ed45a495a2f2fe046f974b9b5a91d77aaf88912e286d7ee62027995595",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63400a67202becdcf50b485680cd744b529f946af5649b926217a854ffcbfd7b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9dc3da9d38e8fc0df94ce84b3a5ab08ecabafd7c46c2ee6357c21c6953bd5d6e",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e69ac7887adb8cfab33ae868d6da7936db42daaab9a00619232cad3a897d189d",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34dfe2f4d9f225a37cd3871771032c11d329865018fdeaafaf0b7cf56dfafe74",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ce92e5345643eb483546e58c62c7725070f28f4f6bfddab07955685cdddf971",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89cef4ac0d76669fab5e4527bd8afc5b4370756b8236c796f7792fd789401ee5",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:461d1147a2f6747d83493c34b582ad1370c938758f41d70f0a78cb1c597d6782",
                    "size": 12068359
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa3e73f8f488d8fe184541ab81f75caa64a48e9bacaeb9e7d5ffc3a7aca9d29e",
                    "size": 472
                }
            ]
        },
        "bullseye-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7ee27a8e16f68f1c4acbcda94e6a2ed257e7e127bbeb0628e14b6bcf67e41930",
                "size": 8333
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e498137f0ed1053c364a5c8a688616b4abee72496a0b97cc71ea5e603565070",
                    "size": 30063905
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a962e6b7bd5dd90696c0bc1f9ac2a568eaaef3a22219d2eff13d9cb195597150",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fea786d312ef286d16b7d4e6ee8458d322aaa20415efe207488a22742e42f8d",
                    "size": 12976925
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9add177ed94e43eaf6152516d89bd8666c4c3b9f857e372cccb741d0f7a6051a",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:646acc1e4f4b0b6f673fec5ded08359096d8777738cda925b31778674455bb32",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c1bcca44c46f2bbeb7afc7826d48e466466a20fc5cbba593009939cf9ea7a87",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ecfea6abe9c0abbae44e7409aca8146de0eb54a867e1f0a0d100544361636b3",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e586601c5bfdd14477ff2d23a36db89885dbdfd7083cd1b32eaf4e60d31f87b4",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d710085f990e47cc061e932da1b0191a372d9e5a46dad800ff0ea7e8fb5de6bc",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01cbf7d6dd9b96f736ac48f4051e375034938bf88414085967543bb229f89b57",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a21628236f54a69d165940605451fb93a5298f23e09803be89c9a62f859fc88e",
                    "size": 12068172
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62f08df4fa32064914931605ff563617e44bafca90ec3b37aa2788f7bfdbb36f",
                    "size": 469
                }
            ]
        },
        "bullseye-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:00a186d12f8cfbcb0aa36cdda387ed8da4871e1ce2243018a9dd41860b94f473",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdd8361700a94c6e67ce55f6ca64efee6a4959612611750a3ad39607c92bcf8c",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29e56eeb3070309116d2179ec9e8118e82e9bdc22c115d9692d83fc1fc589b59",
                    "size": 12977479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:817b355e7456790f98bbc69c6b6374e2cb821bbc37f68b35b7ab2c3955b097ee",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2b466f8b07788cbdfdd83414f5ec111db7be424576ead82ef99ece822ed5e05",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ede96550fcfdad8aa28e78cc1499a08832097d591d7af3d4eecf153531d52d7e",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ac35e5e5f201c367dfeb909a064d5217ad9a39bc499aa885e95fe690822ee53",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92c69709be30d91bf7d4dbb1ad1976d4cc863bc5d0dd282ba18196143797996a",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1f4a072f19c88d4708ab8a80b4053b0d8928dd3382ce1266a221bf2fb2291e3",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3104bb9ca5f6b3448e2866e4c0cbc6d6ee330fc76b354795d642d712381adf48",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:671b2be499a1c1569c41e4ffbfb8de0c817662282829e92f032ce1b266b9ac8e",
                    "size": 12068089
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a488a091569ea54f40ced18d189edbcf1e3d7a9655b1a9c83c60da9a3dcee842",
                    "size": 469
                }
            ]
        },
        "bullseye-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:975fc0499700f5f503e4f0434ced410bba70e8e39beecf83e4d53095585d7d94",
                "size": 8335
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2fe9143d82b48fb4af3e438fff9e9e9ab593d054ee425414d772860c287c00d",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5767a74deab1e8695fac2d12bf558a7262e2f85d66255fe8c34bdae2aa79d09",
                    "size": 12977474
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f51dcc23055a6ce088fa403c9dc23c807eb3b73ef54a32c56e81a2e6e5684c36",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:413a9f60ae65fdeaa8c26f3dcfc25b6897068e9cfc74d7d32ff3b76b9a1901f6",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b49d769a1ef19d9fc4421bb0ef1ea00ec90e373b77fc43edded2f5df83fa991c",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a38eb8870d72f89d84fe232f13f96d72d354a63142c9ef4ca170c7733e81d2c4",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1efd48e691e3602b17ddd9bac6c2956fa2de2e9606dd60f69429965889d8cf2b",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12a89b279e10b7cb86fd57f8f8a4bb6943a14ab080a533ef7be0903d48ecf13f",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d0bfd75d90a345ab4adcc7ddc2bed23e515dcbd8a39149f6b50fea1339c42f9",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57089c6e47553dcd9bfdc88c282220805f6785996abc742648a87d82aca9d8a7",
                    "size": 12068234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31171868d9f07fdd0b5a825a99df5ebeddc98fd1d56621b857bdf83e9e65cb65",
                    "size": 470
                }
            ]
        },
        "bullseye-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f1d5eeb6462ace2cbd6d22e5f7b4ae71fe705d4879321a6063017172268ea830",
                "size": 8336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c5073fd4983645e56f2d7c43b0578ce93e7729da21e2f1ff2afb8400b76479d",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de96a9d1ddaa697a3579450a1028384ce039da07321441a43a0a59bbd3c1b15d",
                    "size": 12976677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1a90dfc49a156d7b3ac0247618be2b6d6fd50b77bca58f5f95a58cb555bc90d",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a70c314166755c7a85177e5eda327d48423ddd1470a5d8a343315bdb7830bc64",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d439ea52060fa5611f07ae0a691cd2b8b1bdadfd6d9b73510b64983169413a",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:480d7642da0ddaa1b99731162951f73f0ab9f1dcc74e511a5d9fe681fd5c3356",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6736fe6e47ba3d229fdbaf7bb7071b97152d2f88a9a0582de1426bf7efe0d26c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:208a0669d184f22fac9b22d3aa8c57f1420fc47d5128c0745500d0e2e8260cd5",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e52cb06c0f7706fb99b300cd78287782989b48ee6b4b47145d82e947cd7e3d3",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:681f2eece34efb6245cec26c1a78fa11176abe12d00843154d8e4174024d39f8",
                    "size": 12068141
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ddaa96c23eee550f3042d563c4d2d009007989b9aac976a16abec9cdd6d40ee",
                    "size": 471
                }
            ]
        },
        "bullseye-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:985a17b47997baa440509c024e676299f35e436d50a18e075ea5450c30b5f837",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fed5e00f3daec5a11cac1dba82d5c7764f3034fc44920b4ea013d3d3b50adff",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9e4ec748abce4cea17e5fc65089ba82a57ecb5fa64f8eaebd2b1fe5bf63bbc5",
                    "size": 12976746
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5bbb9dd26458939c671a6ae3689e843bae70bf30a829ffa9b87a8d65c0c263d7",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c13bee8013c60572d5d138af920973ce92631407d6cfe4b249bd7dd36ddf367f",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7c1703e38bd0c10adb8cb901cd9fbe718ca7fe73bb69410682937d6f2fae65d",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8a8c78768260afb3511b13b7909bb2c18e6bbba87bcd638426426e04c76a185",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f549f42f4d4d0f9a0d91a794420c324a67330cad829e4345c51696aed5501c5",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2520845ff73ed6ba9127c4faf4f25f15c350c37c20c714eca2496cb906ac7ca8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c712c29de2fcef7400e58bf9964f2aae8dabeda214946b45459050ceba5377ab",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3fd854beb1e43faa985824d8ff4d6a19672c706279ef2f4b5ae1353e7e645d78",
                    "size": 12068279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e20029bfe38d57c696eb67d20206850cdcc25cb85a90dfe4c61c82c739e1bb9",
                    "size": 471
                }
            ]
        },
        "bullseye-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4cbde4a792c9461d64618b03052837616b0da6793695e692b14519499a347e65",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3508bfa687ca31d022999303de1fa4b505f43436280313e4f79483dba56a54fd",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29fa4cacbb55bbe4c2f43337598c7e214d4db670a1b8f9ef77d5263a6f974ac8",
                    "size": 12976770
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb687a9ed447b9ba7e0c7e1d6499b3ccdadd73a79be8f4d69cda9fc53ba267b1",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8989164d23ea6e023e214b59c81f995a35e28d00205cb3b7763e1a02027bd6ee",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0c00bb9a3ed83463b51562d150ff8a703d89c3b5f299b1e78bff960f9a631fc",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb505b74b504315c6296202f5b1c2fbbcacadb506f7ccc5f9c99db08a56c42dd",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09d4197c190e339573857337d4424733743c266e75bcd25453e4e90d6de2ad0f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1bfb8ded4ee9cd7afa32e3671ae3078be45e9060e3c955b92ab87480ed03b5b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8876f8e5f597d56ef198459db6931f35141fe8ca9e468ab6b8a7008b6ad1ec5f",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b31460e22d44a134aac839c48ce8f82f786565ad87c91fc0bfeb21669f2f4e66",
                    "size": 12068381
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e5d24befedb90c3a9877529a338e7cb9f39804834d254878cfe14ba465a83bf",
                    "size": 470
                }
            ]
        },
        "bullseye-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:15aa57be64bc8698342633d4547891f53cdcf82f9cf691ca9ffd2385a0be4e66",
                "size": 8336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdc982aa2cd91f3d8c1a394fe291b9b4617ab5a3e8621be17f7e8f448df865f1",
                    "size": 12068260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e65fda39b25177d70108060aadf1a969b2f7159771ceff42389d53ec6a54a18b",
                    "size": 470
                }
            ]
        },
        "bullseye-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2b7013c37d6b2c1d1431abcffc4718dc49a841a78d7c5b3752bed41c184b2c66",
                "size": 8332
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3b02ff1abe5dfe9791505936f93c8316422232986a64a09149fe3aabb8be2d9",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:759907076afe713c4234fb5987290ccfa61dd49daebced99e301665b885062d3",
                    "size": 12975152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d19c37c9190edbe13b45b66a2b8056c396ee43a72916ba1d9ca757dc398c27d",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdba65c7a86f749c1d475ca45f2a65c80d5ad0525db04e84db2da8803614bc1b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9f4c9bf8626165f2f2e675cc143ca800c95ac74558ce5c1cdc0928136b2a45b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33c9823ab36b119e618993bd63dbbc9cfebe37d67ba4ce036ffe5203e4de0be7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd83e03f85224ec03d743a072160fb9deddd86af0bf9cd2e7b6a4f2dbe221b58",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a42f72c7f4eb3e1399bfe85d2f32518ba7277a04b897820a0030797b4825d57",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5324c9bc68271cfdebc5291757fad42a9cd8e644ccef3fa6b3820e6dc0e61cd6",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89b2cbadb70cd196f31440ee26009b58f03e311d2d8caee65ebb2c1bf1632079",
                    "size": 12066196
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37daad9c305eaeba9f7300290ab5bb83040a3fbf4deb76a9ff3c75463603be29",
                    "size": 470
                }
            ]
        },
        "bullseye-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:df25f7dfa80e8dc1dfae217927a52846b9d87d2d51bd9917ccf4fb7292204e02",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4e883aee71b5ef97bf1ffdfd139669e73ef006c560365d29cabde27caa6b13b",
                    "size": 12975050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f03e14fe93efd751580a2d51cb4489a57eac27b5db895225befd9a2299711fd",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef2a23d56797032756a4a8e8bd01b2c71a198c10e4e75e46bb3508b707d88d5",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de945cb97c6374ff7ea085bcb2edf737114d2f71f921c9a5a72c2168a40dfaad",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f482a15b31fc59f209b49b1e3bb7a58f1c350c673db22910a5cfdc4dc3ae6685",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9571608af5da43a8c78a43bfb08a829b5fcafda5e8292e393472cabbf0f804f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9614d73f006a2cb00875772e38550a822b7ee1914fa1a3a9ca724b0f0acb02aa",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55d55aad7abd855b5bd072003c07952d0f3605bcd5c55718c85dfbe5501b78bc",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a011bab6378ab6beb8adb79c7af1b10f94ce9b1bbf98c9409d30d40a1600b18",
                    "size": 12066147
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7c31778d110c356aa857f034acd571c7157c60f45598f02a7372f1e09405d9b",
                    "size": 471
                }
            ]
        },
        "bullseye-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a37872969e0ca00603e64b2f430e814a4c79dbafa41591fc4b6a1587e3ed0bde",
                "size": 8319
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd08d71f9e4be4f65e14231b96b47eba749b90731d6ac89a6b122102497f0520",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ced2846c7ce7b5358d8d1ca581b422091108201a9283aa8f845b5b6acf13b45",
                    "size": 12975074
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc714b302c222d2337d2a96a68bd0f8e2f6e8b6141b063613b4201f1b9bf88ff",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91059ecb4797f7ed53ba6123bc3708c97ed915820284c6e9ab28d76f72973580",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10793d475cc903a3e7298e67feaaaa5b1ab39b699349227473a13d747c7bebd1",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7e5860cbb43236bbbe750bd6abf586a8856e076ee2e1c38f33fb4bc6cc9129f",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3528b47aa83bdaf2eca21dffd496e9b26a4c6c17e7ef544f7a136ea69eb5b829",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8d887e8d98a1d19fda084161bdcdc428bc666757604d237cc331b3e96e3773b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c42376533b2b7356cd47d1c5d2930bb9f16c8bcf09939ec53070c484056a89",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d7c41e39073993a13a4c1389895a0a67c9430fc38339a95fe90acee84aaae37",
                    "size": 12066179
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:121fc3a200e7784ad770a628bad000d2461cf083a2786f2796fe5dc6778fd548",
                    "size": 473
                }
            ]
        },
        "bullseye-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:97771640e96933a22e5920b479f26bfde1f76f6ccc1d7295998a55274e601fcb",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a0e48841b8e49c36f6b1a8ad4efb4d37c6e10ef8dde5cd91f4dc437d1d8405",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55a1946130ccc17b581e6b524cf631bab9e5fcee60de01f0d39244a87686b92b",
                    "size": 12974885
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9858c7c5616b7ed0d90d6fd0d87ceef7f797f9d35758625edeb82f9e028aec60",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efe8622a8e40ac44137b3b5fd0dc0f14ad5e810e0338dc547f692d8b6a35c977",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c78e7355e42143ed74045da95e7de3ad92272199e0776d1b7228a150a65f47",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75b07c5fa13c3200be81dc39d20abbff29122ce62e20ebfe91047e7eaf0fbfb2",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a595d9ac359dba0005931f718e650d9edb7c0a1e3f6d9d8acce991fa76ed260",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95af7d2de70e46a0ae3136c3e62f38101bc59d80d433aa5f5bbde3da44a6280d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15bfc11c903d27a21ce686bae35210aa061831dd4dbc80e0104e5cc4ac5d9643",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8ede8ae4094991acedbee726d1b6e919b13bf5c2e9e9310737a8c0024c2b922",
                    "size": 12066255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b182c8f04a9cd679de5170fb46f659df5da9d9291948137fab51b103a096ee0a",
                    "size": 470
                }
            ]
        },
        "bullseye-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b120c5f973e16b50b3e4435a2da200209ec6a92ca85b90102459d553a33406c0",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b526ec3ffa40824ba07a65cbad89904ee73075f504d2e71b9d2c95bca96c7510",
                    "size": 12063909
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8649c253d819480620bc59d342cd10f3a09881624067a80329d8b0b1e0f84af",
                    "size": 469
                }
            ]
        },
        "bullseye-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:40cb42ff2d5e7fead725bc011ce4dacf9160868839fde5846c45ef390504c5e4",
                "size": 9291
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e679cebe0849bfa7cb31bc37c02c65ff1e2ba1af6c7610130ef4a0662642da9",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8018fd0de9417ceff54d5e970ffba51a3bd4381b66ff525be5a1b8c5ca7763e",
                    "size": 12976453
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a7e897f2afcd8ba780ee63974b25f8796cdaeff7b3253da3c3a8dc54e841c49",
                    "size": 202407153
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d232fe9fe2541d304164f5c0df34e5f68fe7099328fb3de15e15b02e89a54a07",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08abf86fab1b55cb6405a9f9e324ff6f48ef08200bbf35f8d8189e0db23960f9",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1aeaee01325f1a632dcd37d0732234af47f4f122e8a845d01854a7caf4264961",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363f1af776176365556af6c9c3ff5817d8675e57829101a6a0f3779325b85f6",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be1d5d2ac84db3d2f73bccd4820102bf030a95bfca47a780431f6bff75d934fa",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd25f72f3d784a43ae14ac9f58af7e1b42eca095bd0e4697ffbfbd3e7def3e17",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff19cd906c274030a179f0f967ebcb4ba25f4a57a5d79d2777f3591891e59cb",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dacb9c492de71aaa3cb6afa6611a2b988decbede9f3cc330dd1fd58542b76eac",
                    "size": 1157599
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62aa44a739073bf6fcd210b0e6b1b510812e709ca60a87a43417b06c52681e7d",
                    "size": 468
                }
            ]
        },
        "bullseye-build-20231025": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:90bc0de66a0ea601853957994f789f5713ac867a361da6bdaa12577706001a6d",
                "size": 9307
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc521c5b98350f6fd8c72ace1e48558bb7b53cb3db201a2a3b42095401cd02f1",
                    "size": 30062869
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6637d78cd3f40ff882e999a785f182bb3fa1a01d5ef761c1e181b6d870a7fcbd",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b06450eff9af15b75445dea963f162cf7858afeda6fe48f1b83b97ad56bc711c",
                    "size": 13085514
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59e41231059668e489f6559603117d46e9cf19f77a5f7a16d94229cc05986d27",
                    "size": 203957589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c5dd089081c30235ff6f44d1664bc8e6d18f241419d788ef106895706dd5193",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb7dec6a6039502bf674300a9f0e24570fb7fb60e047587cb4e5499b2359a7db",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2795a48a5b0eb1d3b686968922bf944b47a1b1a49853ee357c41342996c957f",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e05c2c29011c5ee6d24c7fbcc46acc54af25f6517dc0c00f9591c13dc925a93b",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:182c297ace30796393d7c5c9a342cafd081cf498c28a891a8d64964cd63dffe7",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2cfb84ea62623647212412015438bc5e3cf43fb37a29a311f889c2689fb2c2b",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71f9d667329d6aa529a7956b8c4ba73770477232fc648bcfb3954a17d8787a76",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:73814f1174c5deb08eda455f022023bf1ac10664c83efb3a1c2f41d7ec3c29f8",
                    "size": 1154494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7b85b74093ca1a23021e9406204e88234532df7bcd4d53a4bee08eb3f32c85b",
                    "size": 471
                }
            ]
        },
        "bullseye-build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b0ec95fd669b5489a7c07e2cc55ee1ec5d519d49cbea1523ced9c294af1966db",
                "size": 9300
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e498137f0ed1053c364a5c8a688616b4abee72496a0b97cc71ea5e603565070",
                    "size": 30063905
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:222267fe04b6ef131a3721c20636fb4bc37610876c6e79210bd9770023b15e9e",
                    "size": 2592216
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d11ff54f08292ea7b9f8f9646b0b46b9c279b7dc30755643c8b1812dd264079b",
                    "size": 12976819
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:559acca2b7f889e15b52a6855fcaa4d26ca66e38abcda80da1097a9504f0383b",
                    "size": 198242397
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d75d772ca368aaac39790f5b6db9861cc40bf4eca9efd2927835d17017cec794",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01718caffadee8ba197c2d922f7e4b71a0235082e0bbc940d88b3bc1c1adcbda",
                    "size": 258
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:014c854091246120945ad9377ec757ccaccc4dd3fece836394e19711f7bc9949",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a271c6111eb7b6a014490e1a09f0a8257ee7a9f7f093bf46416f0326efb0b992",
                    "size": 1004
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4a8ccaca76e2f0a8246d693ffb6acb6b38fcb294bf1f85d660f7daa02ad7c83",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a21f15edaad1a3b89b2992ad968ab4e28b3cd217b394917dc57e8d73035daa14",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0abf0889485dca1bfe3c1a85f92cc411eca9c3fb16faa4cc71ec53f8d7fbab47",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:48efefc369bc69d192a2d4b0f9f110ebb48a204c719364cd9274d5a4a7a3c7ef",
                    "size": 1153799
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c69b1e8db0a87f7cf080974eafec2260df9f2ed25ff39d0a8db440e1d1641c16",
                    "size": 471
                }
            ]
        },
        "bullseye-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:864d049ff36389bb4f0a18b13d334b9f2561173f4186c84abd26c5fed0b6585a",
                "size": 9306
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00a375dddab470a2b283c99e80e85649bad31584427ec9a4b3e51c6451312720",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:449d32c9e52b27aa72b2f52a24a1efb47133b820af075f40f191cd8e10a3e336",
                    "size": 12977481
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2baa28e7426d319563465be4c2b0847aa8d2286b2aabf4159075b2c16900665f",
                    "size": 198242553
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5c8885ec7888248d72f5e4ed640ee91ee931fa3844f2e32257512303c4f77e3",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:758ba1e197e99d9501f27f0d401bb2e3d57b12ce4a350e0830eb6f7f42b1fefe",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb0eb8a31195747cbcc985084c6b63b8eb607a42ccbd5bfbaf699c82963c24c1",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:434734840112a44e60d24378b399e4e18128267f9c07f7c424941caee1e45633",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:973ec5288608f45fbc92e7dae14c3935d7d2a845d04620442c3e42342ea6d04e",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c5c9d449e62b4584fdc1e18a7031a4e1dc0f3e2178c78da050929d87d8176ad3",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca6435991ce34103ce2a47bf803e0c2e0760ac418d37d30d3c84a2a83d939d3d",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f07795274ba28387e001b3318866a93ec82273e3d6ba19ce841692e522b61a23",
                    "size": 1153851
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7e60ec87e9bab8ce6f306a478cbc8aeecf818509f07ee91d4a54d59bcdb3e9e",
                    "size": 469
                }
            ]
        },
        "bullseye-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:278ee442d334797f9b310265ea7d3e318ba588d6ad94c16b2a13ed41779f9490",
                "size": 9297
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1b33149dcc273345736a83f631f8e2de7d9a551d977f274ec8112d80767d02d",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae956e5b517d8c58bd3519db6b8781cb386ffe87e78b3cd012e526d8072ef31c",
                    "size": 12977423
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df8a816a717a21f068fcfa0207d660635a640d27b3b74ab51f20d7faca6a6fde",
                    "size": 198243441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:913274a0c0a02e2c567e257d40d1379235cc5821c08a685704a52c7dbbca914a",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff0224ffebb6a46b2a2c5199ab8b199efb78048eeb36a1ee5e9a3a95e79b03c7",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44abde36326ac7bb957c906351a71980883f91abf668835904c8d2acee13ae6a",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7d06cb4842538058c0dc848a8894e827ef3dd6932e7ea63683d1ead19007e85",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c30f20aac049c3edff56c046ff9e0790f627f8dcfec2fe8affa90642c4a810de",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9935a0f62d1cf7c931f4454c1784f7ea3241c0d4e549d1b8de4dd00eff34c31f",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5eaca4aa781d5af8a64f1137130d7eb69a1250b6172add8205cdcfc598d17fc1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2760669758e71477b04c90ba4238c28caa35ec077260e647d7ee72f3286bc000",
                    "size": 1153857
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86246463d223117a1435d40539350cb8e06078c66015fa2b3c3510168cd18259",
                    "size": 470
                }
            ]
        },
        "bullseye-build-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c291d4972fa7feeb65487c7359625020c59c23802bc1950c8c59d68fb88911e4",
                "size": 9306
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b59bf67779304f302bd3132f3a2be8a363a1a257d165fbef5d4c1fdcff6ccebe",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e2cf320e7eab57ab8e4918af133a88fdfd6898ff89531cb22d7ea938676c0ba7",
                    "size": 12976674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5389bdd24bf65b5c2066451967db2d7cd09cefc838631b7b74da30132ddd6e6",
                    "size": 198247608
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c134f0570364397dd703b12e89007b55e7c19c7524b3e3a4f1d916dbebd0aa10",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10bfa8b75bfb934917da80f01cd0be8269133bfa6af8ebe617c2c44a3669acfb",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:341b53b10ed2dd5ccca3974c41a73afa9798c70b118bf978b54ba6e5e067ca6a",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bbe31f685f1476284a13cd445d483e31c63844244db393ff69745c76a4b956f6",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da3ea8150c216ae439a8f06b9f1d6c195baba9d9686a11bda4e1729f280460f5",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:028422a551c7104b5f0b143aa478c6e5d146533d93c1dead6e8d79efa9f97217",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2c062bce3a1a52c6a866e310bdf328acec7c0ca4f0d3f79c595e82d88c13eb6",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fd912411da04368bc75e3ab52e2844d0c38f821e6b9c7506ca2f392ffcead3f",
                    "size": 1153897
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4de81396170a87521d68162ba60c376f6c926e5e115c0f56131a3dbe23403ebf",
                    "size": 471
                }
            ]
        },
        "bullseye-build-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:200866beedbd261ad90ec8a6361465c62657e696318bc50a763fa92580d4334f",
                "size": 9311
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:680ba1f3235a9d8c571179d2b4a34a2093ecd6d6eb0ccd48f3d4c79bd460d33c",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b5fe31d070602b084490e298b58f47c059826a05048f721d13a3883f5245bc",
                    "size": 12976816
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cd412f8fac3867866cdab9c85df150f5f1f81edc833646115f2a229d60368e9",
                    "size": 198248704
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a15c086c4541f3fc849f0b885720624d014d998cf43bc983432d9acd3219607a",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:965d251b89ec3750ea3b1bf3588f59f4b9b1097d6b6df85f4052147d39f1bd0f",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f363d61ae45e4a13ba7331124b73ab793d5f09559c511797e1ac3bd247e262ea",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:371138ba663299ae743c170ce32994e2499b11d3d0b6b9565ad4ef7d10fdbb6c",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bb52e8236270316c95fdf5be1cd4689fc3b577e262599eb983f0fb25c79d63a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e01009a60bfa66916967a536a8469ce2e78fb74c6d76d11a8e899e31fcacc9f6",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9503def2f9871285ad40d27c697d5f7fa0650b692d0d359616df8c0d9495a08c",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f5aa47a62e8ab52d791cf4731c295c109812ef18152295372bc2ffe3a3316f9",
                    "size": 1153854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1c29b924c93b4fdd15826d61972ea566dd89b275be4b56a51fadf4d97f63e3d",
                    "size": 470
                }
            ]
        },
        "bullseye-build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9b5ccb7d7b7a1c81dea6c772a3ee525d5af593751396d4e7484a5670470bfb51",
                "size": 9310
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6db57d1112d030c8e1c89b4d774b2d9231eff939606301294c70ce1455d932a6",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9e2203ac993142853b9ffc31e205ebd9bc0edc708cf664fffefe5b1d1d7d32e",
                    "size": 12976674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dccaa466346cb8478da79f73725065d8238a66c7137327093d83bc839ac40f3",
                    "size": 198247212
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0752dfa164d11ba28771aa6633236b262008fa3015b5b2bf8b700e625d0b640",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcdcefe505f624eb2a9d6b0bf1da0e0c77f3c486c23f96a9f4b6f86fe6534687",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f74ae1aa34faca98ebdaa34a726f859372777e03cee8b5c3a755e1e95b9e3d4c",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8084e5e8d8b5f574ded52ec9377c6d83b6efb58ae1a3476d3504e937ba20451",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34499303306f69fbef2cb2e91266188bf1e4ebbdb0cdcdf349a45eb1ef739cad",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1124e94d2ecfc0e4393a596af6a31106140c6064eb182da578be3bf4d3fed92",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f11299395e09774e46f86b8ee8054bc2389bf046d21b01e0a121cb5dd46a9a60",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1edb3afa64aabfc4ff7dc8ee8e672f70db0216eed313b55c6f5c09e30663e1bc",
                    "size": 1153890
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d442f2c49a70d1b02ef47ba1488b8091bf2bf36b716468a717abc02171b7a2e6",
                    "size": 470
                }
            ]
        },
        "bullseye-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:36e474620a5fcf0849b8aeaa210b4eeaed75aaea35c438129a960da6595acebe",
                "size": 9310
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84642ed2f5842e77f6ce5b7f04d267c1d999850b7464bc250930f7fd81198663",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18b6f561d414a7fa5d738b1fea176f906742ede82ffbc4fbadca42ea8da00ab8",
                    "size": 12976765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aecc55ca63d63ea52a00d80a4095c0f16fc39e85a3f1cf79f8df391d3ccb3f94",
                    "size": 198248312
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:030eeff4d1ac1b1b9917e3b089c69df05f6efe48cf505703a4cb63782ec5a56b",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ecf8e349dc4b765d6364166adaff7550943ad9eeaffefca4316ac625ff4a7a5",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfc66336b9ad79402a7cf71cabb33b9456c5e145f9a23723e1d849021404c057",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d697352f61ac44c0070abc2678af71534abf040b05ea7130dcc922c022cd5898",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df627d84b57294a6988ae9668cc0c13d6f0abf5a02dc7e7ce41ea92ef3d7e05d",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9842b82317c431cd0b82234e40c31821fa2f99d0b114f0e16bc2e95d1097331c",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f381b65dee23d18d5f7a3ecd6e7e78172fb7fca7276fad534ac20d294b552211",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1bbc059d53515f935f8904edf78d40a8dcc0280a64bb4757abd71f4f81302fd",
                    "size": 1153902
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ac4232aeab9c66f4aeabd04691544ea516c0f9f55003976d740a1cc40783768",
                    "size": 470
                }
            ]
        },
        "bullseye-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f54716c960b7cefa8a07a2a57a6da83b883f456b1192e2bd5ef3876dfa9cf49c",
                "size": 9310
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e6d2876027888d3ee57d853179c6ae4108810c0a1e8ea542ccd2e772cbdf72de",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46d4ee457740b37623f08bbcbd1b02947925c0c192b88f9de41e105b213f3037",
                    "size": 12975118
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a6b14450d604ab6bb7341457c11b5c4e501f9e3701f9e81c495327141b20945",
                    "size": 198237483
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c5bb2387dea7477d9b0a9474c920b1f83e2de84b2118bbe5533ccb5d6810d9a",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e5ec705e490c3943e6f9ed2dc00d2002ab2cf4f0e92e7e2b25ff6443139eae3",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c69ff9177e27b334300cd4a305ec82f2ee6a9ce2b4a69158589c4fe38c836ce",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:277c46c61d7fba09b1d3e5f33c8dd6f3f8950716b93f695d08009cba37045d74",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64f544d305b2294bd574c661a7cbe2e8737d2f5736c0fb92e88f66897a9c537d",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b1364ac1dfefc426e60f0a8f6f6ac2ca41ad9da5c8f4b032b22f0267af4d867",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0dc6fa7fe1b76c096420ed4c5b6ffbdaa17115c327660124752324da781f220",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:badade7589aaa1c29e29b3e65224ac6e55526e68fb1a2bba4a50176e4930556b",
                    "size": 1153893
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:61e89e0ca5660bbf3a16588e95ea1944efebe59f631dea3a6c6dcfd625a3ab1f",
                    "size": 470
                }
            ]
        },
        "bullseye-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:24e95967275bab2f9a40760e525cccc6e01aff709b03d0ec814f23184f6fadda",
                "size": 9301
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e002e62693644c1b7d6e4f47f7eff0f4b07447854f1a354762c5faa8407710ca",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a9b01329934717e99144a7efaa632c6c80243af996f43d870a12ffe3ba463a6",
                    "size": 12974968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:872fdfb1a4b78cad02f72565e6b5df8fb9d395d99c7b9571df6778fa5ab1e640",
                    "size": 198238960
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6048c8b8684c8f4fb651632b9fa013a8526964e3f8abab3a969dc6f1cb68d9ae",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:269df0faa1899a56ca4217248617e058791dcba067437ef71356ae68960ce716",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:929b77287b8d44f9ca3348277249579589d6630e4e790d3427b783f0dd9325e4",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c866449afa453b0eed477471bdb56140bd2bce6b088e5583c628196c7cddd98",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10e8e21417f2bcfc41f184882e2b9aa6ac0e37ddd424ebd1c0ccd3dc2554c0fc",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:843f45cce595e7bc1ce03c2311718eb90fc2500ef2ea503b3496747efa80ee26",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:404603e2a43c44ed8901f778799a084d038b1064663c406f1e0a228ab46d7006",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2da1d53ee456eb9ade068e41f280966ea65e7419faf4ec3d80bafc720949f62",
                    "size": 1153994
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e4465dd3afff9f2f11de8613eb576e4f3584e545112e46e7bc5ad47701c4b61",
                    "size": 471
                }
            ]
        },
        "bullseye-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:048e780b2dc7cdcac47c0eea219d85cf8c8a10fe7062aee1c5f1330c277242dd",
                "size": 9296
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcba2f78391733a47fa6301e4aaa906cd31b5772535c1582562079b78c5f5ae8",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c258bcf90db36e2970a505ee6e14dc01fd96af73aa4051879fbf892fbb7cf0b",
                    "size": 12975045
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d305429230d5b47f1cede9ff9171605bf960fc0f07ecf3d5f0be446a9ab480dd",
                    "size": 198574000
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d85d43053080c4587c7856378ffb4165e3f60437c56d535c40fb60e2b71249f7",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7d3c5e68f9537b5e91a334f71a210c2aeaf92c14ccdc35996d2a5ba8f2878b0",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00a29b6223ba1cfb59486affcb2a59771c561cca23b716b1aafb0732c34f1e94",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db231b5fdcb87d43878f52d15271bd9810030c4478e9fd27ba42275124d6a245",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4529c36f3a81a1a33876b8be756716bce7e469a6e8bbe7256a68aa7baf11b7b",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e69b17c2ab37f3b7c6850e5e51e9b8a2f027e059aaae5edd9bdb1fe4db2a9a61",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c54e551e3da7490bde6cb993af0bf12073e9059bec98783a7ac1b1ef92675cb5",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:914e1c7ae5911b2833526f415099fb8a123e26d46462cb3ec7ad0ecb0a18cdb1",
                    "size": 1154246
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a0b5726d499f0f2d0a034e0046f54ce8342eb43ef8a5feb49c276c0fd38b87d",
                    "size": 472
                }
            ]
        },
        "bullseye-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7c973ac9efec74e01af01d1b4472e34a0b073d02de17a3fe0b75f49fbc65a45e",
                "size": 9290
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e30d3bfa043a37234529256a2ddbafcb7d76b87fc53ce2ee153cd303fda2d6ae",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d22075c9bb7061f6b7a8955728b997b57b08a406bf3c98dd569b2822de3796a0",
                    "size": 12974924
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7e9c0263de6c0544a8417547a1595cb696b2b910a0174db6ccb5fc99e656246",
                    "size": 198573136
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dde5e8304a334dc4b9a1dbeb79713473361114d34c14a984ad0e76839ce179c2",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56cd23d43464d40481e4fbb571c2d9872a49b9b692af94b9f5d66090c16c54e6",
                    "size": 257
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f577bbc75fd07fa7b71b7ed4314155d827c4c786ca8b91ebce3e6ae99fcf70b2",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f08c256037939d84637466f41bf6d4269ac0af747c3d79ed3e62d9d34e4eb21c",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c1e7798cf49b6bda92f33efe657ceafae3fe1aecf8040704916f42a83fff8c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de486aee6a55011bdfd9cf642f227a6d2d45c2d8b825f45b46429307fa683b2f",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f57bb210d903b265ac8af7d74783fd1353f301da5e2d63b68caa267c2e44d01",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64608d2c6331e316a3f8991b780e87363ccc324989feebc4f22eecf7f4ff949f",
                    "size": 1154246
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f97296189e18fbd3408a25cb4ce17991e0f903aaaa5c8bd578af17525e1d53ef",
                    "size": 471
                }
            ]
        },
        "bullseye-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:40cb42ff2d5e7fead725bc011ce4dacf9160868839fde5846c45ef390504c5e4",
                "size": 9291
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e679cebe0849bfa7cb31bc37c02c65ff1e2ba1af6c7610130ef4a0662642da9",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8018fd0de9417ceff54d5e970ffba51a3bd4381b66ff525be5a1b8c5ca7763e",
                    "size": 12976453
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a7e897f2afcd8ba780ee63974b25f8796cdaeff7b3253da3c3a8dc54e841c49",
                    "size": 202407153
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d232fe9fe2541d304164f5c0df34e5f68fe7099328fb3de15e15b02e89a54a07",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08abf86fab1b55cb6405a9f9e324ff6f48ef08200bbf35f8d8189e0db23960f9",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1aeaee01325f1a632dcd37d0732234af47f4f122e8a845d01854a7caf4264961",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363f1af776176365556af6c9c3ff5817d8675e57829101a6a0f3779325b85f6",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be1d5d2ac84db3d2f73bccd4820102bf030a95bfca47a780431f6bff75d934fa",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd25f72f3d784a43ae14ac9f58af7e1b42eca095bd0e4697ffbfbd3e7def3e17",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff19cd906c274030a179f0f967ebcb4ba25f4a57a5d79d2777f3591891e59cb",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dacb9c492de71aaa3cb6afa6611a2b988decbede9f3cc330dd1fd58542b76eac",
                    "size": 1157599
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62aa44a739073bf6fcd210b0e6b1b510812e709ca60a87a43417b06c52681e7d",
                    "size": 468
                }
            ]
        },
        "bullseye-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b120c5f973e16b50b3e4435a2da200209ec6a92ca85b90102459d553a33406c0",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b526ec3ffa40824ba07a65cbad89904ee73075f504d2e71b9d2c95bca96c7510",
                    "size": 12063909
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8649c253d819480620bc59d342cd10f3a09881624067a80329d8b0b1e0f84af",
                    "size": 469
                }
            ]
        },
        "bullseye-run-20231025": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f451877547373e13c713dc6177acb56e85fe907bbb1b407ddf0b06111b9c2b05",
                "size": 8336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc521c5b98350f6fd8c72ace1e48558bb7b53cb3db201a2a3b42095401cd02f1",
                    "size": 30062869
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b6d5aec1849ba1833ac051cde7c3e335daed8c39218604d525e45e43890fc24",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3aa649aae7c6dc26b73a8c19a91f6b451d8e1ed1abec0bcc0ced6ffddcf46c9",
                    "size": 13085478
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd5714ed45a495a2f2fe046f974b9b5a91d77aaf88912e286d7ee62027995595",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63400a67202becdcf50b485680cd744b529f946af5649b926217a854ffcbfd7b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9dc3da9d38e8fc0df94ce84b3a5ab08ecabafd7c46c2ee6357c21c6953bd5d6e",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e69ac7887adb8cfab33ae868d6da7936db42daaab9a00619232cad3a897d189d",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34dfe2f4d9f225a37cd3871771032c11d329865018fdeaafaf0b7cf56dfafe74",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ce92e5345643eb483546e58c62c7725070f28f4f6bfddab07955685cdddf971",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89cef4ac0d76669fab5e4527bd8afc5b4370756b8236c796f7792fd789401ee5",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:461d1147a2f6747d83493c34b582ad1370c938758f41d70f0a78cb1c597d6782",
                    "size": 12068359
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa3e73f8f488d8fe184541ab81f75caa64a48e9bacaeb9e7d5ffc3a7aca9d29e",
                    "size": 472
                }
            ]
        },
        "bullseye-run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7ee27a8e16f68f1c4acbcda94e6a2ed257e7e127bbeb0628e14b6bcf67e41930",
                "size": 8333
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e498137f0ed1053c364a5c8a688616b4abee72496a0b97cc71ea5e603565070",
                    "size": 30063905
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a962e6b7bd5dd90696c0bc1f9ac2a568eaaef3a22219d2eff13d9cb195597150",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fea786d312ef286d16b7d4e6ee8458d322aaa20415efe207488a22742e42f8d",
                    "size": 12976925
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9add177ed94e43eaf6152516d89bd8666c4c3b9f857e372cccb741d0f7a6051a",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:646acc1e4f4b0b6f673fec5ded08359096d8777738cda925b31778674455bb32",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c1bcca44c46f2bbeb7afc7826d48e466466a20fc5cbba593009939cf9ea7a87",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ecfea6abe9c0abbae44e7409aca8146de0eb54a867e1f0a0d100544361636b3",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e586601c5bfdd14477ff2d23a36db89885dbdfd7083cd1b32eaf4e60d31f87b4",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d710085f990e47cc061e932da1b0191a372d9e5a46dad800ff0ea7e8fb5de6bc",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01cbf7d6dd9b96f736ac48f4051e375034938bf88414085967543bb229f89b57",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a21628236f54a69d165940605451fb93a5298f23e09803be89c9a62f859fc88e",
                    "size": 12068172
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62f08df4fa32064914931605ff563617e44bafca90ec3b37aa2788f7bfdbb36f",
                    "size": 469
                }
            ]
        },
        "bullseye-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:00a186d12f8cfbcb0aa36cdda387ed8da4871e1ce2243018a9dd41860b94f473",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdd8361700a94c6e67ce55f6ca64efee6a4959612611750a3ad39607c92bcf8c",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29e56eeb3070309116d2179ec9e8118e82e9bdc22c115d9692d83fc1fc589b59",
                    "size": 12977479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:817b355e7456790f98bbc69c6b6374e2cb821bbc37f68b35b7ab2c3955b097ee",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2b466f8b07788cbdfdd83414f5ec111db7be424576ead82ef99ece822ed5e05",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ede96550fcfdad8aa28e78cc1499a08832097d591d7af3d4eecf153531d52d7e",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ac35e5e5f201c367dfeb909a064d5217ad9a39bc499aa885e95fe690822ee53",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92c69709be30d91bf7d4dbb1ad1976d4cc863bc5d0dd282ba18196143797996a",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1f4a072f19c88d4708ab8a80b4053b0d8928dd3382ce1266a221bf2fb2291e3",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3104bb9ca5f6b3448e2866e4c0cbc6d6ee330fc76b354795d642d712381adf48",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:671b2be499a1c1569c41e4ffbfb8de0c817662282829e92f032ce1b266b9ac8e",
                    "size": 12068089
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a488a091569ea54f40ced18d189edbcf1e3d7a9655b1a9c83c60da9a3dcee842",
                    "size": 469
                }
            ]
        },
        "bullseye-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:975fc0499700f5f503e4f0434ced410bba70e8e39beecf83e4d53095585d7d94",
                "size": 8335
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2fe9143d82b48fb4af3e438fff9e9e9ab593d054ee425414d772860c287c00d",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5767a74deab1e8695fac2d12bf558a7262e2f85d66255fe8c34bdae2aa79d09",
                    "size": 12977474
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f51dcc23055a6ce088fa403c9dc23c807eb3b73ef54a32c56e81a2e6e5684c36",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:413a9f60ae65fdeaa8c26f3dcfc25b6897068e9cfc74d7d32ff3b76b9a1901f6",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b49d769a1ef19d9fc4421bb0ef1ea00ec90e373b77fc43edded2f5df83fa991c",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a38eb8870d72f89d84fe232f13f96d72d354a63142c9ef4ca170c7733e81d2c4",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1efd48e691e3602b17ddd9bac6c2956fa2de2e9606dd60f69429965889d8cf2b",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12a89b279e10b7cb86fd57f8f8a4bb6943a14ab080a533ef7be0903d48ecf13f",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d0bfd75d90a345ab4adcc7ddc2bed23e515dcbd8a39149f6b50fea1339c42f9",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57089c6e47553dcd9bfdc88c282220805f6785996abc742648a87d82aca9d8a7",
                    "size": 12068234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31171868d9f07fdd0b5a825a99df5ebeddc98fd1d56621b857bdf83e9e65cb65",
                    "size": 470
                }
            ]
        },
        "bullseye-run-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f1d5eeb6462ace2cbd6d22e5f7b4ae71fe705d4879321a6063017172268ea830",
                "size": 8336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c5073fd4983645e56f2d7c43b0578ce93e7729da21e2f1ff2afb8400b76479d",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de96a9d1ddaa697a3579450a1028384ce039da07321441a43a0a59bbd3c1b15d",
                    "size": 12976677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1a90dfc49a156d7b3ac0247618be2b6d6fd50b77bca58f5f95a58cb555bc90d",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a70c314166755c7a85177e5eda327d48423ddd1470a5d8a343315bdb7830bc64",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d439ea52060fa5611f07ae0a691cd2b8b1bdadfd6d9b73510b64983169413a",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:480d7642da0ddaa1b99731162951f73f0ab9f1dcc74e511a5d9fe681fd5c3356",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6736fe6e47ba3d229fdbaf7bb7071b97152d2f88a9a0582de1426bf7efe0d26c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:208a0669d184f22fac9b22d3aa8c57f1420fc47d5128c0745500d0e2e8260cd5",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e52cb06c0f7706fb99b300cd78287782989b48ee6b4b47145d82e947cd7e3d3",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:681f2eece34efb6245cec26c1a78fa11176abe12d00843154d8e4174024d39f8",
                    "size": 12068141
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ddaa96c23eee550f3042d563c4d2d009007989b9aac976a16abec9cdd6d40ee",
                    "size": 471
                }
            ]
        },
        "bullseye-run-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:985a17b47997baa440509c024e676299f35e436d50a18e075ea5450c30b5f837",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fed5e00f3daec5a11cac1dba82d5c7764f3034fc44920b4ea013d3d3b50adff",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9e4ec748abce4cea17e5fc65089ba82a57ecb5fa64f8eaebd2b1fe5bf63bbc5",
                    "size": 12976746
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5bbb9dd26458939c671a6ae3689e843bae70bf30a829ffa9b87a8d65c0c263d7",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c13bee8013c60572d5d138af920973ce92631407d6cfe4b249bd7dd36ddf367f",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7c1703e38bd0c10adb8cb901cd9fbe718ca7fe73bb69410682937d6f2fae65d",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8a8c78768260afb3511b13b7909bb2c18e6bbba87bcd638426426e04c76a185",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f549f42f4d4d0f9a0d91a794420c324a67330cad829e4345c51696aed5501c5",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2520845ff73ed6ba9127c4faf4f25f15c350c37c20c714eca2496cb906ac7ca8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c712c29de2fcef7400e58bf9964f2aae8dabeda214946b45459050ceba5377ab",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3fd854beb1e43faa985824d8ff4d6a19672c706279ef2f4b5ae1353e7e645d78",
                    "size": 12068279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e20029bfe38d57c696eb67d20206850cdcc25cb85a90dfe4c61c82c739e1bb9",
                    "size": 471
                }
            ]
        },
        "bullseye-run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4cbde4a792c9461d64618b03052837616b0da6793695e692b14519499a347e65",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3508bfa687ca31d022999303de1fa4b505f43436280313e4f79483dba56a54fd",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29fa4cacbb55bbe4c2f43337598c7e214d4db670a1b8f9ef77d5263a6f974ac8",
                    "size": 12976770
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb687a9ed447b9ba7e0c7e1d6499b3ccdadd73a79be8f4d69cda9fc53ba267b1",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8989164d23ea6e023e214b59c81f995a35e28d00205cb3b7763e1a02027bd6ee",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0c00bb9a3ed83463b51562d150ff8a703d89c3b5f299b1e78bff960f9a631fc",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb505b74b504315c6296202f5b1c2fbbcacadb506f7ccc5f9c99db08a56c42dd",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09d4197c190e339573857337d4424733743c266e75bcd25453e4e90d6de2ad0f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1bfb8ded4ee9cd7afa32e3671ae3078be45e9060e3c955b92ab87480ed03b5b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8876f8e5f597d56ef198459db6931f35141fe8ca9e468ab6b8a7008b6ad1ec5f",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b31460e22d44a134aac839c48ce8f82f786565ad87c91fc0bfeb21669f2f4e66",
                    "size": 12068381
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e5d24befedb90c3a9877529a338e7cb9f39804834d254878cfe14ba465a83bf",
                    "size": 470
                }
            ]
        },
        "bullseye-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:15aa57be64bc8698342633d4547891f53cdcf82f9cf691ca9ffd2385a0be4e66",
                "size": 8336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdc982aa2cd91f3d8c1a394fe291b9b4617ab5a3e8621be17f7e8f448df865f1",
                    "size": 12068260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e65fda39b25177d70108060aadf1a969b2f7159771ceff42389d53ec6a54a18b",
                    "size": 470
                }
            ]
        },
        "bullseye-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2b7013c37d6b2c1d1431abcffc4718dc49a841a78d7c5b3752bed41c184b2c66",
                "size": 8332
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3b02ff1abe5dfe9791505936f93c8316422232986a64a09149fe3aabb8be2d9",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:759907076afe713c4234fb5987290ccfa61dd49daebced99e301665b885062d3",
                    "size": 12975152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d19c37c9190edbe13b45b66a2b8056c396ee43a72916ba1d9ca757dc398c27d",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdba65c7a86f749c1d475ca45f2a65c80d5ad0525db04e84db2da8803614bc1b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9f4c9bf8626165f2f2e675cc143ca800c95ac74558ce5c1cdc0928136b2a45b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33c9823ab36b119e618993bd63dbbc9cfebe37d67ba4ce036ffe5203e4de0be7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd83e03f85224ec03d743a072160fb9deddd86af0bf9cd2e7b6a4f2dbe221b58",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a42f72c7f4eb3e1399bfe85d2f32518ba7277a04b897820a0030797b4825d57",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5324c9bc68271cfdebc5291757fad42a9cd8e644ccef3fa6b3820e6dc0e61cd6",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89b2cbadb70cd196f31440ee26009b58f03e311d2d8caee65ebb2c1bf1632079",
                    "size": 12066196
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37daad9c305eaeba9f7300290ab5bb83040a3fbf4deb76a9ff3c75463603be29",
                    "size": 470
                }
            ]
        },
        "bullseye-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:df25f7dfa80e8dc1dfae217927a52846b9d87d2d51bd9917ccf4fb7292204e02",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4e883aee71b5ef97bf1ffdfd139669e73ef006c560365d29cabde27caa6b13b",
                    "size": 12975050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f03e14fe93efd751580a2d51cb4489a57eac27b5db895225befd9a2299711fd",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef2a23d56797032756a4a8e8bd01b2c71a198c10e4e75e46bb3508b707d88d5",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de945cb97c6374ff7ea085bcb2edf737114d2f71f921c9a5a72c2168a40dfaad",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f482a15b31fc59f209b49b1e3bb7a58f1c350c673db22910a5cfdc4dc3ae6685",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9571608af5da43a8c78a43bfb08a829b5fcafda5e8292e393472cabbf0f804f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9614d73f006a2cb00875772e38550a822b7ee1914fa1a3a9ca724b0f0acb02aa",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55d55aad7abd855b5bd072003c07952d0f3605bcd5c55718c85dfbe5501b78bc",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a011bab6378ab6beb8adb79c7af1b10f94ce9b1bbf98c9409d30d40a1600b18",
                    "size": 12066147
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7c31778d110c356aa857f034acd571c7157c60f45598f02a7372f1e09405d9b",
                    "size": 471
                }
            ]
        },
        "bullseye-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a37872969e0ca00603e64b2f430e814a4c79dbafa41591fc4b6a1587e3ed0bde",
                "size": 8319
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd08d71f9e4be4f65e14231b96b47eba749b90731d6ac89a6b122102497f0520",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ced2846c7ce7b5358d8d1ca581b422091108201a9283aa8f845b5b6acf13b45",
                    "size": 12975074
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc714b302c222d2337d2a96a68bd0f8e2f6e8b6141b063613b4201f1b9bf88ff",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91059ecb4797f7ed53ba6123bc3708c97ed915820284c6e9ab28d76f72973580",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10793d475cc903a3e7298e67feaaaa5b1ab39b699349227473a13d747c7bebd1",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7e5860cbb43236bbbe750bd6abf586a8856e076ee2e1c38f33fb4bc6cc9129f",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3528b47aa83bdaf2eca21dffd496e9b26a4c6c17e7ef544f7a136ea69eb5b829",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8d887e8d98a1d19fda084161bdcdc428bc666757604d237cc331b3e96e3773b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c42376533b2b7356cd47d1c5d2930bb9f16c8bcf09939ec53070c484056a89",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d7c41e39073993a13a4c1389895a0a67c9430fc38339a95fe90acee84aaae37",
                    "size": 12066179
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:121fc3a200e7784ad770a628bad000d2461cf083a2786f2796fe5dc6778fd548",
                    "size": 473
                }
            ]
        },
        "bullseye-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:97771640e96933a22e5920b479f26bfde1f76f6ccc1d7295998a55274e601fcb",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a0e48841b8e49c36f6b1a8ad4efb4d37c6e10ef8dde5cd91f4dc437d1d8405",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55a1946130ccc17b581e6b524cf631bab9e5fcee60de01f0d39244a87686b92b",
                    "size": 12974885
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9858c7c5616b7ed0d90d6fd0d87ceef7f797f9d35758625edeb82f9e028aec60",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efe8622a8e40ac44137b3b5fd0dc0f14ad5e810e0338dc547f692d8b6a35c977",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c78e7355e42143ed74045da95e7de3ad92272199e0776d1b7228a150a65f47",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75b07c5fa13c3200be81dc39d20abbff29122ce62e20ebfe91047e7eaf0fbfb2",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a595d9ac359dba0005931f718e650d9edb7c0a1e3f6d9d8acce991fa76ed260",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95af7d2de70e46a0ae3136c3e62f38101bc59d80d433aa5f5bbde3da44a6280d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15bfc11c903d27a21ce686bae35210aa061831dd4dbc80e0104e5cc4ac5d9643",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8ede8ae4094991acedbee726d1b6e919b13bf5c2e9e9310737a8c0024c2b922",
                    "size": 12066255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b182c8f04a9cd679de5170fb46f659df5da9d9291948137fab51b103a096ee0a",
                    "size": 470
                }
            ]
        },
        "bullseye-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b120c5f973e16b50b3e4435a2da200209ec6a92ca85b90102459d553a33406c0",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b526ec3ffa40824ba07a65cbad89904ee73075f504d2e71b9d2c95bca96c7510",
                    "size": 12063909
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8649c253d819480620bc59d342cd10f3a09881624067a80329d8b0b1e0f84af",
                    "size": 469
                }
            ]
        },
        "buster": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e95742087b1683667db8e7851085289314687f10792ba81e718505f05ddd3cf",
                "size": 8315
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57c62469eb2b8cb9a971714401ad24a78c171e2f6dab20314e1c5f0dab7a8639",
                    "size": 26109830
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e0bb71a28101cf306dd8881cd70e9a4329c88416ccaa856c03ad9f9ca462ea3b",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1343c8f62d7a213a4930891b9baedd3f3ab886611cc27846d85c5246f94a49ed",
                    "size": 13787230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30ded8f6bc7cfab3b4ccb02253af6eeedc1e98e88792c947e85ea66f754d4cc5",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16863032851663607ec44c74acdcd212bad9be0dbafde21651224c30f0338706",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b03f96647417e9b3795ce838e1234352b11f3b4a7fd408fdcd918525c030ff92",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2b9ad58d32576f6320b1311e8b06b1d6b84debc3887d8b5499942a6e0dd7618",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db2996727ca5de868ff60e02b328fe3c9d5ce02636c01786f86a24aecf6a14e6",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:264f0f924d769ba932e84f3d4273647bc58656a3681b61adc89b2aef4de6ffb0",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f4e9f1a997a9e61cad6d9293b5b625cc689b1208964dce5ef22daf6ba21aee9",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2a78b748e22cddc88d8a48dde918a0eeffbd2f483d3d6bf792b7f32c9cdee03",
                    "size": 11980672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:847f418fab2ba75ee3d25b26e4588f2049233434b122f33546c2a18ca40f0dee",
                    "size": 469
                }
            ]
        },
        "buster-20231025": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f91a882494b04d1de5a0e29f29601910d26058a6643a21bad9d189d834dfbd63",
                "size": 8332
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5329dc26fe29288aabb62184c71ef06987bd81c95d7c43a48e38a0dfaa54ff8",
                    "size": 25967816
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b6d5aec1849ba1833ac051cde7c3e335daed8c39218604d525e45e43890fc24",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df696dcd3721d19d1c461f4e2409eb5b19cdc947dd18c71cf577d855404c6ed3",
                    "size": 14064269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e97bd97970f66dd9debef5c61c560371010ef75ffbe78b2a655e640197b08d4a",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9ac55866ba0bbf7dbd0eabf1d4256f8ded9e1ce71cd2cf12d0db0e3d1f86d8f",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2f0ca17549ed0c8f02b27edd4ca4cdd9188f370787c83b5d82569bfe42f9815",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42a6a92660f501faef56aeef71b6881a4e240ef1c0b25b6bc8e3b850290416e7",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2eca2f79c89503d6e2b662fcc608f9c7157c32059b167aad4ab6314c9d7afe29",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dad4c74e249f214e45c28eee561de5d51ab7a6c56199cd5cddb6535b3867502",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:239d6715cf7b4b2e4ae14b0d8198317a550f38514f0e5a5e322a47d26bceec55",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca3f1df8b3a9df1c971fb83fbcbd3270a05b7e106aad524a5a3cac5621927a2a",
                    "size": 11980911
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40b2b0745ce4477a82d87354d69443d3b392feab3ff0d3dd655c513754226758",
                    "size": 471
                }
            ]
        },
        "buster-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c1a07e105ce7a24635da0c55c0f6b331aa6d0a79da241ec0d5a92330bbecaa51",
                "size": 8329
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:094e0a7927f79c559fdab346774d7de6e5fc38e2d998e82dd663850ebbff4648",
                    "size": 25967703
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96101dbf13de754588480160eff20131d08f022173c7c4c9bc3fb02a208a1eb4",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:598076607d96f9838d1e9f8d45e8fe75901a48509682a351c270676c6bc2f71a",
                    "size": 13794057
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:caa5a7ffa604ce47d55ae1c63bb8e44df65865dd2421676d016793bbb70d8b4e",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e21e3ece11b1d0ac6833f3321ce0d1db35992a39956e6657afe190f98cff91a",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2c474ceccc9cdd7d4dc5b5ae761fd37f33a26ccfbbc8d52a08a858de76a0d42",
                    "size": 257
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:831837066f074e19deae2e727270fa139c40853f0a9ee9e9d1b99e4dd3844a60",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6ec7c2474669700b142bd9ed60fbef5a4d6936a999906ba9bb1da3564494aec",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ddfd012ee6f0ab8b177eba8ad4192cf43527eef0cdf309312729b7ee43f2aa3",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7edfd26c3760ff98d36d5e574aea40bc44093887ad7c5850887437650afa2b6c",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:894c87432bcba8683a88876f7eb81a0d296d096c500de3fd80d9d3161e08c3c2",
                    "size": 11980672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb2c6d210ad5e284d0ee608379aad7ac99df8bdfe4527d081aa32ac0d883e25e",
                    "size": 470
                }
            ]
        },
        "buster-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8dcbd80df4d227e75ed66a7407e94d2f5049b4795739d1aff1c76363ea91de22",
                "size": 8332
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78b429e3efdd9f2b163abf0bca6b1462a25b1c5eddc1dd47f5d3445c6413cfa1",
                    "size": 25967796
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b39e783847e982908315a9f832b52861837b83257b9b4f63eb124df47f991f8",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ffb4855963dea071715710a022e5c141739ce61b08b538909aa63fe02943e3f",
                    "size": 13793777
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e498794702d7a6aa8110ac215bae416d56b8fc86059de1af082a61910d66b2b",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e2ec01b29b9f621f875e8202e789a1690fc33dd25e8cd5406da274b9d5d49f6",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7abdca9b80ea6da2e53942e9842f9e82f94827fd57640f236bea7e02649c4eae",
                    "size": 251
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2014e0a97318f3261493be34e73a27fb95f5f04343ff02598bc5fa4b6830237a",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c926ed1fe1a39c02ca6faec53a087efb70b25f0b5418f473972711d8ac1f6581",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e791cdb390ab6c099a1368881379b6f2eeece847510939076b7fd73526974a9",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ed274800f3f8c104186c56a0cd388e08de6e8a3b9f32de9d124f20c2107f058",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2493ef2caa6523862893b29163569aea08e1ffbd96f42dfaf215b72dacf1c401",
                    "size": 11980556
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c506a12497fbd80a835d527e83218758198607f2c1863e800a4538e6a54557cd",
                    "size": 469
                }
            ]
        },
        "buster-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a19cd8c85b5e9fdc9d2d03c09e94d6f01d296e443ebcd10e86a5e8cc3d76194b",
                "size": 8330
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78b429e3efdd9f2b163abf0bca6b1462a25b1c5eddc1dd47f5d3445c6413cfa1",
                    "size": 25967796
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13ed1f6f0a7094ccd8e0ed67b37517d8e66c896054a073c67a1653aa0ecaf786",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9815ac98034b11aa0ea1ea26180b2156252b6732b79699c8b426d36b63d1e2b",
                    "size": 14065230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a674e5f8b125691030b9b7db3324ce8bfcade9575c11f3e3f340820cdaf88de8",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89eeac9c331767a933a760bb7ed00bad9df0d4ada65d1541a3e4ba93edd862af",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4937b6628654da40e2c6e618886ec45da9353ab6076c0c93dc5a83f782a8739a",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f649378f9e7c8c1f2f10dd6e9df1ad4ddb8df26730d2713357a58ea5da4e2532",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:278cf0b5536e4fd596f065afdf1fce5702fceb6910ee6675c479fb5c489435cb",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b51515e9ffd9f1330e6339a4c1d03bf9ba37836242b45b488dbc14633c2ddee5",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2c7df11a752d5f48c9c01fd93bdfdaf05f333849a06e64c26167d468fbee53c",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2782654e13bd8bd11a6a95f875077804e6de0c43f4e1d09dad3ec3488330ab8a",
                    "size": 11980882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eaadb681b5474871b1e91304848742535be214c2698fe14a82bcffc959d7825a",
                    "size": 469
                }
            ]
        },
        "buster-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0c21a1669d6734ac03fb8bc6db9195c9669d9a0556276aadf430119fa5d99d54",
                "size": 8327
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b0171eefd1c6d7f85c54d4a609269c9b5e19a0fd8cd787a49c808c6b73cf74",
                    "size": 25969827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c18894bcd34ff7bff587230f1d099e9211a6d6b4afc7f758a075d46ceb2aa2f3",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2722e87e738241fe6edbb47fc35bc0188f305a650143fd7e430ee569a11bccc5",
                    "size": 13794157
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee4cadfbf7ccf2c9d614118ecacf4d8b8639e0e8653422ffd49bcfbfae59c250",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a13aefd08d0c16bd7b8dd59a721a93bdedd71e3c53198f28d4f7d0d1339239",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:306bff35bacaf7bee68628b13cb99998a7309af32d611fde5262b1e5e3b07bab",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7526f0b704f343b89a778c12d44f5b54860f8c034059245192d4950c3bc2d6bf",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b8cacf8e84071556a082eaab177fb093a47556fb53c212e6b524890744a557c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bec32e37f26571eeeac2720cdd0d746ba62d73097eb8cd0e7ff0601157d54b40",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef7c1c763d2df17384b53dbe801ada48c76592ee6ca13174e10e781140d10e4a",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:210d66d6ffd999ab256dc78a426b23cae98dd2cb6ad1ab3d324fdd3a31ffc966",
                    "size": 11980611
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2cd249abb1dbcbc3594fd60d9c5f7c22cce61cd6f10481851bde7eb964ea211",
                    "size": 470
                }
            ]
        },
        "buster-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ae5fd95019e69e5a46940e8e8cb603b1e2d6aa751fff59349db917781c48ded8",
                "size": 8332
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b0171eefd1c6d7f85c54d4a609269c9b5e19a0fd8cd787a49c808c6b73cf74",
                    "size": 25969827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5997a4cfe6863c5d22dd1d9b02ee2a04eae3d7f6954eee4e20fda033ff39a4c1",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89aa9b7da62b952da26628118c56c4dc37373b1507eda7102e2b86a0993c3019",
                    "size": 13794152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:607cafd7da964a82e3403f348ca340a23e0f4ac665d6043de44cb3e6587de6e6",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea779a3aecef3bceb1c245f0cdc518c26c873a2850cb78f22fd66bb799e0fbd6",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:61f579c82742ac9fdf8009f47ae9a39505dbec141cfeaa3ac57fc77661f9ab97",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8649c2524803dda983ec651a691e723e1c26ea95459e9f453463a4649260c444",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0463be53c2ae909d41e6271906308ab5140d61805af669404f1ef8e987de60c",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e29dad497bb39618b6835f3a81ecc807b3c09a3c6a554ebc317bac841a0f9fab",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cee4fc301dd85b6d61ed712b7c273823f1d6948621eed4366ce3dbae3aa2960a",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2288241b6f2e1a2733f3672ed44a81c6adcdb4fd4c69bbd3dce9ea8178248521",
                    "size": 11980711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82aa4245e669f1e26d684b5969af7478f992f8a047208cd2635fcdf8416f5983",
                    "size": 468
                }
            ]
        },
        "buster-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2dbe93fcde3f3fdd7c5882fb1d33fa7e2e48e49f628d0eb649cd8efbfd502607",
                "size": 8328
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b0171eefd1c6d7f85c54d4a609269c9b5e19a0fd8cd787a49c808c6b73cf74",
                    "size": 25969827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d5ce0d45748c9b1a7bdc6c2749844ad24b52f3eb919532c6fe91599acd54b61",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd5c3615ccb0b8b5b27e6cedeed57f9f10898582b6baa9ec5381b5c092fc3f93",
                    "size": 13794122
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3dc64da1b864fc6612c13781726e1f98b1e2f34427a8da73fb5da8d5479b473",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a727ba8fc6e3f7e3259dae384d22e92f175eca6f823b9144b9a2c1984c93d71",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:650abebc1e76bee2682d427f43e01589ecf4eebf66fa2c4a04c1e15bfcaffbd7",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a9855afb314055e9356209d86df92d53e32550bf864860fcd158bdba2e98ee5",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:582efc322c3e6c29072658047fef56e496a72cd64c5c0aee21db5326d1d3129d",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01bc7a6cc6ba4855364b8d6a632a54828062ed6013b4d7099347c7bbbd5a2192",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:179b4d1928befc385e0f5f425a944201effb120331db4c1684d59448e405d991",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c8d9ec1c6b61b06016012b56f9116af7778242dd8aaf2c64232dbff55620aab",
                    "size": 11980643
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:460a0273e9f2ce3c952ce28f2d8bda8ab52cd4fce21bb6503d9a1cfcc4bb38a8",
                    "size": 469
                }
            ]
        },
        "buster-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:137196c5097c0a858e2e82e1b92cf701ee4624daf622b7df645cfc87b0cdcb6a",
                "size": 8331
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42641f7bf1512c205041cf7899e52e2185e49bcd6cfa0cb8ebfc73e3009221b7",
                    "size": 25970227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57b8ca8795ea3525df68884dc1353235f41f0b92d484c800bf530c394c0c967a",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6832d277252d211a660640d1d5e9c20bbe8faca2bff9163e354b4bc794de895f",
                    "size": 13794162
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c5f3bf6f60652d1f328e1e3aa1fc9424296a285826f662a12a4c3d1d7da9421",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1908781e1bc6c7d5cdb8ddce3be23019672221b8848150bfc508af9e24a4cb9",
                    "size": 11980756
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752669f72473aa71e5c2fafd0ed1d79692f9b2d773c70beeb97911398cca0089",
                    "size": 469
                }
            ]
        },
        "buster-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0cf40cf748ac1c428d42c9fefaa938795ed7830945b57751b7eb2e86ad165ac4",
                "size": 8324
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4e871d0a0087a92c664052d6406ee23eeb537f0b5f01894052aa0363fed45e3",
                    "size": 25969810
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3408cf0654b3237e979a6f98bd2c1293fa533c0e3284426abfc5c37ea65aa18a",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc8a85340147c980d1d12ed45dd25196bb6d91b8772a7f634d87105497713eff",
                    "size": 13787386
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dbedab5dbdfe90ff516594719861f8b7d778273a4f51c0fc58fdc0637e04f745",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f1da5a75eea7746f7564decfec8c1780d0ba5d49bc3af68c979fbb6be8a235b",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88e86113901b173ce46d3437be0827a9f0f5538eb7ea9accd5539ebe5dcdf017",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c83c281a7aad5abee2d68ef46d8bb48b71b0fc1a5e24e12354a4eedbcc89881",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9171c0dba9f720dff8f7560cfbf33056df356883558264c7ccc5337c7044e113",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b4d697de5ee1d679d59dbac6ec3efdd8c04bcb996b92cd3f5e9382365dbcf06",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:194088ddc4656d2af60a599cafabd7825bc242897aee87038c7e9fdeaea93e45",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e271364cb1c7695bb1a8fa36a6e1cd5f872e107732b3180010a5cdc9c1ded7f7",
                    "size": 11980726
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3bc41fe40c149cfe6cda4349c6571fd9493a86e97ccdbd7e882919c81c7aa17b",
                    "size": 468
                }
            ]
        },
        "buster-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:341e73a6919e8c7a0dc8762a9733efdb289815f51a8f91423ee70700cfad6af7",
                "size": 8320
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4e871d0a0087a92c664052d6406ee23eeb537f0b5f01894052aa0363fed45e3",
                    "size": 25969810
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc2593b81e6002b446e57d403e4313dfde7b1864343454b05828f75ac5e58570",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cd66c164fad1a100844f09ac316c9b58d0c0429ee69b6101aa3b8e5702f78a7",
                    "size": 13787299
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c3ef740b19e8d1d0a22329b303a60f75adef9a93447c117a675dd91484b635e",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5458f2dfeb4bd25eb72b87347acccbed8d946dff2e81f89980c7d8aca599a8d",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc380240689ae213391343329edccadbdf83e6b9806166531d01dd1e0b25c9ef",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d84784c737442573131b8013985380c0be522e8cbe636aafe7e3503bf78f54d2",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54a3bc9876f925bb6cccb1bc8065730d39491f57de8dd07d0f74646af9c31cd2",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f2bac34ff1ad1fa4e4142bb273e1e49066afad7c637b47ee2f92c820cc6cc54",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88dd3ca849a28b1be975e39196aebefb6b7a5130f164805ad99b4c295970608c",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3665f30421a5361a0021c04fd5af2e797ef1e3a595016792a078eb49fc61ef80",
                    "size": 11980730
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:768b75bfa738657958f3cb6ef470a1c1420a6c826acf2c2f626e9f0f8ac657fa",
                    "size": 468
                }
            ]
        },
        "buster-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e1b5f79e44596f331a9e76de30882d1e69fea7883464d1a1126fbb44ab80857d",
                "size": 8314
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f109bca8a22fa25fc80b89d2ad693f6f3e7832d4386218a35d068f3b37b0e808",
                    "size": 25970589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e85a59048b7cb66113b0f480f58b21f5d0fa8f5908909f090bc738b798e598c5",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e9d9f709bc526d8baead724514e3b5cd7f1e09a2c90db9921ec63becea49e50",
                    "size": 13787329
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7be450c33d23e41a869346c998e02aff90cbfe4abaff69368a2451eaabda21e",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bbc7b87b6f47438d9b1332daaf933dc60c63690ffae1e739d51410a8121213d2",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e38cb2313a8eeb0fba081fa80ef2948e1b8d339b1506b66d73ff061b434123e9",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5459bd8d4bc1fac5b1c18b332f5444657aab6de5a7504b70b0b629714a47c7f",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a26352b57f444f2a5ef4522f64eb0da35869249d23bfc4fc4dc8a726954dd11b",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b693524238e40e6bb351e67ddd6f413edd74d4dbe5ccb26e9ed8ca464b7b998",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f16db6e1fe504eef9d3ced46c271598dde07812625ba8533d109fc35a23c9488",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c868ab441ba4e19cb05fd026855c631627c0fbb27ae0795f40ec8c2c78db818a",
                    "size": 11980641
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcdb74c24902149d6a7f760ffdea7f93e7da4803732b790d459bcb5e78fc7cae",
                    "size": 472
                }
            ]
        },
        "buster-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:57a18134cbe9f4adc674af9c7e10cbd27927cbf1c180df2ed9e2a7ceeeff87c9",
                "size": 8308
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f109bca8a22fa25fc80b89d2ad693f6f3e7832d4386218a35d068f3b37b0e808",
                    "size": 25970589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76c0c721f5260280c88130a75b94b5e0f6270a3b339701621f97e14b30aca983",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5409131516c7e4003811eb609650f2bc519f5e5990bdf94e8cacd171aa6f2db",
                    "size": 13787420
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4d6d887c52c0bf00dda419045f8df10efc63313d30f32734fdafa9c612cd304",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:898e9c6bd0a197d56887b5989b9fd1a4be63708f5c7419033b1dd502a45eb3df",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6f011ad87a34c177466fe95434b492422a7ee10c6f58f6d53f38e0bd82c4a9b",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:321eff095c69a9e69a638fe51770656cd4303a2d519b6b3e66788fd51672b5b7",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ec28374d0328a01cea7e09a456a118a4a8573927e31f0129ec6bc5117eaab20",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c2c4ed3c0748136c2e67d89449db5ea6b1453f0cc4e78ecdffa9267f1497d9c",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:046e6edc01bf85b207d8ce299dbfe9b3069ecd7adedd15ebb361591b5e6657bc",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a97a5b7eb8452580d46586da1ab563b79594d453e74235d878b765bc49d7c549",
                    "size": 11980674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1807ee5fda6c05cde88f6e108d589a7e028ba04c2fb79aeb8b130eb7dd9d454e",
                    "size": 470
                }
            ]
        },
        "buster-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e95742087b1683667db8e7851085289314687f10792ba81e718505f05ddd3cf",
                "size": 8315
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57c62469eb2b8cb9a971714401ad24a78c171e2f6dab20314e1c5f0dab7a8639",
                    "size": 26109830
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e0bb71a28101cf306dd8881cd70e9a4329c88416ccaa856c03ad9f9ca462ea3b",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1343c8f62d7a213a4930891b9baedd3f3ab886611cc27846d85c5246f94a49ed",
                    "size": 13787230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30ded8f6bc7cfab3b4ccb02253af6eeedc1e98e88792c947e85ea66f754d4cc5",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16863032851663607ec44c74acdcd212bad9be0dbafde21651224c30f0338706",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b03f96647417e9b3795ce838e1234352b11f3b4a7fd408fdcd918525c030ff92",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2b9ad58d32576f6320b1311e8b06b1d6b84debc3887d8b5499942a6e0dd7618",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db2996727ca5de868ff60e02b328fe3c9d5ce02636c01786f86a24aecf6a14e6",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:264f0f924d769ba932e84f3d4273647bc58656a3681b61adc89b2aef4de6ffb0",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f4e9f1a997a9e61cad6d9293b5b625cc689b1208964dce5ef22daf6ba21aee9",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2a78b748e22cddc88d8a48dde918a0eeffbd2f483d3d6bf792b7f32c9cdee03",
                    "size": 11980672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:847f418fab2ba75ee3d25b26e4588f2049233434b122f33546c2a18ca40f0dee",
                    "size": 469
                }
            ]
        },
        "buster-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:67c1a190ed136b864e18908c5e724a9acae09abcf939d8376048fb9cd3d4f23a",
                "size": 9289
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57c62469eb2b8cb9a971714401ad24a78c171e2f6dab20314e1c5f0dab7a8639",
                    "size": 26109830
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:21ce456ad17579b821e2dbe65920d0d791a2f27b300de63338b23ba1b0426936",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78151996c382cbaa935a37336e3626182c68440c500f9a98ccaf6c264c897fd9",
                    "size": 13787164
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5145cc84456a8ffad969cf2d59e6da0f6853153360d6a0281a5d12b57b29539d",
                    "size": 188996038
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:020c4cf177be60f72a47ce8a5ca0cf07aed6d846fdb94cff0660a5c00aa6bc99",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e582c4aa877a817e4d6c75a344d5e910a17b9027af5cd2bb9ab80306130e0079",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:943f9e7d8ad42391ff4d82e061ad3f3136de3eac249815042746a7b4b6160494",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bac7fb09bbbe937617acd4aa8a1727184ec11b74250e3d9cfd7f5c70d66f6e7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b1d61dec9b52b5164bf809e8b6b47cd82fa7fa2072619f071b6acb9b1712898",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae35eb9c1ed36b2f69c5c50f089de63051c092cb435349be9898a0a304ad7b5a",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c852d8f94f09eba7b61719dcdf0af09fae45e4b32cfdaf89f58506c27c0a920",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e83f3036d260c1f52678a9b638d2da9f50cf724a0ba53780978fcc10c5efb212",
                    "size": 1285784
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0542fa26dc4f4c3b161c75c31d907563fda79036528670bc643273d13c151d17",
                    "size": 466
                }
            ]
        },
        "buster-build-20231025": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:050e9d662775c81180aebf08cde149f9658cc4bdd46924c4e948196ce9b35637",
                "size": 9305
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5329dc26fe29288aabb62184c71ef06987bd81c95d7c43a48e38a0dfaa54ff8",
                    "size": 25967816
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec3b27ed31e11a336410af2d94590d21bf71a1241702b6f903cd94db0a794356",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c5da57fb9225718d01c356c5c70cd731eb299946eb6a36f68afea2938fb72da",
                    "size": 14064305
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3fb10df13bf7e0efb9b2c41bcbf9778544bb49873a098f3ce87b0440db472c6d",
                    "size": 184740408
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8c6a20dd8ed9efb09bed9fc0022aa77638da8ac3da8a178cddf5ecab5045ca8",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcde802fb76ad77e8d3755dd549ad59bf805a7b305fa540869082b8fe32e2ca3",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:80ecb0399db9579e2064e42f9409af3acba2bf53d4cfa5e2ee6b97a1f5a85ade",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:50aba1f2ca4314942b7becbe11b857cf9451b4d0703eec6c7195351d67ae8944",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a346dc3774c432aaaacea65188b992c2251bcd1415e197bfa856cfae7ab2c8f4",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:695ef9012202cff6ac968bfaf17d3f77f662f4e062f3fa131eb80c214f596401",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e10c984743a413b3d55437f858464196234c07e63640ebe85a07e155d1eb690d",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eeead4918eac3d55c10df6f152ea57ad7aaf0bd2cd8e04db3dd01e8a3d356627",
                    "size": 1285936
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:363f44e5f0b67a5a6ec5c8c61a9c6332f910c1bb6833b0b49f869919b668be76",
                    "size": 470
                }
            ]
        },
        "buster-build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:109a0e01eb4fc49e6cb501f5157db1b7ec28969e576d06650f66df1463e615d5",
                "size": 9304
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:094e0a7927f79c559fdab346774d7de6e5fc38e2d998e82dd663850ebbff4648",
                    "size": 25967703
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3431698dbcbc89b5bf302f2f035a7d0db2a17078b9d9092678c5e596d4b0bc8",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a6f08b00cf25fa926a00b76c606214bbbfc4c3ae268690dd0f59fa6873139dcf",
                    "size": 13793994
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aebe4e6a159bf73177d7fcdf8c34bf787cff86c171fdda5b9ef7bc96b07958eb",
                    "size": 184738464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b46f380f81942ebba5a9b771d91825563c801dae21f57c2c577d019cd7d5ebde",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb80ae71b2c5b2a632fe1b63a6df11702c134d71db469602919682846e4b45d0",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb8f4b8a7e5ac8eb5215627987744209af47d5f02124bd8552323084914e930a",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df3339c3d0935c9526ec2d4c9b702ab8a0aafa8adc7bb8be115b184f1f5a1ffa",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:23e5255ed70ab4fc75a91f04d03f79f45b115aebbbd277c4d10e2ccfb36734f9",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a5787ed0a9539fcd3ccf6ca2fff4c827a432aa9df9d59527d2e82a5139f870c",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51f82eaaab349917a320cbfe9cee0590bb0411a89955fb972ad18b9e02d25fe2",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6897d0154b2ea7d2f4739ea4e2aaefee343b72b44a1c753df7f46900711338c",
                    "size": 1285810
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6cf98c2a40c1dfd61ae6907cb1ed4f7f22863451c2da71efac2fcea32d311882",
                    "size": 471
                }
            ]
        },
        "buster-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7c8abc8e57dcc6d55459233f08720b9c8fa2de008d310d7b926fd1c7b13ea9bc",
                "size": 9306
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78b429e3efdd9f2b163abf0bca6b1462a25b1c5eddc1dd47f5d3445c6413cfa1",
                    "size": 25967796
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e37f8fd5a55cbdd014c619e78069823b2a6e54fbc58ec637782a0ba62b2f56f",
                    "size": 2592214
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94b38252f6ea616f5e958dc0fd6ca88f792ce782e56d355fcb7578b03e973fb6",
                    "size": 13793790
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5fba4a7fa7e14e375d335154a9a397cd512be753c735bdffe2e476446e016db",
                    "size": 185518926
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87ff32b5bb37e2af3be89b3c572e40e92bd61044d37a9fb355c4c78e2a27e220",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:591923b6173b257e89e1762c4a4bde4906e944d85199f7bc23b3f173ed20f147",
                    "size": 258
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb0173c8d666e4603f1eb3d576604be5f8778f2ba4b9a3d730dd135e55af244f",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ef25d1e0c658c4d615b7fa7ba65ed4239b371f29b4eac8e5e17d37eafdf1b16",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:043eeea2d0a3fea2af9949ff4d86333f1a506610851a59a57861e0775cd1d3c8",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd25d4ac6cd828749d30fa60f8348b48c198e42d8c70d6976b8f510f1c6fd9af",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b84fc968119a004e47d24b0a0dae4d6129da9e89139c072a086508d014db893",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d497b4950802c7b799f90d97fa9615be6985b1e563887ce7978d08e0f7b760ba",
                    "size": 1285686
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07ba158df42cdb448f1ec2f835578702354b6dea0089aa42cd67c1e1e702efea",
                    "size": 470
                }
            ]
        },
        "buster-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0b3f43c6dccf48e2262ee66b54d286971f1ad862bff5f51aaa8ae5b36cfd7999",
                "size": 9303
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78b429e3efdd9f2b163abf0bca6b1462a25b1c5eddc1dd47f5d3445c6413cfa1",
                    "size": 25967796
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac328e364a5a311ddf8d364f18952eef97ff9e7a7783876f2015c9e9fc06e19e",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fe8993922e5ce4b0e663fd6c9d47d17c8adc253f2a49fedcb2589a151d9acb61",
                    "size": 14065235
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ade1bb8db8b6c7553acc5c542235bded8b217f99bda63e32faf03a1ec1051e9",
                    "size": 185518912
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd7845945dea31abf26f27b67e06b501221dc439ea90848c23800e78e9fe51db",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e14d9524acab43927ac84a27ff121d83ed06195e5c622c3d4620ea8379618148",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19cc82e5a7fc19bb5b78a6d02d6c70281bb49c3ccb72ed80f7e69a21355d38fe",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:60a96820d95cd41db242211be7509aaa2689c0fccb5be5a26215451e16fc9d43",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:127650f09c8b32d3519b069ad8d57ab28b406d522ee0a2f2f143c8ed2324ae05",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c2934b371dc1d5170e65bd525dbd03fd68d722f7265e80d47abfae3682416b7",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0110ad0528cc077a9cfc42595659b17a084ff6904d3034f875463990bf837f49",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0db66e3c3beedc169e130e3f89dcf25fc487c510fe932cd24afda152dd6d0f32",
                    "size": 1285950
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:149d3b7a140069b9c502fae5ba3803d0ecdebea0f0ff0b99125c66a04f552305",
                    "size": 469
                }
            ]
        },
        "buster-build-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e517e23846c586d4943039c04eef306a33d09c6b4a200000f1515781bba7897d",
                "size": 9304
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b0171eefd1c6d7f85c54d4a609269c9b5e19a0fd8cd787a49c808c6b73cf74",
                    "size": 25969827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:525629375087bc9399725b9947ee599c53004e87ccf0ccd25ec841c34a07f745",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:982aa66d2090a9ef792ab7bbbeb3e40eeb35ef37c6c5bd3d035e429faf022eaa",
                    "size": 13794127
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8caa467b1a39cb79f8fbc7c0e4b7a8cdcf451ba5e29559967943519c8e516234",
                    "size": 184732797
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:72da783a91209a6248e1ef07825ee941e2ab63a447e3ed7bf453f99ff71d160b",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:315d8b9116fbcc2c3c810df4a0209f285932133c1f6468fe381361f9e942998f",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b469e4db79088e9d6aa9764fc665adb4ce169185a983e993ef3c039415774fd7",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0666f3ad890d918ff6d7c753c6586269a0eadd4b6399d8cc6f560a586fa2aab8",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43692c364a9222d5538b6c29d77489a0ab6d167a084f9c128b24f67268cda9e0",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a90e46c4e8bb1edf4431e0fbcb8ecaae89bd042a49ab3c53ff7f05fe7d64f762",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:546ec4674ca71e0d4ea9598438577edca9b3166e53ae38d9682ba60c275c16c9",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5eba8c3c3b4b704228d21d4c5c007290394542a6404c2ae836c9cb1d94015bb6",
                    "size": 1285455
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37e1ec1b639bb0069f5c40a57bcd9a64973459fd3760b7ebcc822aad023484cf",
                    "size": 468
                }
            ]
        },
        "buster-build-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bd3d2c17bb53122661d820d42a8732954dbea5663b482c706c0b15d4bef049d6",
                "size": 9306
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b0171eefd1c6d7f85c54d4a609269c9b5e19a0fd8cd787a49c808c6b73cf74",
                    "size": 25969827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0ee73bef1b61cc8ad8c6ee3a1296a6554e88b76e4fc590983dfcec9006035379",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71d4504c09bef72b3dd8f807ae5b3de4c8a2e66bc088418d14631fffb25a179b",
                    "size": 13794144
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adc44ce5b65cc4e73c388542ddff30c2bbe3c67bc46fdb0a69f8ae2aa04a3e21",
                    "size": 184732517
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:482dab0c1e64ad8a72062df31dd1b1b227f8648eb1b1a0e6407613117fbeab22",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1389fabc2a33883c4e5abb11ded583d5bf2f3ab4076099cc7e7edff2aef17a09",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f35eae4f739b9dae1837e03f032fa46773e7000c357a54b348838b0cabc616ed",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f7cef34ff24f96e2b2cf38f769140628e549de2d301caa70d99726dba64740f",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:23c47c9c039a45f7579a9420629595a7838cfcf6eff4a51ee051b77bccaf7309",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a8de2bb54d8291f532e79867c668f8538ceb7a839179c0666751186b7fa4e5e1",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9532195b5ba2362e505783b015921a65720d5ae6c821a0bba271b58f8016582",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9563e42a283263caa4e206b7cfc766b1385900a816f3aee6be4f46e10a9e49c6",
                    "size": 1285537
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8c4f988c6622e897123f615dfcfbf65b56bc893d215738140faeffce389baa5",
                    "size": 470
                }
            ]
        },
        "buster-build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8263a2811767149e3b9041dc4ee6498761265eca4104dc938f9c7441de9c3fce",
                "size": 9305
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b0171eefd1c6d7f85c54d4a609269c9b5e19a0fd8cd787a49c808c6b73cf74",
                    "size": 25969827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3508bfa687ca31d022999303de1fa4b505f43436280313e4f79483dba56a54fd",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4fe9b399b1d2aba94f9c57915f69cde38b50ba949feecde359b3e75bd22a40d2",
                    "size": 13794154
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ac674d3903190b09532b6a85085b34a43c7a06236e1937e42c2de7b7454923b",
                    "size": 184732505
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13a75ba423827ef6991eb35991d65033e0f85919b5f3236a77c4be641fe05cf7",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:52cb6f22c39eff63254e1a1219e27ae79653e079f177fc876c6312c68ee2198c",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0220a2f0346e5bfefdf4a97758385a53ddd65550a5b8deccb689042947a1f359",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:458dc47bf4c7b165ebef565e164e05084025caea8dd40297768f23d6863f22cb",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0314f9b8a2b6ab1cd8e1b1a567ac59489b2442563d88b5820fa1988561f128ac",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4f91b1dd8863e4a8c5a0493a0b435993833480566ed3f890a270354358b8602",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c4fc1c51422c81ae93462e06b7a82f6cfd73981386e7915918e5e2b673d735a4",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:93b75eb9b7f4108d7534b02982c1204142742df4ff4cc3129c8f804e36788f4d",
                    "size": 1285474
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:792c54728a5c49b2964014e23a01ebf08cec4489f0ac13ae2e389d9e85371fa3",
                    "size": 468
                }
            ]
        },
        "buster-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:87ec8ae88b2512e09e2a873a6b201a4e7fc24725a99515a1303c2f0a03c83d65",
                "size": 9304
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42641f7bf1512c205041cf7899e52e2185e49bcd6cfa0cb8ebfc73e3009221b7",
                    "size": 25970227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32179b96bd48f3dcf2a19c4b5e207ab251e34d59e8934aa535ec0e143bd31962",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5bf9329269d889403c0ce89ffb091c631b6b4ce6c7f2cff8f6489ef1b645abd1",
                    "size": 13794227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5dc6c3c94a84d415b32d4583eb17245af906ab059b278ae33e15661280ab94e",
                    "size": 184734167
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:887954d8dd959ac0647a9ff7ad9eea6e03fb8c87cb186909f270aa9cfefbdd22",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9dba9f56ac8bf268247ec5ae003685c8c161bcffd69a085bf184cc6eb482e138",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3954ac88d33ad9a0d87fa1ee8a0d47f0a5cf49c1d3cc09d4153b73cd089e030a",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:388c344f2bf77b19d0ea4aaf4867274ae10c7d21d5c244b1821acff77b519f8e",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:300f8abe4b19fc96239455dbe124d0e51fd3d6c39a1aa02491241d68fae0353c",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6465c3c4c8aef3458dd7fd9c5a48266113c344e5fed89df5a0772ccf7e3e14d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:910934ed4e8d778d89ff70a3f4c1a9fc077c52f841ffbf1a018c0f3ca256622a",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0a6fde9f1fa6e0280667b4188e04d5891635f7e64c5a274d96a623dde775b773",
                    "size": 1285558
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:360c12c8fffca6e595dc46b5d56834f8947124a5ff252a18804ec9a5491256da",
                    "size": 469
                }
            ]
        },
        "buster-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:3b14483b6720f3c950625c8c88706055ebae1b9f921ac25335c246b1b1437240",
                "size": 9303
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4e871d0a0087a92c664052d6406ee23eeb537f0b5f01894052aa0363fed45e3",
                    "size": 25969810
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:788c7684bd41ddf7d908ce8acac08235cadb3785d71996c5720303ae3ca76cc3",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96b6fde737cfdd9e327a5244c6c025d200366a5496a68aa13b67ef1047ae7217",
                    "size": 13787319
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32c4006a6bdacda5cd7ca114b802a8838475da9e65f92fa2a1b783ceedbc548a",
                    "size": 185550593
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:016066669cd24f2b1ff7c65c794bafddd4a822520c50565819f722b269ab9227",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5dda0fc11f4b2a9dcaec2e2973ec6e470582f260c057a2273c3993865abe43e4",
                    "size": 258
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:327516ac6034d3dc744a55a5e0935665a99ccb2c605761640e0e5540cc733fe6",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3e127435085df8ef75b33b2540c2d6efc3c91fd471167f0bb5e7aaf11205a832",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04341a2e42e73d0db1eac20c18ad8d44c6549f0941498f27c96e4f7771f45821",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f1deee9e012b644a4f01e3b632ffdb0b49a8fcc12b6829693bc3431c573e153a",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7b57a41f4dc37c578311c580de41d8ab3c9ba8d5e141980d6d14cbbd8212e69",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e22a27bb9898168038733e662ca3485b4c1fafa235452097adefb5f6959597d",
                    "size": 1285698
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:365fefd9627a669c18be9ad50e5f508f4a2ef96b7d0c616f5928752d371d4ffe",
                    "size": 467
                }
            ]
        },
        "buster-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b3697d8aa377fd5a124df6768025bc4048f01b4b62238a08dfe48d5bdc33600b",
                "size": 9301
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4e871d0a0087a92c664052d6406ee23eeb537f0b5f01894052aa0363fed45e3",
                    "size": 25969810
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce9db97bc5a6de34061387816c6b6db87997125c9375a1d7be51030acafe3d6e",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2439b5b8639f5e60f8a001fd1c6490e762120cd20c823ab5bfa457c0fa984416",
                    "size": 13787311
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:105d15c8eb20b26ff5a286f131b6369f25328220d6b60726664e151e5a88724d",
                    "size": 185550948
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1404c64f3367426679c5ad0b9558b5107b8bcaf9172a2411a9eb7d8bd01d452c",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af5e3eb9996de7c86b2728342d07edd7069e2f0c9b10c984814a16d52879ea3b",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:05b702b4260f52df9bf3baf344a5b1f715829eefc026522aa41d14e5a7495901",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b620cda6d9198a406774eb4a04b9a3bd0db93bc971caf2fc96188eeb2856ccf",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2ce97d65d5d839b40e9ca84320e692955fddd97715816ffef83362f9f331f319",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc3b354e9b23036170208c9e6abefc52b0dc7df9fe06a58ca8f1a6cab1591027",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9824f50cf50521bcacd6504eae5d25322dea7366c621783cfd186bd015bd2c7",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b82644271ebae09fbf6a5422e68f9a3821de901fd3c6e28a475be8afd4ec7e85",
                    "size": 1285784
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f32b4ffc012a1f47055d2686cc01423a05a3e06cb74f7cfaa43b8296a816e56",
                    "size": 468
                }
            ]
        },
        "buster-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:bdffc95dace797a59fa019436bb1aa208dd77cd7ff820a6e9c5545fe59e22411",
                "size": 9290
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f109bca8a22fa25fc80b89d2ad693f6f3e7832d4386218a35d068f3b37b0e808",
                    "size": 25970589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f29092138407893e1c356eaba7e9b9b697dbbf18735600426272e547ae0231c",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:371978941d0dd43bdcaaf065e9cb6c81c6a0a319ff8176d4d336b7c3a4549061",
                    "size": 13787285
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e214b9ab24d8902d97128ec18e58420ece94e564df2c9f8c086572518594bbe8",
                    "size": 184793931
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c901444f1872cef7f686393cfbae560bf12de0704da80eeb8e05b3d0262b012",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e22138e38c99fc63e889a44b83ab03b81781b44e7791d6a8db40339209123daf",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1fa5477d5629f19944bbf2420ca7660994053cf04a14d94d985f46e9b6642a30",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a54303cb2624dc49d0d6bf3a1fdbe5223e3538f26e9821e05acd49edc2e77676",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9aa0bdc480ed066a117c4f2cadcbcf293f21f51280c1850281fbf287848f1286",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b41c0cf125e41ffea372c28496b1910de75037748b4aaff78b6217e36b92de69",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da116d2092210714b674370f8e3fa0e2c05c9bb75c293e25d10d47709904bca1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:588085ae6840fcddcc4789e090f5f81892f46f3972367c7341eb941e8af3c050",
                    "size": 1285634
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2a6ca8111003b222613c852641eca9fa040dd184eb6c6811b19a64145e3d6583",
                    "size": 469
                }
            ]
        },
        "buster-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:01908a2f66b341be24e21a9f0fc785e77480dde652472953dbb0d5067b11ffb6",
                "size": 9287
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f109bca8a22fa25fc80b89d2ad693f6f3e7832d4386218a35d068f3b37b0e808",
                    "size": 25970589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1ee6201cc3c329e4b18c796de9708c112ae1754f184e26d4de82919eb8208cf",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43cf170448befc9e85e79eeeaf44096d61f7ea5484f87990bda86a836622e29a",
                    "size": 13787381
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b877bdf8592a7b62dc3d77c0d78a7e3cd3e3ac8d1b8ebdca401afd095a443756",
                    "size": 185134643
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b164aa1f2dc7dfbb35e6e4f35f7e198a40f1896abe800da5f6d2fb5213edbe8",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31aee53fe6f28b75505108d7fc52ea0e338e3ed693d71c937a61b47513cb1cdc",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8fbbfbf4a8d0bfff06731bb0b92ba9fd70eda666b9105d3c6f2d0cf4b51d6f8",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c06a7344aac835cc8ede308cf6e1f1c7ddbadbde06f8ee1e97c516706ee26bbe",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:089fdcd4cccce1f09a18c9a88cc9b5948d2b42fbf0000d70d705a688a5b2a1d6",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3f2fddee653ada4478e29094d1c1e6e511a375d4635bfa6afb07a53e1aa54cd5",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dcab320be46214715959df4889b54961a60bdebff53004f4524bde5f99bb2a4",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8bf2840da7384091ce8edd5d34325854b19074fefbc23d2d76122f0c25201d5c",
                    "size": 1286039
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bbaa94e932163fb957bc6f4841a10c4d19221b5bc9a6a5e29bbc105ae45c629e",
                    "size": 469
                }
            ]
        },
        "buster-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:67c1a190ed136b864e18908c5e724a9acae09abcf939d8376048fb9cd3d4f23a",
                "size": 9289
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57c62469eb2b8cb9a971714401ad24a78c171e2f6dab20314e1c5f0dab7a8639",
                    "size": 26109830
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:21ce456ad17579b821e2dbe65920d0d791a2f27b300de63338b23ba1b0426936",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78151996c382cbaa935a37336e3626182c68440c500f9a98ccaf6c264c897fd9",
                    "size": 13787164
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5145cc84456a8ffad969cf2d59e6da0f6853153360d6a0281a5d12b57b29539d",
                    "size": 188996038
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:020c4cf177be60f72a47ce8a5ca0cf07aed6d846fdb94cff0660a5c00aa6bc99",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e582c4aa877a817e4d6c75a344d5e910a17b9027af5cd2bb9ab80306130e0079",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:943f9e7d8ad42391ff4d82e061ad3f3136de3eac249815042746a7b4b6160494",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7bac7fb09bbbe937617acd4aa8a1727184ec11b74250e3d9cfd7f5c70d66f6e7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b1d61dec9b52b5164bf809e8b6b47cd82fa7fa2072619f071b6acb9b1712898",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae35eb9c1ed36b2f69c5c50f089de63051c092cb435349be9898a0a304ad7b5a",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c852d8f94f09eba7b61719dcdf0af09fae45e4b32cfdaf89f58506c27c0a920",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e83f3036d260c1f52678a9b638d2da9f50cf724a0ba53780978fcc10c5efb212",
                    "size": 1285784
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0542fa26dc4f4c3b161c75c31d907563fda79036528670bc643273d13c151d17",
                    "size": 466
                }
            ]
        },
        "buster-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e95742087b1683667db8e7851085289314687f10792ba81e718505f05ddd3cf",
                "size": 8315
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57c62469eb2b8cb9a971714401ad24a78c171e2f6dab20314e1c5f0dab7a8639",
                    "size": 26109830
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e0bb71a28101cf306dd8881cd70e9a4329c88416ccaa856c03ad9f9ca462ea3b",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1343c8f62d7a213a4930891b9baedd3f3ab886611cc27846d85c5246f94a49ed",
                    "size": 13787230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30ded8f6bc7cfab3b4ccb02253af6eeedc1e98e88792c947e85ea66f754d4cc5",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16863032851663607ec44c74acdcd212bad9be0dbafde21651224c30f0338706",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b03f96647417e9b3795ce838e1234352b11f3b4a7fd408fdcd918525c030ff92",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2b9ad58d32576f6320b1311e8b06b1d6b84debc3887d8b5499942a6e0dd7618",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db2996727ca5de868ff60e02b328fe3c9d5ce02636c01786f86a24aecf6a14e6",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:264f0f924d769ba932e84f3d4273647bc58656a3681b61adc89b2aef4de6ffb0",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f4e9f1a997a9e61cad6d9293b5b625cc689b1208964dce5ef22daf6ba21aee9",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2a78b748e22cddc88d8a48dde918a0eeffbd2f483d3d6bf792b7f32c9cdee03",
                    "size": 11980672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:847f418fab2ba75ee3d25b26e4588f2049233434b122f33546c2a18ca40f0dee",
                    "size": 469
                }
            ]
        },
        "buster-run-20231025": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f91a882494b04d1de5a0e29f29601910d26058a6643a21bad9d189d834dfbd63",
                "size": 8332
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5329dc26fe29288aabb62184c71ef06987bd81c95d7c43a48e38a0dfaa54ff8",
                    "size": 25967816
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b6d5aec1849ba1833ac051cde7c3e335daed8c39218604d525e45e43890fc24",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df696dcd3721d19d1c461f4e2409eb5b19cdc947dd18c71cf577d855404c6ed3",
                    "size": 14064269
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e97bd97970f66dd9debef5c61c560371010ef75ffbe78b2a655e640197b08d4a",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9ac55866ba0bbf7dbd0eabf1d4256f8ded9e1ce71cd2cf12d0db0e3d1f86d8f",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2f0ca17549ed0c8f02b27edd4ca4cdd9188f370787c83b5d82569bfe42f9815",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42a6a92660f501faef56aeef71b6881a4e240ef1c0b25b6bc8e3b850290416e7",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2eca2f79c89503d6e2b662fcc608f9c7157c32059b167aad4ab6314c9d7afe29",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dad4c74e249f214e45c28eee561de5d51ab7a6c56199cd5cddb6535b3867502",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:239d6715cf7b4b2e4ae14b0d8198317a550f38514f0e5a5e322a47d26bceec55",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca3f1df8b3a9df1c971fb83fbcbd3270a05b7e106aad524a5a3cac5621927a2a",
                    "size": 11980911
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40b2b0745ce4477a82d87354d69443d3b392feab3ff0d3dd655c513754226758",
                    "size": 471
                }
            ]
        },
        "buster-run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c1a07e105ce7a24635da0c55c0f6b331aa6d0a79da241ec0d5a92330bbecaa51",
                "size": 8329
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:094e0a7927f79c559fdab346774d7de6e5fc38e2d998e82dd663850ebbff4648",
                    "size": 25967703
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96101dbf13de754588480160eff20131d08f022173c7c4c9bc3fb02a208a1eb4",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:598076607d96f9838d1e9f8d45e8fe75901a48509682a351c270676c6bc2f71a",
                    "size": 13794057
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:caa5a7ffa604ce47d55ae1c63bb8e44df65865dd2421676d016793bbb70d8b4e",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e21e3ece11b1d0ac6833f3321ce0d1db35992a39956e6657afe190f98cff91a",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2c474ceccc9cdd7d4dc5b5ae761fd37f33a26ccfbbc8d52a08a858de76a0d42",
                    "size": 257
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:831837066f074e19deae2e727270fa139c40853f0a9ee9e9d1b99e4dd3844a60",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6ec7c2474669700b142bd9ed60fbef5a4d6936a999906ba9bb1da3564494aec",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7ddfd012ee6f0ab8b177eba8ad4192cf43527eef0cdf309312729b7ee43f2aa3",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7edfd26c3760ff98d36d5e574aea40bc44093887ad7c5850887437650afa2b6c",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:894c87432bcba8683a88876f7eb81a0d296d096c500de3fd80d9d3161e08c3c2",
                    "size": 11980672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb2c6d210ad5e284d0ee608379aad7ac99df8bdfe4527d081aa32ac0d883e25e",
                    "size": 470
                }
            ]
        },
        "buster-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:8dcbd80df4d227e75ed66a7407e94d2f5049b4795739d1aff1c76363ea91de22",
                "size": 8332
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78b429e3efdd9f2b163abf0bca6b1462a25b1c5eddc1dd47f5d3445c6413cfa1",
                    "size": 25967796
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b39e783847e982908315a9f832b52861837b83257b9b4f63eb124df47f991f8",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ffb4855963dea071715710a022e5c141739ce61b08b538909aa63fe02943e3f",
                    "size": 13793777
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e498794702d7a6aa8110ac215bae416d56b8fc86059de1af082a61910d66b2b",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e2ec01b29b9f621f875e8202e789a1690fc33dd25e8cd5406da274b9d5d49f6",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7abdca9b80ea6da2e53942e9842f9e82f94827fd57640f236bea7e02649c4eae",
                    "size": 251
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2014e0a97318f3261493be34e73a27fb95f5f04343ff02598bc5fa4b6830237a",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c926ed1fe1a39c02ca6faec53a087efb70b25f0b5418f473972711d8ac1f6581",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e791cdb390ab6c099a1368881379b6f2eeece847510939076b7fd73526974a9",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ed274800f3f8c104186c56a0cd388e08de6e8a3b9f32de9d124f20c2107f058",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2493ef2caa6523862893b29163569aea08e1ffbd96f42dfaf215b72dacf1c401",
                    "size": 11980556
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c506a12497fbd80a835d527e83218758198607f2c1863e800a4538e6a54557cd",
                    "size": 469
                }
            ]
        },
        "buster-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a19cd8c85b5e9fdc9d2d03c09e94d6f01d296e443ebcd10e86a5e8cc3d76194b",
                "size": 8330
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:78b429e3efdd9f2b163abf0bca6b1462a25b1c5eddc1dd47f5d3445c6413cfa1",
                    "size": 25967796
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:13ed1f6f0a7094ccd8e0ed67b37517d8e66c896054a073c67a1653aa0ecaf786",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9815ac98034b11aa0ea1ea26180b2156252b6732b79699c8b426d36b63d1e2b",
                    "size": 14065230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a674e5f8b125691030b9b7db3324ce8bfcade9575c11f3e3f340820cdaf88de8",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89eeac9c331767a933a760bb7ed00bad9df0d4ada65d1541a3e4ba93edd862af",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4937b6628654da40e2c6e618886ec45da9353ab6076c0c93dc5a83f782a8739a",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f649378f9e7c8c1f2f10dd6e9df1ad4ddb8df26730d2713357a58ea5da4e2532",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:278cf0b5536e4fd596f065afdf1fce5702fceb6910ee6675c479fb5c489435cb",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b51515e9ffd9f1330e6339a4c1d03bf9ba37836242b45b488dbc14633c2ddee5",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2c7df11a752d5f48c9c01fd93bdfdaf05f333849a06e64c26167d468fbee53c",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2782654e13bd8bd11a6a95f875077804e6de0c43f4e1d09dad3ec3488330ab8a",
                    "size": 11980882
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eaadb681b5474871b1e91304848742535be214c2698fe14a82bcffc959d7825a",
                    "size": 469
                }
            ]
        },
        "buster-run-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0c21a1669d6734ac03fb8bc6db9195c9669d9a0556276aadf430119fa5d99d54",
                "size": 8327
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b0171eefd1c6d7f85c54d4a609269c9b5e19a0fd8cd787a49c808c6b73cf74",
                    "size": 25969827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c18894bcd34ff7bff587230f1d099e9211a6d6b4afc7f758a075d46ceb2aa2f3",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2722e87e738241fe6edbb47fc35bc0188f305a650143fd7e430ee569a11bccc5",
                    "size": 13794157
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee4cadfbf7ccf2c9d614118ecacf4d8b8639e0e8653422ffd49bcfbfae59c250",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a13aefd08d0c16bd7b8dd59a721a93bdedd71e3c53198f28d4f7d0d1339239",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:306bff35bacaf7bee68628b13cb99998a7309af32d611fde5262b1e5e3b07bab",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7526f0b704f343b89a778c12d44f5b54860f8c034059245192d4950c3bc2d6bf",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b8cacf8e84071556a082eaab177fb093a47556fb53c212e6b524890744a557c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bec32e37f26571eeeac2720cdd0d746ba62d73097eb8cd0e7ff0601157d54b40",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef7c1c763d2df17384b53dbe801ada48c76592ee6ca13174e10e781140d10e4a",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:210d66d6ffd999ab256dc78a426b23cae98dd2cb6ad1ab3d324fdd3a31ffc966",
                    "size": 11980611
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2cd249abb1dbcbc3594fd60d9c5f7c22cce61cd6f10481851bde7eb964ea211",
                    "size": 470
                }
            ]
        },
        "buster-run-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:ae5fd95019e69e5a46940e8e8cb603b1e2d6aa751fff59349db917781c48ded8",
                "size": 8332
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b0171eefd1c6d7f85c54d4a609269c9b5e19a0fd8cd787a49c808c6b73cf74",
                    "size": 25969827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5997a4cfe6863c5d22dd1d9b02ee2a04eae3d7f6954eee4e20fda033ff39a4c1",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89aa9b7da62b952da26628118c56c4dc37373b1507eda7102e2b86a0993c3019",
                    "size": 13794152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:607cafd7da964a82e3403f348ca340a23e0f4ac665d6043de44cb3e6587de6e6",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ea779a3aecef3bceb1c245f0cdc518c26c873a2850cb78f22fd66bb799e0fbd6",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:61f579c82742ac9fdf8009f47ae9a39505dbec141cfeaa3ac57fc77661f9ab97",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8649c2524803dda983ec651a691e723e1c26ea95459e9f453463a4649260c444",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0463be53c2ae909d41e6271906308ab5140d61805af669404f1ef8e987de60c",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e29dad497bb39618b6835f3a81ecc807b3c09a3c6a554ebc317bac841a0f9fab",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cee4fc301dd85b6d61ed712b7c273823f1d6948621eed4366ce3dbae3aa2960a",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2288241b6f2e1a2733f3672ed44a81c6adcdb4fd4c69bbd3dce9ea8178248521",
                    "size": 11980711
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82aa4245e669f1e26d684b5969af7478f992f8a047208cd2635fcdf8416f5983",
                    "size": 468
                }
            ]
        },
        "buster-run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2dbe93fcde3f3fdd7c5882fb1d33fa7e2e48e49f628d0eb649cd8efbfd502607",
                "size": 8328
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0b0171eefd1c6d7f85c54d4a609269c9b5e19a0fd8cd787a49c808c6b73cf74",
                    "size": 25969827
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d5ce0d45748c9b1a7bdc6c2749844ad24b52f3eb919532c6fe91599acd54b61",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd5c3615ccb0b8b5b27e6cedeed57f9f10898582b6baa9ec5381b5c092fc3f93",
                    "size": 13794122
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3dc64da1b864fc6612c13781726e1f98b1e2f34427a8da73fb5da8d5479b473",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a727ba8fc6e3f7e3259dae384d22e92f175eca6f823b9144b9a2c1984c93d71",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:650abebc1e76bee2682d427f43e01589ecf4eebf66fa2c4a04c1e15bfcaffbd7",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a9855afb314055e9356209d86df92d53e32550bf864860fcd158bdba2e98ee5",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:582efc322c3e6c29072658047fef56e496a72cd64c5c0aee21db5326d1d3129d",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01bc7a6cc6ba4855364b8d6a632a54828062ed6013b4d7099347c7bbbd5a2192",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:179b4d1928befc385e0f5f425a944201effb120331db4c1684d59448e405d991",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c8d9ec1c6b61b06016012b56f9116af7778242dd8aaf2c64232dbff55620aab",
                    "size": 11980643
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:460a0273e9f2ce3c952ce28f2d8bda8ab52cd4fce21bb6503d9a1cfcc4bb38a8",
                    "size": 469
                }
            ]
        },
        "buster-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:137196c5097c0a858e2e82e1b92cf701ee4624daf622b7df645cfc87b0cdcb6a",
                "size": 8331
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42641f7bf1512c205041cf7899e52e2185e49bcd6cfa0cb8ebfc73e3009221b7",
                    "size": 25970227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57b8ca8795ea3525df68884dc1353235f41f0b92d484c800bf530c394c0c967a",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6832d277252d211a660640d1d5e9c20bbe8faca2bff9163e354b4bc794de895f",
                    "size": 13794162
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4c5f3bf6f60652d1f328e1e3aa1fc9424296a285826f662a12a4c3d1d7da9421",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1908781e1bc6c7d5cdb8ddce3be23019672221b8848150bfc508af9e24a4cb9",
                    "size": 11980756
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:752669f72473aa71e5c2fafd0ed1d79692f9b2d773c70beeb97911398cca0089",
                    "size": 469
                }
            ]
        },
        "buster-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0cf40cf748ac1c428d42c9fefaa938795ed7830945b57751b7eb2e86ad165ac4",
                "size": 8324
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4e871d0a0087a92c664052d6406ee23eeb537f0b5f01894052aa0363fed45e3",
                    "size": 25969810
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3408cf0654b3237e979a6f98bd2c1293fa533c0e3284426abfc5c37ea65aa18a",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc8a85340147c980d1d12ed45dd25196bb6d91b8772a7f634d87105497713eff",
                    "size": 13787386
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dbedab5dbdfe90ff516594719861f8b7d778273a4f51c0fc58fdc0637e04f745",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f1da5a75eea7746f7564decfec8c1780d0ba5d49bc3af68c979fbb6be8a235b",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88e86113901b173ce46d3437be0827a9f0f5538eb7ea9accd5539ebe5dcdf017",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c83c281a7aad5abee2d68ef46d8bb48b71b0fc1a5e24e12354a4eedbcc89881",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9171c0dba9f720dff8f7560cfbf33056df356883558264c7ccc5337c7044e113",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1b4d697de5ee1d679d59dbac6ec3efdd8c04bcb996b92cd3f5e9382365dbcf06",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:194088ddc4656d2af60a599cafabd7825bc242897aee87038c7e9fdeaea93e45",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e271364cb1c7695bb1a8fa36a6e1cd5f872e107732b3180010a5cdc9c1ded7f7",
                    "size": 11980726
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3bc41fe40c149cfe6cda4349c6571fd9493a86e97ccdbd7e882919c81c7aa17b",
                    "size": 468
                }
            ]
        },
        "buster-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:341e73a6919e8c7a0dc8762a9733efdb289815f51a8f91423ee70700cfad6af7",
                "size": 8320
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4e871d0a0087a92c664052d6406ee23eeb537f0b5f01894052aa0363fed45e3",
                    "size": 25969810
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc2593b81e6002b446e57d403e4313dfde7b1864343454b05828f75ac5e58570",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cd66c164fad1a100844f09ac316c9b58d0c0429ee69b6101aa3b8e5702f78a7",
                    "size": 13787299
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c3ef740b19e8d1d0a22329b303a60f75adef9a93447c117a675dd91484b635e",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b5458f2dfeb4bd25eb72b87347acccbed8d946dff2e81f89980c7d8aca599a8d",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cc380240689ae213391343329edccadbdf83e6b9806166531d01dd1e0b25c9ef",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d84784c737442573131b8013985380c0be522e8cbe636aafe7e3503bf78f54d2",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54a3bc9876f925bb6cccb1bc8065730d39491f57de8dd07d0f74646af9c31cd2",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1f2bac34ff1ad1fa4e4142bb273e1e49066afad7c637b47ee2f92c820cc6cc54",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88dd3ca849a28b1be975e39196aebefb6b7a5130f164805ad99b4c295970608c",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3665f30421a5361a0021c04fd5af2e797ef1e3a595016792a078eb49fc61ef80",
                    "size": 11980730
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:768b75bfa738657958f3cb6ef470a1c1420a6c826acf2c2f626e9f0f8ac657fa",
                    "size": 468
                }
            ]
        },
        "buster-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e1b5f79e44596f331a9e76de30882d1e69fea7883464d1a1126fbb44ab80857d",
                "size": 8314
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f109bca8a22fa25fc80b89d2ad693f6f3e7832d4386218a35d068f3b37b0e808",
                    "size": 25970589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e85a59048b7cb66113b0f480f58b21f5d0fa8f5908909f090bc738b798e598c5",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e9d9f709bc526d8baead724514e3b5cd7f1e09a2c90db9921ec63becea49e50",
                    "size": 13787329
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7be450c33d23e41a869346c998e02aff90cbfe4abaff69368a2451eaabda21e",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bbc7b87b6f47438d9b1332daaf933dc60c63690ffae1e739d51410a8121213d2",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e38cb2313a8eeb0fba081fa80ef2948e1b8d339b1506b66d73ff061b434123e9",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5459bd8d4bc1fac5b1c18b332f5444657aab6de5a7504b70b0b629714a47c7f",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a26352b57f444f2a5ef4522f64eb0da35869249d23bfc4fc4dc8a726954dd11b",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b693524238e40e6bb351e67ddd6f413edd74d4dbe5ccb26e9ed8ca464b7b998",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f16db6e1fe504eef9d3ced46c271598dde07812625ba8533d109fc35a23c9488",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c868ab441ba4e19cb05fd026855c631627c0fbb27ae0795f40ec8c2c78db818a",
                    "size": 11980641
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcdb74c24902149d6a7f760ffdea7f93e7da4803732b790d459bcb5e78fc7cae",
                    "size": 472
                }
            ]
        },
        "buster-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:57a18134cbe9f4adc674af9c7e10cbd27927cbf1c180df2ed9e2a7ceeeff87c9",
                "size": 8308
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f109bca8a22fa25fc80b89d2ad693f6f3e7832d4386218a35d068f3b37b0e808",
                    "size": 25970589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76c0c721f5260280c88130a75b94b5e0f6270a3b339701621f97e14b30aca983",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5409131516c7e4003811eb609650f2bc519f5e5990bdf94e8cacd171aa6f2db",
                    "size": 13787420
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a4d6d887c52c0bf00dda419045f8df10efc63313d30f32734fdafa9c612cd304",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:898e9c6bd0a197d56887b5989b9fd1a4be63708f5c7419033b1dd502a45eb3df",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c6f011ad87a34c177466fe95434b492422a7ee10c6f58f6d53f38e0bd82c4a9b",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:321eff095c69a9e69a638fe51770656cd4303a2d519b6b3e66788fd51672b5b7",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ec28374d0328a01cea7e09a456a118a4a8573927e31f0129ec6bc5117eaab20",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c2c4ed3c0748136c2e67d89449db5ea6b1453f0cc4e78ecdffa9267f1497d9c",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:046e6edc01bf85b207d8ce299dbfe9b3069ecd7adedd15ebb361591b5e6657bc",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a97a5b7eb8452580d46586da1ab563b79594d453e74235d878b765bc49d7c549",
                    "size": 11980674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1807ee5fda6c05cde88f6e108d589a7e028ba04c2fb79aeb8b130eb7dd9d454e",
                    "size": 470
                }
            ]
        },
        "buster-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7e95742087b1683667db8e7851085289314687f10792ba81e718505f05ddd3cf",
                "size": 8315
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57c62469eb2b8cb9a971714401ad24a78c171e2f6dab20314e1c5f0dab7a8639",
                    "size": 26109830
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e0bb71a28101cf306dd8881cd70e9a4329c88416ccaa856c03ad9f9ca462ea3b",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1343c8f62d7a213a4930891b9baedd3f3ab886611cc27846d85c5246f94a49ed",
                    "size": 13787230
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30ded8f6bc7cfab3b4ccb02253af6eeedc1e98e88792c947e85ea66f754d4cc5",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16863032851663607ec44c74acdcd212bad9be0dbafde21651224c30f0338706",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b03f96647417e9b3795ce838e1234352b11f3b4a7fd408fdcd918525c030ff92",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2b9ad58d32576f6320b1311e8b06b1d6b84debc3887d8b5499942a6e0dd7618",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db2996727ca5de868ff60e02b328fe3c9d5ce02636c01786f86a24aecf6a14e6",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:264f0f924d769ba932e84f3d4273647bc58656a3681b61adc89b2aef4de6ffb0",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7f4e9f1a997a9e61cad6d9293b5b625cc689b1208964dce5ef22daf6ba21aee9",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2a78b748e22cddc88d8a48dde918a0eeffbd2f483d3d6bf792b7f32c9cdee03",
                    "size": 11980672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:847f418fab2ba75ee3d25b26e4588f2049233434b122f33546c2a18ca40f0dee",
                    "size": 469
                }
            ]
        },
        "latest": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b120c5f973e16b50b3e4435a2da200209ec6a92ca85b90102459d553a33406c0",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b526ec3ffa40824ba07a65cbad89904ee73075f504d2e71b9d2c95bca96c7510",
                    "size": 12063909
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8649c253d819480620bc59d342cd10f3a09881624067a80329d8b0b1e0f84af",
                    "size": 469
                }
            ]
        },
        "latest-20231025": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f451877547373e13c713dc6177acb56e85fe907bbb1b407ddf0b06111b9c2b05",
                "size": 8336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc521c5b98350f6fd8c72ace1e48558bb7b53cb3db201a2a3b42095401cd02f1",
                    "size": 30062869
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b6d5aec1849ba1833ac051cde7c3e335daed8c39218604d525e45e43890fc24",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3aa649aae7c6dc26b73a8c19a91f6b451d8e1ed1abec0bcc0ced6ffddcf46c9",
                    "size": 13085478
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd5714ed45a495a2f2fe046f974b9b5a91d77aaf88912e286d7ee62027995595",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63400a67202becdcf50b485680cd744b529f946af5649b926217a854ffcbfd7b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9dc3da9d38e8fc0df94ce84b3a5ab08ecabafd7c46c2ee6357c21c6953bd5d6e",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e69ac7887adb8cfab33ae868d6da7936db42daaab9a00619232cad3a897d189d",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34dfe2f4d9f225a37cd3871771032c11d329865018fdeaafaf0b7cf56dfafe74",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ce92e5345643eb483546e58c62c7725070f28f4f6bfddab07955685cdddf971",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89cef4ac0d76669fab5e4527bd8afc5b4370756b8236c796f7792fd789401ee5",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:461d1147a2f6747d83493c34b582ad1370c938758f41d70f0a78cb1c597d6782",
                    "size": 12068359
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa3e73f8f488d8fe184541ab81f75caa64a48e9bacaeb9e7d5ffc3a7aca9d29e",
                    "size": 472
                }
            ]
        },
        "latest-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7ee27a8e16f68f1c4acbcda94e6a2ed257e7e127bbeb0628e14b6bcf67e41930",
                "size": 8333
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e498137f0ed1053c364a5c8a688616b4abee72496a0b97cc71ea5e603565070",
                    "size": 30063905
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a962e6b7bd5dd90696c0bc1f9ac2a568eaaef3a22219d2eff13d9cb195597150",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fea786d312ef286d16b7d4e6ee8458d322aaa20415efe207488a22742e42f8d",
                    "size": 12976925
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9add177ed94e43eaf6152516d89bd8666c4c3b9f857e372cccb741d0f7a6051a",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:646acc1e4f4b0b6f673fec5ded08359096d8777738cda925b31778674455bb32",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c1bcca44c46f2bbeb7afc7826d48e466466a20fc5cbba593009939cf9ea7a87",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ecfea6abe9c0abbae44e7409aca8146de0eb54a867e1f0a0d100544361636b3",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e586601c5bfdd14477ff2d23a36db89885dbdfd7083cd1b32eaf4e60d31f87b4",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d710085f990e47cc061e932da1b0191a372d9e5a46dad800ff0ea7e8fb5de6bc",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01cbf7d6dd9b96f736ac48f4051e375034938bf88414085967543bb229f89b57",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a21628236f54a69d165940605451fb93a5298f23e09803be89c9a62f859fc88e",
                    "size": 12068172
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62f08df4fa32064914931605ff563617e44bafca90ec3b37aa2788f7bfdbb36f",
                    "size": 469
                }
            ]
        },
        "latest-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:00a186d12f8cfbcb0aa36cdda387ed8da4871e1ce2243018a9dd41860b94f473",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdd8361700a94c6e67ce55f6ca64efee6a4959612611750a3ad39607c92bcf8c",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29e56eeb3070309116d2179ec9e8118e82e9bdc22c115d9692d83fc1fc589b59",
                    "size": 12977479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:817b355e7456790f98bbc69c6b6374e2cb821bbc37f68b35b7ab2c3955b097ee",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2b466f8b07788cbdfdd83414f5ec111db7be424576ead82ef99ece822ed5e05",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ede96550fcfdad8aa28e78cc1499a08832097d591d7af3d4eecf153531d52d7e",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ac35e5e5f201c367dfeb909a064d5217ad9a39bc499aa885e95fe690822ee53",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92c69709be30d91bf7d4dbb1ad1976d4cc863bc5d0dd282ba18196143797996a",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1f4a072f19c88d4708ab8a80b4053b0d8928dd3382ce1266a221bf2fb2291e3",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3104bb9ca5f6b3448e2866e4c0cbc6d6ee330fc76b354795d642d712381adf48",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:671b2be499a1c1569c41e4ffbfb8de0c817662282829e92f032ce1b266b9ac8e",
                    "size": 12068089
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a488a091569ea54f40ced18d189edbcf1e3d7a9655b1a9c83c60da9a3dcee842",
                    "size": 469
                }
            ]
        },
        "latest-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:975fc0499700f5f503e4f0434ced410bba70e8e39beecf83e4d53095585d7d94",
                "size": 8335
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2fe9143d82b48fb4af3e438fff9e9e9ab593d054ee425414d772860c287c00d",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5767a74deab1e8695fac2d12bf558a7262e2f85d66255fe8c34bdae2aa79d09",
                    "size": 12977474
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f51dcc23055a6ce088fa403c9dc23c807eb3b73ef54a32c56e81a2e6e5684c36",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:413a9f60ae65fdeaa8c26f3dcfc25b6897068e9cfc74d7d32ff3b76b9a1901f6",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b49d769a1ef19d9fc4421bb0ef1ea00ec90e373b77fc43edded2f5df83fa991c",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a38eb8870d72f89d84fe232f13f96d72d354a63142c9ef4ca170c7733e81d2c4",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1efd48e691e3602b17ddd9bac6c2956fa2de2e9606dd60f69429965889d8cf2b",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12a89b279e10b7cb86fd57f8f8a4bb6943a14ab080a533ef7be0903d48ecf13f",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d0bfd75d90a345ab4adcc7ddc2bed23e515dcbd8a39149f6b50fea1339c42f9",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57089c6e47553dcd9bfdc88c282220805f6785996abc742648a87d82aca9d8a7",
                    "size": 12068234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31171868d9f07fdd0b5a825a99df5ebeddc98fd1d56621b857bdf83e9e65cb65",
                    "size": 470
                }
            ]
        },
        "latest-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f1d5eeb6462ace2cbd6d22e5f7b4ae71fe705d4879321a6063017172268ea830",
                "size": 8336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c5073fd4983645e56f2d7c43b0578ce93e7729da21e2f1ff2afb8400b76479d",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de96a9d1ddaa697a3579450a1028384ce039da07321441a43a0a59bbd3c1b15d",
                    "size": 12976677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1a90dfc49a156d7b3ac0247618be2b6d6fd50b77bca58f5f95a58cb555bc90d",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a70c314166755c7a85177e5eda327d48423ddd1470a5d8a343315bdb7830bc64",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d439ea52060fa5611f07ae0a691cd2b8b1bdadfd6d9b73510b64983169413a",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:480d7642da0ddaa1b99731162951f73f0ab9f1dcc74e511a5d9fe681fd5c3356",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6736fe6e47ba3d229fdbaf7bb7071b97152d2f88a9a0582de1426bf7efe0d26c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:208a0669d184f22fac9b22d3aa8c57f1420fc47d5128c0745500d0e2e8260cd5",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e52cb06c0f7706fb99b300cd78287782989b48ee6b4b47145d82e947cd7e3d3",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:681f2eece34efb6245cec26c1a78fa11176abe12d00843154d8e4174024d39f8",
                    "size": 12068141
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ddaa96c23eee550f3042d563c4d2d009007989b9aac976a16abec9cdd6d40ee",
                    "size": 471
                }
            ]
        },
        "latest-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:985a17b47997baa440509c024e676299f35e436d50a18e075ea5450c30b5f837",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fed5e00f3daec5a11cac1dba82d5c7764f3034fc44920b4ea013d3d3b50adff",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9e4ec748abce4cea17e5fc65089ba82a57ecb5fa64f8eaebd2b1fe5bf63bbc5",
                    "size": 12976746
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5bbb9dd26458939c671a6ae3689e843bae70bf30a829ffa9b87a8d65c0c263d7",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c13bee8013c60572d5d138af920973ce92631407d6cfe4b249bd7dd36ddf367f",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7c1703e38bd0c10adb8cb901cd9fbe718ca7fe73bb69410682937d6f2fae65d",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8a8c78768260afb3511b13b7909bb2c18e6bbba87bcd638426426e04c76a185",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f549f42f4d4d0f9a0d91a794420c324a67330cad829e4345c51696aed5501c5",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2520845ff73ed6ba9127c4faf4f25f15c350c37c20c714eca2496cb906ac7ca8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c712c29de2fcef7400e58bf9964f2aae8dabeda214946b45459050ceba5377ab",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3fd854beb1e43faa985824d8ff4d6a19672c706279ef2f4b5ae1353e7e645d78",
                    "size": 12068279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e20029bfe38d57c696eb67d20206850cdcc25cb85a90dfe4c61c82c739e1bb9",
                    "size": 471
                }
            ]
        },
        "latest-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4cbde4a792c9461d64618b03052837616b0da6793695e692b14519499a347e65",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3508bfa687ca31d022999303de1fa4b505f43436280313e4f79483dba56a54fd",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29fa4cacbb55bbe4c2f43337598c7e214d4db670a1b8f9ef77d5263a6f974ac8",
                    "size": 12976770
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb687a9ed447b9ba7e0c7e1d6499b3ccdadd73a79be8f4d69cda9fc53ba267b1",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8989164d23ea6e023e214b59c81f995a35e28d00205cb3b7763e1a02027bd6ee",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0c00bb9a3ed83463b51562d150ff8a703d89c3b5f299b1e78bff960f9a631fc",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb505b74b504315c6296202f5b1c2fbbcacadb506f7ccc5f9c99db08a56c42dd",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09d4197c190e339573857337d4424733743c266e75bcd25453e4e90d6de2ad0f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1bfb8ded4ee9cd7afa32e3671ae3078be45e9060e3c955b92ab87480ed03b5b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8876f8e5f597d56ef198459db6931f35141fe8ca9e468ab6b8a7008b6ad1ec5f",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b31460e22d44a134aac839c48ce8f82f786565ad87c91fc0bfeb21669f2f4e66",
                    "size": 12068381
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e5d24befedb90c3a9877529a338e7cb9f39804834d254878cfe14ba465a83bf",
                    "size": 470
                }
            ]
        },
        "latest-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:15aa57be64bc8698342633d4547891f53cdcf82f9cf691ca9ffd2385a0be4e66",
                "size": 8336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdc982aa2cd91f3d8c1a394fe291b9b4617ab5a3e8621be17f7e8f448df865f1",
                    "size": 12068260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e65fda39b25177d70108060aadf1a969b2f7159771ceff42389d53ec6a54a18b",
                    "size": 470
                }
            ]
        },
        "latest-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2b7013c37d6b2c1d1431abcffc4718dc49a841a78d7c5b3752bed41c184b2c66",
                "size": 8332
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3b02ff1abe5dfe9791505936f93c8316422232986a64a09149fe3aabb8be2d9",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:759907076afe713c4234fb5987290ccfa61dd49daebced99e301665b885062d3",
                    "size": 12975152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d19c37c9190edbe13b45b66a2b8056c396ee43a72916ba1d9ca757dc398c27d",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdba65c7a86f749c1d475ca45f2a65c80d5ad0525db04e84db2da8803614bc1b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9f4c9bf8626165f2f2e675cc143ca800c95ac74558ce5c1cdc0928136b2a45b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33c9823ab36b119e618993bd63dbbc9cfebe37d67ba4ce036ffe5203e4de0be7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd83e03f85224ec03d743a072160fb9deddd86af0bf9cd2e7b6a4f2dbe221b58",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a42f72c7f4eb3e1399bfe85d2f32518ba7277a04b897820a0030797b4825d57",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5324c9bc68271cfdebc5291757fad42a9cd8e644ccef3fa6b3820e6dc0e61cd6",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89b2cbadb70cd196f31440ee26009b58f03e311d2d8caee65ebb2c1bf1632079",
                    "size": 12066196
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37daad9c305eaeba9f7300290ab5bb83040a3fbf4deb76a9ff3c75463603be29",
                    "size": 470
                }
            ]
        },
        "latest-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:df25f7dfa80e8dc1dfae217927a52846b9d87d2d51bd9917ccf4fb7292204e02",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4e883aee71b5ef97bf1ffdfd139669e73ef006c560365d29cabde27caa6b13b",
                    "size": 12975050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f03e14fe93efd751580a2d51cb4489a57eac27b5db895225befd9a2299711fd",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef2a23d56797032756a4a8e8bd01b2c71a198c10e4e75e46bb3508b707d88d5",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de945cb97c6374ff7ea085bcb2edf737114d2f71f921c9a5a72c2168a40dfaad",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f482a15b31fc59f209b49b1e3bb7a58f1c350c673db22910a5cfdc4dc3ae6685",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9571608af5da43a8c78a43bfb08a829b5fcafda5e8292e393472cabbf0f804f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9614d73f006a2cb00875772e38550a822b7ee1914fa1a3a9ca724b0f0acb02aa",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55d55aad7abd855b5bd072003c07952d0f3605bcd5c55718c85dfbe5501b78bc",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a011bab6378ab6beb8adb79c7af1b10f94ce9b1bbf98c9409d30d40a1600b18",
                    "size": 12066147
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7c31778d110c356aa857f034acd571c7157c60f45598f02a7372f1e09405d9b",
                    "size": 471
                }
            ]
        },
        "latest-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a37872969e0ca00603e64b2f430e814a4c79dbafa41591fc4b6a1587e3ed0bde",
                "size": 8319
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd08d71f9e4be4f65e14231b96b47eba749b90731d6ac89a6b122102497f0520",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ced2846c7ce7b5358d8d1ca581b422091108201a9283aa8f845b5b6acf13b45",
                    "size": 12975074
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc714b302c222d2337d2a96a68bd0f8e2f6e8b6141b063613b4201f1b9bf88ff",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91059ecb4797f7ed53ba6123bc3708c97ed915820284c6e9ab28d76f72973580",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10793d475cc903a3e7298e67feaaaa5b1ab39b699349227473a13d747c7bebd1",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7e5860cbb43236bbbe750bd6abf586a8856e076ee2e1c38f33fb4bc6cc9129f",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3528b47aa83bdaf2eca21dffd496e9b26a4c6c17e7ef544f7a136ea69eb5b829",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8d887e8d98a1d19fda084161bdcdc428bc666757604d237cc331b3e96e3773b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c42376533b2b7356cd47d1c5d2930bb9f16c8bcf09939ec53070c484056a89",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d7c41e39073993a13a4c1389895a0a67c9430fc38339a95fe90acee84aaae37",
                    "size": 12066179
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:121fc3a200e7784ad770a628bad000d2461cf083a2786f2796fe5dc6778fd548",
                    "size": 473
                }
            ]
        },
        "latest-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:97771640e96933a22e5920b479f26bfde1f76f6ccc1d7295998a55274e601fcb",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a0e48841b8e49c36f6b1a8ad4efb4d37c6e10ef8dde5cd91f4dc437d1d8405",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55a1946130ccc17b581e6b524cf631bab9e5fcee60de01f0d39244a87686b92b",
                    "size": 12974885
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9858c7c5616b7ed0d90d6fd0d87ceef7f797f9d35758625edeb82f9e028aec60",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efe8622a8e40ac44137b3b5fd0dc0f14ad5e810e0338dc547f692d8b6a35c977",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c78e7355e42143ed74045da95e7de3ad92272199e0776d1b7228a150a65f47",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75b07c5fa13c3200be81dc39d20abbff29122ce62e20ebfe91047e7eaf0fbfb2",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a595d9ac359dba0005931f718e650d9edb7c0a1e3f6d9d8acce991fa76ed260",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95af7d2de70e46a0ae3136c3e62f38101bc59d80d433aa5f5bbde3da44a6280d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15bfc11c903d27a21ce686bae35210aa061831dd4dbc80e0104e5cc4ac5d9643",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8ede8ae4094991acedbee726d1b6e919b13bf5c2e9e9310737a8c0024c2b922",
                    "size": 12066255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b182c8f04a9cd679de5170fb46f659df5da9d9291948137fab51b103a096ee0a",
                    "size": 470
                }
            ]
        },
        "latest-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b120c5f973e16b50b3e4435a2da200209ec6a92ca85b90102459d553a33406c0",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b526ec3ffa40824ba07a65cbad89904ee73075f504d2e71b9d2c95bca96c7510",
                    "size": 12063909
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8649c253d819480620bc59d342cd10f3a09881624067a80329d8b0b1e0f84af",
                    "size": 469
                }
            ]
        },
        "latest-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:40cb42ff2d5e7fead725bc011ce4dacf9160868839fde5846c45ef390504c5e4",
                "size": 9291
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e679cebe0849bfa7cb31bc37c02c65ff1e2ba1af6c7610130ef4a0662642da9",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8018fd0de9417ceff54d5e970ffba51a3bd4381b66ff525be5a1b8c5ca7763e",
                    "size": 12976453
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a7e897f2afcd8ba780ee63974b25f8796cdaeff7b3253da3c3a8dc54e841c49",
                    "size": 202407153
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d232fe9fe2541d304164f5c0df34e5f68fe7099328fb3de15e15b02e89a54a07",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08abf86fab1b55cb6405a9f9e324ff6f48ef08200bbf35f8d8189e0db23960f9",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1aeaee01325f1a632dcd37d0732234af47f4f122e8a845d01854a7caf4264961",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363f1af776176365556af6c9c3ff5817d8675e57829101a6a0f3779325b85f6",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be1d5d2ac84db3d2f73bccd4820102bf030a95bfca47a780431f6bff75d934fa",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd25f72f3d784a43ae14ac9f58af7e1b42eca095bd0e4697ffbfbd3e7def3e17",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff19cd906c274030a179f0f967ebcb4ba25f4a57a5d79d2777f3591891e59cb",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dacb9c492de71aaa3cb6afa6611a2b988decbede9f3cc330dd1fd58542b76eac",
                    "size": 1157599
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62aa44a739073bf6fcd210b0e6b1b510812e709ca60a87a43417b06c52681e7d",
                    "size": 468
                }
            ]
        },
        "latest-build-20231025": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:90bc0de66a0ea601853957994f789f5713ac867a361da6bdaa12577706001a6d",
                "size": 9307
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc521c5b98350f6fd8c72ace1e48558bb7b53cb3db201a2a3b42095401cd02f1",
                    "size": 30062869
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6637d78cd3f40ff882e999a785f182bb3fa1a01d5ef761c1e181b6d870a7fcbd",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b06450eff9af15b75445dea963f162cf7858afeda6fe48f1b83b97ad56bc711c",
                    "size": 13085514
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:59e41231059668e489f6559603117d46e9cf19f77a5f7a16d94229cc05986d27",
                    "size": 203957589
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c5dd089081c30235ff6f44d1664bc8e6d18f241419d788ef106895706dd5193",
                    "size": 473559
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb7dec6a6039502bf674300a9f0e24570fb7fb60e047587cb4e5499b2359a7db",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2795a48a5b0eb1d3b686968922bf944b47a1b1a49853ee357c41342996c957f",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e05c2c29011c5ee6d24c7fbcc46acc54af25f6517dc0c00f9591c13dc925a93b",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:182c297ace30796393d7c5c9a342cafd081cf498c28a891a8d64964cd63dffe7",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2cfb84ea62623647212412015438bc5e3cf43fb37a29a311f889c2689fb2c2b",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:71f9d667329d6aa529a7956b8c4ba73770477232fc648bcfb3954a17d8787a76",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:73814f1174c5deb08eda455f022023bf1ac10664c83efb3a1c2f41d7ec3c29f8",
                    "size": 1154494
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c7b85b74093ca1a23021e9406204e88234532df7bcd4d53a4bee08eb3f32c85b",
                    "size": 471
                }
            ]
        },
        "latest-build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b0ec95fd669b5489a7c07e2cc55ee1ec5d519d49cbea1523ced9c294af1966db",
                "size": 9300
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e498137f0ed1053c364a5c8a688616b4abee72496a0b97cc71ea5e603565070",
                    "size": 30063905
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:222267fe04b6ef131a3721c20636fb4bc37610876c6e79210bd9770023b15e9e",
                    "size": 2592216
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d11ff54f08292ea7b9f8f9646b0b46b9c279b7dc30755643c8b1812dd264079b",
                    "size": 12976819
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:559acca2b7f889e15b52a6855fcaa4d26ca66e38abcda80da1097a9504f0383b",
                    "size": 198242397
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d75d772ca368aaac39790f5b6db9861cc40bf4eca9efd2927835d17017cec794",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01718caffadee8ba197c2d922f7e4b71a0235082e0bbc940d88b3bc1c1adcbda",
                    "size": 258
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:014c854091246120945ad9377ec757ccaccc4dd3fece836394e19711f7bc9949",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a271c6111eb7b6a014490e1a09f0a8257ee7a9f7f093bf46416f0326efb0b992",
                    "size": 1004
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4a8ccaca76e2f0a8246d693ffb6acb6b38fcb294bf1f85d660f7daa02ad7c83",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a21f15edaad1a3b89b2992ad968ab4e28b3cd217b394917dc57e8d73035daa14",
                    "size": 668
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0abf0889485dca1bfe3c1a85f92cc411eca9c3fb16faa4cc71ec53f8d7fbab47",
                    "size": 466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:48efefc369bc69d192a2d4b0f9f110ebb48a204c719364cd9274d5a4a7a3c7ef",
                    "size": 1153799
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c69b1e8db0a87f7cf080974eafec2260df9f2ed25ff39d0a8db440e1d1641c16",
                    "size": 471
                }
            ]
        },
        "latest-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:864d049ff36389bb4f0a18b13d334b9f2561173f4186c84abd26c5fed0b6585a",
                "size": 9306
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00a375dddab470a2b283c99e80e85649bad31584427ec9a4b3e51c6451312720",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:449d32c9e52b27aa72b2f52a24a1efb47133b820af075f40f191cd8e10a3e336",
                    "size": 12977481
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2baa28e7426d319563465be4c2b0847aa8d2286b2aabf4159075b2c16900665f",
                    "size": 198242553
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a5c8885ec7888248d72f5e4ed640ee91ee931fa3844f2e32257512303c4f77e3",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:758ba1e197e99d9501f27f0d401bb2e3d57b12ce4a350e0830eb6f7f42b1fefe",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cb0eb8a31195747cbcc985084c6b63b8eb607a42ccbd5bfbaf699c82963c24c1",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:434734840112a44e60d24378b399e4e18128267f9c07f7c424941caee1e45633",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:973ec5288608f45fbc92e7dae14c3935d7d2a845d04620442c3e42342ea6d04e",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c5c9d449e62b4584fdc1e18a7031a4e1dc0f3e2178c78da050929d87d8176ad3",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca6435991ce34103ce2a47bf803e0c2e0760ac418d37d30d3c84a2a83d939d3d",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f07795274ba28387e001b3318866a93ec82273e3d6ba19ce841692e522b61a23",
                    "size": 1153851
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7e60ec87e9bab8ce6f306a478cbc8aeecf818509f07ee91d4a54d59bcdb3e9e",
                    "size": 469
                }
            ]
        },
        "latest-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:278ee442d334797f9b310265ea7d3e318ba588d6ad94c16b2a13ed41779f9490",
                "size": 9297
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1b33149dcc273345736a83f631f8e2de7d9a551d977f274ec8112d80767d02d",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae956e5b517d8c58bd3519db6b8781cb386ffe87e78b3cd012e526d8072ef31c",
                    "size": 12977423
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df8a816a717a21f068fcfa0207d660635a640d27b3b74ab51f20d7faca6a6fde",
                    "size": 198243441
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:913274a0c0a02e2c567e257d40d1379235cc5821c08a685704a52c7dbbca914a",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ff0224ffebb6a46b2a2c5199ab8b199efb78048eeb36a1ee5e9a3a95e79b03c7",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:44abde36326ac7bb957c906351a71980883f91abf668835904c8d2acee13ae6a",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7d06cb4842538058c0dc848a8894e827ef3dd6932e7ea63683d1ead19007e85",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c30f20aac049c3edff56c046ff9e0790f627f8dcfec2fe8affa90642c4a810de",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9935a0f62d1cf7c931f4454c1784f7ea3241c0d4e549d1b8de4dd00eff34c31f",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5eaca4aa781d5af8a64f1137130d7eb69a1250b6172add8205cdcfc598d17fc1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2760669758e71477b04c90ba4238c28caa35ec077260e647d7ee72f3286bc000",
                    "size": 1153857
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:86246463d223117a1435d40539350cb8e06078c66015fa2b3c3510168cd18259",
                    "size": 470
                }
            ]
        },
        "latest-build-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c291d4972fa7feeb65487c7359625020c59c23802bc1950c8c59d68fb88911e4",
                "size": 9306
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b59bf67779304f302bd3132f3a2be8a363a1a257d165fbef5d4c1fdcff6ccebe",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e2cf320e7eab57ab8e4918af133a88fdfd6898ff89531cb22d7ea938676c0ba7",
                    "size": 12976674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5389bdd24bf65b5c2066451967db2d7cd09cefc838631b7b74da30132ddd6e6",
                    "size": 198247608
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c134f0570364397dd703b12e89007b55e7c19c7524b3e3a4f1d916dbebd0aa10",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10bfa8b75bfb934917da80f01cd0be8269133bfa6af8ebe617c2c44a3669acfb",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:341b53b10ed2dd5ccca3974c41a73afa9798c70b118bf978b54ba6e5e067ca6a",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bbe31f685f1476284a13cd445d483e31c63844244db393ff69745c76a4b956f6",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:da3ea8150c216ae439a8f06b9f1d6c195baba9d9686a11bda4e1729f280460f5",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:028422a551c7104b5f0b143aa478c6e5d146533d93c1dead6e8d79efa9f97217",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2c062bce3a1a52c6a866e310bdf328acec7c0ca4f0d3f79c595e82d88c13eb6",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fd912411da04368bc75e3ab52e2844d0c38f821e6b9c7506ca2f392ffcead3f",
                    "size": 1153897
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4de81396170a87521d68162ba60c376f6c926e5e115c0f56131a3dbe23403ebf",
                    "size": 471
                }
            ]
        },
        "latest-build-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:200866beedbd261ad90ec8a6361465c62657e696318bc50a763fa92580d4334f",
                "size": 9311
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:680ba1f3235a9d8c571179d2b4a34a2093ecd6d6eb0ccd48f3d4c79bd460d33c",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b9b5fe31d070602b084490e298b58f47c059826a05048f721d13a3883f5245bc",
                    "size": 12976816
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4cd412f8fac3867866cdab9c85df150f5f1f81edc833646115f2a229d60368e9",
                    "size": 198248704
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a15c086c4541f3fc849f0b885720624d014d998cf43bc983432d9acd3219607a",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:965d251b89ec3750ea3b1bf3588f59f4b9b1097d6b6df85f4052147d39f1bd0f",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f363d61ae45e4a13ba7331124b73ab793d5f09559c511797e1ac3bd247e262ea",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:371138ba663299ae743c170ce32994e2499b11d3d0b6b9565ad4ef7d10fdbb6c",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4bb52e8236270316c95fdf5be1cd4689fc3b577e262599eb983f0fb25c79d63a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e01009a60bfa66916967a536a8469ce2e78fb74c6d76d11a8e899e31fcacc9f6",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9503def2f9871285ad40d27c697d5f7fa0650b692d0d359616df8c0d9495a08c",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8f5aa47a62e8ab52d791cf4731c295c109812ef18152295372bc2ffe3a3316f9",
                    "size": 1153854
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c1c29b924c93b4fdd15826d61972ea566dd89b275be4b56a51fadf4d97f63e3d",
                    "size": 470
                }
            ]
        },
        "latest-build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9b5ccb7d7b7a1c81dea6c772a3ee525d5af593751396d4e7484a5670470bfb51",
                "size": 9310
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6db57d1112d030c8e1c89b4d774b2d9231eff939606301294c70ce1455d932a6",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c9e2203ac993142853b9ffc31e205ebd9bc0edc708cf664fffefe5b1d1d7d32e",
                    "size": 12976674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4dccaa466346cb8478da79f73725065d8238a66c7137327093d83bc839ac40f3",
                    "size": 198247212
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0752dfa164d11ba28771aa6633236b262008fa3015b5b2bf8b700e625d0b640",
                    "size": 473568
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcdcefe505f624eb2a9d6b0bf1da0e0c77f3c486c23f96a9f4b6f86fe6534687",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f74ae1aa34faca98ebdaa34a726f859372777e03cee8b5c3a755e1e95b9e3d4c",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8084e5e8d8b5f574ded52ec9377c6d83b6efb58ae1a3476d3504e937ba20451",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34499303306f69fbef2cb2e91266188bf1e4ebbdb0cdcdf349a45eb1ef739cad",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1124e94d2ecfc0e4393a596af6a31106140c6064eb182da578be3bf4d3fed92",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f11299395e09774e46f86b8ee8054bc2389bf046d21b01e0a121cb5dd46a9a60",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1edb3afa64aabfc4ff7dc8ee8e672f70db0216eed313b55c6f5c09e30663e1bc",
                    "size": 1153890
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d442f2c49a70d1b02ef47ba1488b8091bf2bf36b716468a717abc02171b7a2e6",
                    "size": 470
                }
            ]
        },
        "latest-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:36e474620a5fcf0849b8aeaa210b4eeaed75aaea35c438129a960da6595acebe",
                "size": 9310
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:84642ed2f5842e77f6ce5b7f04d267c1d999850b7464bc250930f7fd81198663",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18b6f561d414a7fa5d738b1fea176f906742ede82ffbc4fbadca42ea8da00ab8",
                    "size": 12976765
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aecc55ca63d63ea52a00d80a4095c0f16fc39e85a3f1cf79f8df391d3ccb3f94",
                    "size": 198248312
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:030eeff4d1ac1b1b9917e3b089c69df05f6efe48cf505703a4cb63782ec5a56b",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ecf8e349dc4b765d6364166adaff7550943ad9eeaffefca4316ac625ff4a7a5",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bfc66336b9ad79402a7cf71cabb33b9456c5e145f9a23723e1d849021404c057",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d697352f61ac44c0070abc2678af71534abf040b05ea7130dcc922c022cd5898",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df627d84b57294a6988ae9668cc0c13d6f0abf5a02dc7e7ce41ea92ef3d7e05d",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9842b82317c431cd0b82234e40c31821fa2f99d0b114f0e16bc2e95d1097331c",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f381b65dee23d18d5f7a3ecd6e7e78172fb7fca7276fad534ac20d294b552211",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1bbc059d53515f935f8904edf78d40a8dcc0280a64bb4757abd71f4f81302fd",
                    "size": 1153902
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ac4232aeab9c66f4aeabd04691544ea516c0f9f55003976d740a1cc40783768",
                    "size": 470
                }
            ]
        },
        "latest-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f54716c960b7cefa8a07a2a57a6da83b883f456b1192e2bd5ef3876dfa9cf49c",
                "size": 9310
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e6d2876027888d3ee57d853179c6ae4108810c0a1e8ea542ccd2e772cbdf72de",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46d4ee457740b37623f08bbcbd1b02947925c0c192b88f9de41e105b213f3037",
                    "size": 12975118
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6a6b14450d604ab6bb7341457c11b5c4e501f9e3701f9e81c495327141b20945",
                    "size": 198237483
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c5bb2387dea7477d9b0a9474c920b1f83e2de84b2118bbe5533ccb5d6810d9a",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e5ec705e490c3943e6f9ed2dc00d2002ab2cf4f0e92e7e2b25ff6443139eae3",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c69ff9177e27b334300cd4a305ec82f2ee6a9ce2b4a69158589c4fe38c836ce",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:277c46c61d7fba09b1d3e5f33c8dd6f3f8950716b93f695d08009cba37045d74",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64f544d305b2294bd574c661a7cbe2e8737d2f5736c0fb92e88f66897a9c537d",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4b1364ac1dfefc426e60f0a8f6f6ac2ca41ad9da5c8f4b032b22f0267af4d867",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0dc6fa7fe1b76c096420ed4c5b6ffbdaa17115c327660124752324da781f220",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:badade7589aaa1c29e29b3e65224ac6e55526e68fb1a2bba4a50176e4930556b",
                    "size": 1153893
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:61e89e0ca5660bbf3a16588e95ea1944efebe59f631dea3a6c6dcfd625a3ab1f",
                    "size": 470
                }
            ]
        },
        "latest-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:24e95967275bab2f9a40760e525cccc6e01aff709b03d0ec814f23184f6fadda",
                "size": 9301
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e002e62693644c1b7d6e4f47f7eff0f4b07447854f1a354762c5faa8407710ca",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a9b01329934717e99144a7efaa632c6c80243af996f43d870a12ffe3ba463a6",
                    "size": 12974968
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:872fdfb1a4b78cad02f72565e6b5df8fb9d395d99c7b9571df6778fa5ab1e640",
                    "size": 198238960
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6048c8b8684c8f4fb651632b9fa013a8526964e3f8abab3a969dc6f1cb68d9ae",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:269df0faa1899a56ca4217248617e058791dcba067437ef71356ae68960ce716",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:929b77287b8d44f9ca3348277249579589d6630e4e790d3427b783f0dd9325e4",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0c866449afa453b0eed477471bdb56140bd2bce6b088e5583c628196c7cddd98",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10e8e21417f2bcfc41f184882e2b9aa6ac0e37ddd424ebd1c0ccd3dc2554c0fc",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:843f45cce595e7bc1ce03c2311718eb90fc2500ef2ea503b3496747efa80ee26",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:404603e2a43c44ed8901f778799a084d038b1064663c406f1e0a228ab46d7006",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2da1d53ee456eb9ade068e41f280966ea65e7419faf4ec3d80bafc720949f62",
                    "size": 1153994
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e4465dd3afff9f2f11de8613eb576e4f3584e545112e46e7bc5ad47701c4b61",
                    "size": 471
                }
            ]
        },
        "latest-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:048e780b2dc7cdcac47c0eea219d85cf8c8a10fe7062aee1c5f1330c277242dd",
                "size": 9296
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bcba2f78391733a47fa6301e4aaa906cd31b5772535c1582562079b78c5f5ae8",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7c258bcf90db36e2970a505ee6e14dc01fd96af73aa4051879fbf892fbb7cf0b",
                    "size": 12975045
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d305429230d5b47f1cede9ff9171605bf960fc0f07ecf3d5f0be446a9ab480dd",
                    "size": 198574000
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d85d43053080c4587c7856378ffb4165e3f60437c56d535c40fb60e2b71249f7",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7d3c5e68f9537b5e91a334f71a210c2aeaf92c14ccdc35996d2a5ba8f2878b0",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00a29b6223ba1cfb59486affcb2a59771c561cca23b716b1aafb0732c34f1e94",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:db231b5fdcb87d43878f52d15271bd9810030c4478e9fd27ba42275124d6a245",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4529c36f3a81a1a33876b8be756716bce7e469a6e8bbe7256a68aa7baf11b7b",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e69b17c2ab37f3b7c6850e5e51e9b8a2f027e059aaae5edd9bdb1fe4db2a9a61",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c54e551e3da7490bde6cb993af0bf12073e9059bec98783a7ac1b1ef92675cb5",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:914e1c7ae5911b2833526f415099fb8a123e26d46462cb3ec7ad0ecb0a18cdb1",
                    "size": 1154246
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a0b5726d499f0f2d0a034e0046f54ce8342eb43ef8a5feb49c276c0fd38b87d",
                    "size": 472
                }
            ]
        },
        "latest-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7c973ac9efec74e01af01d1b4472e34a0b073d02de17a3fe0b75f49fbc65a45e",
                "size": 9290
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e30d3bfa043a37234529256a2ddbafcb7d76b87fc53ce2ee153cd303fda2d6ae",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d22075c9bb7061f6b7a8955728b997b57b08a406bf3c98dd569b2822de3796a0",
                    "size": 12974924
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d7e9c0263de6c0544a8417547a1595cb696b2b910a0174db6ccb5fc99e656246",
                    "size": 198573136
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dde5e8304a334dc4b9a1dbeb79713473361114d34c14a984ad0e76839ce179c2",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56cd23d43464d40481e4fbb571c2d9872a49b9b692af94b9f5d66090c16c54e6",
                    "size": 257
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f577bbc75fd07fa7b71b7ed4314155d827c4c786ca8b91ebce3e6ae99fcf70b2",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f08c256037939d84637466f41bf6d4269ac0af747c3d79ed3e62d9d34e4eb21c",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12c1e7798cf49b6bda92f33efe657ceafae3fe1aecf8040704916f42a83fff8c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de486aee6a55011bdfd9cf642f227a6d2d45c2d8b825f45b46429307fa683b2f",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6f57bb210d903b265ac8af7d74783fd1353f301da5e2d63b68caa267c2e44d01",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64608d2c6331e316a3f8991b780e87363ccc324989feebc4f22eecf7f4ff949f",
                    "size": 1154246
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f97296189e18fbd3408a25cb4ce17991e0f903aaaa5c8bd578af17525e1d53ef",
                    "size": 471
                }
            ]
        },
        "latest-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:40cb42ff2d5e7fead725bc011ce4dacf9160868839fde5846c45ef390504c5e4",
                "size": 9291
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e679cebe0849bfa7cb31bc37c02c65ff1e2ba1af6c7610130ef4a0662642da9",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8018fd0de9417ceff54d5e970ffba51a3bd4381b66ff525be5a1b8c5ca7763e",
                    "size": 12976453
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a7e897f2afcd8ba780ee63974b25f8796cdaeff7b3253da3c3a8dc54e841c49",
                    "size": 202407153
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d232fe9fe2541d304164f5c0df34e5f68fe7099328fb3de15e15b02e89a54a07",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08abf86fab1b55cb6405a9f9e324ff6f48ef08200bbf35f8d8189e0db23960f9",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1aeaee01325f1a632dcd37d0732234af47f4f122e8a845d01854a7caf4264961",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4363f1af776176365556af6c9c3ff5817d8675e57829101a6a0f3779325b85f6",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be1d5d2ac84db3d2f73bccd4820102bf030a95bfca47a780431f6bff75d934fa",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd25f72f3d784a43ae14ac9f58af7e1b42eca095bd0e4697ffbfbd3e7def3e17",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ff19cd906c274030a179f0f967ebcb4ba25f4a57a5d79d2777f3591891e59cb",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dacb9c492de71aaa3cb6afa6611a2b988decbede9f3cc330dd1fd58542b76eac",
                    "size": 1157599
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62aa44a739073bf6fcd210b0e6b1b510812e709ca60a87a43417b06c52681e7d",
                    "size": 468
                }
            ]
        },
        "latest-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b120c5f973e16b50b3e4435a2da200209ec6a92ca85b90102459d553a33406c0",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b526ec3ffa40824ba07a65cbad89904ee73075f504d2e71b9d2c95bca96c7510",
                    "size": 12063909
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8649c253d819480620bc59d342cd10f3a09881624067a80329d8b0b1e0f84af",
                    "size": 469
                }
            ]
        },
        "latest-run-20231025": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f451877547373e13c713dc6177acb56e85fe907bbb1b407ddf0b06111b9c2b05",
                "size": 8336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc521c5b98350f6fd8c72ace1e48558bb7b53cb3db201a2a3b42095401cd02f1",
                    "size": 30062869
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b6d5aec1849ba1833ac051cde7c3e335daed8c39218604d525e45e43890fc24",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3aa649aae7c6dc26b73a8c19a91f6b451d8e1ed1abec0bcc0ced6ffddcf46c9",
                    "size": 13085478
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd5714ed45a495a2f2fe046f974b9b5a91d77aaf88912e286d7ee62027995595",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63400a67202becdcf50b485680cd744b529f946af5649b926217a854ffcbfd7b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9dc3da9d38e8fc0df94ce84b3a5ab08ecabafd7c46c2ee6357c21c6953bd5d6e",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e69ac7887adb8cfab33ae868d6da7936db42daaab9a00619232cad3a897d189d",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34dfe2f4d9f225a37cd3871771032c11d329865018fdeaafaf0b7cf56dfafe74",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ce92e5345643eb483546e58c62c7725070f28f4f6bfddab07955685cdddf971",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89cef4ac0d76669fab5e4527bd8afc5b4370756b8236c796f7792fd789401ee5",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:461d1147a2f6747d83493c34b582ad1370c938758f41d70f0a78cb1c597d6782",
                    "size": 12068359
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa3e73f8f488d8fe184541ab81f75caa64a48e9bacaeb9e7d5ffc3a7aca9d29e",
                    "size": 472
                }
            ]
        },
        "latest-run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7ee27a8e16f68f1c4acbcda94e6a2ed257e7e127bbeb0628e14b6bcf67e41930",
                "size": 8333
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e498137f0ed1053c364a5c8a688616b4abee72496a0b97cc71ea5e603565070",
                    "size": 30063905
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a962e6b7bd5dd90696c0bc1f9ac2a568eaaef3a22219d2eff13d9cb195597150",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fea786d312ef286d16b7d4e6ee8458d322aaa20415efe207488a22742e42f8d",
                    "size": 12976925
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9add177ed94e43eaf6152516d89bd8666c4c3b9f857e372cccb741d0f7a6051a",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:646acc1e4f4b0b6f673fec5ded08359096d8777738cda925b31778674455bb32",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c1bcca44c46f2bbeb7afc7826d48e466466a20fc5cbba593009939cf9ea7a87",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ecfea6abe9c0abbae44e7409aca8146de0eb54a867e1f0a0d100544361636b3",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e586601c5bfdd14477ff2d23a36db89885dbdfd7083cd1b32eaf4e60d31f87b4",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d710085f990e47cc061e932da1b0191a372d9e5a46dad800ff0ea7e8fb5de6bc",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01cbf7d6dd9b96f736ac48f4051e375034938bf88414085967543bb229f89b57",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a21628236f54a69d165940605451fb93a5298f23e09803be89c9a62f859fc88e",
                    "size": 12068172
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62f08df4fa32064914931605ff563617e44bafca90ec3b37aa2788f7bfdbb36f",
                    "size": 469
                }
            ]
        },
        "latest-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:00a186d12f8cfbcb0aa36cdda387ed8da4871e1ce2243018a9dd41860b94f473",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdd8361700a94c6e67ce55f6ca64efee6a4959612611750a3ad39607c92bcf8c",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29e56eeb3070309116d2179ec9e8118e82e9bdc22c115d9692d83fc1fc589b59",
                    "size": 12977479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:817b355e7456790f98bbc69c6b6374e2cb821bbc37f68b35b7ab2c3955b097ee",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2b466f8b07788cbdfdd83414f5ec111db7be424576ead82ef99ece822ed5e05",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ede96550fcfdad8aa28e78cc1499a08832097d591d7af3d4eecf153531d52d7e",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ac35e5e5f201c367dfeb909a064d5217ad9a39bc499aa885e95fe690822ee53",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92c69709be30d91bf7d4dbb1ad1976d4cc863bc5d0dd282ba18196143797996a",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1f4a072f19c88d4708ab8a80b4053b0d8928dd3382ce1266a221bf2fb2291e3",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3104bb9ca5f6b3448e2866e4c0cbc6d6ee330fc76b354795d642d712381adf48",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:671b2be499a1c1569c41e4ffbfb8de0c817662282829e92f032ce1b266b9ac8e",
                    "size": 12068089
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a488a091569ea54f40ced18d189edbcf1e3d7a9655b1a9c83c60da9a3dcee842",
                    "size": 469
                }
            ]
        },
        "latest-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:975fc0499700f5f503e4f0434ced410bba70e8e39beecf83e4d53095585d7d94",
                "size": 8335
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2fe9143d82b48fb4af3e438fff9e9e9ab593d054ee425414d772860c287c00d",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5767a74deab1e8695fac2d12bf558a7262e2f85d66255fe8c34bdae2aa79d09",
                    "size": 12977474
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f51dcc23055a6ce088fa403c9dc23c807eb3b73ef54a32c56e81a2e6e5684c36",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:413a9f60ae65fdeaa8c26f3dcfc25b6897068e9cfc74d7d32ff3b76b9a1901f6",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b49d769a1ef19d9fc4421bb0ef1ea00ec90e373b77fc43edded2f5df83fa991c",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a38eb8870d72f89d84fe232f13f96d72d354a63142c9ef4ca170c7733e81d2c4",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1efd48e691e3602b17ddd9bac6c2956fa2de2e9606dd60f69429965889d8cf2b",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12a89b279e10b7cb86fd57f8f8a4bb6943a14ab080a533ef7be0903d48ecf13f",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d0bfd75d90a345ab4adcc7ddc2bed23e515dcbd8a39149f6b50fea1339c42f9",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57089c6e47553dcd9bfdc88c282220805f6785996abc742648a87d82aca9d8a7",
                    "size": 12068234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31171868d9f07fdd0b5a825a99df5ebeddc98fd1d56621b857bdf83e9e65cb65",
                    "size": 470
                }
            ]
        },
        "latest-run-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f1d5eeb6462ace2cbd6d22e5f7b4ae71fe705d4879321a6063017172268ea830",
                "size": 8336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c5073fd4983645e56f2d7c43b0578ce93e7729da21e2f1ff2afb8400b76479d",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de96a9d1ddaa697a3579450a1028384ce039da07321441a43a0a59bbd3c1b15d",
                    "size": 12976677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1a90dfc49a156d7b3ac0247618be2b6d6fd50b77bca58f5f95a58cb555bc90d",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a70c314166755c7a85177e5eda327d48423ddd1470a5d8a343315bdb7830bc64",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d439ea52060fa5611f07ae0a691cd2b8b1bdadfd6d9b73510b64983169413a",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:480d7642da0ddaa1b99731162951f73f0ab9f1dcc74e511a5d9fe681fd5c3356",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6736fe6e47ba3d229fdbaf7bb7071b97152d2f88a9a0582de1426bf7efe0d26c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:208a0669d184f22fac9b22d3aa8c57f1420fc47d5128c0745500d0e2e8260cd5",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e52cb06c0f7706fb99b300cd78287782989b48ee6b4b47145d82e947cd7e3d3",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:681f2eece34efb6245cec26c1a78fa11176abe12d00843154d8e4174024d39f8",
                    "size": 12068141
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ddaa96c23eee550f3042d563c4d2d009007989b9aac976a16abec9cdd6d40ee",
                    "size": 471
                }
            ]
        },
        "latest-run-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:985a17b47997baa440509c024e676299f35e436d50a18e075ea5450c30b5f837",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fed5e00f3daec5a11cac1dba82d5c7764f3034fc44920b4ea013d3d3b50adff",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9e4ec748abce4cea17e5fc65089ba82a57ecb5fa64f8eaebd2b1fe5bf63bbc5",
                    "size": 12976746
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5bbb9dd26458939c671a6ae3689e843bae70bf30a829ffa9b87a8d65c0c263d7",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c13bee8013c60572d5d138af920973ce92631407d6cfe4b249bd7dd36ddf367f",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7c1703e38bd0c10adb8cb901cd9fbe718ca7fe73bb69410682937d6f2fae65d",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8a8c78768260afb3511b13b7909bb2c18e6bbba87bcd638426426e04c76a185",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f549f42f4d4d0f9a0d91a794420c324a67330cad829e4345c51696aed5501c5",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2520845ff73ed6ba9127c4faf4f25f15c350c37c20c714eca2496cb906ac7ca8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c712c29de2fcef7400e58bf9964f2aae8dabeda214946b45459050ceba5377ab",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3fd854beb1e43faa985824d8ff4d6a19672c706279ef2f4b5ae1353e7e645d78",
                    "size": 12068279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e20029bfe38d57c696eb67d20206850cdcc25cb85a90dfe4c61c82c739e1bb9",
                    "size": 471
                }
            ]
        },
        "latest-run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4cbde4a792c9461d64618b03052837616b0da6793695e692b14519499a347e65",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3508bfa687ca31d022999303de1fa4b505f43436280313e4f79483dba56a54fd",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29fa4cacbb55bbe4c2f43337598c7e214d4db670a1b8f9ef77d5263a6f974ac8",
                    "size": 12976770
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb687a9ed447b9ba7e0c7e1d6499b3ccdadd73a79be8f4d69cda9fc53ba267b1",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8989164d23ea6e023e214b59c81f995a35e28d00205cb3b7763e1a02027bd6ee",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0c00bb9a3ed83463b51562d150ff8a703d89c3b5f299b1e78bff960f9a631fc",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb505b74b504315c6296202f5b1c2fbbcacadb506f7ccc5f9c99db08a56c42dd",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09d4197c190e339573857337d4424733743c266e75bcd25453e4e90d6de2ad0f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1bfb8ded4ee9cd7afa32e3671ae3078be45e9060e3c955b92ab87480ed03b5b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8876f8e5f597d56ef198459db6931f35141fe8ca9e468ab6b8a7008b6ad1ec5f",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b31460e22d44a134aac839c48ce8f82f786565ad87c91fc0bfeb21669f2f4e66",
                    "size": 12068381
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e5d24befedb90c3a9877529a338e7cb9f39804834d254878cfe14ba465a83bf",
                    "size": 470
                }
            ]
        },
        "latest-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:15aa57be64bc8698342633d4547891f53cdcf82f9cf691ca9ffd2385a0be4e66",
                "size": 8336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdc982aa2cd91f3d8c1a394fe291b9b4617ab5a3e8621be17f7e8f448df865f1",
                    "size": 12068260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e65fda39b25177d70108060aadf1a969b2f7159771ceff42389d53ec6a54a18b",
                    "size": 470
                }
            ]
        },
        "latest-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2b7013c37d6b2c1d1431abcffc4718dc49a841a78d7c5b3752bed41c184b2c66",
                "size": 8332
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3b02ff1abe5dfe9791505936f93c8316422232986a64a09149fe3aabb8be2d9",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:759907076afe713c4234fb5987290ccfa61dd49daebced99e301665b885062d3",
                    "size": 12975152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d19c37c9190edbe13b45b66a2b8056c396ee43a72916ba1d9ca757dc398c27d",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdba65c7a86f749c1d475ca45f2a65c80d5ad0525db04e84db2da8803614bc1b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9f4c9bf8626165f2f2e675cc143ca800c95ac74558ce5c1cdc0928136b2a45b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33c9823ab36b119e618993bd63dbbc9cfebe37d67ba4ce036ffe5203e4de0be7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd83e03f85224ec03d743a072160fb9deddd86af0bf9cd2e7b6a4f2dbe221b58",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a42f72c7f4eb3e1399bfe85d2f32518ba7277a04b897820a0030797b4825d57",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5324c9bc68271cfdebc5291757fad42a9cd8e644ccef3fa6b3820e6dc0e61cd6",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89b2cbadb70cd196f31440ee26009b58f03e311d2d8caee65ebb2c1bf1632079",
                    "size": 12066196
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37daad9c305eaeba9f7300290ab5bb83040a3fbf4deb76a9ff3c75463603be29",
                    "size": 470
                }
            ]
        },
        "latest-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:df25f7dfa80e8dc1dfae217927a52846b9d87d2d51bd9917ccf4fb7292204e02",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4e883aee71b5ef97bf1ffdfd139669e73ef006c560365d29cabde27caa6b13b",
                    "size": 12975050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f03e14fe93efd751580a2d51cb4489a57eac27b5db895225befd9a2299711fd",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef2a23d56797032756a4a8e8bd01b2c71a198c10e4e75e46bb3508b707d88d5",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de945cb97c6374ff7ea085bcb2edf737114d2f71f921c9a5a72c2168a40dfaad",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f482a15b31fc59f209b49b1e3bb7a58f1c350c673db22910a5cfdc4dc3ae6685",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9571608af5da43a8c78a43bfb08a829b5fcafda5e8292e393472cabbf0f804f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9614d73f006a2cb00875772e38550a822b7ee1914fa1a3a9ca724b0f0acb02aa",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55d55aad7abd855b5bd072003c07952d0f3605bcd5c55718c85dfbe5501b78bc",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a011bab6378ab6beb8adb79c7af1b10f94ce9b1bbf98c9409d30d40a1600b18",
                    "size": 12066147
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7c31778d110c356aa857f034acd571c7157c60f45598f02a7372f1e09405d9b",
                    "size": 471
                }
            ]
        },
        "latest-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a37872969e0ca00603e64b2f430e814a4c79dbafa41591fc4b6a1587e3ed0bde",
                "size": 8319
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd08d71f9e4be4f65e14231b96b47eba749b90731d6ac89a6b122102497f0520",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ced2846c7ce7b5358d8d1ca581b422091108201a9283aa8f845b5b6acf13b45",
                    "size": 12975074
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc714b302c222d2337d2a96a68bd0f8e2f6e8b6141b063613b4201f1b9bf88ff",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91059ecb4797f7ed53ba6123bc3708c97ed915820284c6e9ab28d76f72973580",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10793d475cc903a3e7298e67feaaaa5b1ab39b699349227473a13d747c7bebd1",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7e5860cbb43236bbbe750bd6abf586a8856e076ee2e1c38f33fb4bc6cc9129f",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3528b47aa83bdaf2eca21dffd496e9b26a4c6c17e7ef544f7a136ea69eb5b829",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8d887e8d98a1d19fda084161bdcdc428bc666757604d237cc331b3e96e3773b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c42376533b2b7356cd47d1c5d2930bb9f16c8bcf09939ec53070c484056a89",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d7c41e39073993a13a4c1389895a0a67c9430fc38339a95fe90acee84aaae37",
                    "size": 12066179
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:121fc3a200e7784ad770a628bad000d2461cf083a2786f2796fe5dc6778fd548",
                    "size": 473
                }
            ]
        },
        "latest-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:97771640e96933a22e5920b479f26bfde1f76f6ccc1d7295998a55274e601fcb",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a0e48841b8e49c36f6b1a8ad4efb4d37c6e10ef8dde5cd91f4dc437d1d8405",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55a1946130ccc17b581e6b524cf631bab9e5fcee60de01f0d39244a87686b92b",
                    "size": 12974885
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9858c7c5616b7ed0d90d6fd0d87ceef7f797f9d35758625edeb82f9e028aec60",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efe8622a8e40ac44137b3b5fd0dc0f14ad5e810e0338dc547f692d8b6a35c977",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c78e7355e42143ed74045da95e7de3ad92272199e0776d1b7228a150a65f47",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75b07c5fa13c3200be81dc39d20abbff29122ce62e20ebfe91047e7eaf0fbfb2",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a595d9ac359dba0005931f718e650d9edb7c0a1e3f6d9d8acce991fa76ed260",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95af7d2de70e46a0ae3136c3e62f38101bc59d80d433aa5f5bbde3da44a6280d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15bfc11c903d27a21ce686bae35210aa061831dd4dbc80e0104e5cc4ac5d9643",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8ede8ae4094991acedbee726d1b6e919b13bf5c2e9e9310737a8c0024c2b922",
                    "size": 12066255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b182c8f04a9cd679de5170fb46f659df5da9d9291948137fab51b103a096ee0a",
                    "size": 470
                }
            ]
        },
        "latest-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b120c5f973e16b50b3e4435a2da200209ec6a92ca85b90102459d553a33406c0",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b526ec3ffa40824ba07a65cbad89904ee73075f504d2e71b9d2c95bca96c7510",
                    "size": 12063909
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8649c253d819480620bc59d342cd10f3a09881624067a80329d8b0b1e0f84af",
                    "size": 469
                }
            ]
        },
        "run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b120c5f973e16b50b3e4435a2da200209ec6a92ca85b90102459d553a33406c0",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b526ec3ffa40824ba07a65cbad89904ee73075f504d2e71b9d2c95bca96c7510",
                    "size": 12063909
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8649c253d819480620bc59d342cd10f3a09881624067a80329d8b0b1e0f84af",
                    "size": 469
                }
            ]
        },
        "run-20231025": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f451877547373e13c713dc6177acb56e85fe907bbb1b407ddf0b06111b9c2b05",
                "size": 8336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc521c5b98350f6fd8c72ace1e48558bb7b53cb3db201a2a3b42095401cd02f1",
                    "size": 30062869
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b6d5aec1849ba1833ac051cde7c3e335daed8c39218604d525e45e43890fc24",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d3aa649aae7c6dc26b73a8c19a91f6b451d8e1ed1abec0bcc0ced6ffddcf46c9",
                    "size": 13085478
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd5714ed45a495a2f2fe046f974b9b5a91d77aaf88912e286d7ee62027995595",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63400a67202becdcf50b485680cd744b529f946af5649b926217a854ffcbfd7b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9dc3da9d38e8fc0df94ce84b3a5ab08ecabafd7c46c2ee6357c21c6953bd5d6e",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e69ac7887adb8cfab33ae868d6da7936db42daaab9a00619232cad3a897d189d",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34dfe2f4d9f225a37cd3871771032c11d329865018fdeaafaf0b7cf56dfafe74",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ce92e5345643eb483546e58c62c7725070f28f4f6bfddab07955685cdddf971",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89cef4ac0d76669fab5e4527bd8afc5b4370756b8236c796f7792fd789401ee5",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:461d1147a2f6747d83493c34b582ad1370c938758f41d70f0a78cb1c597d6782",
                    "size": 12068359
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fa3e73f8f488d8fe184541ab81f75caa64a48e9bacaeb9e7d5ffc3a7aca9d29e",
                    "size": 472
                }
            ]
        },
        "run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:7ee27a8e16f68f1c4acbcda94e6a2ed257e7e127bbeb0628e14b6bcf67e41930",
                "size": 8333
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e498137f0ed1053c364a5c8a688616b4abee72496a0b97cc71ea5e603565070",
                    "size": 30063905
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a962e6b7bd5dd90696c0bc1f9ac2a568eaaef3a22219d2eff13d9cb195597150",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fea786d312ef286d16b7d4e6ee8458d322aaa20415efe207488a22742e42f8d",
                    "size": 12976925
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9add177ed94e43eaf6152516d89bd8666c4c3b9f857e372cccb741d0f7a6051a",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:646acc1e4f4b0b6f673fec5ded08359096d8777738cda925b31778674455bb32",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c1bcca44c46f2bbeb7afc7826d48e466466a20fc5cbba593009939cf9ea7a87",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ecfea6abe9c0abbae44e7409aca8146de0eb54a867e1f0a0d100544361636b3",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e586601c5bfdd14477ff2d23a36db89885dbdfd7083cd1b32eaf4e60d31f87b4",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d710085f990e47cc061e932da1b0191a372d9e5a46dad800ff0ea7e8fb5de6bc",
                    "size": 670
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01cbf7d6dd9b96f736ac48f4051e375034938bf88414085967543bb229f89b57",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a21628236f54a69d165940605451fb93a5298f23e09803be89c9a62f859fc88e",
                    "size": 12068172
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:62f08df4fa32064914931605ff563617e44bafca90ec3b37aa2788f7bfdbb36f",
                    "size": 469
                }
            ]
        },
        "run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:00a186d12f8cfbcb0aa36cdda387ed8da4871e1ce2243018a9dd41860b94f473",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdd8361700a94c6e67ce55f6ca64efee6a4959612611750a3ad39607c92bcf8c",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29e56eeb3070309116d2179ec9e8118e82e9bdc22c115d9692d83fc1fc589b59",
                    "size": 12977479
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:817b355e7456790f98bbc69c6b6374e2cb821bbc37f68b35b7ab2c3955b097ee",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f2b466f8b07788cbdfdd83414f5ec111db7be424576ead82ef99ece822ed5e05",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ede96550fcfdad8aa28e78cc1499a08832097d591d7af3d4eecf153531d52d7e",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ac35e5e5f201c367dfeb909a064d5217ad9a39bc499aa885e95fe690822ee53",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:92c69709be30d91bf7d4dbb1ad1976d4cc863bc5d0dd282ba18196143797996a",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1f4a072f19c88d4708ab8a80b4053b0d8928dd3382ce1266a221bf2fb2291e3",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3104bb9ca5f6b3448e2866e4c0cbc6d6ee330fc76b354795d642d712381adf48",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:671b2be499a1c1569c41e4ffbfb8de0c817662282829e92f032ce1b266b9ac8e",
                    "size": 12068089
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a488a091569ea54f40ced18d189edbcf1e3d7a9655b1a9c83c60da9a3dcee842",
                    "size": 469
                }
            ]
        },
        "run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:975fc0499700f5f503e4f0434ced410bba70e8e39beecf83e4d53095585d7d94",
                "size": 8335
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ca426296fe928600d0b4b844aee43e2b70a05c6f4032de5f65dcc49f5cedfd82",
                    "size": 30064123
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a2fe9143d82b48fb4af3e438fff9e9e9ab593d054ee425414d772860c287c00d",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d5767a74deab1e8695fac2d12bf558a7262e2f85d66255fe8c34bdae2aa79d09",
                    "size": 12977474
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f51dcc23055a6ce088fa403c9dc23c807eb3b73ef54a32c56e81a2e6e5684c36",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:413a9f60ae65fdeaa8c26f3dcfc25b6897068e9cfc74d7d32ff3b76b9a1901f6",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b49d769a1ef19d9fc4421bb0ef1ea00ec90e373b77fc43edded2f5df83fa991c",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a38eb8870d72f89d84fe232f13f96d72d354a63142c9ef4ca170c7733e81d2c4",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1efd48e691e3602b17ddd9bac6c2956fa2de2e9606dd60f69429965889d8cf2b",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:12a89b279e10b7cb86fd57f8f8a4bb6943a14ab080a533ef7be0903d48ecf13f",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2d0bfd75d90a345ab4adcc7ddc2bed23e515dcbd8a39149f6b50fea1339c42f9",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57089c6e47553dcd9bfdc88c282220805f6785996abc742648a87d82aca9d8a7",
                    "size": 12068234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:31171868d9f07fdd0b5a825a99df5ebeddc98fd1d56621b857bdf83e9e65cb65",
                    "size": 470
                }
            ]
        },
        "run-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f1d5eeb6462ace2cbd6d22e5f7b4ae71fe705d4879321a6063017172268ea830",
                "size": 8336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5c5073fd4983645e56f2d7c43b0578ce93e7729da21e2f1ff2afb8400b76479d",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de96a9d1ddaa697a3579450a1028384ce039da07321441a43a0a59bbd3c1b15d",
                    "size": 12976677
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d1a90dfc49a156d7b3ac0247618be2b6d6fd50b77bca58f5f95a58cb555bc90d",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a70c314166755c7a85177e5eda327d48423ddd1470a5d8a343315bdb7830bc64",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:25d439ea52060fa5611f07ae0a691cd2b8b1bdadfd6d9b73510b64983169413a",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:480d7642da0ddaa1b99731162951f73f0ab9f1dcc74e511a5d9fe681fd5c3356",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6736fe6e47ba3d229fdbaf7bb7071b97152d2f88a9a0582de1426bf7efe0d26c",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:208a0669d184f22fac9b22d3aa8c57f1420fc47d5128c0745500d0e2e8260cd5",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4e52cb06c0f7706fb99b300cd78287782989b48ee6b4b47145d82e947cd7e3d3",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:681f2eece34efb6245cec26c1a78fa11176abe12d00843154d8e4174024d39f8",
                    "size": 12068141
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ddaa96c23eee550f3042d563c4d2d009007989b9aac976a16abec9cdd6d40ee",
                    "size": 471
                }
            ]
        },
        "run-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:985a17b47997baa440509c024e676299f35e436d50a18e075ea5450c30b5f837",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6fed5e00f3daec5a11cac1dba82d5c7764f3034fc44920b4ea013d3d3b50adff",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9e4ec748abce4cea17e5fc65089ba82a57ecb5fa64f8eaebd2b1fe5bf63bbc5",
                    "size": 12976746
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5bbb9dd26458939c671a6ae3689e843bae70bf30a829ffa9b87a8d65c0c263d7",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c13bee8013c60572d5d138af920973ce92631407d6cfe4b249bd7dd36ddf367f",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7c1703e38bd0c10adb8cb901cd9fbe718ca7fe73bb69410682937d6f2fae65d",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c8a8c78768260afb3511b13b7909bb2c18e6bbba87bcd638426426e04c76a185",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2f549f42f4d4d0f9a0d91a794420c324a67330cad829e4345c51696aed5501c5",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2520845ff73ed6ba9127c4faf4f25f15c350c37c20c714eca2496cb906ac7ca8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c712c29de2fcef7400e58bf9964f2aae8dabeda214946b45459050ceba5377ab",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3fd854beb1e43faa985824d8ff4d6a19672c706279ef2f4b5ae1353e7e645d78",
                    "size": 12068279
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e20029bfe38d57c696eb67d20206850cdcc25cb85a90dfe4c61c82c739e1bb9",
                    "size": 471
                }
            ]
        },
        "run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4cbde4a792c9461d64618b03052837616b0da6793695e692b14519499a347e65",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2244706f264b35566276550fbc21ada79613ddfff850e372b8f5113110a67c93",
                    "size": 30064052
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3508bfa687ca31d022999303de1fa4b505f43436280313e4f79483dba56a54fd",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:29fa4cacbb55bbe4c2f43337598c7e214d4db670a1b8f9ef77d5263a6f974ac8",
                    "size": 12976770
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb687a9ed447b9ba7e0c7e1d6499b3ccdadd73a79be8f4d69cda9fc53ba267b1",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8989164d23ea6e023e214b59c81f995a35e28d00205cb3b7763e1a02027bd6ee",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c0c00bb9a3ed83463b51562d150ff8a703d89c3b5f299b1e78bff960f9a631fc",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb505b74b504315c6296202f5b1c2fbbcacadb506f7ccc5f9c99db08a56c42dd",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09d4197c190e339573857337d4424733743c266e75bcd25453e4e90d6de2ad0f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1bfb8ded4ee9cd7afa32e3671ae3078be45e9060e3c955b92ab87480ed03b5b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8876f8e5f597d56ef198459db6931f35141fe8ca9e468ab6b8a7008b6ad1ec5f",
                    "size": 464
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b31460e22d44a134aac839c48ce8f82f786565ad87c91fc0bfeb21669f2f4e66",
                    "size": 12068381
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0e5d24befedb90c3a9877529a338e7cb9f39804834d254878cfe14ba465a83bf",
                    "size": 470
                }
            ]
        },
        "run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:15aa57be64bc8698342633d4547891f53cdcf82f9cf691ca9ffd2385a0be4e66",
                "size": 8336
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3027f1243ed994df8b91343223df47a18cef248c6db93675f3d54baa40319893",
                    "size": 30064334
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9b4c5c509ec8af229c8514b47f7ab7bed6c9d4839599f4d10902892dce09488",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ed2c2a118fd50da5bbf6978b547f8da5eeabc73cc49e1a74880cc791c3908e7",
                    "size": 12976652
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e402c57be0bf3106a3deeeff4fe623229e391600bbae31a89c4381cac4f919eb",
                    "size": 473562
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c2e6d0bb7db916a4d203311c9b857e064f48b02884d0b44de26cefe00d712d03",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a9689976c4dec4cfd6684180aa5cd1750517f712300e5653d847786251728869",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6c89be893767a269fcdd04ed203d5f0f9f91c834adba92bef025bfd79f39816e",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a835fc3bc3b0752df9a4c8c526d7bcabd2520bc1f4fae447add13edea4f3bb5a",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1c7cbe80b2850b83eb06b6483a4c717ae531284377bbce301c47cfa4b100cada",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6a6312c00a6d865c73c9d185a1a81ccdf3e5a0f66ab2b49741dec17b9b798c1",
                    "size": 463
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdc982aa2cd91f3d8c1a394fe291b9b4617ab5a3e8621be17f7e8f448df865f1",
                    "size": 12068260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e65fda39b25177d70108060aadf1a969b2f7159771ceff42389d53ec6a54a18b",
                    "size": 470
                }
            ]
        },
        "run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:2b7013c37d6b2c1d1431abcffc4718dc49a841a78d7c5b3752bed41c184b2c66",
                "size": 8332
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3b02ff1abe5dfe9791505936f93c8316422232986a64a09149fe3aabb8be2d9",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:759907076afe713c4234fb5987290ccfa61dd49daebced99e301665b885062d3",
                    "size": 12975152
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d19c37c9190edbe13b45b66a2b8056c396ee43a72916ba1d9ca757dc398c27d",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fdba65c7a86f749c1d475ca45f2a65c80d5ad0525db04e84db2da8803614bc1b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9f4c9bf8626165f2f2e675cc143ca800c95ac74558ce5c1cdc0928136b2a45b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33c9823ab36b119e618993bd63dbbc9cfebe37d67ba4ce036ffe5203e4de0be7",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dd83e03f85224ec03d743a072160fb9deddd86af0bf9cd2e7b6a4f2dbe221b58",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9a42f72c7f4eb3e1399bfe85d2f32518ba7277a04b897820a0030797b4825d57",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5324c9bc68271cfdebc5291757fad42a9cd8e644ccef3fa6b3820e6dc0e61cd6",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:89b2cbadb70cd196f31440ee26009b58f03e311d2d8caee65ebb2c1bf1632079",
                    "size": 12066196
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:37daad9c305eaeba9f7300290ab5bb83040a3fbf4deb76a9ff3c75463603be29",
                    "size": 470
                }
            ]
        },
        "run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:df25f7dfa80e8dc1dfae217927a52846b9d87d2d51bd9917ccf4fb7292204e02",
                "size": 8334
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abd2c048cba46f85ffcdbd38202d0906c11ea93d39d8ac934411570844119d08",
                    "size": 30071077
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4e883aee71b5ef97bf1ffdfd139669e73ef006c560365d29cabde27caa6b13b",
                    "size": 12975050
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f03e14fe93efd751580a2d51cb4489a57eac27b5db895225befd9a2299711fd",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef2a23d56797032756a4a8e8bd01b2c71a198c10e4e75e46bb3508b707d88d5",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:de945cb97c6374ff7ea085bcb2edf737114d2f71f921c9a5a72c2168a40dfaad",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f482a15b31fc59f209b49b1e3bb7a58f1c350c673db22910a5cfdc4dc3ae6685",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d9571608af5da43a8c78a43bfb08a829b5fcafda5e8292e393472cabbf0f804f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9614d73f006a2cb00875772e38550a822b7ee1914fa1a3a9ca724b0f0acb02aa",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55d55aad7abd855b5bd072003c07952d0f3605bcd5c55718c85dfbe5501b78bc",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a011bab6378ab6beb8adb79c7af1b10f94ce9b1bbf98c9409d30d40a1600b18",
                    "size": 12066147
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e7c31778d110c356aa857f034acd571c7157c60f45598f02a7372f1e09405d9b",
                    "size": 471
                }
            ]
        },
        "run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:a37872969e0ca00603e64b2f430e814a4c79dbafa41591fc4b6a1587e3ed0bde",
                "size": 8319
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fd08d71f9e4be4f65e14231b96b47eba749b90731d6ac89a6b122102497f0520",
                    "size": 2592226
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ced2846c7ce7b5358d8d1ca581b422091108201a9283aa8f845b5b6acf13b45",
                    "size": 12975074
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc714b302c222d2337d2a96a68bd0f8e2f6e8b6141b063613b4201f1b9bf88ff",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91059ecb4797f7ed53ba6123bc3708c97ed915820284c6e9ab28d76f72973580",
                    "size": 265
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:10793d475cc903a3e7298e67feaaaa5b1ab39b699349227473a13d747c7bebd1",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7e5860cbb43236bbbe750bd6abf586a8856e076ee2e1c38f33fb4bc6cc9129f",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3528b47aa83bdaf2eca21dffd496e9b26a4c6c17e7ef544f7a136ea69eb5b829",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8d887e8d98a1d19fda084161bdcdc428bc666757604d237cc331b3e96e3773b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3c42376533b2b7356cd47d1c5d2930bb9f16c8bcf09939ec53070c484056a89",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d7c41e39073993a13a4c1389895a0a67c9430fc38339a95fe90acee84aaae37",
                    "size": 12066179
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:121fc3a200e7784ad770a628bad000d2461cf083a2786f2796fe5dc6778fd548",
                    "size": 473
                }
            ]
        },
        "run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:97771640e96933a22e5920b479f26bfde1f76f6ccc1d7295998a55274e601fcb",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ef2fb7c49f69b9eefb25f02b600342129757e69bb130d53b98ba46ddde18effc",
                    "size": 30071116
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:51a0e48841b8e49c36f6b1a8ad4efb4d37c6e10ef8dde5cd91f4dc437d1d8405",
                    "size": 2592218
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55a1946130ccc17b581e6b524cf631bab9e5fcee60de01f0d39244a87686b92b",
                    "size": 12974885
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9858c7c5616b7ed0d90d6fd0d87ceef7f797f9d35758625edeb82f9e028aec60",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efe8622a8e40ac44137b3b5fd0dc0f14ad5e810e0338dc547f692d8b6a35c977",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f6c78e7355e42143ed74045da95e7de3ad92272199e0776d1b7228a150a65f47",
                    "size": 255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75b07c5fa13c3200be81dc39d20abbff29122ce62e20ebfe91047e7eaf0fbfb2",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a595d9ac359dba0005931f718e650d9edb7c0a1e3f6d9d8acce991fa76ed260",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95af7d2de70e46a0ae3136c3e62f38101bc59d80d433aa5f5bbde3da44a6280d",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:15bfc11c903d27a21ce686bae35210aa061831dd4dbc80e0104e5cc4ac5d9643",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d8ede8ae4094991acedbee726d1b6e919b13bf5c2e9e9310737a8c0024c2b922",
                    "size": 12066255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b182c8f04a9cd679de5170fb46f659df5da9d9291948137fab51b103a096ee0a",
                    "size": 470
                }
            ]
        },
        "run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:b120c5f973e16b50b3e4435a2da200209ec6a92ca85b90102459d553a33406c0",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:40a322c395ab3df43e27d8be65cc48139c091588ac868643a02567ca247d0c73",
                    "size": 30087336
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae0859feeaa49c8802f6aff806ff1412894c5b08c3fcf4d1d75b9edff6c8d861",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e92cb5c630149f79f98699771311908b630d2d122046915880ecefb1adf5ce20",
                    "size": 12976512
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a1755324286504e97afd96d2e220ed4d75c237b78963a753996c0a9521db31b2",
                    "size": 473569
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e20971f4c8babc22375c9d5a6e4fe93c8f576a9812e42bf0f68ab1271535d95",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ed8a9a6a3564bef768185e3af411bc4682286d9553085a6e7a4b2957cbdc3770",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4a6e5b8fc199565cd40d83c8816e5f643dfd737c6a65275aa85cdafda4264c02",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:489ea1d38b70412bdef0aa7b05fafdcd61975e32e4c31f04b3c7d6aa0212db98",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b6e8fbcdef7335e6e258163bb093c502effcba31eb757d5e8b9467e042e079e8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:669b34d7e2d4aa7c5a049fb2c580edbad5376a8b6f623743cb50bff8dd103a2b",
                    "size": 465
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b526ec3ffa40824ba07a65cbad89904ee73075f504d2e71b9d2c95bca96c7510",
                    "size": 12063909
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e8649c253d819480620bc59d342cd10f3a09881624067a80329d8b0b1e0f84af",
                    "size": 469
                }
            ]
        },
        "sid": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:02d0224dd36c887e6e2fc355b7f246614996434b955e9599ea8253569041dd10",
                "size": 8303
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af4776df7d2dde797cda1f9c09fd884c9486c06066ea1352185e2484bb248500",
                    "size": 32165878
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:444a92c23835aa49d30fc1cf6510849ab0aa505180c4011203d923bf6bfebc24",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5546108d7162a39f8417c4829fa5b31ed364e722057e7a4e78f10e2b7df267b3",
                    "size": 25488372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07ccd9567bcf8f64a218d167746a94cf16d4b927ece15e7f29a65612fa4a814a",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0243d4ca56617203e53026968094f79305a0cc058508e62080966554e1460a93",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ed20117a9444fad6261db6998729094a7fca99da1830d61d8d560e72a608a2d",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a60c47a987638fd95f213f1714c066a6c7fd9d50bbdd24d67733421a916f363",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:329ec75c3172e40d8def6f4d43f6fcbdce3b4c4121fa0f0f49e8fe463d1e468e",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98ec53c8ff19e1279330ff7959072234ea9158e809230b49d40a795e9942b132",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:050171365b2ac3debc9ee1320d0b9b7057e5bc0653097d546c63f565c83aa513",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:011e11334c91b4c770b452ccc945fb54a0e9109a34289bfc5808906501d14d60",
                    "size": 21313142
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56b09a2fb9ba49fc07c8688029bae52a009c239ee2d3cc145a27006ba871051a",
                    "size": 466
                }
            ]
        },
        "sid-20231025": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1e814eb57ffaaba2f693dbb4c4b48b9f3613bbcec1398f09d75343155c86f599",
                "size": 8320
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adf79add46ad09d9b6c693de9577586e07c9947284738dbdf3a088a1b6f73db6",
                    "size": 29309371
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88c9d375e1ac6cfc1ed006411a9c1d43071242fd1bfe93abdc7240b563e98a43",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcba8bde1fcf7f968da31f08d12c215c57c95372de07cd486aaf8764e998a413",
                    "size": 27199540
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4d38b38ec11f84c6b4f1ee9e9a310c3829615562474f2a7372a627c366414d7",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20be957cc90af4a6e1b3bb993f40f30d8b606e32e50792310190d5326ff6ba7f",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:93dc62f23b0200bd3260da8be5f61725b35e8dcd268c7fe0ef06e45e57e3f623",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba964b4d255192296c44b19778dac7912eb12a5b9105839974d5c9c8e37620b5",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c2dccf45ffbbc453f0e6ead59746b0298a308aa984e72605014191beed3b15f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e40e04cbbddebcc34c2ab82939379d317341a2a28ec9dad7c79e2330e0429318",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9710ab4e82fca48fd00ad5bcf112b94181b0484827011a43dc276b3064fe08d2",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc40045762c862fa777d32d9fa5655a6323658ee6a4467b3fb6352ede66036ba",
                    "size": 12455691
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b15212f69e89b4690dd73ce246cee0e51368223705bceb594306a37c2e6fccd9",
                    "size": 468
                }
            ]
        },
        "sid-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9443d346bde6e5c79aa01ee3932d2a8749b9d72e4ae5773e63c6ba89e73eed3b",
                "size": 8320
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e66548c8c530119dc7e2a55f9d11595d82b03c8a83162d8765849e0937cbe6cf",
                    "size": 29391255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f91c2b777fa72813b8faf85cd80f2549fd81f8df7cb39b79553ab66661adca03",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:188b4162e9d2e0c6c79d9e722618621ded413e82e08d156f1b0110979b4184fb",
                    "size": 26775063
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:201d7e4907c84efe6c122aff29b0d70bd8d0bcdbaac9e4998f93e273dcee36eb",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e84bcd05407a9b47f7693eebdc5c2853761c8455b0f25efaa9b693b352a5ca00",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:433ecb4891ad8ef031c35bf4e7a09cc7ffc0b0242672d64d327e42c7a1372af9",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e41888b7c1babc01a35ce80c8a8da32b9118594efe9c3268cf5b2da5d847126",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34fc56091830c7c3fe2bcd6f841a3406180a0ac0464d4d9d22fb4d95e9f64c1b",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e768afbc149b05b96fd800b5cd07124e9839557ed9fa9c3e01f39646b7a450d",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0993d24c3fa154fa9be4638fd97022c4a1451eb13144ab88362b72d7eb0ac22c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16b5a37e25cb248aba095d1dbe2d1da969cdacfacbf5dbb7e8eac96ff87da956",
                    "size": 12455532
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:61e8fe1da6051815e0fdfda1d7592af1a35cd39b3e4d4cb5dffd3e2548c94150",
                    "size": 467
                }
            ]
        },
        "sid-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4b29925ac9378f95873b294decdc25b963822a473c83f3fd9c9c8751361cd83c",
                "size": 8319
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b9d37956586c1b0d5ea7192f19a9df8c44a2243eeedffe36ab3b05b663391",
                    "size": 29260855
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d6c86114e68c3b79e38d7fbafa759ce38eb94f95ce9b40183f13dbb83d406cf",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19a77c4c450138b8577ca4303f6d76a0bb349a129e5041fdae3dd222dc89ec8c",
                    "size": 24819611
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76a355f4a7572e85c1a5f9190d12cfbd74f4ef835d9de1dfd14e57ccb58ef160",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f970bc0ed52fbc6189842854e032ea5ff9df948d16b64d6e47ad206210901585",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01e3af794ece70e4f258f37e15363783eeb8bd1ecb348aeb39061c7f38379981",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efde464b5d156ab75b25fa8ade19e17b5224602cf8f0dbbee714456fae0b6859",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c963a8787e0754ddff4e7e71a4ed18a0a7b2581f4c50afbbfe765e08edc6cdc2",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:782759738f4c9360ea868af0ef5423dab98e12e56c33772121fff04dc9d95be8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c41107d24d17bcf75aa69c245ffdb49ba992a53a031fda4dc2c0b357e1065f58",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1c2896a9c0b0e85bb7c8fcd2f3d3c35bd9e37ecb183f6301083b33340ce2f27",
                    "size": 14725476
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:198ad2a68d4aaec020a93c37cf44803898c965451c6d7cad48fc1f9b562b9b2c",
                    "size": 467
                }
            ]
        },
        "sid-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c3daf8ed16ac4754da66402aa3d0b30c18f057c4287cfdf3871dbf8783dec0df",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b9d37956586c1b0d5ea7192f19a9df8c44a2243eeedffe36ab3b05b663391",
                    "size": 29260855
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba466673c5c9c948c47469bb5bbd41d242110648f7fd0c49a6950a02d7f5e94",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:61fb55139ea9bec40f52e8a6fd62041d6c6ebf0cb6e72b0bc81f7481d0232d76",
                    "size": 27978701
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e1d0d4f329f4bba76dc764497a20b8869ccee0dda4bda9274f1960a6d78f657",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d8c8f7aa9b94b43e454e89ea300e8274fd3c82d7d394561f3a76e9da4576002",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2b726b7d7ce0e4af67e07bfc87e711f474d36b2a7cb8ab197536f312ac7ec2b",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a870b2ecc0463e5e3d118fad21617697f8220cc947ef7374f06c051af969e826",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09fbaf625f19d1fcd8b7e7cb754fd5312efcb49b579d2a39c98874e9f1933af1",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d86e2595d11c19b40eeae72eb262b3bf3477211dda6b8e8c931f940924ca7b59",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0f8a6cac19a1be5e706a42126ca29ba1b5cc680a2ccb3b19b3d78a8168b163c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd0356c99402d4879d9ffa562bb0392a978a22708a265bf52bc4a859017bf6bb",
                    "size": 14726425
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33f95e176aebf368bb3e1b42bc970784a07dd36fe187edeb74727afe817a8a76",
                    "size": 467
                }
            ]
        },
        "sid-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:35f83a94b7f3ef38b2f4ff610081f3b0c6243aa2accee66a849d48aeda9748c4",
                "size": 8323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e81cdbbbefb0641e120eb93f16fa15d6f7b1f3b681b7fcb22a5b2230fb264e55",
                    "size": 29293036
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b59bf67779304f302bd3132f3a2be8a363a1a257d165fbef5d4c1fdcff6ccebe",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b486805d58efdf848a75f41a07e7ba807b2706029325bf694b0b6761ca47808a",
                    "size": 24768674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82895744f64ad8af75912d671e0aede779f6da945b39bbd1f28365804f375281",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2dd4f84ca3ed61792aa0fd3de336cfc38e09c9b770270d286da7e137dbe44b6",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99126c990a03708b280954a9d1f1127430f1648aeeb2cbfa998385b444088487",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3b1865866531835f555448ea79b4fbf4e2db4057a8a5967c7b8a7d96caf4553",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:623d2d678acb020a8c6f2f53e8dc78bc46681e51db7da2a89078f3ebc06653cd",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08b3c7675f8e7d87719508cdc1954251a4185e7c524ece5c9ce0030bfb716e1d",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ca0ea1f998a11a24b843d67ff3dfec4c2d2ae11a8bee8f21637047b6ea9d584",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d2638c5a0b9ab60a2752ed48412fe2e01d888e1443c81feb9788b9c48509fe8",
                    "size": 12463418
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbd00b0996707653c242081d34acabe2357644f5ae8524286fc4a9731fe4e373",
                    "size": 467
                }
            ]
        },
        "sid-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:66b6bc17a21d150457ff6ac7db8d215aabc18a3fcb0d674b1e1301f474b514ad",
                "size": 8323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e81cdbbbefb0641e120eb93f16fa15d6f7b1f3b681b7fcb22a5b2230fb264e55",
                    "size": 29293036
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b29fa71ed67bb325a7a6cc85a6440a7a0c05ee03ba5e48e031779640f6187eb",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac151d366a196f91b3eb38fd0b7e7d18d6c883ed7b1b1412dfe39f7ca843ddfd",
                    "size": 24768536
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc83d2bb1dd85b0da6df0d08427305412c5fda53922671f60b74b95e2ee22245",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fca2f6f978e0645afb78c963b85a7b932b438408967e62782ec1b6f958cd751",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2dd23ea162c6464dc5b2d0079a02fac71f68cf00be81d201bfeab31a93a81a9",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18bff05548f2231efb53fdd60c1b5a9e75b15d95ce684c8b8f23396d9c9b366c",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:583e17b12e978ffc94340f16e4ec90ed8690f7edf860952f1495df69561292e1",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4468f4d3a6184f73ade84dcb93a8dbc5238e55788447a73e4c907399ed203c3",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ecc3cf4152b795fbabd3ded9d27b58f7dd81ecf316ae08eb15ac9f3609aaaf8",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4ed41f7195a7ac1101876345282bdbd14872a463d913d1e37c5f18c8fa5632b",
                    "size": 12465062
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb06539007a6021671deeb8f88575621ec59de5a700bf178b41af09a4bd33760",
                    "size": 465
                }
            ]
        },
        "sid-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e6c449770b26bfd809f221fe80bd32c455cb6e4024c28f33691f5c9de24cdfc5",
                "size": 8318
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e81cdbbbefb0641e120eb93f16fa15d6f7b1f3b681b7fcb22a5b2230fb264e55",
                    "size": 29293036
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6db57d1112d030c8e1c89b4d774b2d9231eff939606301294c70ce1455d932a6",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d138aad16a1d72fadf8255725b5213e1d4b7d207cba6d68d8cfb2f97e97dde80",
                    "size": 27950276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19459aec1379fd91cca477ebf5bb5dd7d13261d74cf15b0e805086d03ff2826c",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70cd97912ccaf5613b30a48c837a06f17230101d18324f8c48acf13c13d5fb20",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e803b02a04bcf26b64a0375e151c1860f8ef96e3140b6aee091a0422b29974d2",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d3c68d0683b142bc61793be2eb23d34e09ec306c87b031bfa829c292b562017",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:225f30f6f60b7616fc0c2191ea97bf8ad4c3c812452b697f7e233f2a7f95ff90",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96cd0b09b63991b8c012d630d399904b45b932e398205f99b88a411db6806597",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2620cadc3e80465d18cf8d7c3706c84e050d565d90cdd56d1c79066d3c869891",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca509334469f52c57c557e68bc27cdbe458f06a5a81d423965409160995db34",
                    "size": 14700635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66beb5de2326f54c99d09f1d7b1ae3e861e6aa0f255f92fbe5cb837953772a08",
                    "size": 466
                }
            ]
        },
        "sid-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5a932837fe9d06565e2104406e535b35580f559454725be52a5c97eb151efdea",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30808830f2bb5ebcfa2b816291fb89c02602e3e95c4b8fe3b0a2ad5f4d536254",
                    "size": 31560383
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:338fc5ddb609095b885737af0ed38ebbcce0bf4412ed49f8fad940dfe7a1e09d",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:138f99b21ce44952d50add5903c3981cc528d00a74af8f53bba549f9476f6ff7",
                    "size": 21975365
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc1fa143db5b92e83dabe22a04035d7859ac77ce643c96871cc64a4e8addf6c8",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63d1df0414c2a7d6316af8db4aa24527c8b9e57fba2261307cbcb345d2c8343b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:423e8bc663fee5af7389ae65eae17c96c50ed8e3f9b711ec056216555562fab6",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f16c49ee0e6b1c48886bbc64da9e25435032d493a58b132b48635e5e15c0800",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54b4125da3f0ee89d60f37093f73f2094f24ad103f1d1ca5a3ab6a33640331bc",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc3330f45ede079f24228b8c3e19a8511b6e0ea817760c1add98336a6886fd41",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8815277c03cf7f918350821c5767870b49474a62804fd1a16d03e063aa9f26a3",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0152fd18564c9d9f3dc5e3572e1018af9cce1f08f2cf267168f3c641998d7e6f",
                    "size": 12786621
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:83208fb778baca9eb6752bda0507943252212980b02ec467b293bdaa9b84bdeb",
                    "size": 466
                }
            ]
        },
        "sid-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:86f018e6e78986a54fb076cdaa9b5773f6d0c56b3a77619745faa353aa654c3f",
                "size": 8320
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:156e7d847b11e9e8afa2923514f31c593525f51fa2451f1794ceec19f79f5943",
                    "size": 31560755
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5cc77ed921173e0630e7ab45ab6a73133d3fb34d11c36fb327d225532669dab6",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8487993f66d4e19b0267a0b800f697214e6f9c7128dd873605693d38d221411c",
                    "size": 27929468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf376f2efd3380c87c5bed26a3515b2887952e7c510f89b5f42f3781fdc6528d",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46fee49d372d8dd1919f855ce6d1c0b433d2684b9e8b416ac2248ddfaecd7cad",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c263ca0ab0d98ceec572564742461502509a313e4ae6c05c5c38225de3a70ceb",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:376213124b8071dd80cdeac59566b17c50512691083ffafbeaf4c03bc7ad5c44",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd5401d65a09308d5c3568b5df96fbb68024916fb739c544d9a923b121edfbfa",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27f47a786cb34e4b48d75fa567fd49e761a0afeb09fd637dacd907765601163b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5960b9df1a6bfdf6c317dc2c1f7dd4e8ee87e364b9021801bdf9b063271db9b2",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6859ca15b44817de1ae3678c2884341d96765de1a556d9d53390bd1c837438a7",
                    "size": 12797327
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9303b3e5c219f68e5728f4e2c14fdff89c44cb5a4ae975a1d14a427b68e6d97a",
                    "size": 463
                }
            ]
        },
        "sid-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:90dfeaf2e362cd914cdca5b259f7b977949f35650992b50b66140f7eeb6e5bdd",
                "size": 8321
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:156e7d847b11e9e8afa2923514f31c593525f51fa2451f1794ceec19f79f5943",
                    "size": 31560755
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fed2ebb8774b84650707f8e99c4e5137c05e35918e120a9259e1210e6f72ca7",
                    "size": 28702762
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e47836198904efdafbafa8848308674105b90406818ad6490d173184626b0924",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9d37a30d71afece4c3257ff3ae87f0f74a3a56c42a90f8b69e1105ef70c5718",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bc0753d504ff27f7533d92ae9bda43939e4ad7f15f7fd871222007848d1013",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bf794e1ec756f73a1b16119acc2b7bda4a82ccc2bc5f054493b16c53d115547",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38cceb9adb2494a293857b5270f2bd1390fa3bc9261c9a41ed064e6f51a37959",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e8130e8c509bd4af79178ba802d93cdf525556c911368c2249ffef30bad8fba",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00d3d609fdf9eb35fb470bd535c17acbb099bb436a284b406680753529d73272",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c36b88fc4b820ef30aee39c785ee60856f6307e1170211698231540e37acb26",
                    "size": 12797390
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7d7d8275d83294ed36192d2d51b60b7c0cf3047c870bfad430de347bc43f672",
                    "size": 467
                }
            ]
        },
        "sid-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:430f3eedc1c983267e2bc53c5432a519cd4f10431f92c3ff3c841aea4ae68f62",
                "size": 8307
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5addb9bcb0c706774be98b1416ef8e6f19c67290a713bd9b197c7da4875cd073",
                    "size": 30726503
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:606addce47d756f75710c9127014c091a361d7082000d2aa4647a934d0b6a032",
                    "size": 2592216
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbf59b915ef7e00f3a28eddd01e281b963eb5651eb99fa7186f6610478259459",
                    "size": 22886466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d18adb59af4096465955e4848e100f8912fc39827cb555d1dc2e93f76621d2a9",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55c8fb96fd0ff56cd40952020adec20474970bf9a58d9fda51b197794aab0aa3",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba23e4e6ee5801f02701ed3302596a405bbf73892b23ac1a9befa6720cc1cd83",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fde0c1acd3c5218963c7bfaec46449db10a039416ead95b5d0644aea74a75a39",
                    "size": 1004
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42c113dcd6bec16c39b642a91785a49ae109cab57c613a7c89f5bfc78d3e142e",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0559b238bbbf8b0656f0d98828f621586662a73483ed6e7ae2a3cedbddf8a186",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef95abd3bc018607c606fde7ab299d4a43862a6edab5cfda83b9fe6b8c39de2",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9b627626f2127e62b456f2e773d97b90320c4215ea81b82d9c1bee2d3ad6d50",
                    "size": 12801288
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ecc1044448e8b659a99f88a075f2528b3f102258205a392be4da827d40da779f",
                    "size": 468
                }
            ]
        },
        "sid-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:94f3a4138bbd75ecbc97d0f2a53a3ad14739060533d91294c0d7d7799e0aa142",
                "size": 8307
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5addb9bcb0c706774be98b1416ef8e6f19c67290a713bd9b197c7da4875cd073",
                    "size": 30726503
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ead7e6cc20b4dc02f74e6b6e84736275d0244df7863c1df24d49b94112341681",
                    "size": 2592215
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbe5750a166857f965c56bc09c46e7ff5ce450e1eb09d9d089beb35892811cf6",
                    "size": 28830496
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f3f255520a0b3a5dac6033ebc2da5bb7bf4e99ea67717d5e85731b683a762f3",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e3c6882e720888d80b98ee45b55f9a6d84b5efdce17e9adba19d4664b3d99ac",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec9ff89a437f373356a30f406aa3ca24453a4a761c7b301958a03fbfd11b151b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1f5ed35ab3cc9cc5d96133100047986b20f86fd2d1898a26cf6bdbed7e58adf",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d523bb1d4de808a083e762d17c8df0845b723c38cb99ac9e02cb8076bd5049e2",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69054fa98365991dc957f6d80c23af72c934be0043b4c3359b9134f8468b2dfe",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8163b91cb135af8c1f25ac6e881d07fe9ca21faeec189c2efe48a50dd2f9064c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:711d32246cdd4bd8ef47afbafbd5ed172811516f0e46641899770e08ba271241",
                    "size": 15100006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b4fab3a1439fa7e6e523af01d07452716567cda3a99463eab29363358b8a612",
                    "size": 467
                }
            ]
        },
        "sid-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:02d0224dd36c887e6e2fc355b7f246614996434b955e9599ea8253569041dd10",
                "size": 8303
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af4776df7d2dde797cda1f9c09fd884c9486c06066ea1352185e2484bb248500",
                    "size": 32165878
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:444a92c23835aa49d30fc1cf6510849ab0aa505180c4011203d923bf6bfebc24",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5546108d7162a39f8417c4829fa5b31ed364e722057e7a4e78f10e2b7df267b3",
                    "size": 25488372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07ccd9567bcf8f64a218d167746a94cf16d4b927ece15e7f29a65612fa4a814a",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0243d4ca56617203e53026968094f79305a0cc058508e62080966554e1460a93",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ed20117a9444fad6261db6998729094a7fca99da1830d61d8d560e72a608a2d",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a60c47a987638fd95f213f1714c066a6c7fd9d50bbdd24d67733421a916f363",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:329ec75c3172e40d8def6f4d43f6fcbdce3b4c4121fa0f0f49e8fe463d1e468e",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98ec53c8ff19e1279330ff7959072234ea9158e809230b49d40a795e9942b132",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:050171365b2ac3debc9ee1320d0b9b7057e5bc0653097d546c63f565c83aa513",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:011e11334c91b4c770b452ccc945fb54a0e9109a34289bfc5808906501d14d60",
                    "size": 21313142
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56b09a2fb9ba49fc07c8688029bae52a009c239ee2d3cc145a27006ba871051a",
                    "size": 466
                }
            ]
        },
        "sid-build": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f1bb5b6a993ecf1c848fe04df4454cfd2a8a0809607d345394c5d52143013085",
                "size": 9280
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af4776df7d2dde797cda1f9c09fd884c9486c06066ea1352185e2484bb248500",
                    "size": 32165878
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:726210592f711f05f053eec35e125752f18287fa26d921d3139b7e18163b8e9d",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5817abbd60da9db1e306e372857944073d1de28c0c79f6dc7fa63d1dacaf6fab",
                    "size": 25488429
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a90c1361feb03cfc5734081a25d7a940c76431d3fcc0a4a2ee996f0e6232981e",
                    "size": 274495446
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04836d7babd8c3df142fedb38d0d5a7a800fbf5979b08ceffe2e7d792c556e6d",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0115213fd5c10bce9849a4e354ace163ed461123d7b8361c3b23f30f5d3f972",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee3428549ca5eebb2f8d89f59cc7a91a7081ceed31d1d60d2b73fe1483dccac0",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab28e3f005507258b1b23b270eb362c1bc1e359d6b11beebc8285668f533e1e6",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56b8f9963dd076c25a8cf1d4f3d2f1e230952af1c356671b2d6362f05747d2eb",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb6841562431e18b69b21b0c075481d9008bf840def7aa697ffe4e40f3e7b403",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f604a1d6278415b070a444d249b9c764ad0544468f77c3c1ae769c86c4b406d",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0dced5a628c2c56e93afd45ed3dc9ee97e8c5bfc89fb975a986939db955cf94",
                    "size": 1222480
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cbfa1a76c76c41fcd1dbaf1aac9958215a30a4c184d135d7e414b3ca59422a5",
                    "size": 465
                }
            ]
        },
        "sid-build-20231025": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:02730bda26c276470e196833c9037a3840f59e0c4e69a5b09c73926c0831a627",
                "size": 9296
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adf79add46ad09d9b6c693de9577586e07c9947284738dbdf3a088a1b6f73db6",
                    "size": 29309371
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee9182129f4b867f08c0fd6389da8a5e41ef1bb43b1ffd620a3aa0c0b6d6be7d",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:be7039778abea1d81d62bcc763c4689da8073234e57be5c12611d503abdd709d",
                    "size": 27199555
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d0360e8ddcf5934a44daf60aa470a9c69c6261126ae103cd8a8cd6114ed2bac",
                    "size": 259485397
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:edd275a0815e6deb07fa9e2d0207f4050ea4779e4784dd6b9d167ba031045d2e",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e57384a1b67b770b8b42dda65458c40f68004925d0c00fe3a2cef69c170fd60f",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91d434ac5f27c05f5db36e40576ab1cda9847b9ff06dfacd0fba3ce04b8e2fbc",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c28e21713a3f347c6bd5bd46567c9dabf84ae294c78de169acb3ba9dde164017",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1785e9a9954323dc97c47dfcfba088d78f03ef4837fcb5622d0933bf0e379049",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ade9013ba56ec391239895e31d1570b8f2ada4a798a88b366d142c82d10b1a9",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7bc30ab9cb1f341f73758ca98c1cf94f8aac3de5fd3119d3233f1f2f1e95d8f",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3c21b1730ba0a7a723ee9995ab6860b440e3b5fc28f0298593c2a23b8ce0b3b6",
                    "size": 1192073
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b91a05f5bd73eb4f90553136bc403af77fd730dcf3fafb10b3722bfa70dc066a",
                    "size": 468
                }
            ]
        },
        "sid-build-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4203db9413c9c985781f38763f0f0767ba36f64198d1fabc40e0ff444bbcc9fa",
                "size": 9296
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e66548c8c530119dc7e2a55f9d11595d82b03c8a83162d8765849e0937cbe6cf",
                    "size": 29391255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:799f27fc4848ae84b36f129272bde5b957a93ebe1a4efe700d11959eef882c3b",
                    "size": 2592223
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e5fc82b67380502edef06fb579afdfa168761ece0b9def25473429dddd587463",
                    "size": 26775072
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:588f7e369e270c17b6852df312f696a182451b8693264762ffbfb672035615ee",
                    "size": 254823959
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:75125a1e43821c7b63ddb24390f54047e7e77ba1e6ba8099bb16e6b5dea9609f",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ea15f906730c5c094c24c8874368a169609d3fc6dea856057d0204ddd859776",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:002679607f123a67b1084e76e1865c2b5d05e0732cd92883171ddc5b841f61a1",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb5abd91ce36a963ef2fe98f11836d84fd8dcbfc6382726785e26ebf6158cbc6",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:87dd2f4dbf0e200cef42c78f7c05a8c210d61ba80886ba066181cd2d8787b563",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:162ad38184b295e6e77057944696be63f95870ef4620f903d9a0bb87cf7bdec8",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:538a14e9c106467d8ec0597f92d86cfdb783cc7392705afc543479c825ac1bfb",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:174ba6ebf40f7161fea7b9c2ff7c239cb11e74b02a3235c348976d95e832d72a",
                    "size": 1191933
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:734aee38f431e3b9005bf03467fef9e75f3443d381521a3c6f6c64c001608118",
                    "size": 465
                }
            ]
        },
        "sid-build-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:d47af2caf3b9f924a3d3f0febc85a9917129cdf068d973490adc2ca42258e999",
                "size": 9297
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b9d37956586c1b0d5ea7192f19a9df8c44a2243eeedffe36ab3b05b663391",
                    "size": 29260855
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5fa2ec33bd3105d11f3520a18c38edf73ac69fcd8bea3192877de39a33d77126",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f665d148fc58b93c08b0c603bc7c4b4c06cad7cf96fbb85f072c979322b0d57b",
                    "size": 24819671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9935ec717dca262c8d32f307ce3b2ef3bb9447be98a462680b027d0f60817ec2",
                    "size": 258156388
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:944182ec8acdbf4f87ca54048d76c255089f6f92bf1c445b4400e94accef4466",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16b4211f936334899daefa186cfdbabfb842829ebc3f0313fae922345cbb53b8",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8251c6d55dd1e3169702c0a463131f5e00f1f77e944e7a96520c4c5d0519b38d",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f203b4ae4c0f41f56a9142c071fe4d1a811b18fd07faae871c7ad61cc5fca51b",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:abe6799692987693838961c24e9f2fec9b21c155c1c331afc3d2ffb1bc918210",
                    "size": 275
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:65b840d14c3b0c4f2a392f52aca53b01f210e92bdff46e8938af00618bd13d07",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ae6d9313554a3f7f6a9ba7cd84c9a616e7132d1f866ae397d2a4e0bb5765071e",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7aaff1255e5cf6aba58fda2ba47404c2c06d233a02c022400ad4b328611eaeea",
                    "size": 1192038
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:68a38cc806ea94f9c0eb8c97dd535683d2135d111645671aa165d9c852b03fe8",
                    "size": 466
                }
            ]
        },
        "sid-build-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:fdfc1428e996e88be4b6047bd4c905fe3fbc1e1dd6d40cf4f8b7689c42f0844a",
                "size": 9297
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b9d37956586c1b0d5ea7192f19a9df8c44a2243eeedffe36ab3b05b663391",
                    "size": 29260855
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba466673c5c9c948c47469bb5bbd41d242110648f7fd0c49a6950a02d7f5e94",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d4e03007218574c25442a956bd2e974065fd27ff2a0489bdc997969634abce7",
                    "size": 27978739
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d4c1ac7d3c9ab5d2b7a2cf00f8a0b8c205a8c6b0cb4575d9e2c29434c64d1e7",
                    "size": 287631308
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c29261686ebbdb14cf1395f097beecd3f58a7d9962dbfe5f561df60b0be780c0",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:57f1718df1c1022e9a6a4ca20ce36328350eecfd9d9c0ce911f2a98685947f4a",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dfcb6667dce36625789add1348dfa89cd9d2e68dd0e371ff73ab23cf776e9a03",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1fad6380c40990fecb0edcaac64d8da709796babe2747fe0640476749f245437",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:14ee05716d924fb2cb72ea6d5d182efd2e1242a34de751cc6338faa862ef8250",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ad9629d05f18f4d8557b507813626b39e3a7f907ed5594d1cb501c5534a8f69",
                    "size": 675
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ce55bd9cdc3caec8867da2b163950ee40f677893578ac1767f0f318368b9afa9",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7dade44a46861021344f92c431225135df1e0678122d42fbd4ebcfb4a0419278",
                    "size": 1195573
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5a921c7eff2b07fbc31186e8c7a36425e464aa63b2bcf67ea926f9c0cc9e8906",
                    "size": 466
                }
            ]
        },
        "sid-build-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:938399dd3b624712928f97df0b3f0cf347e0a440a1e603be92ec98a287d447cf",
                "size": 9293
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e81cdbbbefb0641e120eb93f16fa15d6f7b1f3b681b7fcb22a5b2230fb264e55",
                    "size": 29293036
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0575abbd7cf8af271349983fe534ae3e04681cbb9b590c83d74e187b870bebe4",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:80224659d60799972fa421700dc1102262489f11555cf869fc6e14cfd322cf1c",
                    "size": 24768638
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:32fcc6344b6f61e0873568492fe8c53f8b398a0deb241e355ddbff701fb41218",
                    "size": 279143644
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b7dd5b9f5ae940b0258ce1d043c348da410e862d5368b468e400818638eaad60",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:342607f230887b13f928bdea02849ea9d9be948b22dce75b6446b5351c4b471d",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66803df667259f65f2528ff3a2d218d87cb9f25a9a5de58d6e6eb3870bef7b98",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5e1336620dc68f7e8b91256eab5998a003afb66db823fe0592c027abd6042a72",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:94b109fadacd6884425dab4e6168d211b5d3b761279dfc9d414adffd01527719",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9de3c80a9fe524d2f5f0f282c03c857590f5d57bd59b6ad537160f92434cadc5",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ea1d78a1b2aed3a01529891b37a965a2015cb2dab7cca156e7b23a72b3d0732",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b5d16b6c65dbe9b0564577a8145501c5c0fc3aec3391d19449edd24abab8887",
                    "size": 1193144
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ceae226428e804fd626960a375e0e8cfbf38af359d2fd409d977fc878a2eff68",
                    "size": 467
                }
            ]
        },
        "sid-build-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:425bd7a00ad29d4c8ff63ddf62241e2fd531a5deb2b53fd38ff59e9ad832373a",
                "size": 9296
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e81cdbbbefb0641e120eb93f16fa15d6f7b1f3b681b7fcb22a5b2230fb264e55",
                    "size": 29293036
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fb1f13c6b54b44ab2213b7a6439ebd927e8194e8649382dc691d02e1dc160af8",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8a8e68fc5ef3a57aefae923b34a279c005325edd0cf363773b287184df45c444",
                    "size": 24768543
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b3499b0d4d5c9aa7b7db50b5069af99017eb876348958adf31436381318391f",
                    "size": 279229577
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a27ede60d5f1b65e66bab4adef0a12d858c5b295c24554eaab259fba7da7e2b",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4833dd8c69423884d68e5cdb61fea8d59b8b3c92c9f5505ccb09dd75d872a73e",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b8b307d8fbd2ff397971c1a2cb318e82dc6d4de72ed88b1ac1fdb2f24c7bf922",
                    "size": 256
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6cc6c8d09547b766e3f86c1899d76ed7614be8dc8a6c3fc84fba7e325e683e14",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:340a836b46fe7eb1a0c8d6b04020a3cb6bbf93854fb7b2e2b6e4e678e531bcca",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:64b5c92ae83d23e5854f92928a21ef8564dee59c4a85a25e718187e8f2e36195",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:354641459fb8e0af89264c61bdc31673de2858f3c8dc368ce3ed03269de479a3",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e93d019114df40243d689fbb27b25a58ddcffdc2cc7aa02ec2be503895f87243",
                    "size": 1193830
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ebfb7e446a041d516f99f863ed99f8e8007e33b55e9fa03fb729a3e8347c31e5",
                    "size": 466
                }
            ]
        },
        "sid-build-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:dcfc57aca8481540862cbdbe9fbdceb4856d613831c0c92452f2967a4e708680",
                "size": 9294
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e81cdbbbefb0641e120eb93f16fa15d6f7b1f3b681b7fcb22a5b2230fb264e55",
                    "size": 29293036
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1b4e125241fbb6fc056ec40d64b9df0c94787c44d250deccf2042ce4af6d290",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6b80d42d3aca4ae5d229573a37f59e334db63737127630bd51c9b5823af33158",
                    "size": 27950237
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2dc31840b23922a5009ba42e63d29ee8c0a4a33e4db1a90cd9bf5ad0e0a71149",
                    "size": 281553444
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07a5e0e5359351695a3eeaa17f6ae0a25733cbba6abddacf1a0a1b9ad8b9cb32",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0d1a73fd2b404cc9a750eb3248e8dadaf9a1710df9e117bfc2cd7a0234e7a93e",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6858a76a124058f750e545ba6c9eed87434f28d26187ab5bd88f404efb7fc9a1",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4a78525b31e426035c77bde3b37ca6c610092a30938d3acd543b275c596a5f0",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:43acbf8556e00c4d6384848831cdf7357cb24a9e1f9538b773958a392b346fe2",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:74ba139355ae8c92fd69840f022d7f8c0c99e32230a54df1072f500fab4c3f28",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c3b2dcf79a393038df16cbc93ab0bcb81de167b42372bb6f78dfe4dec8a49bf1",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d612bd5cb2c9d0bb5f3305b3f7d08a64ebdeb4e4130da34b6480d48bfe81911a",
                    "size": 1195758
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:331be65767e5beec1b5b4a693b7db20221414b0a17a15e30345d3cec93e7303a",
                    "size": 467
                }
            ]
        },
        "sid-build-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:462dd108fd57b40c305734373992e29cfce1b61d3dfa123191b20486994e0585",
                "size": 9297
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30808830f2bb5ebcfa2b816291fb89c02602e3e95c4b8fe3b0a2ad5f4d536254",
                    "size": 31560383
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1e665ab656bfa447d62fce5ba068d1f583b0048cb4055d146fff2e7ccc361a15",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f8c4d07f97985a96acd2b9776f46bb35ac538c92bcd8136b091ec72a5ec1079c",
                    "size": 21975360
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f12dcce10c6f09ae4ec98bd7c7d008a0bca46b4b7bbacc80d7283875e14c33d8",
                    "size": 291768736
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:77b9660367be58f2617cb230f9d496e0a67ac6fb9c623157f74d85eb34380d41",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3b272b6c0ada829957879fd50e6aeca336378fb3ad2d75cce3b1bb8fb4364108",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1ec894948f8906cdd15045fb80c2102b649b094fd3d7d5f9d54374f3dbae979b",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70a712641a569d5a8c194c8edf6c39d406bd06671bcfca2675e5ba0db679cc0d",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4faa61d563f57aa2c3b9cb1eb47b865e49a5f5e6aeccd2b48368b0ee17a89964",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:662629ef2653a468ebd8455576e8f4e79e72b3d5eeaf6e1cc4dd4a5a6a395e76",
                    "size": 676
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d67cdf0074b12d5abdb177cfe6e3b39fc0d7ae50a51d87a5679461cf13ea8de",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:47e9224193699e5c149c73a7852a6ecc97ed429d98c5b194008d16d372d6b2c4",
                    "size": 1196234
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d6075de8aa268a4fbc8b2e6d5630fd9f8f93cc513351ed13884225cc4c5a5d29",
                    "size": 467
                }
            ]
        },
        "sid-build-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:0587815c21d4c7080f2b018b464af1b74841205fadd261dec08fa972e833151d",
                "size": 9297
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:156e7d847b11e9e8afa2923514f31c593525f51fa2451f1794ceec19f79f5943",
                    "size": 31560755
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:740c9ad1cb4702c732569d5e523e44ec9e9776f987928915221e52a82694d84f",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6aac0d3a0604e3d241005be25005e206ff31dcdb05123e0f53fdeac7f1dacce2",
                    "size": 27929451
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c5a912791049973571c5757b35672dc2cb554f8fb91c88f961134d170c040b36",
                    "size": 290328626
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b85278e98e75abc61e7edd06814f06ce506315982fab5fd7602a653cb8cf7f69",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:df8aeefd6c9046f712c76cad40ab12b16f884baacbe2e00dc9617d5f3251527d",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c233d1b5db88a991aee70b2e6908aecfe9ff2a53b5fbc31ddc25aa2bda896a8a",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cddb28f1a66c408fa313eb98a439c20e929a347cf61f7212d010b237cbc8500a",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01bce86f549996da598c0c28fc789b2f18bdf7f0ce0c4cda3f135faa5ae8db2e",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9dff427991ea61e73ab8019965ee2245c5fee48c22876123247c83995facf4ef",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8b1ed12eb61d608bc6b7334185c64617b17c1602cb896bc9b63772bf031d38c7",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:684f20b674447d7e2d97282def70512090b1ee8d2646db4943a4027b4be05dfd",
                    "size": 1204082
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3504656756456feb89fb2611cb00fffb6e275627650ca33a25468f89d4d47f6",
                    "size": 466
                }
            ]
        },
        "sid-build-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e1018694dcc1442ac9f52085ee405ea1fec9f034459dce02f46ea0f6dd3fa002",
                "size": 9289
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:156e7d847b11e9e8afa2923514f31c593525f51fa2451f1794ceec19f79f5943",
                    "size": 31560755
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ec95040402c9c346bb636975cbea6ed712aa5f9b6b8a228b874c60e293419cd",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9442f557c4017168bd48066ce1fe546d18779a978745978e2b4a57f173d34c7a",
                    "size": 28702776
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d549d102abdc748edb003077841908b0f82f7b67290d54e1e9c200d2923e1041",
                    "size": 295666304
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fcc7b43d9c1fc91ffa2a7416a1ed23955420fc5b801962c912be841be94fd9af",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:572b8278b7bdbdb72cf64ed44893aa692fa87db60ec5ca34217ba8aed35c2b75",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:299ac018f72074ffe5a72e68ea4ab57c3db22a2a63419cc25ced3b08faa04510",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3a5c8dd2a9108ec7fc812aac9a0ea374537f1b6da7f683726349a95209669c8f",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fcc5d19d7d13b363aa5f54b4bc56e5d9768cffe011ad61140ef746d0846c5826",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:824f57120b0f6ee7e3c2d843ec7df964905d3bb0f7e8f95565cce4387d62361a",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c757193fff4fcce5978535a5c79ea69e5afeb92ef3a508c1bcd02137bfb409f8",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eba89e4f8d37f83b80a2f35e444eeae3b1b5f43fdc03839fca2e71bdc1b0c1f4",
                    "size": 1204858
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a97a25e5f4ee4e11d3bfc08e8aabc6849c617e2bb63227e44048028385acaf91",
                    "size": 467
                }
            ]
        },
        "sid-build-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e6a3f114f8f8368a397f74dae6df807cf3950222aeaeed20034c68440ad2e807",
                "size": 9282
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5addb9bcb0c706774be98b1416ef8e6f19c67290a713bd9b197c7da4875cd073",
                    "size": 30726503
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cfd81996cca1bc5737b917f62a1f790493f5b1545a0ea937ec8ee58ae533ace8",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b3d46331af4753aa3a9c360344f62931db4bd83de6fbed8be0002f9a2f8ba9d0",
                    "size": 22886500
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98fe6071d6ae25380c4e2e6ccdbd7a30225b27fb6c4d743a5c0d2a1d9b916836",
                    "size": 264518956
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:91dc198278b0447fe3ef8b82cac8025d3f6e4071331a0881ed4620a008668536",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d85b5bf912e202a4d455c76c88578233013d557e574d345777aa55ea364f14aa",
                    "size": 259
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ef015e1f844f983f1efbc237d325ef6c7d641e628534cebd595e16b5b73049e",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7a4350a8cd29443edfd945bd42c19557a4d4e6b6d9bfedb18319c529f1052fa6",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ac053386fcd9b925f64d5fe9ac3f4fd2ab366d5f24e5c209e4726306643551b",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:601e9900a2b7239156fbd66df4c30d699ff146de602a0ddfd2a7e68eb7b659a4",
                    "size": 671
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3ecbcc73422f2fa13c0f9f41443e464eb65c8c00a7cfaeb1309ea8c70db4181e",
                    "size": 462
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7d405d845841ec4d904e45e7af0e8932102a23477f334899bf501d044b8e8f24",
                    "size": 1202312
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:3cf075ced50ff58ef9e0d465c225de635bbc193cc691237d47cf2b61a6573652",
                    "size": 465
                }
            ]
        },
        "sid-build-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f09e98dacbefc32dbcbd9a51b37df030a2762b15050004fa745bd3f8907cc251",
                "size": 9282
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5addb9bcb0c706774be98b1416ef8e6f19c67290a713bd9b197c7da4875cd073",
                    "size": 30726503
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:95e9b283c28b65bf0ddb332ad301504259858dc9d810d91003438fa5c331db6f",
                    "size": 2592216
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6e6df4e73c06d58f83b69b6ac3c009041d50a2cae299f5433f376a97c532f877",
                    "size": 28830532
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5adefacf6a9d83b121d86ce4047859d9d66816bf66ea65808591f674a08ff092",
                    "size": 267795525
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e470bcf5d43f8f12407ee1b6dca1c9071cd0abab3fde4d5321caeb94c9860f3f",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:72efe018d769e9d978e29b634279045c956dd7574360feec17d6fff6ea164cfc",
                    "size": 260
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ceba9923ab4cbab8adea819078a2c2c69b8d23a13266f9255a09450aea18f0f6",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:577a596f7856d02c40885e9c2beecf65c1e8072a0114d1391f15def82d45de29",
                    "size": 1004
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1d2a7689c21caea467c926b8747edeffa96e7d6daebe32327ca76fce2d7e5cf1",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fa61cbca082cb82a07aba9a93a9c0de706939a2017e76a3dc11259138001c29",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6ee9f273e50457952b93fab6f28b08c74b98b11fc4b6bdad86929bafd60ee591",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8ffb9eb7169783af853eb5830ee6d3df6e8bfce6f22de8830b4b2b9059beb17b",
                    "size": 1202876
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8a337b10dc5c7481aec4bd34922dc9bff8e51fa11595fbbfbd1ec9abfa1580e6",
                    "size": 466
                }
            ]
        },
        "sid-build-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:f1bb5b6a993ecf1c848fe04df4454cfd2a8a0809607d345394c5d52143013085",
                "size": 9280
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af4776df7d2dde797cda1f9c09fd884c9486c06066ea1352185e2484bb248500",
                    "size": 32165878
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:726210592f711f05f053eec35e125752f18287fa26d921d3139b7e18163b8e9d",
                    "size": 2592220
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5817abbd60da9db1e306e372857944073d1de28c0c79f6dc7fa63d1dacaf6fab",
                    "size": 25488429
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a90c1361feb03cfc5734081a25d7a940c76431d3fcc0a4a2ee996f0e6232981e",
                    "size": 274495446
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:04836d7babd8c3df142fedb38d0d5a7a800fbf5979b08ceffe2e7d792c556e6d",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0115213fd5c10bce9849a4e354ace163ed461123d7b8361c3b23f30f5d3f972",
                    "size": 261
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ee3428549ca5eebb2f8d89f59cc7a91a7081ceed31d1d60d2b73fe1483dccac0",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ab28e3f005507258b1b23b270eb362c1bc1e359d6b11beebc8285668f533e1e6",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56b8f9963dd076c25a8cf1d4f3d2f1e230952af1c356671b2d6362f05747d2eb",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bb6841562431e18b69b21b0c075481d9008bf840def7aa697ffe4e40f3e7b403",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5f604a1d6278415b070a444d249b9c764ad0544468f77c3c1ae769c86c4b406d",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0dced5a628c2c56e93afd45ed3dc9ee97e8c5bfc89fb975a986939db955cf94",
                    "size": 1222480
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1cbfa1a76c76c41fcd1dbaf1aac9958215a30a4c184d135d7e414b3ca59422a5",
                    "size": 465
                }
            ]
        },
        "sid-run": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:02d0224dd36c887e6e2fc355b7f246614996434b955e9599ea8253569041dd10",
                "size": 8303
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af4776df7d2dde797cda1f9c09fd884c9486c06066ea1352185e2484bb248500",
                    "size": 32165878
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:444a92c23835aa49d30fc1cf6510849ab0aa505180c4011203d923bf6bfebc24",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5546108d7162a39f8417c4829fa5b31ed364e722057e7a4e78f10e2b7df267b3",
                    "size": 25488372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07ccd9567bcf8f64a218d167746a94cf16d4b927ece15e7f29a65612fa4a814a",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0243d4ca56617203e53026968094f79305a0cc058508e62080966554e1460a93",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ed20117a9444fad6261db6998729094a7fca99da1830d61d8d560e72a608a2d",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a60c47a987638fd95f213f1714c066a6c7fd9d50bbdd24d67733421a916f363",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:329ec75c3172e40d8def6f4d43f6fcbdce3b4c4121fa0f0f49e8fe463d1e468e",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98ec53c8ff19e1279330ff7959072234ea9158e809230b49d40a795e9942b132",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:050171365b2ac3debc9ee1320d0b9b7057e5bc0653097d546c63f565c83aa513",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:011e11334c91b4c770b452ccc945fb54a0e9109a34289bfc5808906501d14d60",
                    "size": 21313142
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56b09a2fb9ba49fc07c8688029bae52a009c239ee2d3cc145a27006ba871051a",
                    "size": 466
                }
            ]
        },
        "sid-run-20231025": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:1e814eb57ffaaba2f693dbb4c4b48b9f3613bbcec1398f09d75343155c86f599",
                "size": 8320
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:adf79add46ad09d9b6c693de9577586e07c9947284738dbdf3a088a1b6f73db6",
                    "size": 29309371
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:88c9d375e1ac6cfc1ed006411a9c1d43071242fd1bfe93abdc7240b563e98a43",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dcba8bde1fcf7f968da31f08d12c215c57c95372de07cd486aaf8764e998a413",
                    "size": 27199540
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4d38b38ec11f84c6b4f1ee9e9a310c3829615562474f2a7372a627c366414d7",
                    "size": 473565
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:20be957cc90af4a6e1b3bb993f40f30d8b606e32e50792310190d5326ff6ba7f",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:93dc62f23b0200bd3260da8be5f61725b35e8dcd268c7fe0ef06e45e57e3f623",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba964b4d255192296c44b19778dac7912eb12a5b9105839974d5c9c8e37620b5",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8c2dccf45ffbbc453f0e6ead59746b0298a308aa984e72605014191beed3b15f",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e40e04cbbddebcc34c2ab82939379d317341a2a28ec9dad7c79e2330e0429318",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9710ab4e82fca48fd00ad5bcf112b94181b0484827011a43dc276b3064fe08d2",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bc40045762c862fa777d32d9fa5655a6323658ee6a4467b3fb6352ede66036ba",
                    "size": 12455691
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b15212f69e89b4690dd73ce246cee0e51368223705bceb594306a37c2e6fccd9",
                    "size": 468
                }
            ]
        },
        "sid-run-20231106": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:9443d346bde6e5c79aa01ee3932d2a8749b9d72e4ae5773e63c6ba89e73eed3b",
                "size": 8320
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e66548c8c530119dc7e2a55f9d11595d82b03c8a83162d8765849e0937cbe6cf",
                    "size": 29391255
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f91c2b777fa72813b8faf85cd80f2549fd81f8df7cb39b79553ab66661adca03",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:188b4162e9d2e0c6c79d9e722618621ded413e82e08d156f1b0110979b4184fb",
                    "size": 26775063
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:201d7e4907c84efe6c122aff29b0d70bd8d0bcdbaac9e4998f93e273dcee36eb",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e84bcd05407a9b47f7693eebdc5c2853761c8455b0f25efaa9b693b352a5ca00",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:433ecb4891ad8ef031c35bf4e7a09cc7ffc0b0242672d64d327e42c7a1372af9",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e41888b7c1babc01a35ce80c8a8da32b9118594efe9c3268cf5b2da5d847126",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:34fc56091830c7c3fe2bcd6f841a3406180a0ac0464d4d9d22fb4d95e9f64c1b",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7e768afbc149b05b96fd800b5cd07124e9839557ed9fa9c3e01f39646b7a450d",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0993d24c3fa154fa9be4638fd97022c4a1451eb13144ab88362b72d7eb0ac22c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:16b5a37e25cb248aba095d1dbe2d1da969cdacfacbf5dbb7e8eac96ff87da956",
                    "size": 12455532
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:61e8fe1da6051815e0fdfda1d7592af1a35cd39b3e4d4cb5dffd3e2548c94150",
                    "size": 467
                }
            ]
        },
        "sid-run-20231127": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:4b29925ac9378f95873b294decdc25b963822a473c83f3fd9c9c8751361cd83c",
                "size": 8319
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b9d37956586c1b0d5ea7192f19a9df8c44a2243eeedffe36ab3b05b663391",
                    "size": 29260855
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4d6c86114e68c3b79e38d7fbafa759ce38eb94f95ce9b40183f13dbb83d406cf",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19a77c4c450138b8577ca4303f6d76a0bb349a129e5041fdae3dd222dc89ec8c",
                    "size": 24819611
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:76a355f4a7572e85c1a5f9190d12cfbd74f4ef835d9de1dfd14e57ccb58ef160",
                    "size": 473560
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f970bc0ed52fbc6189842854e032ea5ff9df948d16b64d6e47ad206210901585",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:01e3af794ece70e4f258f37e15363783eeb8bd1ecb348aeb39061c7f38379981",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:efde464b5d156ab75b25fa8ade19e17b5224602cf8f0dbbee714456fae0b6859",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c963a8787e0754ddff4e7e71a4ed18a0a7b2581f4c50afbbfe765e08edc6cdc2",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:782759738f4c9360ea868af0ef5423dab98e12e56c33772121fff04dc9d95be8",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c41107d24d17bcf75aa69c245ffdb49ba992a53a031fda4dc2c0b357e1065f58",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b1c2896a9c0b0e85bb7c8fcd2f3d3c35bd9e37ecb183f6301083b33340ce2f27",
                    "size": 14725476
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:198ad2a68d4aaec020a93c37cf44803898c965451c6d7cad48fc1f9b562b9b2c",
                    "size": 467
                }
            ]
        },
        "sid-run-20231204": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:c3daf8ed16ac4754da66402aa3d0b30c18f057c4287cfdf3871dbf8783dec0df",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:297b9d37956586c1b0d5ea7192f19a9df8c44a2243eeedffe36ab3b05b663391",
                    "size": 29260855
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aba466673c5c9c948c47469bb5bbd41d242110648f7fd0c49a6950a02d7f5e94",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:61fb55139ea9bec40f52e8a6fd62041d6c6ebf0cb6e72b0bc81f7481d0232d76",
                    "size": 27978701
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e1d0d4f329f4bba76dc764497a20b8869ccee0dda4bda9274f1960a6d78f657",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8d8c8f7aa9b94b43e454e89ea300e8274fd3c82d7d394561f3a76e9da4576002",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d2b726b7d7ce0e4af67e07bfc87e711f474d36b2a7cb8ab197536f312ac7ec2b",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:a870b2ecc0463e5e3d118fad21617697f8220cc947ef7374f06c051af969e826",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:09fbaf625f19d1fcd8b7e7cb754fd5312efcb49b579d2a39c98874e9f1933af1",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d86e2595d11c19b40eeae72eb262b3bf3477211dda6b8e8c931f940924ca7b59",
                    "size": 674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d0f8a6cac19a1be5e706a42126ca29ba1b5cc680a2ccb3b19b3d78a8168b163c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd0356c99402d4879d9ffa562bb0392a978a22708a265bf52bc4a859017bf6bb",
                    "size": 14726425
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:33f95e176aebf368bb3e1b42bc970784a07dd36fe187edeb74727afe817a8a76",
                    "size": 467
                }
            ]
        },
        "sid-run-20240101": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:35f83a94b7f3ef38b2f4ff610081f3b0c6243aa2accee66a849d48aeda9748c4",
                "size": 8323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e81cdbbbefb0641e120eb93f16fa15d6f7b1f3b681b7fcb22a5b2230fb264e55",
                    "size": 29293036
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b59bf67779304f302bd3132f3a2be8a363a1a257d165fbef5d4c1fdcff6ccebe",
                    "size": 2592228
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b486805d58efdf848a75f41a07e7ba807b2706029325bf694b0b6761ca47808a",
                    "size": 24768674
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:82895744f64ad8af75912d671e0aede779f6da945b39bbd1f28365804f375281",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2dd4f84ca3ed61792aa0fd3de336cfc38e09c9b770270d286da7e137dbe44b6",
                    "size": 264
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:99126c990a03708b280954a9d1f1127430f1648aeeb2cbfa998385b444088487",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e3b1865866531835f555448ea79b4fbf4e2db4057a8a5967c7b8a7d96caf4553",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:623d2d678acb020a8c6f2f53e8dc78bc46681e51db7da2a89078f3ebc06653cd",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:08b3c7675f8e7d87719508cdc1954251a4185e7c524ece5c9ce0030bfb716e1d",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9ca0ea1f998a11a24b843d67ff3dfec4c2d2ae11a8bee8f21637047b6ea9d584",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6d2638c5a0b9ab60a2752ed48412fe2e01d888e1443c81feb9788b9c48509fe8",
                    "size": 12463418
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbd00b0996707653c242081d34acabe2357644f5ae8524286fc4a9731fe4e373",
                    "size": 467
                }
            ]
        },
        "sid-run-20240103": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:66b6bc17a21d150457ff6ac7db8d215aabc18a3fcb0d674b1e1301f474b514ad",
                "size": 8323
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e81cdbbbefb0641e120eb93f16fa15d6f7b1f3b681b7fcb22a5b2230fb264e55",
                    "size": 29293036
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2b29fa71ed67bb325a7a6cc85a6440a7a0c05ee03ba5e48e031779640f6187eb",
                    "size": 2592222
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ac151d366a196f91b3eb38fd0b7e7d18d6c883ed7b1b1412dfe39f7ca843ddfd",
                    "size": 24768536
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc83d2bb1dd85b0da6df0d08427305412c5fda53922671f60b74b95e2ee22245",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2fca2f6f978e0645afb78c963b85a7b932b438408967e62782ec1b6f958cd751",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:b2dd23ea162c6464dc5b2d0079a02fac71f68cf00be81d201bfeab31a93a81a9",
                    "size": 252
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:18bff05548f2231efb53fdd60c1b5a9e75b15d95ce684c8b8f23396d9c9b366c",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:583e17b12e978ffc94340f16e4ec90ed8690f7edf860952f1495df69561292e1",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e4468f4d3a6184f73ade84dcb93a8dbc5238e55788447a73e4c907399ed203c3",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5ecc3cf4152b795fbabd3ded9d27b58f7dd81ecf316ae08eb15ac9f3609aaaf8",
                    "size": 460
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d4ed41f7195a7ac1101876345282bdbd14872a463d913d1e37c5f18c8fa5632b",
                    "size": 12465062
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eb06539007a6021671deeb8f88575621ec59de5a700bf178b41af09a4bd33760",
                    "size": 465
                }
            ]
        },
        "sid-run-20240105": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:e6c449770b26bfd809f221fe80bd32c455cb6e4024c28f33691f5c9de24cdfc5",
                "size": 8318
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e81cdbbbefb0641e120eb93f16fa15d6f7b1f3b681b7fcb22a5b2230fb264e55",
                    "size": 29293036
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6db57d1112d030c8e1c89b4d774b2d9231eff939606301294c70ce1455d932a6",
                    "size": 2592217
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d138aad16a1d72fadf8255725b5213e1d4b7d207cba6d68d8cfb2f97e97dde80",
                    "size": 27950276
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:19459aec1379fd91cca477ebf5bb5dd7d13261d74cf15b0e805086d03ff2826c",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:70cd97912ccaf5613b30a48c837a06f17230101d18324f8c48acf13c13d5fb20",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e803b02a04bcf26b64a0375e151c1860f8ef96e3140b6aee091a0422b29974d2",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9d3c68d0683b142bc61793be2eb23d34e09ec306c87b031bfa829c292b562017",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:225f30f6f60b7616fc0c2191ea97bf8ad4c3c812452b697f7e233f2a7f95ff90",
                    "size": 274
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:96cd0b09b63991b8c012d630d399904b45b932e398205f99b88a411db6806597",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2620cadc3e80465d18cf8d7c3706c84e050d565d90cdd56d1c79066d3c869891",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:eca509334469f52c57c557e68bc27cdbe458f06a5a81d423965409160995db34",
                    "size": 14700635
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:66beb5de2326f54c99d09f1d7b1ae3e861e6aa0f255f92fbe5cb837953772a08",
                    "size": 466
                }
            ]
        },
        "sid-run-20240201": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:5a932837fe9d06565e2104406e535b35580f559454725be52a5c97eb151efdea",
                "size": 8322
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:30808830f2bb5ebcfa2b816291fb89c02602e3e95c4b8fe3b0a2ad5f4d536254",
                    "size": 31560383
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:338fc5ddb609095b885737af0ed38ebbcce0bf4412ed49f8fad940dfe7a1e09d",
                    "size": 2592221
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:138f99b21ce44952d50add5903c3981cc528d00a74af8f53bba549f9476f6ff7",
                    "size": 21975365
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:dc1fa143db5b92e83dabe22a04035d7859ac77ce643c96871cc64a4e8addf6c8",
                    "size": 473567
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:63d1df0414c2a7d6316af8db4aa24527c8b9e57fba2261307cbcb345d2c8343b",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:423e8bc663fee5af7389ae65eae17c96c50ed8e3f9b711ec056216555562fab6",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f16c49ee0e6b1c48886bbc64da9e25435032d493a58b132b48635e5e15c0800",
                    "size": 1009
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:54b4125da3f0ee89d60f37093f73f2094f24ad103f1d1ca5a3ab6a33640331bc",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fc3330f45ede079f24228b8c3e19a8511b6e0ea817760c1add98336a6886fd41",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8815277c03cf7f918350821c5767870b49474a62804fd1a16d03e063aa9f26a3",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0152fd18564c9d9f3dc5e3572e1018af9cce1f08f2cf267168f3c641998d7e6f",
                    "size": 12786621
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:83208fb778baca9eb6752bda0507943252212980b02ec467b293bdaa9b84bdeb",
                    "size": 466
                }
            ]
        },
        "sid-run-20240227": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:86f018e6e78986a54fb076cdaa9b5773f6d0c56b3a77619745faa353aa654c3f",
                "size": 8320
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:156e7d847b11e9e8afa2923514f31c593525f51fa2451f1794ceec19f79f5943",
                    "size": 31560755
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5cc77ed921173e0630e7ab45ab6a73133d3fb34d11c36fb327d225532669dab6",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8487993f66d4e19b0267a0b800f697214e6f9c7128dd873605693d38d221411c",
                    "size": 27929468
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:cf376f2efd3380c87c5bed26a3515b2887952e7c510f89b5f42f3781fdc6528d",
                    "size": 473563
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:46fee49d372d8dd1919f855ce6d1c0b433d2684b9e8b416ac2248ddfaecd7cad",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:c263ca0ab0d98ceec572564742461502509a313e4ae6c05c5c38225de3a70ceb",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:376213124b8071dd80cdeac59566b17c50512691083ffafbeaf4c03bc7ad5c44",
                    "size": 1007
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:bd5401d65a09308d5c3568b5df96fbb68024916fb739c544d9a923b121edfbfa",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:27f47a786cb34e4b48d75fa567fd49e761a0afeb09fd637dacd907765601163b",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5960b9df1a6bfdf6c317dc2c1f7dd4e8ee87e364b9021801bdf9b063271db9b2",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:6859ca15b44817de1ae3678c2884341d96765de1a556d9d53390bd1c837438a7",
                    "size": 12797327
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9303b3e5c219f68e5728f4e2c14fdff89c44cb5a4ae975a1d14a427b68e6d97a",
                    "size": 463
                }
            ]
        },
        "sid-run-20240304": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:90dfeaf2e362cd914cdca5b259f7b977949f35650992b50b66140f7eeb6e5bdd",
                "size": 8321
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:156e7d847b11e9e8afa2923514f31c593525f51fa2451f1794ceec19f79f5943",
                    "size": 31560755
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f3fdfc232865bcf6a127fa34166d141d6cefe9a77f13b383ad0f5441a9467890",
                    "size": 2592224
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9fed2ebb8774b84650707f8e99c4e5137c05e35918e120a9259e1210e6f72ca7",
                    "size": 28702762
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e47836198904efdafbafa8848308674105b90406818ad6490d173184626b0924",
                    "size": 473566
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9d37a30d71afece4c3257ff3ae87f0f74a3a56c42a90f8b69e1105ef70c5718",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f4bc0753d504ff27f7533d92ae9bda43939e4ad7f15f7fd871222007848d1013",
                    "size": 254
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2bf794e1ec756f73a1b16119acc2b7bda4a82ccc2bc5f054493b16c53d115547",
                    "size": 1006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:38cceb9adb2494a293857b5270f2bd1390fa3bc9261c9a41ed064e6f51a37959",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:2e8130e8c509bd4af79178ba802d93cdf525556c911368c2249ffef30bad8fba",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:00d3d609fdf9eb35fb470bd535c17acbb099bb436a284b406680753529d73272",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:9c36b88fc4b820ef30aee39c785ee60856f6307e1170211698231540e37acb26",
                    "size": 12797390
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f7d7d8275d83294ed36192d2d51b60b7c0cf3047c870bfad430de347bc43f672",
                    "size": 467
                }
            ]
        },
        "sid-run-20240401": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:430f3eedc1c983267e2bc53c5432a519cd4f10431f92c3ff3c841aea4ae68f62",
                "size": 8307
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5addb9bcb0c706774be98b1416ef8e6f19c67290a713bd9b197c7da4875cd073",
                    "size": 30726503
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:606addce47d756f75710c9127014c091a361d7082000d2aa4647a934d0b6a032",
                    "size": 2592216
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbf59b915ef7e00f3a28eddd01e281b963eb5651eb99fa7186f6610478259459",
                    "size": 22886466
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d18adb59af4096465955e4848e100f8912fc39827cb555d1dc2e93f76621d2a9",
                    "size": 473564
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:55c8fb96fd0ff56cd40952020adec20474970bf9a58d9fda51b197794aab0aa3",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ba23e4e6ee5801f02701ed3302596a405bbf73892b23ac1a9befa6720cc1cd83",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fde0c1acd3c5218963c7bfaec46449db10a039416ead95b5d0644aea74a75a39",
                    "size": 1004
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:42c113dcd6bec16c39b642a91785a49ae109cab57c613a7c89f5bfc78d3e142e",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0559b238bbbf8b0656f0d98828f621586662a73483ed6e7ae2a3cedbddf8a186",
                    "size": 673
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:aef95abd3bc018607c606fde7ab299d4a43862a6edab5cfda83b9fe6b8c39de2",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:f9b627626f2127e62b456f2e773d97b90320c4215ea81b82d9c1bee2d3ad6d50",
                    "size": 12801288
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ecc1044448e8b659a99f88a075f2528b3f102258205a392be4da827d40da779f",
                    "size": 468
                }
            ]
        },
        "sid-run-20240408": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:94f3a4138bbd75ecbc97d0f2a53a3ad14739060533d91294c0d7d7799e0aa142",
                "size": 8307
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5addb9bcb0c706774be98b1416ef8e6f19c67290a713bd9b197c7da4875cd073",
                    "size": 30726503
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ead7e6cc20b4dc02f74e6b6e84736275d0244df7863c1df24d49b94112341681",
                    "size": 2592215
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:fbe5750a166857f965c56bc09c46e7ff5ce450e1eb09d9d089beb35892811cf6",
                    "size": 28830496
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0f3f255520a0b3a5dac6033ebc2da5bb7bf4e99ea67717d5e85731b683a762f3",
                    "size": 473561
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8e3c6882e720888d80b98ee45b55f9a6d84b5efdce17e9adba19d4664b3d99ac",
                    "size": 262
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:ec9ff89a437f373356a30f406aa3ca24453a4a761c7b301958a03fbfd11b151b",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:e1f5ed35ab3cc9cc5d96133100047986b20f86fd2d1898a26cf6bdbed7e58adf",
                    "size": 1005
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:d523bb1d4de808a083e762d17c8df0845b723c38cb99ac9e02cb8076bd5049e2",
                    "size": 272
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:69054fa98365991dc957f6d80c23af72c934be0043b4c3359b9134f8468b2dfe",
                    "size": 669
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:8163b91cb135af8c1f25ac6e881d07fe9ca21faeec189c2efe48a50dd2f9064c",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:711d32246cdd4bd8ef47afbafbd5ed172811516f0e46641899770e08ba271241",
                    "size": 15100006
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:7b4fab3a1439fa7e6e523af01d07452716567cda3a99463eab29363358b8a612",
                    "size": 467
                }
            ]
        },
        "sid-run-20240429": {
            "schemaVersion": 2,
            "mediaType": "application/vnd.docker.distribution.manifest.v2+json",
            "config": {
                "mediaType": "application/vnd.docker.container.image.v1+json",
                "digest": "sha256:02d0224dd36c887e6e2fc355b7f246614996434b955e9599ea8253569041dd10",
                "size": 8303
            },
            "layers": [
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:af4776df7d2dde797cda1f9c09fd884c9486c06066ea1352185e2484bb248500",
                    "size": 32165878
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:444a92c23835aa49d30fc1cf6510849ab0aa505180c4011203d923bf6bfebc24",
                    "size": 2592227
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:5546108d7162a39f8417c4829fa5b31ed364e722057e7a4e78f10e2b7df267b3",
                    "size": 25488372
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:07ccd9567bcf8f64a218d167746a94cf16d4b927ece15e7f29a65612fa4a814a",
                    "size": 473570
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:0243d4ca56617203e53026968094f79305a0cc058508e62080966554e1460a93",
                    "size": 263
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4ed20117a9444fad6261db6998729094a7fca99da1830d61d8d560e72a608a2d",
                    "size": 253
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:1a60c47a987638fd95f213f1714c066a6c7fd9d50bbdd24d67733421a916f363",
                    "size": 1008
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:329ec75c3172e40d8def6f4d43f6fcbdce3b4c4121fa0f0f49e8fe463d1e468e",
                    "size": 273
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:98ec53c8ff19e1279330ff7959072234ea9158e809230b49d40a795e9942b132",
                    "size": 672
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:4f4fb700ef54461cfa02571ae0db9a0dc1e0cdb5577484a6d75e68dc38e8acc1",
                    "size": 32
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:050171365b2ac3debc9ee1320d0b9b7057e5bc0653097d546c63f565c83aa513",
                    "size": 461
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:011e11334c91b4c770b452ccc945fb54a0e9109a34289bfc5808906501d14d60",
                    "size": 21313142
                },
                {
                    "mediaType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
                    "digest": "sha256:56b09a2fb9ba49fc07c8688029bae52a009c239ee2d3cc145a27006ba871051a",
                    "size": 466
                }
            ]
        }
    },
    "tags": [
        "20231025",
        "20231106",
        "20231127",
        "20231204",
        "20240101",
        "20240103",
        "20240105",
        "20240201",
        "20240227",
        "20240304",
        "20240401",
        "20240408",
        "20240429",
        "bookworm",
        "bookworm-20231025",
        "bookworm-20231106",
        "bookworm-20231127",
        "bookworm-20231204",
        "bookworm-20240101",
        "bookworm-20240103",
        "bookworm-20240105",
        "bookworm-20240201",
        "bookworm-20240227",
        "bookworm-20240304",
        "bookworm-20240401",
        "bookworm-20240408",
        "bookworm-20240429",
        "bookworm-build",
        "bookworm-build-20231025",
        "bookworm-build-20231106",
        "bookworm-build-20231127",
        "bookworm-build-20231204",
        "bookworm-build-20240101",
        "bookworm-build-20240103",
        "bookworm-build-20240105",
        "bookworm-build-20240201",
        "bookworm-build-20240227",
        "bookworm-build-20240304",
        "bookworm-build-20240401",
        "bookworm-build-20240408",
        "bookworm-build-20240429",
        "bookworm-run",
        "bookworm-run-20231025",
        "bookworm-run-20231106",
        "bookworm-run-20231127",
        "bookworm-run-20231204",
        "bookworm-run-20240101",
        "bookworm-run-20240103",
        "bookworm-run-20240105",
        "bookworm-run-20240201",
        "bookworm-run-20240227",
        "bookworm-run-20240304",
        "bookworm-run-20240401",
        "bookworm-run-20240408",
        "bookworm-run-20240429",
        "build",
        "build-20231025",
        "build-20231106",
        "build-20231127",
        "build-20231204",
        "build-20240101",
        "build-20240103",
        "build-20240105",
        "build-20240201",
        "build-20240227",
        "build-20240304",
        "build-20240401",
        "build-20240408",
        "build-20240429",
        "bullseye",
        "bullseye-20231025",
        "bullseye-20231106",
        "bullseye-20231127",
        "bullseye-20231204",
        "bullseye-20240101",
        "bullseye-20240103",
        "bullseye-20240105",
        "bullseye-20240201",
        "bullseye-20240227",
        "bullseye-20240304",
        "bullseye-20240401",
        "bullseye-20240408",
        "bullseye-20240429",
        "bullseye-build",
        "bullseye-build-20231025",
        "bullseye-build-20231106",
        "bullseye-build-20231127",
        "bullseye-build-20231204",
        "bullseye-build-20240101",
        "bullseye-build-20240103",
        "bullseye-build-20240105",
        "bullseye-build-20240201",
        "bullseye-build-20240227",
        "bullseye-build-20240304",
        "bullseye-build-20240401",
        "bullseye-build-20240408",
        "bullseye-build-20240429",
        "bullseye-run",
        "bullseye-run-20231025",
        "bullseye-run-20231106",
        "bullseye-run-20231127",
        "bullseye-run-20231204",
        "bullseye-run-20240101",
        "bullseye-run-20240103",
        "bullseye-run-20240105",
        "bullseye-run-20240201",
        "bullseye-run-20240227",
        "bullseye-run-20240304",
        "bullseye-run-20240401",
        "bullseye-run-20240408",
        "bullseye-run-20240429",
        "buster",
        "buster-20231025",
        "buster-20231106",
        "buster-20231127",
        "buster-20231204",
        "buster-20240101",
        "buster-20240103",
        "buster-20240105",
        "buster-20240201",
        "buster-20240227",
        "buster-20240304",
        "buster-20240401",
        "buster-20240408",
        "buster-20240429",
        "buster-build",
        "buster-build-20231025",
        "buster-build-20231106",
        "buster-build-20231127",
        "buster-build-20231204",
        "buster-build-20240101",
        "buster-build-20240103",
        "buster-build-20240105",
        "buster-build-20240201",
        "buster-build-20240227",
        "buster-build-20240304",
        "buster-build-20240401",
        "buster-build-20240408",
        "buster-build-20240429",
        "buster-run",
        "buster-run-20231025",
        "buster-run-20231106",
        "buster-run-20231127",
        "buster-run-20231204",
        "buster-run-20240101",
        "buster-run-20240103",
        "buster-run-20240105",
        "buster-run-20240201",
        "buster-run-20240227",
        "buster-run-20240304",
        "buster-run-20240401",
        "buster-run-20240408",
        "buster-run-20240429",
        "latest",
        "latest-20231025",
        "latest-20231106",
        "latest-20231127",
        "latest-20231204",
        "latest-20240101",
        "latest-20240103",
        "latest-20240105",
        "latest-20240201",
        "latest-20240227",
        "latest-20240304",
        "latest-20240401",
        "latest-20240408",
        "latest-20240429",
        "latest-build",
        "latest-build-20231025",
        "latest-build-20231106",
        "latest-build-20231127",
        "latest-build-20231204",
        "latest-build-20240101",
        "latest-build-20240103",
        "latest-build-20240105",
        "latest-build-20240201",
        "latest-build-20240227",
        "latest-build-20240304",
        "latest-build-20240401",
        "latest-build-20240408",
        "latest-build-20240429",
        "latest-run",
        "latest-run-20231025",
        "latest-run-20231106",
        "latest-run-20231127",
        "latest-run-20231204",
        "latest-run-20240101",
        "latest-run-20240103",
        "latest-run-20240105",
        "latest-run-20240201",
        "latest-run-20240227",
        "latest-run-20240304",
        "latest-run-20240401",
        "latest-run-20240408",
        "latest-run-20240429",
        "run",
        "run-20231025",
        "run-20231106",
        "run-20231127",
        "run-20231204",
        "run-20240101",
        "run-20240103",
        "run-20240105",
        "run-20240201",
        "run-20240227",
        "run-20240304",
        "run-20240401",
        "run-20240408",
        "run-20240429",
        "sid",
        "sid-20231025",
        "sid-20231106",
        "sid-20231127",
        "sid-20231204",
        "sid-20240101",
        "sid-20240103",
        "sid-20240105",
        "sid-20240201",
        "sid-20240227",
        "sid-20240304",
        "sid-20240401",
        "sid-20240408",
        "sid-20240429",
        "sid-build",
        "sid-build-20231025",
        "sid-build-20231106",
        "sid-build-20231127",
        "sid-build-20231204",
        "sid-build-20240101",
        "sid-build-20240103",
        "sid-build-20240105",
        "sid-build-20240201",
        "sid-build-20240227",
        "sid-build-20240304",
        "sid-build-20240401",
        "sid-build-20240408",
        "sid-build-20240429",
        "sid-run",
        "sid-run-20231025",
        "sid-run-20231106",
        "sid-run-20231127",
        "sid-run-20231204",
        "sid-run-20240101",
        "sid-run-20240103",
        "sid-run-20240105",
        "sid-run-20240201",
        "sid-run-20240227",
        "sid-run-20240304",
        "sid-run-20240401",
        "sid-run-20240408",
        "sid-run-20240429"
    ],
    "configs": {
        "20231025": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-10-25T13:36:09.420556221Z",
            "history": [
                {
                    "created": "2023-09-20T02:44:28.274078277Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:024479be439b4ecb37c939e68673adc72955f3345ca0e809bd13e897709e59e4 in / "
                },
                {
                    "created": "2023-09-20T02:44:28.657109179Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.858080788Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.858080788Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.858080788Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:57.7977819Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:58.988569739Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.089168973Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.248690513Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.263148961Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.274898882Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.292459562Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.292459562Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:52:00.209049083Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:52:00.377606115Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:09.268211703Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-25T13:36:09.268211703Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:09.420556221Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6c9ad649ba0489961dd64654574cc4134f9eed47c0be4524747da2f36f5dbbd0",
                    "sha256:b08019ccec097cb7e2d80a5a373d089fb37220a87c451e9677f21788a63ab9df",
                    "sha256:e0c742e70e226c5b515d773f2f3006d09f5d14fa46ef55db6d814b2d23376fea",
                    "sha256:d9c4546ac125486649b761fe5a6f90c38596e55dda46184f1f74e8181e280683",
                    "sha256:0ae6b9f93d0a321b28e66dd6bfcad103863c464397390bd9aee58dfe74c6b505",
                    "sha256:8d55be54b11efc7d91f4661764d70c84e0a707a7b3b4fa19794fa7e02c480df7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:181ae62c3e7c3ccd2ccc64cb4ce71975047ad32a06cdc919350115c21db5d2ba",
                    "sha256:8e98c7c789b19e4ea0845c3a83024108f2f6cb5e9c9e6e3dc78fe5640c548467",
                    "sha256:ff453fa1fb8a27a41215bc06494cb580e0f5c757ce4131f234e487d5fe9cb80b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:731889e3703c8c970984ea7eff9c585c06eb8969faa3419294996530a395e2fa",
                    "sha256:9b3c66a964515f327e9bd99a2f6feb12d32c87f72a24caccbe042c8fa1557114",
                    "sha256:dbd2a7ede00626339bb5e770f75c64b10a367f4d162ea82905f4dc4c5120c61e"
                ]
            },
            "variant": "v8"
        },
        "20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-07T07:56:32.721935662Z",
            "history": [
                {
                    "created": "2023-11-01T00:39:55.82247244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:99dc83e8bb8c67d9179a265fb750c76f73fa660e13e938b6cd613be653cd077e in / "
                },
                {
                    "created": "2023-11-01T00:39:56.253202489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:03.822317888Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:03.822317888Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:03.822317888Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:16.734944758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:18.114597076Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.213178797Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.362163263Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.372736882Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.383037997Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.40658476Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.40658476Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:19.3490972Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:19.509541994Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:32.585155369Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:56:32.585155369Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:32.721935662Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:60df532890c9cca1c175cfea286e7bc7d79a2f79592acaacf5fefc399ea9c569",
                    "sha256:e56f69cd0dfb229f9fd1407fbdcbcabe5b800ac5f620151bff8b5815cedc33ec",
                    "sha256:3da07ba74a1afe2b9300064007f6be2da7dcd8abff93119dc8d93e6a21602051",
                    "sha256:19e728986e1702d927d4208485c46bc397e5a8eb5822011ce8f95c30b6a2f198",
                    "sha256:8a49b7a43e9961d024710c4ddb502e0faf5fea4159963cb6e64fac3f529adbe0",
                    "sha256:33c493aba170663dcef60484c47635c490858499f11402fa7a235b50b64456dc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0ae003343d02224abfda090742390a33faee92ee2ba48d959e820659850b5d2d",
                    "sha256:7c541fed31d184a7f501c31741d0a27601983df8133f6f9cee1f1d0c23b3de2b",
                    "sha256:94f7179c895cd2821d04c1beb708fe27ebcc62fb0fce3aaaccfb3c061bcea59a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fd6040c95d6d45c2ad435c51f7fab05be21da3bf9a017d58e48d4d8e5bf5b3cd",
                    "sha256:00caaa193ccd9b79db01a53d77f0272ecc3981f709232a538e1758f2f637646b",
                    "sha256:4692c5419fb6bb870209ec7bbf138e68402a6ba95acb703f13e2acaea7b5c330"
                ]
            },
            "variant": "v8"
        },
        "20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:22.276834456Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:58.664127799Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.465195557Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.565496734Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.70470318Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.725314262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.734132316Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:09:00.452678113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:09:00.595471645Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:22.146341921Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:39:22.146341921Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:22.276834456Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:29c36ff94b71964100e213981142e520295b15626ed1879d99c36bd5475b76c3",
                    "sha256:6397d8e27bf4ad223bb62f7601f9a3621abe07e88e09b18ee1bda45f9bf57c6b",
                    "sha256:0ef0a058e815346f39e1ba03acb0a4a422c3b87e58fc08bbe1ba4451eacb40e5",
                    "sha256:d16b22555e3d20070c2841ee0429a7e3a11588536c24a86bb6cc689ca3c5ad04",
                    "sha256:d374c74ae31322409874a4a485abd512f03004938dfa1c7d3652c3fe9f9fd673",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0cdb1b92cbde3db5db232bacdd380b6078b8c4d0b02b6e7e44891d443ae4591f",
                    "sha256:7e2f22a4da908c29da27c98aeb4d9505c91ecd820f78243c7054d9229c13d30e",
                    "sha256:8658137ac973bebf78ffa2c27c9f3d7e1671d22d756b393fdf75d11afab0a398",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9982a6f0a6244d57c31563dd7bd54e7f0bc3227a7db2aba3321e9b2fc17da0aa",
                    "sha256:f986708a8c3fcc98685c8845af5cb2091fe6baebf4d0be17387735172b37d4ef",
                    "sha256:125659da938ed144fbbee11c82eaf60f900232ddc3f144fc9b6be7c1ab6e0f77"
                ]
            },
            "variant": "v8"
        },
        "20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:10:40.032709982Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:14.626506753Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.296969131Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.407547863Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.541071217Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.550355412Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.558824236Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:16.132254001Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:16.278960973Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:39.894277473Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:39.894277473Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:40.032709982Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:ee15dd3b9b4499504e15f776e985d6d6db85d02b2af28b58e0f6840a5611ffda",
                    "sha256:3cbf5bc1dd090798d60651ba9d8e5266744467d3942b27b8af9aad2fc6eb3d94",
                    "sha256:d64e3c8a34df828f9d322c1ad2571e1c690ad3d89848e9d84abaf02dc6f46d0b",
                    "sha256:90b090bbe57ed39388a1a1d27301bd521b19acbdaf63cf04c2344039fcdb3ac2",
                    "sha256:570d5cbcd38bac7a16ce13ae8fe4232ddf645709d832e69847ce9a3b3c4dd8a5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:86fc17d12f1d13dbe119209636876d35dec06d64ed19553ebcc3efba975b7b3e",
                    "sha256:13be287764da1f3fc3368a197eefd1344959dbe6a329e8fa4e2579f7026eaaa7",
                    "sha256:ce6f79e8950a46a4564a5a5aaa489dcce75c1ee6490661c3a5b008cd82481bae",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0a7c9edc80c512f510d67fc94d27e1370fdd408b3ae2867c02e0f583401a4d7d",
                    "sha256:6bb9cafb5e209a8cf07a0767d8b36a8299265b599d567386d904ef56d9546b3d",
                    "sha256:0cb3038a33e0a1202e668333ac150f1a85c9eb7542b7fb22867e40631e15b408"
                ]
            },
            "variant": "v8"
        },
        "20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:27.486010176Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:29.555242312Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.824526678Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.900951309Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.038705894Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.082582927Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.092267272Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:32.003177354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:32.125502794Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:27.38589354Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:30:27.38589354Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:27.486010176Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:bb6ae9568bab1557dbc3d0cb8316b7966b5aa7167c857ca6a0f3f564fdf87436",
                    "sha256:d0629d243e2fe6f305c71e391ff1739374dd4b8690415fa9580f1748a9a30037",
                    "sha256:a7c6b7a4f52829976762ad6a7fe7ea2366efd1affdc49a9cde65f5fd6388752c",
                    "sha256:99ccf9bb9c67f6d195c8614560587213a77feed85322c61f75a3c3b05ad02031",
                    "sha256:74b04caea3985b1e073cadcaa10cde033dfa3b97d3466a70e4333f5397f52cf9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:35c7e94083902da8d7aaa7dc09f3463588f11b349a5f04911657c96fd7679ed0",
                    "sha256:4d18e85f41ab5a46df0ca30aa473b2caf4ecb6a139678cc81f4bcca1ce2d7101",
                    "sha256:cff8c27c938f8613028b601b55db7bc98ee912e4fb47f73b67ef2c8e3c5902d8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b799a7e836857253809f557ef671537afcf47292a93e5a3b1b4fb24c57368bbf",
                    "sha256:77831a5aff08f46e4ee5d6114092b6bb0a017575658f76b9a61870231d0ee6f9",
                    "sha256:25a3d59481b1110d7abb32afd59cac43c73b473d451b1cff04ff47a526431d61"
                ]
            },
            "variant": "v8"
        },
        "20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:01.134351349Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:15.467501006Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.126208035Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.217017231Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.338788671Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.34938903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.360698393Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.10770263Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.229328657Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:01.028169707Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:22:01.028169707Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:01.134351349Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:01243642c945e579c0451a3a4d955bd4641e99c3be13311d4b167ba8693d062f",
                    "sha256:2f80d37556a1de5f09fec2daa7e0fc3e155d3521c833adaac5feede306196d7b",
                    "sha256:f89c52ebe0e3068a36445b6f944e2db340bce429d32fd7240b30e851aafd0fcf",
                    "sha256:a1aec53fe6fef2f29fd75283f3c27743f8500ac14efb26ce2f663c7844c42987",
                    "sha256:6e5cf0c7469ee5ce96e578b5ce1ae0633c328b13528b5346393fd9e31eaaeeeb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bcba603767ed25ba528e8f15a859e907b1e72fedb01a388537532d92bb0b9dc2",
                    "sha256:2e7da9139f8e1d258d5851ddcc7843e3dee1aed7e3cbbb0d33ea5e4787014c43",
                    "sha256:9c94701d7ef86d3d9234a468757ead3d8b56f6c0909d7034f57d0c0b935cea87",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:21899b3ce1344861e903bb14b2efdd11b565a59d6ce5807af64ec376e67ad7bb",
                    "sha256:de6a37085e57dad5fc42cbe91f200fcce2ff1525e6ef50c03689e972b4386102",
                    "sha256:c29f860fc079784e30e2b1140b222e49d08ac022d168fb3782d4ff55f6eca9b2"
                ]
            },
            "variant": "v8"
        },
        "20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:21.098183689Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:21.741125507Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.517492269Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.594603603Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.697980042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.707177419Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.714737325Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:23.451931585Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:23.578406313Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:20.989215513Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:32:20.989215513Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:21.098183689Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:7a95b560dc11fe5ff0559d2f6537c1efc83ac7aaad51b45a5917e009c0c06f50",
                    "sha256:f6031278a7707d1a6e07539ea7605f5f23152b27e222e41b6ae7de3e420b1ea3",
                    "sha256:21a99779a9767f9d83a5c911ff51d8913cf9d14aad33222a637f2e1d35a6e7c2",
                    "sha256:b4a309d2fce81e65a4957fbddc32a36ad3270ca8af70ff8b4b7b8036dd32cfd1",
                    "sha256:9fa7bf55497b544bde5f87788625c52fef31cd9a358c938fcad8e8c28654d184",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:77d57246a64bbe2f4f853d61f11398dc52b60dd9c570783a62321f1ce29d4412",
                    "sha256:8fbecbc914005ea0fdc87c421d160c414237e51547092ae9f58eec8659798ed4",
                    "sha256:617f6c14453696a372688649e81a54ddd9dc6290525c211a3c5be2b03141291f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3f41648683764f9b2f994bf34f3da567cdb788fb3004028ebced710d86f368cb",
                    "sha256:f200cee6f4fbabf8e69e5a179c7d425dee37e0afd71c343172a4f9e34918fda9",
                    "sha256:f52ca34206c81f2a436344e9a0948e1c414abf64a8adf7d7ff16c73bae67b331"
                ]
            },
            "variant": "v8"
        },
        "20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:57.897429552Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:57.783533164Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:57.783533164Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:57.897429552Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:fbffb08257a5c92284a41591aaa0b3710e07c8d07d6edc3b448342a0fc8b5b35",
                    "sha256:1c757983748130f1404140ddf3e14288d06d1848d42c7342d75d533d169ccf6b"
                ]
            },
            "variant": "v8"
        },
        "20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:35.919065732Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:37.612406454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.235239371Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.327380141Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.444407777Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.455821747Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.489249886Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:39.054577625Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:39.175091463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:35.810346277Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:35.810346277Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:35.919065732Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:3667705b92b777b9857445986385fa3544fe745de824ed9e48b74d48e233a73b",
                    "sha256:a8f393213fd8f42444b9081c3d25da37b97dbec4b8639fe0f0e3a7589d5440fd",
                    "sha256:9e491949c039a6555bfc9e8d7edc810a1157e4de0e5a1c481e4a9da99f8dc49f",
                    "sha256:9d1103a6c6fb53d9a95de8b92fef5116bca54e0566ab3c9ba1697738c9c49934",
                    "sha256:34b6b50b96caed9ea8b06be9b87ec63932717d466f5059fcce4e49d0b8b1fe0a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:648567a88a80c3aedc7a65bfa28ed87413bf435dc5a1cb88738e3c5896c0c076",
                    "sha256:03d885cb57438349695f4729f2c71f343028df5dbb15b096c1d538eabb3058bd",
                    "sha256:d10c87bc3a1b034fb2d7a2b64156472e0744796c40aa33beedccda60556fa259",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d88ebe737a29be3e76f6b02f3591509f373fd4b840fb08406f33169dcd0cd78f",
                    "sha256:48cab8f4281636a899bd689974b153a1fca219fe12423b0c24707409e719aeeb",
                    "sha256:6651233a11f55b902e6e420f598dd42c27d10e98cc21e0c31d3fe5419b132e9f"
                ]
            },
            "variant": "v8"
        },
        "20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:11.481917014Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.151462719Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.83609249Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.924579316Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.040114112Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.053934176Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.066241153Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:19.805586345Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.93208375Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:11.383908462Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:11.383908462Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:11.481917014Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:0f12b4245fa0a3cc547f2a1e523735b954a9327e222c9499e29df367c992fc25",
                    "sha256:e718ad40e3c90a1cd1ecacf3a26fab120e1dea3923670a16a4c8ca50b6aa9d15",
                    "sha256:94c43fe224b59dec6cae014ab2c49387ad78dc326e460a610de6fc06495c0c1e",
                    "sha256:fe063efa4d53e9a11ecb850c83c6dd1b8b9cf17ec889889f949361d332a5b185",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f767c7f76af4a12cb0e1199b0fc93840a3e5a2f502f98489563422b710c7c82",
                    "sha256:eebaafdb21b5c124a4063b6c1f0639260a303dd72ba00c9ec5ad78515f70a2e1",
                    "sha256:8c39f39f8c6773437573033b4459016bd870d9bd6b9034b07c451bd5a636ff53",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:88062171c3eea1172e399dc542b1a51a8e61572ea372e1516f5b57248db85766",
                    "sha256:9f9f9939f4dc2b1ea2b23e3fc7a7627547fe4771b5e60a57cef4abe19de95f0a",
                    "sha256:54ef0ce651ff47e577439a5a9ec24b5dffeb4a31cc2ca15967214aba59b89e1f"
                ]
            },
            "variant": "v8"
        },
        "20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:50.71203736Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:13.879662253Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.586745871Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.670518036Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.790637458Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.799775231Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.830003625Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:15.53078113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:15.644511102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:50.609020295Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:50.609020295Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:50.71203736Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:ed4cf4bf4b8884bdd10c62b3d9f3f64dcad62f08c9184d6e8c4e3edd498d6ae7",
                    "sha256:e3ff77460733b5c70568a050c25cbfbba938cfb55a53dd793006cf80ce8cc1fd",
                    "sha256:769ee8ef4da51e9377ca4f5d7e5b438c1bac43f38546dfe5b6ddb3ae5fc17d03",
                    "sha256:2faf27c705413cfe35a57bebf1d6dc6e5fed15c26b907de4e87eb462c4c8203f",
                    "sha256:c057d9490c0d6264b7858e1b24696718ce0623763d48f86d0eab46db57cc6697",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7333a928fdb22e11f1eb14ab19de0aeece67b74f04ae6800a48f3626b6204619",
                    "sha256:7d1b2cfc6f4a702dbc3c9da3af6ce40ed072aea5b43739a0f749f0f5a410074a",
                    "sha256:1faec101bbd8a81f2c905ae2146f8736e838f567a8b2f856533f8c07e083cc3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1dc00d63c3226fece7e9b01c6df138f48bb6914b96abf29daae86c6c2331068e",
                    "sha256:797ab5c9a9ac54e19dfc51dfee7076d4c2efae77fe13399f77b03f617df83788",
                    "sha256:ac8c0e12ba7892c39161fde7f5b19e2ce12876134e0ab5f0ef7ae50839c51b17"
                ]
            },
            "variant": "v8"
        },
        "20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:06.289822757Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.743482327Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.498252335Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.585989395Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.739473042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.787312463Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.797563821Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:22.394772002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:22.511272459Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:06.188737929Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:16:06.188737929Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:06.289822757Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:d04befff2a5273eded40c865c563f0d50276b31e32180679474e889fe080da1d",
                    "sha256:7b0c6c50c04ed7bf4b021ee99132e0366bf6ae4768e6a29e52e27fb6a1569aa3",
                    "sha256:2b57aa920cc2cddb5cf11eac876be5662fcb346e000afb2b1ced7b1295ed5a3d",
                    "sha256:9ad61a9af1dc63ddeb51e6fe9bbc82df2e37f1d0b967166d78ee356b54e2e32f",
                    "sha256:2011ae045dbd2ec46399c6e0e93d9cbef0dc64a181ee72a298737b86a13cadc1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71dc71c4129f2ba46a54c086463f9f61a15ea4ed70e3ad2fbf06fefc3ebda46e",
                    "sha256:46974ccfee6d4c0f3231897a3366bb38c4424b87355d0e626e0ae0d9fa0b7224",
                    "sha256:222ca016ec867e88cf844f487bab87a5460e34afed1ce08d1e7db271a366db23",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2af796bc84c5e90eb57e23c8d3adbf9050db0d14fa44a31e95248234ea6447a2",
                    "sha256:12aef4a7dd4d7aba50b7d32032292f9390c9cf5b0cff1b43ed39b331f27b3887",
                    "sha256:e1012b6262d2135f95d3bcb60bdf6f40c972ba99047c23291ab40da945c70765"
                ]
            },
            "variant": "v8"
        },
        "20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:13.281889517Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.176020238Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:13.176020238Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.281889517Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:6f2ebfb6fa5d8893e5bb258b80c5e32bad83feefed5c3d1505abe94c6c5414e0",
                    "sha256:24df7471595fbb4285ff34fc41a7d1ec57f6b4864230da6e39b91db98edfee50"
                ]
            },
            "variant": "v8"
        },
        "bookworm": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:06.699737464Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:39.225233998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea7004fb788ab5cf1604d6e71153c48d99b75fbd1810e78a8c79faff11fe6771 in / "
                },
                {
                    "created": "2024-04-24T04:10:39.576455849Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.077169061Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.937506347Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.032206671Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.147404774Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.156696765Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.19232306Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:27.143425379Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:27.300338572Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:06.589159366Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:06.589159366Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:06.699737464Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8560597d922ca8edaeea533c482a61b9cd840e55ae55cedd31b0087547e2933d",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:9a005735f93905c21dc34196459faebd252a5a10844a40eb5669aea32a39b95e",
                    "sha256:9350569411433d56e3852e0e2f4dc7decdd70009dff9cdba44d38f3f0489ebc0",
                    "sha256:117df0ceb231b578228599b6c142e4a34d84255be2688624757ba3bc4fd54808",
                    "sha256:baeab47a7671e653f8642536495730b0dbdeb9dd349f8a4115323039cdadf7b4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2825038c2a7d86110024c37372d227e96be6a954e7832622c439a54202fbfd98",
                    "sha256:827328bf11abc52b030cdb4ba699a6c85d3cad277623b1976866d8b07085d730",
                    "sha256:16b6beffaaaa1f3065b11eb80f19c72e494acc002063f47532eef5f093ff36d6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:07a1bf4ade3080f15be99893c80bc6afa2a1fadbcfcd18ebd5df49e6968d0998",
                    "sha256:4c9b2bc34afa34217141e1792bd5a4102fbb4fa0e6759663ca542f7b94f527c0",
                    "sha256:8df796358e178bc9eac2baa9854bac124af73c4ab847a3e0983c4c5d659c2eb5"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20231025": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-10-25T13:36:25.131995874Z",
            "history": [
                {
                    "created": "2023-09-20T02:44:13.845093157Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ec1a6e0aedd76c8fdc8544775f8b553f58950e9435f5cfe919f39374e222cfbb in / "
                },
                {
                    "created": "2023-09-20T02:44:14.239675816Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:41.20844374Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:41.20844374Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:41.20844374Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:54:35.020179596Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:54:35.763823562Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:54:35.763823562Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:54:35.763823562Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:54:35.763823562Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:54:35.86636126Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:54:35.970116586Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:54:36.144085885Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:54:36.156725468Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:54:36.195925347Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:54:36.219118567Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:54:36.219118567Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:54:37.610115642Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:54:37.779618541Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:24.967387036Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-25T13:36:24.967387036Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:25.131995874Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:311627f8702d2d97e63b916cad711aa9f962a1f20da5572d68b8f223ff051e73",
                    "sha256:9009176ab7aa73d7374ae807c93aa676752d0e7e5f11cb2c7ab020c291aa1994",
                    "sha256:4bdd13b88eac951aa612e74474a1e0650804dee315a53fd365a9cb4963796329",
                    "sha256:b6194d8f044c4c50d7294360a1f10ecc5453531ea4632fe0838bc50fe7bd55a7",
                    "sha256:df8d6d37a975d00d3f655a12a01fc1ca27808507815132a992cc656e161c6975",
                    "sha256:7b1bb882097b2081caa7cc00da8911139a19bbdd7f9667ed20e8b699714b642e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:80d7407cda7167aa0a6fe6bdb171ed1617cde17dc36cf53c42d67ce4eb8ecec6",
                    "sha256:db86311312a86c11b3778a2f9ff32f1cf3877f2dc95dd7de8710cbf0b241810c",
                    "sha256:302e279c93d241ffdeaa55041bd97d2e17eecab67f387e3f3a7ec2032476ccc5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:82f54fab30930869a47efe985ba3c2d37154d5664b6236b5b4f56c4ff04b6b58",
                    "sha256:94cb6216f54e8e0aa69223d2ac635dd0256158f6ffa3bcbb4a51601dcbe5e89b",
                    "sha256:cb1c7bd3fe26dc4b4389ba1bd531d60c453f551d7a6b926328ff0a69161a8538"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-07T07:56:46.523612035Z",
            "history": [
                {
                    "created": "2023-11-01T00:39:41.53802307Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c58f86cd28b3a97f884e2a46f8fe60a2c5c1f443e198bd10e3277b4f3653736a in / "
                },
                {
                    "created": "2023-11-01T00:39:41.992980947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:02.174467255Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:02.174467255Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:02.174467255Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:20:10.098938763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:20:11.028019789Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:20:11.028019789Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:20:11.028019789Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:20:11.028019789Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:20:11.166554072Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:20:11.318505764Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:20:11.511750552Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:20:11.526882677Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:20:11.551701658Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:20:11.566170138Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:20:11.566170138Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:20:13.157739607Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:20:13.361820853Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:46.342802107Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:56:46.342802107Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:46.523612035Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:70e628269d9fa63e3ddaa5e293bbc8aba5079d63f473f75c310b0c3cf2496f8e",
                    "sha256:1af8508980890972e47b1cf27f0fd68b1ec1d5dfece1c86e59d98500b58bfe1d",
                    "sha256:52e668559ef48106da3b4cfabec8f2924ce8cb03e31b37be76b9df22f4413656",
                    "sha256:f974bc5ad80a2b15432f4a141cb94e55ee281d09b900f25baa207798bab4adc4",
                    "sha256:ca7252f524e00b5a6423cbe2a00ba4c9c5103af24dc3a643a955a4b59ba0f8d3",
                    "sha256:f522ebe6d56b01dde2acc92cfc5680d4b0dc3ea224385a691c9ddcff72b8ea8e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d12f8e8bd2102c3b3d7541342023ab1e5a39eb5a598bfa5d4379bd771efab910",
                    "sha256:8aa2570971f3998c57a6d6d7a156944d19eb78fc0e9108b598945decc5c4ed32",
                    "sha256:49e45aad2d439151b40650c173de79b5fab15bbff8e0a191452cb138d5148301",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bb60af57305e78cbca3c220c2bd3b820eb5e0c9074a597e66ea199efc8e2ad1c",
                    "sha256:baf32da39724fa0c194cdc4d6eafea0cfc8f90543281c396f75582fa0a1c74bb",
                    "sha256:60b526ce25ed567a926302b3fea5496a404c863d83e03ac12adddc1bdaa1266c"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:18.432235953Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:06.399581142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:869c7d0747a17c53715581a2e862992eb8516c7f45f167821dfa80966a4870d1 in / "
                },
                {
                    "created": "2023-11-21T06:27:06.776864597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:25.110705178Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:25.110705178Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:25.110705178Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:06.716105061Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:07.830190616Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:07.830190616Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:07.830190616Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:07.830190616Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:07.930799198Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.048023972Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.206984986Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.218315588Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.229745456Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.266895095Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.266895095Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:09.408107823Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:09.551150821Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:18.326408858Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:39:18.326408858Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:18.432235953Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4e4d9391e1332a5b50063a92ccc434b92fccd14962fd9c37711d864d587d98a",
                    "sha256:316401953f8ab334a3a0a753122a2f969971e9dcd4abee42f7b9918e065a7f11",
                    "sha256:0491259f8c30013e7cf7714099e21dca2d32f765aac298423a43aa9604686a9b",
                    "sha256:d0abcd6aff176b9649a822dea6e9933981195fa944d746c0f46665914e1bf55c",
                    "sha256:3cec69d2b43b8394076870079300499babef94f37c1f4d19b29ddfcad28c6afd",
                    "sha256:4fcb8bed64266ae624da7e418e4c2e386bc3a2d7096280ac02c3611aca5efb35",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f409281d6d41299fad858a2ef832fed3abba62d1b81fca008d392bd081e76e5b",
                    "sha256:05628832807df937d8bbcf3795d3476998ec5de066b931e19af3ed2bf74dd074",
                    "sha256:30008bc6f41ad1bd8b891d21fd15037886e92a5f557d51c503023c6e55d88b25",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0a5f00af0c2ab1406136894ed5f738aece00f423a69a5faa85bd3b98c0e8b07e",
                    "sha256:809cde625e942a6a10cac7543689f9188b7587e614946f908fc029a8e5b3e279",
                    "sha256:0d8d52ed9fdc48735377015b4d8e8245145312c563515e64a6f277e2c114f28c"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:10:42.051234216Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:06.399581142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:869c7d0747a17c53715581a2e862992eb8516c7f45f167821dfa80966a4870d1 in / "
                },
                {
                    "created": "2023-11-21T06:27:06.776864597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.40522891Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.40522891Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.40522891Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:19.125484136Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:19.744515123Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:19.744515123Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:35:19.744515123Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:35:19.744515123Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:35:19.860866263Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:19.97464861Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:20.113291519Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:20.124304078Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:20.166996422Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:20.177259998Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:20.177259998Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:35:21.185237509Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:21.317621807Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:41.940641409Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:41.940641409Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:42.051234216Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4e4d9391e1332a5b50063a92ccc434b92fccd14962fd9c37711d864d587d98a",
                    "sha256:93ed37ecbec63b6a705c0e806bb2672dae44aad8d5ac1ce61d1321f0cdb3b2f5",
                    "sha256:6e9b582fa5384d7f7905e1c0d41a81fb810d86990661bc68a90b45a4172a1d60",
                    "sha256:0d62838d725f04884f464e5e2e954359ae5348959c790f802be10e5bfbb1af0f",
                    "sha256:c870cbd66b3ae132f982fd79f256233ad58895a69ad6cb7656a5c85baaa75400",
                    "sha256:078fb21837288ea35cca62fad5b2037af88f7844f60bd3b0a0da045770152ddc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a65fe06c07fb2b301ace1f8a684b5a1bbbae8f5a78c7a689fb7d54c63b958d82",
                    "sha256:8b0ef62688ca14ff43e0db9d1fddebbd6be8574c3e0b90bc0c3f2daaba70b737",
                    "sha256:f2a888cb5d5332bd211cdb18b49cb1acc310fb3b924bac2d62016b9501f93150",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d0d54bf653780011a612c9b24b99effaf185960e5ae6cd5e6ec1b886372e34cc",
                    "sha256:477d1742b6648029470d644a7c94a05f92d77af743467fc59906bdcf0c000839",
                    "sha256:827132c56dd30ec1918cc40d58f5784297106d7afaf62d8c2d5907430935da9f"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:17.672001655Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:11.205776448Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:262fd7bf0bc26e5d2a229fba52626e22b8a93beac29733acfc60e716c26e689d in / "
                },
                {
                    "created": "2023-12-19T01:41:11.641816314Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.669855779Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.669855779Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.669855779Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:25.771724649Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.346088635Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.346088635Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:56:26.346088635Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:56:26.346088635Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:56:26.458086836Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.546498434Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.667667028Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.679330726Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.691321328Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.734092625Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.734092625Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:56:27.696126872Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:27.807507547Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:17.568295147Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:30:17.568295147Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:17.672001655Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7ed07af9d6688899456cb187c1f81c88a30a60f2a7477d8e40af31a201b1a55",
                    "sha256:a8831bc4b02053919cdc5b288fbb2ac73a9447cafe2139e83d82d15a3220e9e6",
                    "sha256:474f509cb5eea21bf0718e0380d7b13c6fde15504373de439f8909fcf3119a1a",
                    "sha256:d997c907f739fd3f9cbd31e84323d9786df4cd20263fa1e18923e0a524cd508d",
                    "sha256:51310e236ccdd0fb3ceb99b981ef90d66b5f6adbe4766235d8f40b2e8232d10f",
                    "sha256:85591a815f3842c788751e06b7190b26efb241984270087d5fc4df7f2ada659d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d638fcd3d651ed38fac496dafd38205b8b1e7e58a53cca9bcd1e96aadbe56b9b",
                    "sha256:b0ebdab6fd02d5bb8a3fd87b2a10976773d6119f67117072f121837b9706cd61",
                    "sha256:d2e675b8086f49e4aec05988dc6f28d92ee13c1a011b1c497d900c3f7b199d8b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1b121453fcaf90d2054ed411b1b10a207b06439f037dc717a85c88ad451d3877",
                    "sha256:027ae6856c3acddde0a9ff433e9672561696af108c7071e2fe27c26793cca8c4",
                    "sha256:0e7d7b5b1af848c2c018529b91cfc66d3d63c0b464c574b2a5c94c23bfb0b68e"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:21:54.696878137Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:11.205776448Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:262fd7bf0bc26e5d2a229fba52626e22b8a93beac29733acfc60e716c26e689d in / "
                },
                {
                    "created": "2023-12-19T01:41:11.641816314Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:49.919124869Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:49.919124869Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:49.919124869Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:35.062832518Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.03229189Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.03229189Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:47:36.03229189Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:47:36.03229189Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:47:36.109739047Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.202273375Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.349151053Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.421020187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.430581869Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.440648902Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.440648902Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:47:37.624335879Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:37.741679865Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:54.594029571Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:21:54.594029571Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:54.696878137Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7ed07af9d6688899456cb187c1f81c88a30a60f2a7477d8e40af31a201b1a55",
                    "sha256:5bfad8fe537007bc6b9ca2d485d72c1d1350e5a011dc696a7c0362f8ba861112",
                    "sha256:4d4f2e5f7d8d01cbda94e61a8436ab3badf818b0cecd15b3b6b1fd8df635a627",
                    "sha256:d4d3c43a9051d5d74f85a702e7fc34db246ecda7d2591e891828421a59a1318e",
                    "sha256:f15a352416228e68db80c4562c001ca7738916231f9098315be5431a64ba2059",
                    "sha256:b81c058305163c96461ac297f679c62cfba1d933b1bf582f8fbb11c317d353f8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:85eb83ebbce9dc08bcb570adc80b870e009f0a5ada812b3937a034114b18aaf2",
                    "sha256:654bbcfb2ed7e65541a7436227c0ba0db40d524b72813e24cc7d6ba4745a24ff",
                    "sha256:30c81c00f93c1a7a1469bd271c3f5b3f9c7e036ad658522d0e7d6cfae354f96d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b7a879e8f80c771d0c5f1c2f6554a85ffebbaf33da1e2fe050c4051ba29f5f57",
                    "sha256:a5f443a1151c0bf50dddfb3552096594d95f25a570cadc153a4806892c55ab35",
                    "sha256:3e89504b71dc932e656e77fb26347969f6491299ee50e86ed53d07123d74994c"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:19.044003077Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:11.205776448Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:262fd7bf0bc26e5d2a229fba52626e22b8a93beac29733acfc60e716c26e689d in / "
                },
                {
                    "created": "2023-12-19T01:41:11.641816314Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:47.868101871Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:47.868101871Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:47.868101871Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:32.296400304Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:32.905158649Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:32.905158649Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:58:32.905158649Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:58:32.905158649Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:58:32.988367236Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.069469162Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.199352103Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.247182835Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.257047156Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.269513831Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.269513831Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:58:34.332407943Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:34.453373708Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:18.929900489Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:32:18.929900489Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:19.044003077Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7ed07af9d6688899456cb187c1f81c88a30a60f2a7477d8e40af31a201b1a55",
                    "sha256:a12ad07276f19b162694defa2ff93fbf1e1d77b382dcd0151977e7c51ec1f15d",
                    "sha256:9f3b41a9885f7a205a6307816a2fe42718c97e11579e3b51bb3a85d6f86bb305",
                    "sha256:a1a70382e0bdafbf708dc719940f71e7a2d41faca32f3539658b752935bfe6f0",
                    "sha256:88208ae6833fa8c3e90102762e560896ce9f225f1b1307a5c463b87bb7e5079e",
                    "sha256:1d57adfe88cf51e552b23a6640a8f0d97a3a64180a01af17e974369323d4e964",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d73f55517713e73317bf9bd90bbe7480a853bce455103463336546d1ddb9f0cd",
                    "sha256:afed1f40cf422efd7d7cdae986cddde5990714f03803397b8218434c2a8aa5c4",
                    "sha256:fef90dfc6a136812006c98e71ff86f2776113f1b79c7f93a0ad4a9c22aac4120",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:91fd19bfa869b188c5148f902bdf512167880f5849d640316eb517e3a50f76c7",
                    "sha256:d5d27499bb1bbd148312265c9735c5a1f0764c156976811ba10ff60daa1ceda4",
                    "sha256:6b8073806ece6236f16b52640e22538ce682787497fe3dc3402a2ba7d4184c1c"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:51.285082765Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:26.747674813Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef6f078c1e72fcfafb9bfeeff0c1c771219dc2efe34650963106f63d32183b49 in / "
                },
                {
                    "created": "2024-01-31T22:44:27.282481747Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.132956744Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.824027123Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.904196572Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.026957698Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.052032457Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.100053829Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.110090904Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.110090904Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:04.069731664Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:04.194924962Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:51.182738329Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:51.182738329Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:51.285082765Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:02eecd1b8ebb27cc1f576804168486c4c5c3180d22c50048fdaa546b581adec9",
                    "sha256:cee7b8a73f6b00a0d52ec5065907a069f7b04a5578c47d4485f9a3dcf21db778",
                    "sha256:ff31527bbefa947c97500000c0c7e8517cb22118b5c55889d061cebcf6c2b74d",
                    "sha256:1f90403ae42b2000913e0d46e4fb2072bfa14380a045260a54e4c6862579c16f",
                    "sha256:44093a65e83dd09b01084543e7f3afc720fca84bc85d5f357868110d76c34b97",
                    "sha256:5f2d388a034ef179a1e573a911c5ecea074ff5ba4cc97d47dfbaf1129438b7d8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bce06f7a82b98ceae70c933512d01a4581ebf3db6d2985361e91c1ee33cb1bac",
                    "sha256:1cb4945369b8ef77b4a81e2abb101c1aafd5048038e82d80c003ab3746a0cebd",
                    "sha256:b7c4f8f7859c5bbdcba94b1a2756854dd399fd133fc95bf8a1721f9247c38b68",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:25bc8c210c56622b3ca6c875d6c28158ff1a9dbff62c643cfc32267bbe70d592",
                    "sha256:b43873bf96cdb45f83f999c4ee09d1e1736da96b8a0ca95e5b15375a0fc751cb",
                    "sha256:f26d79ca40bd05ce48e1bb4e33e9e020558dacf041afdf4fba799e7048a6b4dd"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:35.834604837Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:20.454374088Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a3e4f94158c3515dc70de5aa81c136a9f7daf5adcac636a15c237097cb454140 in / "
                },
                {
                    "created": "2024-02-13T00:41:20.920485425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:59.42481027Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:59.42481027Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:59.42481027Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:39.930352302Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:40.681119982Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.768938384Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.890357763Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.922301492Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.931927895Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.942199841Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.942199841Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:41.888179766Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:42.017213443Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:35.732635411Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:35.732635411Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:35.834604837Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:644fed2a38987e9c2e23a98fbd38f898ab6ab64c8473b9123bdd970bb77c1437",
                    "sha256:819afa784c3e2987aef1409e05047cb7a110fcfa980ed6cab9de540fdc82f9cb",
                    "sha256:fa841c5bde2c582d4ad9966a24638ed552c5b89121feb59693bee2a1973c5750",
                    "sha256:af58095d0c29e3e0c6524925e61b55a80e862f78f072b56faac3218958e9e5da",
                    "sha256:5b5306a15e3de2fcdb1e8e5ce2d01ca5719a2f38ea79dbd382def80995d703b6",
                    "sha256:1f829424482353ffeffb2fa28ee8f61964dfcd38e52dc91ad7da0a95a2792747",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7497f5f0860673c8b3718f168710de4ddc6e095bdb37f44f3ebdb9777ab20696",
                    "sha256:09125f579dcf295dc3d0b26be9296c54bd7bbeec45aeeeb039f42e518cb7ef2c",
                    "sha256:e99946c74f0e6583d3369df6e398ecd62d8f229a44314ce82623c9977c2ddea7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fe5e57825de0fc482adf233a74b9e5821669479c5e91a12081d7d7ab4744e9a5",
                    "sha256:a31715ff8c1c4804337bcc5ed617b52e3259c15db465d50b281a05df11c36561",
                    "sha256:b96b80f27cdb7c2b9120bf9b1e709e31158f5cd9e545f229b99e443066f8f2db"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:11.57232037Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:20.454374088Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a3e4f94158c3515dc70de5aa81c136a9f7daf5adcac636a15c237097cb454140 in / "
                },
                {
                    "created": "2024-02-13T00:41:20.920485425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:49.05841767Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:49.05841767Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:49.05841767Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:30.292139599Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:31.438460441Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.523001967Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.636541653Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.662793126Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.734763532Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.745132046Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.745132046Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:32.835165297Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:32.953884027Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:11.463650291Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:11.463650291Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:11.57232037Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:644fed2a38987e9c2e23a98fbd38f898ab6ab64c8473b9123bdd970bb77c1437",
                    "sha256:83d700c544e1d388547184b0b58966790d564912d1572a471504bc5c89498e56",
                    "sha256:11cf76cefeaf1112139de1045639cbccd3a57a547ac337fdc588235c7d65e35f",
                    "sha256:ebafff57fd7c429daf8be6dfca41e50fe3a0b3ac7246b7fa0cf6fbbc0420b765",
                    "sha256:75b833b595252828ac5698120664faed2e15081d34a86dd73185948e45afa5ba",
                    "sha256:79788cb6c25987d985dd1de111876e880eb7490a1973770f4c240b5c1d01204e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c1bf4235489d8a8aadbcb887e1272aaaa0612c18a23ca3935f00b05861807a92",
                    "sha256:aa75a553a1713912a3a007aa0fb6a8094e45dd3d27ea17974a9aaa469e251f51",
                    "sha256:a240e6900a65724d931acc7625d592d1290f8995ad3b55dced088e079a9df1c8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2398f14f78d5851947025b83db3fe6bc7d6c917d203549c127e9a243d25794f6",
                    "sha256:3e1209fda36808318a3bafbe474f91b0e0222af4d729b48837396096a72841c5",
                    "sha256:6a6db910453e45ed470fe781e67783331295fc8d176b1f2f889458d1cac7fec8"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:53.212051428Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:36.854724565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85e3f04235f949795629380f3a50ca566471f0258cd4322937c8b1e0648a69ae in / "
                },
                {
                    "created": "2024-03-12T00:45:37.299748802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:24.342771025Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:24.342771025Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:24.342771025Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:06.406197917Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:07.095814844Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.198030688Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.323577194Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.337495487Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.373912066Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.386293885Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.386293885Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:08.344650615Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:08.473198876Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:53.110066978Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:53.110066978Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:53.212051428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d64c46ff900ce5a646435f2232e9bdd0c551cc61e727d4d9502d48ce9dcefd25",
                    "sha256:de0acc254098be57b25b3573d9774773ef65a4fcaa06db4ced68df3d464b75ae",
                    "sha256:6fd16f9591b7e75eda7aa82ad9ca2f2883f73c745b4ae7900094fde6f5f3a182",
                    "sha256:32c191e36568ad3e3b83655eefea02dbfd5d6e6780af68021bf9dc226b7c72b5",
                    "sha256:cacb9e9cf2327e21af2d985de21c7398d4efd1d6ed68736983f3b2dce0ac2cf6",
                    "sha256:de0414d61c5298f55bbbf238cb165da20d3deef342ea10b1027726fc4c2ead29",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e6e89d7feb3328bcaee2f80f75581617e21fbefe70715097f78ca83acd939305",
                    "sha256:cc8007c4d44b0595626af5145ab4533af8050e14119ca2a75277de4aa8970ec9",
                    "sha256:5ee8ee93e17be888a2050990ae5264d65232f283f2197e2abf5f0d94eab3b592",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:119847f5856d27cd4e043cc362634527f7860270820fef41527fd4295815a8f1",
                    "sha256:6545cfa1f85dd4cd6a78f1e4d51b2fb01542a71394f4b6c0a86f8a622c0c04d4",
                    "sha256:111d4d355c08b931378c58ee76dc6e827b60a3f40d5918859769664c2ea9c020"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:15:59.943360385Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:36.854724565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85e3f04235f949795629380f3a50ca566471f0258cd4322937c8b1e0648a69ae in / "
                },
                {
                    "created": "2024-03-12T00:45:37.299748802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.461029064Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.461029064Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.461029064Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:22.645447635Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:23.313658027Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.402635934Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.53747386Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.561498047Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.571843507Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.583043144Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.583043144Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:24.547695956Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:24.675471591Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:59.842193911Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:15:59.842193911Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:59.943360385Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d64c46ff900ce5a646435f2232e9bdd0c551cc61e727d4d9502d48ce9dcefd25",
                    "sha256:0f23ba39c0652dc1e8f4c7ecc5e21333a0b55fa4db5f1a6a4fb06b005ebe3bcf",
                    "sha256:ff9efbdec5ea3692c38d94cdaf146dc648591772e6309be77b19f6f2a69acd12",
                    "sha256:7fd47df956546e21f9a46974ff89a2e1520dce1b18794d1e46813d6061b62158",
                    "sha256:bb6473d71d44395d7a777fc12fcaa0f41bfb272b57bba4b8c3a96e64e660589c",
                    "sha256:8851df102d3ee94ff51037b8135be86234001503f550b1aa4a51c45708974ea0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2cdf830e7f05f8c6abcdcda9f6a2c69c99ad3dae43534d683fae8b1f927d71df",
                    "sha256:7cb1fd1921fc228059ef7088e8836717999f3d42789694598ebbb1861e7d1724",
                    "sha256:e624c62faad1811af0276668a17c9f2593a4e92140c11f89ff8cf9bcfa8bb73b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:16f1112eda98e42d16b34cd4bfed296e8573ed72263e18f0012ff1134c4a7602",
                    "sha256:b2c4a5db50be91b9fbee7130dce1d1df3ecc755e9c7316f961eb99e6a4079593",
                    "sha256:3a2bc0f33fa40be91f3527a79803a622b15a51548c5bbd3c7b4d5fa394e09c9c"
                ]
            },
            "variant": "v8"
        },
        "bookworm-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:06.699737464Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:39.225233998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea7004fb788ab5cf1604d6e71153c48d99b75fbd1810e78a8c79faff11fe6771 in / "
                },
                {
                    "created": "2024-04-24T04:10:39.576455849Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.077169061Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.937506347Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.032206671Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.147404774Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.156696765Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.19232306Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:27.143425379Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:27.300338572Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:06.589159366Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:06.589159366Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:06.699737464Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8560597d922ca8edaeea533c482a61b9cd840e55ae55cedd31b0087547e2933d",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:9a005735f93905c21dc34196459faebd252a5a10844a40eb5669aea32a39b95e",
                    "sha256:9350569411433d56e3852e0e2f4dc7decdd70009dff9cdba44d38f3f0489ebc0",
                    "sha256:117df0ceb231b578228599b6c142e4a34d84255be2688624757ba3bc4fd54808",
                    "sha256:baeab47a7671e653f8642536495730b0dbdeb9dd349f8a4115323039cdadf7b4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2825038c2a7d86110024c37372d227e96be6a954e7832622c439a54202fbfd98",
                    "sha256:827328bf11abc52b030cdb4ba699a6c85d3cad277623b1976866d8b07085d730",
                    "sha256:16b6beffaaaa1f3065b11eb80f19c72e494acc002063f47532eef5f093ff36d6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:07a1bf4ade3080f15be99893c80bc6afa2a1fadbcfcd18ebd5df49e6968d0998",
                    "sha256:4c9b2bc34afa34217141e1792bd5a4102fbb4fa0e6759663ca542f7b94f527c0",
                    "sha256:8df796358e178bc9eac2baa9854bac124af73c4ab847a3e0983c4c5d659c2eb5"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:32.720336741Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:39.225233998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea7004fb788ab5cf1604d6e71153c48d99b75fbd1810e78a8c79faff11fe6771 in / "
                },
                {
                    "created": "2024-04-24T04:10:39.576455849Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:40.637182331Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:40.637182331Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:40.637182331Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:20.641319513Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:54.810673851Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:55.550777756Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.643711244Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.75756289Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.770162739Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.819007638Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.831626609Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.831626609Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:56.7808915Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:56.909990889Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:32.630009232Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:32.630009232Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:32.720336741Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8560597d922ca8edaeea533c482a61b9cd840e55ae55cedd31b0087547e2933d",
                    "sha256:28d4e208a7a00b359594125dd821af14aa8f202a8ec604e2e7da4bec1888529a",
                    "sha256:174f2361902e2846e389337bb3303cc4a8a7345d7adf74bd1e5dd8fdcab0197a",
                    "sha256:607ba54df1c61c1e364e4894a43eaa9e200a3380fa1c25941b9633f5cdf1bf7d",
                    "sha256:26ef1631f9bc0161ddcbd62cb40e71a79b44bf255d7e6a65264edae1987a1729",
                    "sha256:bb0a9b183b38a2276f2829317f6886c6f498d6e5c76c85228f2521da544ace8d",
                    "sha256:3736f03f6d85824da841726d8605393e73b4e677a9f550f10807b0d505161894",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e68f2c2c4acd87cec5fafd4c8914e7a2a49b05afc1d0f44b0adef78d69f7ec8",
                    "sha256:73af136dd09f5932e6899b694d0041ca6b32bfca42409e77577b14c6635fdd7e",
                    "sha256:c81b8a5b064118bf193606a219c626cea60ae2ae1eab3ab9c316a81fdc322f59",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fab48beffc82031db3f779a212eb8f136c7e3ab604526698128e420f2bb20a47",
                    "sha256:2ad0b937827038eedc65f64f9325961e0f3584e9ee38115d5fb52a73166db732",
                    "sha256:cbc5286dc1555f4dd0fe113799a0eed10bfdb31f37adc734997b6bb65b1f3332"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20231025": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-10-25T13:36:33.257242172Z",
            "history": [
                {
                    "created": "2023-09-20T02:44:13.845093157Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ec1a6e0aedd76c8fdc8544775f8b553f58950e9435f5cfe919f39374e222cfbb in / "
                },
                {
                    "created": "2023-09-20T02:44:14.239675816Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:49.619522322Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:49.619522322Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:49.619522322Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:55:37.905520878Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:02:04.297142299Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:02:05.706020511Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:02:05.706020511Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T16:02:05.706020511Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T16:02:05.706020511Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T16:02:05.837475501Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:02:05.971388697Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:02:06.156208805Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:02:06.175025647Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:02:06.209376623Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:02:06.230951171Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:02:06.230951171Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T16:02:07.715199742Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:02:07.902808555Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:33.114298408Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-25T13:36:33.114298408Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:33.257242172Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:311627f8702d2d97e63b916cad711aa9f962a1f20da5572d68b8f223ff051e73",
                    "sha256:255910e53fd72fe7b4f8c20900691366c627238cbbc25a1029369db93973a541",
                    "sha256:3852f1f8289813e39e4610a800bed065c50992803e8246ada43f1d8fef0b91bf",
                    "sha256:a56ad4718d5cbf42b710072bc78b2682b28b14dd884cfc0c111301007e38cd5d",
                    "sha256:35a5e691af22cb2b31a7387447572cb8e696e1e1f582fd61ea1e2eba88eb028a",
                    "sha256:21ab9466c076ace15731a7f3a0658aa0f0361d101bd1aad1a17a4a71cf7ecb30",
                    "sha256:cbaac07eb7db2796df94daa6e4675eab029dd75d05cb4006f776c1b03d9c8598",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ef40f49000c1a7b7c564b15de5bc75928cd24f01fdc590eaeec339ed91ddd78d",
                    "sha256:d19db62e9915adadd22f8a0b4d41459f7c0738db6c140eb848897163bb2289ea",
                    "sha256:83a734bb792ba4c725eaa392f1754312ded8a87286e1bc1f071af093c11d10dc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:81899918fe83e71aaffb233dbf9c499446a910333dfebd1530aa3f41d188facf",
                    "sha256:7e81f7ae29ae7d3a64c543e586754af3e073207133b24943d394a5a4eed288e8",
                    "sha256:db69cbb32fb70f1c1bdb6aadb6e23a0b5ce9c47928c21544fd44bfd73ddb4720"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-07T07:56:45.751676439Z",
            "history": [
                {
                    "created": "2023-11-01T00:39:41.53802307Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c58f86cd28b3a97f884e2a46f8fe60a2c5c1f443e198bd10e3277b4f3653736a in / "
                },
                {
                    "created": "2023-11-01T00:39:41.992980947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:02.377904024Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:02.377904024Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:02.377904024Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:20:11.241657417Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:26:26.704867535Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:26:28.204689942Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:26:28.204689942Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:26:28.204689942Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:26:28.204689942Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:26:28.322843701Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:26:28.448416532Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:26:28.622946743Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:26:28.642646836Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:26:28.66848599Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:26:28.685324655Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:26:28.685324655Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:26:30.362695503Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:26:30.569659732Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:45.64449441Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:56:45.64449441Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:45.751676439Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:70e628269d9fa63e3ddaa5e293bbc8aba5079d63f473f75c310b0c3cf2496f8e",
                    "sha256:4482a29c4e88a7b48e04b73a70833b197e51aac232fb1683dae51172855a9bcc",
                    "sha256:5336ebd30eee2e324051d447a168abb347b57748a480f07cb8d1210fc9501fa4",
                    "sha256:4b0c76cea66108ad94585fbce663b51ceaf7400b746aa302039b24abece0b59a",
                    "sha256:c3b6c1d84a438664f6d7bd9b52076eb05478b460e130a2806106255b13422964",
                    "sha256:c83e253e5daff64ea99b9619f093fd91b87b3b821e31d58246930f6e4a0d9e20",
                    "sha256:ee36d2fe4f964c916e01b49a825d33a1e2d9e4c125b4ee72d047a0c9f6a3adab",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f62ccc8f456e06a3cdf4609e87cfa5148cdcd5010549af6710338d9cc394438d",
                    "sha256:5ab8d6338694aa03b8c0adb4f30e81aa7daf65fae3010489d028d175ecdfc152",
                    "sha256:d8a9145174f84cec4a7f77efadd77cbc5abea1c54501fcae7fc56c1e652b9180",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0675bddc1f9ae4fdcef837b876f7f46dc80a3f7398b48a21bf6485813c25f853",
                    "sha256:725dde81c06be4630d86873a9cacf35137499420a6d0151505f9fe03b7e6709b",
                    "sha256:399a1150ee4930612bef61433213552520617e93e4398208383fe30db970524c"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:26.261052405Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:06.399581142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:869c7d0747a17c53715581a2e862992eb8516c7f45f167821dfa80966a4870d1 in / "
                },
                {
                    "created": "2023-11-21T06:27:06.776864597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.971437715Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.971437715Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.971437715Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:03.878363125Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:14:32.451064443Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:14:33.130964622Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:14:33.130964622Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:14:33.130964622Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:14:33.130964622Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:14:33.265808107Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:14:33.380932684Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:14:33.522514945Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:14:33.534826348Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:14:33.545953279Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:14:33.559437158Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:14:33.559437158Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:14:34.577132059Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:14:34.724779192Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:26.140874058Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:39:26.140874058Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:26.261052405Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4e4d9391e1332a5b50063a92ccc434b92fccd14962fd9c37711d864d587d98a",
                    "sha256:22147cc4da34651a6f6e460756a8ba7315e8286abd56b054c750ef0f4185029a",
                    "sha256:cc2f1ddb65acb44fc2f9990ff495b13e3c56b6347a1e2bee3054e5a8f76e89e7",
                    "sha256:6d2d959b605eeb9f05b20e6bd6fc699657e4b43faacf94b8ab87a73694de934a",
                    "sha256:59db5e17c4fe9a18b9c27f5aceaac533145597de1681d61e4c7f29c64add7de1",
                    "sha256:1c13ce0b034d41a09fb12caedf618b7ad4498516fbc812be4ca51ee2b80353c4",
                    "sha256:7bb0e813d0a60a73fadaaba04f95e09b626eea8bb962eac5bb7f054bb003ff2a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e019ece92592365dbceeac69d52a3b38afe89a81d286df96988e2e8c4d454b9f",
                    "sha256:2bba433a88eed9f9bed2b942629910b1aa49ab09d849f04a2c5d22434d8f9027",
                    "sha256:b40a6bc746fc0ac4ad3697d4ad25053528a01cccf950247b8be3c3274a5818ed",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5ffb9608d7aa1404b90afdb01a4b374c5487833504c650f37a51930b454803bc",
                    "sha256:d57d09cdc4d85050119d82dfa68ab3cfc76406c4a4bea5976f75ff3190d55164",
                    "sha256:1019422bc80bde18d36a9adc2bec35d10a271af9aa9014bedf667ecc4b0f6bce"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:10:48.992238027Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:06.399581142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:869c7d0747a17c53715581a2e862992eb8516c7f45f167821dfa80966a4870d1 in / "
                },
                {
                    "created": "2023-11-21T06:27:06.776864597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.67784Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.67784Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.67784Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:23.113604942Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:38:57.870344961Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:38:58.692164963Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:38:58.692164963Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:38:58.692164963Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:38:58.692164963Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:38:58.804765535Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:38:58.930857356Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:38:59.064445553Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:38:59.074981384Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:38:59.084715311Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:38:59.094717632Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:38:59.094717632Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:39:00.086441095Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:00.249624741Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:48.866155858Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:48.866155858Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:48.992238027Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4e4d9391e1332a5b50063a92ccc434b92fccd14962fd9c37711d864d587d98a",
                    "sha256:ee15dd3b9b4499504e15f776e985d6d6db85d02b2af28b58e0f6840a5611ffda",
                    "sha256:20b21b0ed2f15b3014efeb6f5540214ec89e174c8ac4da12a538f603731bc5ce",
                    "sha256:1686df53810252afdee1f9b6922b275bc90f724057d6ce1731cca86d504af729",
                    "sha256:22f44d25df1a3be16f6ffe9f7b8e8f6a3a06446d9ccb7ac0da71f470b754050b",
                    "sha256:f32e77c3d1c4c087c4b6afdb2aef09bac0349cb7671fc983a1d277fa2b1aac34",
                    "sha256:c362c7b770e93dc5455247faf829d94481ede19686fc32a1e09adee29190ca3f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d24b88cc2b8d508cc9e95395b22efee96949b5986d403ab50f8f623c5c6c5b87",
                    "sha256:9184ad0f744526ec81efee6ad39fc2e3a3b0ed2109e65868dcb9dacb7826219f",
                    "sha256:690b807b18cb636fc86843b61211006b3af31bcd5bfb9c12fceb54f4c719e7bf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:646e49e07be7542dbd1985681f1cfca5d43bf73473097e0e1d76a8813b0aa9a6",
                    "sha256:df375e75759c6934bb9da701b9f2ea06866392872bc67a3b5c6a70cd5ade8169",
                    "sha256:7d762e7d4c1fd1b89b458b7289d1e33fe5222d5efcdccc61fb4d5593b6c2e818"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:17.76313017Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:11.205776448Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:262fd7bf0bc26e5d2a229fba52626e22b8a93beac29733acfc60e716c26e689d in / "
                },
                {
                    "created": "2023-12-19T01:41:11.641816314Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.465994028Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.465994028Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.465994028Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:25.573929543Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:59:54.682393736Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:59:55.350509477Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:59:55.350509477Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:59:55.350509477Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:59:55.350509477Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:59:55.432929724Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:59:55.52294669Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:59:55.632791042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:59:55.645885374Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:59:55.682017858Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:59:55.691678772Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:59:55.691678772Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:59:56.753994341Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:59:56.874142713Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:17.670982229Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:30:17.670982229Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:17.76313017Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7ed07af9d6688899456cb187c1f81c88a30a60f2a7477d8e40af31a201b1a55",
                    "sha256:a8831bc4b02053919cdc5b288fbb2ac73a9447cafe2139e83d82d15a3220e9e6",
                    "sha256:a72b91dba7cd23f3d12160e3139b0698ebb36ed8223ddbd09982c38934f893a2",
                    "sha256:1d88ff96b11d01939233b231bc3fd05357a6ee0a670c8d6ccc52ede89217626b",
                    "sha256:cb4225340cb8f00f39663e506d759bbc5fa2730d55de5f6b0ebe2511ecc6372e",
                    "sha256:7b3f64ae387c72cccb0157a6491555ae3693057c40b1e0ebc3fbb168296be881",
                    "sha256:d5eabf39c2a7322608e19750d8fdb3dcf496748567efe79682dccdc2d53f23aa",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bf588c5305b5b8592976d333a6d90396f673756d4acbbcb94af0487afc307b60",
                    "sha256:615c5dfee9619097904150117068dae347d2ce8efa6e5880f4568bc53bba995d",
                    "sha256:e80129dea28033f0458601756604f1363588102626190054ac833eb3dd292e7b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:764b1605db510755dec95bd5b1a9f98113096adf5910dec6301b8bbcde04b03a",
                    "sha256:f4172ea579012b7dfcd147bb5251bf212d387f653050ff3491861246868a0aea",
                    "sha256:44078f4c789baada00ede12fd2c5b2f4a46c0a9b4d66d27f6d34c2b7e63c5fb9"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:21:49.546092843Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:11.205776448Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:262fd7bf0bc26e5d2a229fba52626e22b8a93beac29733acfc60e716c26e689d in / "
                },
                {
                    "created": "2023-12-19T01:41:11.641816314Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:38.991562853Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:38.991562853Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:38.991562853Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:19.445965032Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:50:46.700035895Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:50:47.371101609Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:50:47.371101609Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:50:47.371101609Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:50:47.371101609Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:50:47.456948599Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:50:47.540244401Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:50:47.650370803Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:50:47.66016165Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:50:47.668269636Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:50:47.690380746Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:50:47.690380746Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:50:48.795630618Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:50:48.9155268Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:49.441009513Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:21:49.441009513Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:49.546092843Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7ed07af9d6688899456cb187c1f81c88a30a60f2a7477d8e40af31a201b1a55",
                    "sha256:354207cadb909910f17f9328d2d37d6095f7a9452ff2d49babbfc8a2d2c71344",
                    "sha256:e7c5ccfad4941864c9c1cafa79c65c7688e92092edc61aa501f22f6b94fff139",
                    "sha256:47ac9ea374c85d1be42007e36293d5d63cb1113825b731bf0175c6f665d35f1c",
                    "sha256:5bfb9d8f592cf06708cedbe87e0b795f2187ea8866485f58300b7c6ac26b331c",
                    "sha256:3b82309a1be4e192db46b7996d7bc382a1542125d12fefaf723719c64668a2d9",
                    "sha256:e70150f51aad54ab25c0d04173285ed92e2d09ed1619e6744239b37557d591ba",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0d71b0bee5c8891b41f09835957987739a9dfeca26142c7085fdb754bc5dff18",
                    "sha256:4449c2056a62cf1025783c3f1be2a5686100c95dedc8ca9c8e0a15f525cd73b0",
                    "sha256:f57921b3643fab2a3a37016e6341e36beac7a1f7dddfd5e973b6c93bca4b65a5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:edeb9a2fe070c5b8825e0c9adc309f1877dca50e6419e3e6ed1f3b5f0b14df3b",
                    "sha256:6ad55492ae13bd9d91382a82debaff7dac6bb81a0143970f1f86c9dfb3104575",
                    "sha256:1693e728e846098401d02a014ee7b02bb6fc6abc86e20fb7f8038c56b179e3b3"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:25.15046091Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:11.205776448Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:262fd7bf0bc26e5d2a229fba52626e22b8a93beac29733acfc60e716c26e689d in / "
                },
                {
                    "created": "2023-12-19T01:41:11.641816314Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.867924Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.867924Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.867924Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:24.627686635Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:01:53.408744922Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:01:54.090747958Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:01:54.090747958Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:01:54.090747958Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:01:54.090747958Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:01:54.207984067Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:01:54.295716566Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:01:54.420163453Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:01:54.429947776Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:01:54.439565891Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:01:54.480673448Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:01:54.480673448Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:01:55.426007869Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:01:55.550454946Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:25.056271857Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:32:25.056271857Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:25.15046091Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7ed07af9d6688899456cb187c1f81c88a30a60f2a7477d8e40af31a201b1a55",
                    "sha256:403dcef4711d6d3f99841ca0fe0164ddfd4fac61ef1587a639f4009d4242918f",
                    "sha256:6c1429d3446602b15c7d37a9512577ea41d5e10b667eddfca8ec739beea56e28",
                    "sha256:04279ac2d7febc5670fca2e565455f183f7d7afee382d0b3e5644da4e9eeb468",
                    "sha256:da9a564e9e7a42b4f28dd574b53964b044c1b5ac9d68ffc9c43625dd56ebd91f",
                    "sha256:006cee11b061bc5a3ee0b2b8f8f0857a0fc04cde25cb132ec25af915c6994c3b",
                    "sha256:8916197e36dae863fc6856becbe169c88fd896229ebebbd17104dbad004c9435",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:82c6d47f928047b470eee0d82e90f1c8d095ffd2c581bf2d3dce81aca09841c4",
                    "sha256:66c1318357f1dbf5f5bb1ff15eefcf5dec5631d6b9e3dad42033b8c13ee9fb7c",
                    "sha256:ccc4b1bf9486d0e0dd7a38c2f6313608ea69dda1d61fe1d7b3f10ce7a5dd2042",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f0854e568f859ede1d02bd4c051825bc232d4758446d17f30492eff7ecce2d5d",
                    "sha256:8544ef88e50990d24784d473cb54d393c79c07f9a4888932899c35acd34c61b8",
                    "sha256:f1e17625ffdab49da91d43781517afe7f0c3f1384d9dd4e9b6d4d6dcbf1921ab"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:56.183845224Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:26.747674813Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef6f078c1e72fcfafb9bfeeff0c1c771219dc2efe34650963106f63d32183b49 in / "
                },
                {
                    "created": "2024-01-31T22:44:27.282481747Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.620457976Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.620457976Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.620457976Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:01.883578278Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:28.737071441Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.419399791Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.419399791Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:32:29.419399791Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:32:29.419399791Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:32:29.496759822Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.576356588Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.719563691Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.767460322Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.779045308Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.791746897Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:29.791746897Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:32:30.813151562Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:32:30.946516429Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:56.092784815Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:56.092784815Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:56.183845224Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:02eecd1b8ebb27cc1f576804168486c4c5c3180d22c50048fdaa546b581adec9",
                    "sha256:cee7b8a73f6b00a0d52ec5065907a069f7b04a5578c47d4485f9a3dcf21db778",
                    "sha256:ea3373be7d936f31f8207b274f73cc993c48c81c7ab8ee819f296afd3cb49a21",
                    "sha256:a9f156e3ef14a7f04151439dd0b17637fb1e3e7970856bd04f871dbf65478619",
                    "sha256:5cde9094dc536f9937a992c1cc626625359e81aab0261f5d11b1e54d83069431",
                    "sha256:695d0c30470cf9de706397b15bab4569abd2444a34988a6dc198791260f9ec0f",
                    "sha256:c346940b338e879935067a1b15113b0d822b4d959e62c844167e7b02f542d1a8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:64392c8f14539da2389d9ae096011e479a9a4748187bbc1eaa50c31ebf20f9b8",
                    "sha256:1625a1e41fbdf8112242552fa349c4d7e410fc359db2f0c8415c84202dff076c",
                    "sha256:907f4b5f48d5dc0d4475e02e983becc3af028418535b2879f11abdd41177d5b3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:805cff011e719900c41796187634af3f26ac30595fadbc8e0b980e5922abb7ef",
                    "sha256:b258e80c689f9017b27a7b9690cbf85cd16b08cec856fb8a29bae5455cd59037",
                    "sha256:9f80e6e541ca175b3a383f40ea391de2484d037218e2d44f73ce427c799bca50"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:40.975476084Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:20.454374088Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a3e4f94158c3515dc70de5aa81c136a9f7daf5adcac636a15c237097cb454140 in / "
                },
                {
                    "created": "2024-02-13T00:41:20.920485425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:04.690462783Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:04.690462783Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:04.690462783Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:47.336383978Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:16.978951726Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.621608437Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.621608437Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:38:17.621608437Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:38:17.621608437Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:38:17.700652956Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.778924516Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.897048728Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.906014284Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.914170307Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.942555186Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:17.942555186Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:38:18.980792885Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:38:19.097530334Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:40.882598818Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:40.882598818Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:40.975476084Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:644fed2a38987e9c2e23a98fbd38f898ab6ab64c8473b9123bdd970bb77c1437",
                    "sha256:8c57cd7edcca55d07c28a956502eff98fd360cde7a1f92e156a5b9a599b340d8",
                    "sha256:42a61ad581cafa59cf88eac056dc3c381abde76415e731b9e8a285e4a0ad9e29",
                    "sha256:fc941d8900b4d16596f51f0b0674905f236fd2fa372e7f24e00c36623e3023cd",
                    "sha256:52e7634e192ea96c3c259a5ceb8c282cec2193717f8720b86f83373b4cf7ba8c",
                    "sha256:631d12ef05875e1d9b58e11a791ecc1f1eb8fc9d8f735088d9eda3ed00f4df87",
                    "sha256:a183423805df028c18538f66505ee622d027a9104241dfcbeb5b06f174e94e9b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f9fa4807439409f9f3b809c7e1d2872f471cd75aeb02dd3f5c41e28e58f67527",
                    "sha256:946454dde082ebc3fa375c26770f093cdacf096916f2dcfd500e6c5174e16975",
                    "sha256:ccdcc67bfb9f3002433f6df76faa60bdcff4e0cc4ae0fb3e539578fa0b77d769",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6ca2ffe85850f6673d0feb4baaa0138180cb85d16e07bc92c8cb639b1b7ae99d",
                    "sha256:4f52585386a406c75b9c3068c9963e4d4626b869e8462ac277226cf294131b2f",
                    "sha256:db6dc808c33723d7b7fc7af35d1938f5d303e606974db8e45866f55a00569c8d"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:15.368268885Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:20.454374088Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a3e4f94158c3515dc70de5aa81c136a9f7daf5adcac636a15c237097cb454140 in / "
                },
                {
                    "created": "2024-02-13T00:41:20.920485425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:51.608651709Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:51.608651709Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:51.608651709Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:33.577608406Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:03.089896647Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.228126072Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.228126072Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:56:04.228126072Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:56:04.228126072Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:56:04.31456214Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.399893006Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.505808448Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.516552482Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.52548088Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.534980961Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:04.534980961Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:56:05.623952056Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:56:05.737883836Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:15.279626361Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:15.279626361Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:15.368268885Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:644fed2a38987e9c2e23a98fbd38f898ab6ab64c8473b9123bdd970bb77c1437",
                    "sha256:54ddc86c5d71bdaf311afa55eca9bac70d0d92d9584cf65bfe1ea3fbb34028ed",
                    "sha256:80416288105610093d7924b6d88db850228f2582e9620c8e0be874132251bdf6",
                    "sha256:ab1ff5c764221dfaba2c5ecee6449b3597c179120f44d4e1b61944c1efeba552",
                    "sha256:306cd6f03b50d4cfbec092ae62ae0a46913a4660f83c2242342be467037b7dcd",
                    "sha256:d50b53025f7c0538d03067ce9dc68b26967e9a1882dd6f0e5318e21b73e58131",
                    "sha256:886cf4629fd55232c71a11acfb8d23238dd27de35d951e9d47b8407f74853c02",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b244cd54d80702f4e50ba111b20c3331eb55340c5bcb9f70e0c4ad23d0336fb2",
                    "sha256:9fe5935d295663c172b04301031b65c77487e69a7327d36a3e96b4ccbaa73fff",
                    "sha256:c8e7435127b40c59655b99fb391b34664f48e8229d9813996e0886d97961913c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e0956307497b6c82e3c1549173ca9d48104889a6eb8d0510addd8af3857679a0",
                    "sha256:883474035c80ef5994b29b20e2dc7ca4811b07e5651652b3336a1ad88ee06b8f",
                    "sha256:291c9a92e90dc6012b065dcc35386929c5cbca683fdf7dcd11f08942d989fcd8"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:24:16.595301982Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:36.854724565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85e3f04235f949795629380f3a50ca566471f0258cd4322937c8b1e0648a69ae in / "
                },
                {
                    "created": "2024-03-12T00:45:37.299748802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.778534939Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.778534939Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.778534939Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:18.196344886Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:26.438076335Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.614299934Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.614299934Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:27.614299934Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:27.614299934Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:27.704292854Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.786726022Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.908081096Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.917697973Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.927079151Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.963206051Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:27.963206051Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:29.069429781Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:29.191337555Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:24:16.509080908Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:24:16.509080908Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:24:16.595301982Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d64c46ff900ce5a646435f2232e9bdd0c551cc61e727d4d9502d48ce9dcefd25",
                    "sha256:0da23169b8f80118d7e34f6d922b825f9133b30a474be202273a66820c98fe65",
                    "sha256:45ff4aeaf39639fd55e65f516d5474697119beda6b2cc6bff82ce6fb3b5f53b6",
                    "sha256:705a288f101f99ffcaa8cfdd23e64e04c906aa19a4ecdd94eea8afed7300e33d",
                    "sha256:23c06aa7a206e14d4a38d67d44e7627d4a3896c1e7f9532e84ca4980f3ae3567",
                    "sha256:3cf1d6bdb5dd01e6edaa341b498c87fbe62eaa016793d5d104af551a3cc48079",
                    "sha256:cac715f750dcba96e38e26c80b400c18e78145834d5495b2cdd0279d314f7a4d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aec11e4fd08e14435662965cb73742979e44f028a50a282352275fd18cd863d6",
                    "sha256:445bc6c556c8df87f1bcb914a5f01083cc72419f188e5fd827069f91a1eb5289",
                    "sha256:f37b6e7e2e4272f0c1831e42058957173f62afd92301ce79eec57a2de80b9236",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ee2c2fb5e1bd0db23673a5a73cdb89de2a229c03dc28e0edc047085c2b2687ab",
                    "sha256:98765ab9d6be09d188b5477893dcb7e0c936b50d0b1dedb9fd021970a39be00b",
                    "sha256:97fe700d378b217ff54e28162312a882ddce65b7571eb872de5a00698e736dd3"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:15:56.307891881Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:36.854724565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85e3f04235f949795629380f3a50ca566471f0258cd4322937c8b1e0648a69ae in / "
                },
                {
                    "created": "2024-03-12T00:45:37.299748802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.133755224Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.133755224Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.133755224Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:31.140947884Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:06.654886178Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:07.799726197Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:07.799726197Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:42:07.799726197Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:42:07.799726197Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:42:07.889437381Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:07.992729279Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:08.123948499Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:08.160003921Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:08.172658856Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:08.186416346Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:08.186416346Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:42:09.261764614Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:42:09.386382885Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:56.22173335Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:15:56.22173335Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:56.307891881Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d64c46ff900ce5a646435f2232e9bdd0c551cc61e727d4d9502d48ce9dcefd25",
                    "sha256:f90064830487ba2223fd647346ed8a3be9713d707a619c8f75cbf2b5fdc17a89",
                    "sha256:4298dcd87e0db6a9d13ce10225215fdb897058c5cb683394de48f4f9a81fbdda",
                    "sha256:0ce866eec0971f64147da81363583fbf90b18575710350da22af51108665becb",
                    "sha256:f23d28580d521013ddd13f52db5cc565bef39a8357633e0cb81283e1560b5a2d",
                    "sha256:365dc53e6e260750b4ba942c6e2e8fa5dcf3f86ff2272670c0ab6f4e5c237c0e",
                    "sha256:f71ae96904ecac4e64e3df1a1315b3373be2e56a95a379c780d6a80b8ad8e096",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:82f1552ee2a7cf1a26c9bc2d2170d77c5805aae3f5b11233130997c5b20b025c",
                    "sha256:43e057a86fa5191ce8fa7209611331eaf9bdd249fd37680b8201253351b8d230",
                    "sha256:a2e021fa89fd3c74cfd4102780da299e080370d8d1781df8ac56975a0f061939",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5573749c24907937a91ab3d75389a5683587331d5166a8a983d54b42e91eb25b",
                    "sha256:8db302bc244b113cb15183f82fdcda273e2dff8a3d9e79ccc38af2eab6bb0c77",
                    "sha256:883d65ddc940da8108e81d8d8cf93e400ab0a28afc8ef991dffc7e20fafb1c7a"
                ]
            },
            "variant": "v8"
        },
        "bookworm-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:32.720336741Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:39.225233998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea7004fb788ab5cf1604d6e71153c48d99b75fbd1810e78a8c79faff11fe6771 in / "
                },
                {
                    "created": "2024-04-24T04:10:39.576455849Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:40.637182331Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:40.637182331Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:40.637182331Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:20.641319513Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:54.810673851Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:55.465061423Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:55.550777756Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.643711244Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.75756289Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.770162739Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.819007638Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.831626609Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:55.831626609Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:56.7808915Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:56.909990889Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:32.630009232Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:32.630009232Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:32.720336741Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8560597d922ca8edaeea533c482a61b9cd840e55ae55cedd31b0087547e2933d",
                    "sha256:28d4e208a7a00b359594125dd821af14aa8f202a8ec604e2e7da4bec1888529a",
                    "sha256:174f2361902e2846e389337bb3303cc4a8a7345d7adf74bd1e5dd8fdcab0197a",
                    "sha256:607ba54df1c61c1e364e4894a43eaa9e200a3380fa1c25941b9633f5cdf1bf7d",
                    "sha256:26ef1631f9bc0161ddcbd62cb40e71a79b44bf255d7e6a65264edae1987a1729",
                    "sha256:bb0a9b183b38a2276f2829317f6886c6f498d6e5c76c85228f2521da544ace8d",
                    "sha256:3736f03f6d85824da841726d8605393e73b4e677a9f550f10807b0d505161894",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e68f2c2c4acd87cec5fafd4c8914e7a2a49b05afc1d0f44b0adef78d69f7ec8",
                    "sha256:73af136dd09f5932e6899b694d0041ca6b32bfca42409e77577b14c6635fdd7e",
                    "sha256:c81b8a5b064118bf193606a219c626cea60ae2ae1eab3ab9c316a81fdc322f59",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fab48beffc82031db3f779a212eb8f136c7e3ab604526698128e420f2bb20a47",
                    "sha256:2ad0b937827038eedc65f64f9325961e0f3584e9ee38115d5fb52a73166db732",
                    "sha256:cbc5286dc1555f4dd0fe113799a0eed10bfdb31f37adc734997b6bb65b1f3332"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:06.699737464Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:39.225233998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea7004fb788ab5cf1604d6e71153c48d99b75fbd1810e78a8c79faff11fe6771 in / "
                },
                {
                    "created": "2024-04-24T04:10:39.576455849Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.077169061Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.937506347Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.032206671Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.147404774Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.156696765Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.19232306Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:27.143425379Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:27.300338572Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:06.589159366Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:06.589159366Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:06.699737464Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8560597d922ca8edaeea533c482a61b9cd840e55ae55cedd31b0087547e2933d",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:9a005735f93905c21dc34196459faebd252a5a10844a40eb5669aea32a39b95e",
                    "sha256:9350569411433d56e3852e0e2f4dc7decdd70009dff9cdba44d38f3f0489ebc0",
                    "sha256:117df0ceb231b578228599b6c142e4a34d84255be2688624757ba3bc4fd54808",
                    "sha256:baeab47a7671e653f8642536495730b0dbdeb9dd349f8a4115323039cdadf7b4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2825038c2a7d86110024c37372d227e96be6a954e7832622c439a54202fbfd98",
                    "sha256:827328bf11abc52b030cdb4ba699a6c85d3cad277623b1976866d8b07085d730",
                    "sha256:16b6beffaaaa1f3065b11eb80f19c72e494acc002063f47532eef5f093ff36d6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:07a1bf4ade3080f15be99893c80bc6afa2a1fadbcfcd18ebd5df49e6968d0998",
                    "sha256:4c9b2bc34afa34217141e1792bd5a4102fbb4fa0e6759663ca542f7b94f527c0",
                    "sha256:8df796358e178bc9eac2baa9854bac124af73c4ab847a3e0983c4c5d659c2eb5"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20231025": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-10-25T13:36:25.131995874Z",
            "history": [
                {
                    "created": "2023-09-20T02:44:13.845093157Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ec1a6e0aedd76c8fdc8544775f8b553f58950e9435f5cfe919f39374e222cfbb in / "
                },
                {
                    "created": "2023-09-20T02:44:14.239675816Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:41.20844374Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:41.20844374Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:41.20844374Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:54:35.020179596Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:54:35.763823562Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:54:35.763823562Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:54:35.763823562Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:54:35.763823562Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:54:35.86636126Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:54:35.970116586Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:54:36.144085885Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:54:36.156725468Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:54:36.195925347Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:54:36.219118567Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:54:36.219118567Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:54:37.610115642Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:54:37.779618541Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:24.967387036Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-25T13:36:24.967387036Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:25.131995874Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:311627f8702d2d97e63b916cad711aa9f962a1f20da5572d68b8f223ff051e73",
                    "sha256:9009176ab7aa73d7374ae807c93aa676752d0e7e5f11cb2c7ab020c291aa1994",
                    "sha256:4bdd13b88eac951aa612e74474a1e0650804dee315a53fd365a9cb4963796329",
                    "sha256:b6194d8f044c4c50d7294360a1f10ecc5453531ea4632fe0838bc50fe7bd55a7",
                    "sha256:df8d6d37a975d00d3f655a12a01fc1ca27808507815132a992cc656e161c6975",
                    "sha256:7b1bb882097b2081caa7cc00da8911139a19bbdd7f9667ed20e8b699714b642e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:80d7407cda7167aa0a6fe6bdb171ed1617cde17dc36cf53c42d67ce4eb8ecec6",
                    "sha256:db86311312a86c11b3778a2f9ff32f1cf3877f2dc95dd7de8710cbf0b241810c",
                    "sha256:302e279c93d241ffdeaa55041bd97d2e17eecab67f387e3f3a7ec2032476ccc5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:82f54fab30930869a47efe985ba3c2d37154d5664b6236b5b4f56c4ff04b6b58",
                    "sha256:94cb6216f54e8e0aa69223d2ac635dd0256158f6ffa3bcbb4a51601dcbe5e89b",
                    "sha256:cb1c7bd3fe26dc4b4389ba1bd531d60c453f551d7a6b926328ff0a69161a8538"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-07T07:56:46.523612035Z",
            "history": [
                {
                    "created": "2023-11-01T00:39:41.53802307Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:c58f86cd28b3a97f884e2a46f8fe60a2c5c1f443e198bd10e3277b4f3653736a in / "
                },
                {
                    "created": "2023-11-01T00:39:41.992980947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:02.174467255Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:02.174467255Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:02.174467255Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:20:10.098938763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:20:11.028019789Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:20:11.028019789Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:20:11.028019789Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:20:11.028019789Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:20:11.166554072Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:20:11.318505764Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:20:11.511750552Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:20:11.526882677Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:20:11.551701658Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:20:11.566170138Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:20:11.566170138Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:20:13.157739607Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:20:13.361820853Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:46.342802107Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:56:46.342802107Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:46.523612035Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:70e628269d9fa63e3ddaa5e293bbc8aba5079d63f473f75c310b0c3cf2496f8e",
                    "sha256:1af8508980890972e47b1cf27f0fd68b1ec1d5dfece1c86e59d98500b58bfe1d",
                    "sha256:52e668559ef48106da3b4cfabec8f2924ce8cb03e31b37be76b9df22f4413656",
                    "sha256:f974bc5ad80a2b15432f4a141cb94e55ee281d09b900f25baa207798bab4adc4",
                    "sha256:ca7252f524e00b5a6423cbe2a00ba4c9c5103af24dc3a643a955a4b59ba0f8d3",
                    "sha256:f522ebe6d56b01dde2acc92cfc5680d4b0dc3ea224385a691c9ddcff72b8ea8e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d12f8e8bd2102c3b3d7541342023ab1e5a39eb5a598bfa5d4379bd771efab910",
                    "sha256:8aa2570971f3998c57a6d6d7a156944d19eb78fc0e9108b598945decc5c4ed32",
                    "sha256:49e45aad2d439151b40650c173de79b5fab15bbff8e0a191452cb138d5148301",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bb60af57305e78cbca3c220c2bd3b820eb5e0c9074a597e66ea199efc8e2ad1c",
                    "sha256:baf32da39724fa0c194cdc4d6eafea0cfc8f90543281c396f75582fa0a1c74bb",
                    "sha256:60b526ce25ed567a926302b3fea5496a404c863d83e03ac12adddc1bdaa1266c"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:18.432235953Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:06.399581142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:869c7d0747a17c53715581a2e862992eb8516c7f45f167821dfa80966a4870d1 in / "
                },
                {
                    "created": "2023-11-21T06:27:06.776864597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:25.110705178Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:25.110705178Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:25.110705178Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:06.716105061Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:07.830190616Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:07.830190616Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:07.830190616Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:07.830190616Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:07.930799198Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.048023972Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.206984986Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.218315588Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.229745456Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.266895095Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:08.266895095Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:09.408107823Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:09.551150821Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:18.326408858Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:39:18.326408858Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:18.432235953Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4e4d9391e1332a5b50063a92ccc434b92fccd14962fd9c37711d864d587d98a",
                    "sha256:316401953f8ab334a3a0a753122a2f969971e9dcd4abee42f7b9918e065a7f11",
                    "sha256:0491259f8c30013e7cf7714099e21dca2d32f765aac298423a43aa9604686a9b",
                    "sha256:d0abcd6aff176b9649a822dea6e9933981195fa944d746c0f46665914e1bf55c",
                    "sha256:3cec69d2b43b8394076870079300499babef94f37c1f4d19b29ddfcad28c6afd",
                    "sha256:4fcb8bed64266ae624da7e418e4c2e386bc3a2d7096280ac02c3611aca5efb35",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f409281d6d41299fad858a2ef832fed3abba62d1b81fca008d392bd081e76e5b",
                    "sha256:05628832807df937d8bbcf3795d3476998ec5de066b931e19af3ed2bf74dd074",
                    "sha256:30008bc6f41ad1bd8b891d21fd15037886e92a5f557d51c503023c6e55d88b25",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0a5f00af0c2ab1406136894ed5f738aece00f423a69a5faa85bd3b98c0e8b07e",
                    "sha256:809cde625e942a6a10cac7543689f9188b7587e614946f908fc029a8e5b3e279",
                    "sha256:0d8d52ed9fdc48735377015b4d8e8245145312c563515e64a6f277e2c114f28c"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:10:42.051234216Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:06.399581142Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:869c7d0747a17c53715581a2e862992eb8516c7f45f167821dfa80966a4870d1 in / "
                },
                {
                    "created": "2023-11-21T06:27:06.776864597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.40522891Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.40522891Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.40522891Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:19.125484136Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:19.744515123Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:19.744515123Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:35:19.744515123Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:35:19.744515123Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:35:19.860866263Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:19.97464861Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:20.113291519Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:20.124304078Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:20.166996422Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:20.177259998Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:20.177259998Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:35:21.185237509Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:35:21.317621807Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:41.940641409Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:41.940641409Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:42.051234216Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:f4e4d9391e1332a5b50063a92ccc434b92fccd14962fd9c37711d864d587d98a",
                    "sha256:93ed37ecbec63b6a705c0e806bb2672dae44aad8d5ac1ce61d1321f0cdb3b2f5",
                    "sha256:6e9b582fa5384d7f7905e1c0d41a81fb810d86990661bc68a90b45a4172a1d60",
                    "sha256:0d62838d725f04884f464e5e2e954359ae5348959c790f802be10e5bfbb1af0f",
                    "sha256:c870cbd66b3ae132f982fd79f256233ad58895a69ad6cb7656a5c85baaa75400",
                    "sha256:078fb21837288ea35cca62fad5b2037af88f7844f60bd3b0a0da045770152ddc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a65fe06c07fb2b301ace1f8a684b5a1bbbae8f5a78c7a689fb7d54c63b958d82",
                    "sha256:8b0ef62688ca14ff43e0db9d1fddebbd6be8574c3e0b90bc0c3f2daaba70b737",
                    "sha256:f2a888cb5d5332bd211cdb18b49cb1acc310fb3b924bac2d62016b9501f93150",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d0d54bf653780011a612c9b24b99effaf185960e5ae6cd5e6ec1b886372e34cc",
                    "sha256:477d1742b6648029470d644a7c94a05f92d77af743467fc59906bdcf0c000839",
                    "sha256:827132c56dd30ec1918cc40d58f5784297106d7afaf62d8c2d5907430935da9f"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:17.672001655Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:11.205776448Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:262fd7bf0bc26e5d2a229fba52626e22b8a93beac29733acfc60e716c26e689d in / "
                },
                {
                    "created": "2023-12-19T01:41:11.641816314Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.669855779Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.669855779Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.669855779Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:25.771724649Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.346088635Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.346088635Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:56:26.346088635Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:56:26.346088635Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:56:26.458086836Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.546498434Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.667667028Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.679330726Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.691321328Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.734092625Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:26.734092625Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:56:27.696126872Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:56:27.807507547Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:17.568295147Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:30:17.568295147Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:17.672001655Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7ed07af9d6688899456cb187c1f81c88a30a60f2a7477d8e40af31a201b1a55",
                    "sha256:a8831bc4b02053919cdc5b288fbb2ac73a9447cafe2139e83d82d15a3220e9e6",
                    "sha256:474f509cb5eea21bf0718e0380d7b13c6fde15504373de439f8909fcf3119a1a",
                    "sha256:d997c907f739fd3f9cbd31e84323d9786df4cd20263fa1e18923e0a524cd508d",
                    "sha256:51310e236ccdd0fb3ceb99b981ef90d66b5f6adbe4766235d8f40b2e8232d10f",
                    "sha256:85591a815f3842c788751e06b7190b26efb241984270087d5fc4df7f2ada659d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d638fcd3d651ed38fac496dafd38205b8b1e7e58a53cca9bcd1e96aadbe56b9b",
                    "sha256:b0ebdab6fd02d5bb8a3fd87b2a10976773d6119f67117072f121837b9706cd61",
                    "sha256:d2e675b8086f49e4aec05988dc6f28d92ee13c1a011b1c497d900c3f7b199d8b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1b121453fcaf90d2054ed411b1b10a207b06439f037dc717a85c88ad451d3877",
                    "sha256:027ae6856c3acddde0a9ff433e9672561696af108c7071e2fe27c26793cca8c4",
                    "sha256:0e7d7b5b1af848c2c018529b91cfc66d3d63c0b464c574b2a5c94c23bfb0b68e"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:21:54.696878137Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:11.205776448Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:262fd7bf0bc26e5d2a229fba52626e22b8a93beac29733acfc60e716c26e689d in / "
                },
                {
                    "created": "2023-12-19T01:41:11.641816314Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:49.919124869Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:49.919124869Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:49.919124869Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:35.062832518Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.03229189Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.03229189Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:47:36.03229189Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:47:36.03229189Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:47:36.109739047Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.202273375Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.349151053Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.421020187Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.430581869Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.440648902Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:36.440648902Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:47:37.624335879Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:47:37.741679865Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:54.594029571Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:21:54.594029571Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:54.696878137Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7ed07af9d6688899456cb187c1f81c88a30a60f2a7477d8e40af31a201b1a55",
                    "sha256:5bfad8fe537007bc6b9ca2d485d72c1d1350e5a011dc696a7c0362f8ba861112",
                    "sha256:4d4f2e5f7d8d01cbda94e61a8436ab3badf818b0cecd15b3b6b1fd8df635a627",
                    "sha256:d4d3c43a9051d5d74f85a702e7fc34db246ecda7d2591e891828421a59a1318e",
                    "sha256:f15a352416228e68db80c4562c001ca7738916231f9098315be5431a64ba2059",
                    "sha256:b81c058305163c96461ac297f679c62cfba1d933b1bf582f8fbb11c317d353f8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:85eb83ebbce9dc08bcb570adc80b870e009f0a5ada812b3937a034114b18aaf2",
                    "sha256:654bbcfb2ed7e65541a7436227c0ba0db40d524b72813e24cc7d6ba4745a24ff",
                    "sha256:30c81c00f93c1a7a1469bd271c3f5b3f9c7e036ad658522d0e7d6cfae354f96d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b7a879e8f80c771d0c5f1c2f6554a85ffebbaf33da1e2fe050c4051ba29f5f57",
                    "sha256:a5f443a1151c0bf50dddfb3552096594d95f25a570cadc153a4806892c55ab35",
                    "sha256:3e89504b71dc932e656e77fb26347969f6491299ee50e86ed53d07123d74994c"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:19.044003077Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:11.205776448Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:262fd7bf0bc26e5d2a229fba52626e22b8a93beac29733acfc60e716c26e689d in / "
                },
                {
                    "created": "2023-12-19T01:41:11.641816314Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:47.868101871Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:47.868101871Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:47.868101871Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:32.296400304Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:32.905158649Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:32.905158649Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:58:32.905158649Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:58:32.905158649Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:58:32.988367236Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.069469162Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.199352103Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.247182835Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.257047156Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.269513831Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:33.269513831Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:58:34.332407943Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:58:34.453373708Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:18.929900489Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:32:18.929900489Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:19.044003077Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c7ed07af9d6688899456cb187c1f81c88a30a60f2a7477d8e40af31a201b1a55",
                    "sha256:a12ad07276f19b162694defa2ff93fbf1e1d77b382dcd0151977e7c51ec1f15d",
                    "sha256:9f3b41a9885f7a205a6307816a2fe42718c97e11579e3b51bb3a85d6f86bb305",
                    "sha256:a1a70382e0bdafbf708dc719940f71e7a2d41faca32f3539658b752935bfe6f0",
                    "sha256:88208ae6833fa8c3e90102762e560896ce9f225f1b1307a5c463b87bb7e5079e",
                    "sha256:1d57adfe88cf51e552b23a6640a8f0d97a3a64180a01af17e974369323d4e964",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d73f55517713e73317bf9bd90bbe7480a853bce455103463336546d1ddb9f0cd",
                    "sha256:afed1f40cf422efd7d7cdae986cddde5990714f03803397b8218434c2a8aa5c4",
                    "sha256:fef90dfc6a136812006c98e71ff86f2776113f1b79c7f93a0ad4a9c22aac4120",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:91fd19bfa869b188c5148f902bdf512167880f5849d640316eb517e3a50f76c7",
                    "sha256:d5d27499bb1bbd148312265c9735c5a1f0764c156976811ba10ff60daa1ceda4",
                    "sha256:6b8073806ece6236f16b52640e22538ce682787497fe3dc3402a2ba7d4184c1c"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:51.285082765Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:26.747674813Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef6f078c1e72fcfafb9bfeeff0c1c771219dc2efe34650963106f63d32183b49 in / "
                },
                {
                    "created": "2024-01-31T22:44:27.282481747Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:21.337781732Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.132956744Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.737024473Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:02.824027123Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:02.904196572Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.026957698Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.052032457Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.100053829Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.110090904Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:03.110090904Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:29:04.069731664Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:29:04.194924962Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:51.182738329Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:51.182738329Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:51.285082765Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:02eecd1b8ebb27cc1f576804168486c4c5c3180d22c50048fdaa546b581adec9",
                    "sha256:cee7b8a73f6b00a0d52ec5065907a069f7b04a5578c47d4485f9a3dcf21db778",
                    "sha256:ff31527bbefa947c97500000c0c7e8517cb22118b5c55889d061cebcf6c2b74d",
                    "sha256:1f90403ae42b2000913e0d46e4fb2072bfa14380a045260a54e4c6862579c16f",
                    "sha256:44093a65e83dd09b01084543e7f3afc720fca84bc85d5f357868110d76c34b97",
                    "sha256:5f2d388a034ef179a1e573a911c5ecea074ff5ba4cc97d47dfbaf1129438b7d8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bce06f7a82b98ceae70c933512d01a4581ebf3db6d2985361e91c1ee33cb1bac",
                    "sha256:1cb4945369b8ef77b4a81e2abb101c1aafd5048038e82d80c003ab3746a0cebd",
                    "sha256:b7c4f8f7859c5bbdcba94b1a2756854dd399fd133fc95bf8a1721f9247c38b68",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:25bc8c210c56622b3ca6c875d6c28158ff1a9dbff62c643cfc32267bbe70d592",
                    "sha256:b43873bf96cdb45f83f999c4ee09d1e1736da96b8a0ca95e5b15375a0fc751cb",
                    "sha256:f26d79ca40bd05ce48e1bb4e33e9e020558dacf041afdf4fba799e7048a6b4dd"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:35.834604837Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:20.454374088Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a3e4f94158c3515dc70de5aa81c136a9f7daf5adcac636a15c237097cb454140 in / "
                },
                {
                    "created": "2024-02-13T00:41:20.920485425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:59.42481027Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:59.42481027Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:59.42481027Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:39.930352302Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:40.593961307Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:40.681119982Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.768938384Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.890357763Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.922301492Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.931927895Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.942199841Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:40.942199841Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:34:41.888179766Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:34:42.017213443Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:35.732635411Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:35.732635411Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:35.834604837Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:644fed2a38987e9c2e23a98fbd38f898ab6ab64c8473b9123bdd970bb77c1437",
                    "sha256:819afa784c3e2987aef1409e05047cb7a110fcfa980ed6cab9de540fdc82f9cb",
                    "sha256:fa841c5bde2c582d4ad9966a24638ed552c5b89121feb59693bee2a1973c5750",
                    "sha256:af58095d0c29e3e0c6524925e61b55a80e862f78f072b56faac3218958e9e5da",
                    "sha256:5b5306a15e3de2fcdb1e8e5ce2d01ca5719a2f38ea79dbd382def80995d703b6",
                    "sha256:1f829424482353ffeffb2fa28ee8f61964dfcd38e52dc91ad7da0a95a2792747",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7497f5f0860673c8b3718f168710de4ddc6e095bdb37f44f3ebdb9777ab20696",
                    "sha256:09125f579dcf295dc3d0b26be9296c54bd7bbeec45aeeeb039f42e518cb7ef2c",
                    "sha256:e99946c74f0e6583d3369df6e398ecd62d8f229a44314ce82623c9977c2ddea7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fe5e57825de0fc482adf233a74b9e5821669479c5e91a12081d7d7ab4744e9a5",
                    "sha256:a31715ff8c1c4804337bcc5ed617b52e3259c15db465d50b281a05df11c36561",
                    "sha256:b96b80f27cdb7c2b9120bf9b1e709e31158f5cd9e545f229b99e443066f8f2db"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:11.57232037Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:20.454374088Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a3e4f94158c3515dc70de5aa81c136a9f7daf5adcac636a15c237097cb454140 in / "
                },
                {
                    "created": "2024-02-13T00:41:20.920485425Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:49.05841767Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:49.05841767Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:49.05841767Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:30.292139599Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:31.350087214Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:31.438460441Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.523001967Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.636541653Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.662793126Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.734763532Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.745132046Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:31.745132046Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:52:32.835165297Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:52:32.953884027Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:11.463650291Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:11.463650291Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:11.57232037Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:644fed2a38987e9c2e23a98fbd38f898ab6ab64c8473b9123bdd970bb77c1437",
                    "sha256:83d700c544e1d388547184b0b58966790d564912d1572a471504bc5c89498e56",
                    "sha256:11cf76cefeaf1112139de1045639cbccd3a57a547ac337fdc588235c7d65e35f",
                    "sha256:ebafff57fd7c429daf8be6dfca41e50fe3a0b3ac7246b7fa0cf6fbbc0420b765",
                    "sha256:75b833b595252828ac5698120664faed2e15081d34a86dd73185948e45afa5ba",
                    "sha256:79788cb6c25987d985dd1de111876e880eb7490a1973770f4c240b5c1d01204e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c1bf4235489d8a8aadbcb887e1272aaaa0612c18a23ca3935f00b05861807a92",
                    "sha256:aa75a553a1713912a3a007aa0fb6a8094e45dd3d27ea17974a9aaa469e251f51",
                    "sha256:a240e6900a65724d931acc7625d592d1290f8995ad3b55dced088e079a9df1c8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2398f14f78d5851947025b83db3fe6bc7d6c917d203549c127e9a243d25794f6",
                    "sha256:3e1209fda36808318a3bafbe474f91b0e0222af4d729b48837396096a72841c5",
                    "sha256:6a6db910453e45ed470fe781e67783331295fc8d176b1f2f889458d1cac7fec8"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:53.212051428Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:36.854724565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85e3f04235f949795629380f3a50ca566471f0258cd4322937c8b1e0648a69ae in / "
                },
                {
                    "created": "2024-03-12T00:45:37.299748802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:24.342771025Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:24.342771025Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:24.342771025Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:06.406197917Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:06.999757052Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:07.095814844Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.198030688Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.323577194Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.337495487Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.373912066Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.386293885Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:07.386293885Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:44:08.344650615Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:44:08.473198876Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:53.110066978Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:53.110066978Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:53.212051428Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d64c46ff900ce5a646435f2232e9bdd0c551cc61e727d4d9502d48ce9dcefd25",
                    "sha256:de0acc254098be57b25b3573d9774773ef65a4fcaa06db4ced68df3d464b75ae",
                    "sha256:6fd16f9591b7e75eda7aa82ad9ca2f2883f73c745b4ae7900094fde6f5f3a182",
                    "sha256:32c191e36568ad3e3b83655eefea02dbfd5d6e6780af68021bf9dc226b7c72b5",
                    "sha256:cacb9e9cf2327e21af2d985de21c7398d4efd1d6ed68736983f3b2dce0ac2cf6",
                    "sha256:de0414d61c5298f55bbbf238cb165da20d3deef342ea10b1027726fc4c2ead29",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e6e89d7feb3328bcaee2f80f75581617e21fbefe70715097f78ca83acd939305",
                    "sha256:cc8007c4d44b0595626af5145ab4533af8050e14119ca2a75277de4aa8970ec9",
                    "sha256:5ee8ee93e17be888a2050990ae5264d65232f283f2197e2abf5f0d94eab3b592",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:119847f5856d27cd4e043cc362634527f7860270820fef41527fd4295815a8f1",
                    "sha256:6545cfa1f85dd4cd6a78f1e4d51b2fb01542a71394f4b6c0a86f8a622c0c04d4",
                    "sha256:111d4d355c08b931378c58ee76dc6e827b60a3f40d5918859769664c2ea9c020"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:15:59.943360385Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:36.854724565Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:85e3f04235f949795629380f3a50ca566471f0258cd4322937c8b1e0648a69ae in / "
                },
                {
                    "created": "2024-03-12T00:45:37.299748802Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.461029064Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.461029064Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.461029064Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:22.645447635Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:23.228973047Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:23.313658027Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.402635934Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.53747386Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.561498047Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.571843507Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.583043144Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:23.583043144Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:38:24.547695956Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:38:24.675471591Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:59.842193911Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:15:59.842193911Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:15:59.943360385Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d64c46ff900ce5a646435f2232e9bdd0c551cc61e727d4d9502d48ce9dcefd25",
                    "sha256:0f23ba39c0652dc1e8f4c7ecc5e21333a0b55fa4db5f1a6a4fb06b005ebe3bcf",
                    "sha256:ff9efbdec5ea3692c38d94cdaf146dc648591772e6309be77b19f6f2a69acd12",
                    "sha256:7fd47df956546e21f9a46974ff89a2e1520dce1b18794d1e46813d6061b62158",
                    "sha256:bb6473d71d44395d7a777fc12fcaa0f41bfb272b57bba4b8c3a96e64e660589c",
                    "sha256:8851df102d3ee94ff51037b8135be86234001503f550b1aa4a51c45708974ea0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2cdf830e7f05f8c6abcdcda9f6a2c69c99ad3dae43534d683fae8b1f927d71df",
                    "sha256:7cb1fd1921fc228059ef7088e8836717999f3d42789694598ebbb1861e7d1724",
                    "sha256:e624c62faad1811af0276668a17c9f2593a4e92140c11f89ff8cf9bcfa8bb73b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:16f1112eda98e42d16b34cd4bfed296e8573ed72263e18f0012ff1134c4a7602",
                    "sha256:b2c4a5db50be91b9fbee7130dce1d1df3ecc755e9c7316f961eb99e6a4079593",
                    "sha256:3a2bc0f33fa40be91f3527a79803a622b15a51548c5bbd3c7b4d5fa394e09c9c"
                ]
            },
            "variant": "v8"
        },
        "bookworm-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:06.699737464Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:39.225233998Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ea7004fb788ab5cf1604d6e71153c48d99b75fbd1810e78a8c79faff11fe6771 in / "
                },
                {
                    "created": "2024-04-24T04:10:39.576455849Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.382246833Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.077169061Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.85632997Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:25.937506347Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.032206671Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.147404774Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.156696765Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.19232306Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:26.201296096Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:02:27.143425379Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bookworm   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:02:27.300338572Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:06.589159366Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:06.589159366Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:06.699737464Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bookworm \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:8560597d922ca8edaeea533c482a61b9cd840e55ae55cedd31b0087547e2933d",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:9a005735f93905c21dc34196459faebd252a5a10844a40eb5669aea32a39b95e",
                    "sha256:9350569411433d56e3852e0e2f4dc7decdd70009dff9cdba44d38f3f0489ebc0",
                    "sha256:117df0ceb231b578228599b6c142e4a34d84255be2688624757ba3bc4fd54808",
                    "sha256:baeab47a7671e653f8642536495730b0dbdeb9dd349f8a4115323039cdadf7b4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2825038c2a7d86110024c37372d227e96be6a954e7832622c439a54202fbfd98",
                    "sha256:827328bf11abc52b030cdb4ba699a6c85d3cad277623b1976866d8b07085d730",
                    "sha256:16b6beffaaaa1f3065b11eb80f19c72e494acc002063f47532eef5f093ff36d6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:07a1bf4ade3080f15be99893c80bc6afa2a1fadbcfcd18ebd5df49e6968d0998",
                    "sha256:4c9b2bc34afa34217141e1792bd5a4102fbb4fa0e6759663ca542f7b94f527c0",
                    "sha256:8df796358e178bc9eac2baa9854bac124af73c4ab847a3e0983c4c5d659c2eb5"
                ]
            },
            "variant": "v8"
        },
        "build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:39:58.680266387Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:16.696930741Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:34.389505442Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.127106593Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.202265303Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.322213113Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.36866875Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.384433538Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.977590429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:36.10345642Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:39:58.599118608Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:39:58.599118608Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:39:58.680266387Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:8118046c0c69be9888f1d9d5a1b51d47233771e8007f0fc1d1568cea72987874",
                    "sha256:6ace3ce5da9d73ad77fff9a9e1ead05c66d546a2638f8e476abc42d746fb9e0b",
                    "sha256:ba5bac65ad77adaa77dd7e72342d46e864399bb8cb963120dce00cd432062872",
                    "sha256:7c9997e72fd0e9c0f80088aa1a8c1e9ec7d5791afc6a1d64bc776e96eebf96c3",
                    "sha256:44867f45243358733796350989f5375d99bd654d3ce177454b689c8a0b5e38e5",
                    "sha256:f8c6334654e615714730d1906c472133f0569d24ad6d225d8e56acb6bad41ccb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f8af0639919c6ea8a3c94e5a9d75d4eb902a69acf123be2ff1eacefdc57e0900",
                    "sha256:b00db75f11d6652467a221628e15d27c9cf656b13d5f39b57d2ae1456c812fd9",
                    "sha256:8de1b58a8c327d1695b4465972be024744539717d676ad520eaf73e2de6c6887",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c4416f328678a4224c0b75e9b7ba68e7ccde5da7a27e3c652247e42d3c8540fa",
                    "sha256:aec65c04e88b5207417f29825ad9e9bb69c66746c8ddb1d24f4193ea35400f40",
                    "sha256:4abba8d2fa04ab0f9da149f38d460f87b2fe6e272ca5b802ce25f39f823b0062"
                ]
            },
            "variant": "v8"
        },
        "build-20231025": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-10-25T13:36:09.464410915Z",
            "history": [
                {
                    "created": "2023-09-20T02:44:28.274078277Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:024479be439b4ecb37c939e68673adc72955f3345ca0e809bd13e897709e59e4 in / "
                },
                {
                    "created": "2023-09-20T02:44:28.657109179Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:50.777379821Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:50.777379821Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:50.777379821Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:52:35.57862626Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:57:58.349581561Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:57:59.873464686Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:57:59.873464686Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:57:59.873464686Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:57:59.873464686Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:58:00.00236953Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:58:00.13969742Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:58:00.306125617Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:58:00.321372282Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:58:00.345127196Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:58:00.36434833Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:58:00.36434833Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:58:01.496070429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:58:01.687852267Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:09.370335011Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-25T13:36:09.370335011Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:09.464410915Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6c9ad649ba0489961dd64654574cc4134f9eed47c0be4524747da2f36f5dbbd0",
                    "sha256:c2ec1e38c4bcabaa778a5f0c88ed8ffc97bb8ce0483f681386606c89deb96045",
                    "sha256:33aa922b69ea06922be97091584047cc2cfedd591ff85fe2d1479be8d6761ec3",
                    "sha256:64308748351afb6f2158b9323380e79ebff955a81c976e4e4af6fb887c5d5939",
                    "sha256:65bf34eabd30a41a79563fe6f5216e4a59a72610e36a402d9dc246b7a8557bc8",
                    "sha256:81b8a59ec4bcfbcbf83ba8eab06a915531f4bf8d450852ea9cc01cb47e7546c2",
                    "sha256:8a9bd8e8a45f4f71f310af475b01f31d5529a2ff2d6a3a60bc6e501dec9cb064",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:03cc0980c67b2951087fc08e340e59d72232f7a6b5c397022861fba224c1a232",
                    "sha256:2d6e7427c3c2c49a4a73503862b7ac566238ca0391198ff8a46a02d7fac95622",
                    "sha256:6acadd3c46f15bbbd32c6a48169f20f931b60734ac188a61c3c63fcfe77bd3c0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b55a5fa31b83a856f35a73902d376b8b23be4ca4661b4fe4e946270deb6869dd",
                    "sha256:6569d6e17fa03349dc819be7ef58dab0154ff0e1f14fd930fcb92124a3bcfaa4",
                    "sha256:dcb4a26978327ac7c9a5bfa2870f3b2935ab07b480cd890276477f2a4e10307c"
                ]
            },
            "variant": "v8"
        },
        "build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-07T07:56:21.567525055Z",
            "history": [
                {
                    "created": "2023-11-01T00:39:55.82247244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:99dc83e8bb8c67d9179a265fb750c76f73fa660e13e938b6cd613be653cd077e in / "
                },
                {
                    "created": "2023-11-01T00:39:56.253202489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:44.81518649Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:44.81518649Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:44.81518649Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:15:20.056215532Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:30.974177089Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:31.69115062Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:31.69115062Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:18:31.69115062Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:18:31.69115062Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:18:31.811143846Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:31.909836381Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:32.054732838Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:32.064012957Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:32.07454669Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:32.083094128Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:32.083094128Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:18:32.743734Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:32.875140733Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:21.481717169Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:56:21.481717169Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:21.567525055Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:60df532890c9cca1c175cfea286e7bc7d79a2f79592acaacf5fefc399ea9c569",
                    "sha256:05e381ad01d458d4028996d057aa5f6e28e50c339b7558c6f5e9f4fab0e2d6fe",
                    "sha256:a45d349c4958365835d509574014b5ab0fba254f58e8ab051f5b22a6809e58a8",
                    "sha256:75260199f5f065940463f6d0f2f8efa24bfb329ab2a9f94c5b664512a54c9178",
                    "sha256:592ecc9b8e0c74765df6eb2e359db11c5b5e91f6a02c6801500af1d885dcd03d",
                    "sha256:f69f22c25d941ae2abcba0327c3248054e016b819c79b17cfc9d394f2e33a51c",
                    "sha256:e2ac2a408b5adb733093691f1f29aaaa9be84b479ca0d2b004929f441f34a005",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:66b76b4a3d37f92399908b09a8cb3b27a9aa205831c424ee9d1f7c85c526e90a",
                    "sha256:45cb1e789667ced88693908617ecdf08f43e1735f9674da87298d4f7b4cca4a0",
                    "sha256:16ad390d9b6eb3c1a30f97d1f781ed5a4da255d74a11d1ef2c44ea096c9ebe6d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0ca227d18f482e081f837e0e869d509eda6c5144190489ab256e6a764184200b",
                    "sha256:e42e562c325074406efb88b6cfb1a9ed93e3e984dce135b82ce18bb4eb9eb824",
                    "sha256:124aac625b8c33bf538f113037b5df0d38d0e01e24e6efcc76cbdf8e59f0c44a"
                ]
            },
            "variant": "v8"
        },
        "build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:25.770406149Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:19.185585151Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:19.185585151Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:19.185585151Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:53.593522423Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:03.578664428Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:04.346536518Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.453335285Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.61096714Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.620135356Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.666915734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.675666558Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.675666558Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:05.286716179Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:05.42797061Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:25.676979411Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:39:25.676979411Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:25.770406149Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:8a7ef35bddc112bc2b5431fcd390b9065fbda13786e903966196fc5dea6c6ff7",
                    "sha256:7cfc8e6c3d60b5caf28fa87975f88f0bce672613d3fe5e43dcba3004c1a241c2",
                    "sha256:095440987c66a3da4b60dbcb1573c3f317725bef1b582527987bcb61232897b8",
                    "sha256:fdc851e31b9f8daca232f41c4331a41ce0b7d6ae39c6934e26b3b00ea83607c2",
                    "sha256:81f5a9a1455c7edc5a2b23fb1d25cf133960a48cca8b20beec4402d4600bdbab",
                    "sha256:5072066d883433d394dd39e61d315d510d65477455d1ebbfbc975661c0e5d6e5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8a927bbd12e93e3bf2e0198bcbd29fc4da974e841b35e06753ebfa5d8497c8e8",
                    "sha256:5f331de56e31b06abd6639a649c8206602181ca42a24e9e5bcd53c8cb0d95117",
                    "sha256:b88d431a371254c9fb9c2c2e740f85d47d78fdd8d630f43f25d2875280155428",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2e76d16263914442ebe25f79121fb8f6e5c3bdb2fa92b42fb0299d85e1ae66db",
                    "sha256:8ca4a91dc44ef7c20cbf1967fcc0bb8d57b528133e9b46fb828827730564f409",
                    "sha256:f436366511e70d668e46029f8089a00d536733410f4911738c33289f3ec1bddd"
                ]
            },
            "variant": "v8"
        },
        "build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:10:41.587469638Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:40.697278979Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:40.697278979Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:40.697278979Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.517978404Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:25.677995698Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:26.784147927Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:26.885450105Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.00433604Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.013309924Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.021080443Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.029043166Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.029043166Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:27.789559574Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.935595776Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:41.48064894Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:41.48064894Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:41.587469638Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:d1bdc2c7daa01f1a34a743e068fba88eed6cae429a78ffaf1026438559e7079a",
                    "sha256:eac3b3efd93a07317becfaedb2134d2a36d626351201f53287a9549d27fd6b1e",
                    "sha256:d9afa0523f9365ceb09cbe55188000e2926bf566515bb96b22378399794b829f",
                    "sha256:56b8f1d66272dc0cb7dcc0a6c8dc62d0dffe95a4dadca792aea661ffa657e9b6",
                    "sha256:41f19aa4c6a781766a40b89056880de7381f82b80e25e911bed681c262b50808",
                    "sha256:114bbb7284a385061a40b3318241707806b11718e8429d2530403a1e1af396ed",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c36bb5822245b307f3f5cb02d270ef7b054e4c8c0c5a19b9afe2f700e7a0c8e7",
                    "sha256:12c4d981b996ad6f0694ea3bfc642bd029c189166382a03510961af463a6ad6c",
                    "sha256:cc297fa682932c85eb7e47d6065e550836e86b822afa332454fe5f26065d5a90",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fcca4139646935ce3cc12873f462c82729def6262014ec15b614cbdc62973fb3",
                    "sha256:70e91ca319c46451eb73e5bf0e062c658c23b62053c26f68c61a339f327eb9a6",
                    "sha256:719cb5282d9b2fe4099ad166aea600509a12306f2dfdd83ccfda79d6c1dcb1ea"
                ]
            },
            "variant": "v8"
        },
        "build-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:21.246822078Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.902423274Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.902423274Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.902423274Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:18.48032328Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:29.733050906Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:30.46634935Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.552360377Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.683110102Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.743003008Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.754119398Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.765383835Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.765383835Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:31.344858628Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:31.464992595Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:21.156624798Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:30:21.156624798Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:21.246822078Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:81824f6357af09e5f194cb6f6e0be2dc47db7a062fa4a0c78124fbb2b1bf1f9a",
                    "sha256:cfec8dc9675f1e7619cbfb27645cb2cece178566824212487b746a0ede92ffee",
                    "sha256:2724a7dd652ba165ac374bcbe1860c24553c9f3aebff4d66ad2ac127b333f978",
                    "sha256:65a14a718d427e7364a3e89eb98c0ed1a72d6dbfee605a93e7a27e3718ef2638",
                    "sha256:131acd714ec7176998398a67bb88983aec4768336e426a62c5402f4f9b0d4c63",
                    "sha256:c1106c57741bc52e2de61538583d82986fc689e99e5f63e4e5e644c3b547d398",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e0dbeb1c535388174228b102c48591e56d8d448b4ad149c16aaac0a995717a15",
                    "sha256:bd064ab2393e57585a3c1adeb6bb53a305af4fb4403c06184441d4002582d7e3",
                    "sha256:fc5cbf0c19b36eb461d982a340a21e334c2f9cc58516775e307abf559c20bf06",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:617b08cc28ac11075c97b20a72084cc361d5ca3832a625b99b5d9e2f13086af6",
                    "sha256:875ed482ff62e7688962e712d70d85e25d5ae74e07555fa7900cfa8b7324b438",
                    "sha256:e9203a637abdebeeaa1e937ecbb4b7aadb81df43a3afe3ca876331b5db15b389"
                ]
            },
            "variant": "v8"
        },
        "build-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:07.806226102Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:54.221921571Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:54.221921571Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:54.221921571Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:29.245783563Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:41.546976334Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:42.289886613Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.379547722Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.520074185Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.571982732Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.58238599Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.594172868Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.594172868Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:43.179794438Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:43.297796316Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:07.720307917Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:22:07.720307917Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:07.806226102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:5b97ef633d062667252ac892f9a1ce68a2cb725edb1e0c284cb1770298e976bd",
                    "sha256:790337396924c5628e9dc010d9782d9d5b95551ccc10b248efe6bab82c824591",
                    "sha256:821a76bd989a560faf7bcf222b61bfcaa31aecc8e57b4775fc537133bbea6eba",
                    "sha256:d223892836322619baad183eccbf309657c7860d70afcd305a6042aefd1f5e6a",
                    "sha256:bf6be2c324807a030b5f3ec09ed6c5de269924db993ec3197327ce2954b115e3",
                    "sha256:bc3ee1f23e85c7a98cebf0445864891d0a0498becb1c4737ea1585a1658e5449",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c1f0c0f6899ee6ed82434ec530cd50409a3bfb73446cecfc94ec8348e3f6114d",
                    "sha256:11567a5a2dcda33387d4726465290138c2e2316fffb61cf0e166187db41f12fc",
                    "sha256:c5d5dba74ff3b7dbedd230f49db99e1dd15fb9ebe6f6c9683bb076daa2a9e957",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9cf6e219b3954f213e7fb6420806c6b66a738dbb0f746104f3a939409f5c8fce",
                    "sha256:e82d16ed3324a9557e3b2d342f344c11c46f879d1ec18ec1d7b32997e378fc3e",
                    "sha256:dc2af0d530584e0ee8e3eec0d0a4e1925a78c3eab772f6455c35ab90dbf4e9dc"
                ]
            },
            "variant": "v8"
        },
        "build-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:21.23225931Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.025503011Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.025503011Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.025503011Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:19.594197447Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.121877758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:32.842173236Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.925821388Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.038421369Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.048575517Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.058735555Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.102236086Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.102236086Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:33.679211525Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.805687062Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:21.144022406Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:32:21.144022406Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:21.23225931Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:57c54fd382a74bcf84fcb39c0782c665ef25b930d8ffd930798c98cecd5b2f77",
                    "sha256:6a4f4bec2884881d645ed43ca1dbb9618a162907b280048d4ea679a4d769cb8c",
                    "sha256:ea990f59d187379cb7fc6d90d63db1c2bc13645f29665d18a270c086c935a0aa",
                    "sha256:69fead2cd05696e8a1d34b2d74fcfb35a0dc12e2e80cfcf219e9d0eaeac4f98f",
                    "sha256:e55005ed90f3fea99d88c503dbef56615f4128da5a849f869d8dd2e9da61d668",
                    "sha256:1a0474a6ff95afc1337c3250daf4d364f8210ad0a9142e0cabe71d85413c217c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:de4954d1ae82c61cf470bd812ef6979451beac1b20a7bae2ee7ba13b2cd6bf41",
                    "sha256:526050c42b9c5c8cb4ac7336163e5bc710cdb925839b6a773b884648cf96d98a",
                    "sha256:5f94905656bf80058a4304b82b7ba8c0649a26d58e16b5a354505b091af89d70",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bb9e0cb11ba93b5b05bce4341b4209e75fb04841f7a7f1584b31b1ae21f8a96a",
                    "sha256:b0d6ad417fa5defb05d1bfef38f07f90663edc68abd19560ec66318b1890677c",
                    "sha256:c82299cb4aed0e6475ba5a15d1b6f6807e9eb8835d11f49b731917891ade8125"
                ]
            },
            "variant": "v8"
        },
        "build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:55.038186369Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:27:03.918436093Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.147151639Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.895859375Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.980508392Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.112265798Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.14030823Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.15151525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:18.718999272Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.843510162Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:54.948806232Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:54.948806232Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:55.038186369Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:98a8b5f61ea9c06c6ca5426a9b3fe983826c3213543669a8a869eb06b13ffde9",
                    "sha256:abf88002fbe7341686bbe52b32081a56454a64faf6b1aff81f25e877ea2d1eef",
                    "sha256:cdb57f4820cf792cf321bd24ad74790c4e443c0921841c200c7b4b3c3a80777c",
                    "sha256:e048235ea6afed524c6ffee9b267b41e34b7f5f8f446a015faf4d3a2dcec118b",
                    "sha256:2abfcfd44fc60e992fd3ab15cb28b4a70a6b06ca667cfbf5cc50438649b3e70b",
                    "sha256:4864885d65cc529f1b9ddd924b1142f47f61b3842eae08cc9ef2a3b4af8149b5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:db9b57190ddc50cfcb4e2e0f8d68f83cc68587d069f1d9d7da6fa9d5c9d265ea",
                    "sha256:6fa058d45ae7200f46f6472179d216e73556d98a0a5957f483d7dd0490768611",
                    "sha256:b32903eacd2484f955709867d7a2cb449fbf9765b6b59a8140984e57fc69756f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d6750bce19b22f81e30a090e28a497287094759dbba841d427ce35f360ae3362",
                    "sha256:e67a42e80313255fa916d8ef47bff5ee170ffb4a61d3cc08768de717f801cb2a",
                    "sha256:bb0269eeae779661ababcfc7e52b3c00fe8facb3817261327ec744ba06aa41ee"
                ]
            },
            "variant": "v8"
        },
        "build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:31.608008848Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.852195309Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.038043115Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.780304725Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.857536001Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.973909727Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.984190839Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.039552477Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.048349925Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.048349925Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:48.621429861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.755642095Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:31.520393206Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:31.520393206Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:31.608008848Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:065c0c8ee90b6a88729dcedeec49c1a8f45ba003549af640e2810d4fc6ff3bba",
                    "sha256:7095239a88b7763efeed9d9b9e966c78d55dc94e12d326381f3118139e438f96",
                    "sha256:4ca5d10fb0a0db28f3e65e6dbf1cdb692555a729a52a09e593e5af2ef4b4506d",
                    "sha256:ae1f08cc91ab849fb2eede5fb48afbeab9fed4053546cae3fccc599069c44210",
                    "sha256:7464529b9f9f9be667fe699f5f15afd6d8b7a38ed1073dadedb0e860a29d4c76",
                    "sha256:4402f591566cbc4f1a643b3ee7806fa2ef88ba4bf941aeb37a165c8682ef904f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:423e14c8252e188d33a5ec559ff6d28ea1a0821f704c1475e338975276f812be",
                    "sha256:b85b0d37ae706ac760dbc383b8ec12bac3bf23e56777b00f4e4a929d7e2b8eb9",
                    "sha256:23806f2c24d9bb5468f5003446742e59aee46f2da7a644c4a87138b489baafd6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:633033d186aafd501aa9434c8d5cc3844afcc5a42062655071dcc140e45bbdfa",
                    "sha256:81d2216bc5c791ca2fd1b8648b6844c0e4dc340bfb8a9246ea2d2a68479905b3",
                    "sha256:1abdf3529c2fe7d15dd26b187d822ea6ef9559ef1ffaefedf732a47325b186e0"
                ]
            },
            "variant": "v8"
        },
        "build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:08.524438802Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:26.423694552Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:38.364945598Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.086463913Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.165507188Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.277193879Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.286148976Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.294528672Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.328288018Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.328288018Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.90114596Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:40.025798109Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:08.435318086Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:08.435318086Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:08.524438802Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:e99690ff6bdf5117585c68a1f892149696d79cf3ed0c61661f9122e0a88e36e9",
                    "sha256:9a0c2b9b1cdbbc0db2dae309f62fd8631c29412d2f4d46032aa03ed409e35d36",
                    "sha256:0f1d8d6a7257621c084288626d17e7f27bd6147303a5c9158c529e401dbbed38",
                    "sha256:675bb67cb795bbe75be175fb93b12dabbc8607b96623ce313d4666b233f06a6b",
                    "sha256:e86a967f2b4a1e0de82f8149600bda5b07d3cdc443bf2a786285f5bd20df93a0",
                    "sha256:fb4b9b650fe26b6b6160d748da63edf5ac57dd26fcbfe3c63b4e7aeaf1992984",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5ebb16a9051aaf2b8497bbd9fd2f6df2355739793782a531d3de32b7328a50f9",
                    "sha256:767598c00b3c0217baf8b11080fdec7f4a087779a4c9022f53a753bba9092cf3",
                    "sha256:9e147bca8fc5daa8c6f66a786d5dbacbb9e45c22e9dd63e75c05ba9e572f0893",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8a7479558835f4c2f031e76f4929e630796da2c0bcbb6d7d10342c603b21c215",
                    "sha256:193b74179703042ee38fe8cde96f8898262beb2d4acf00371dd1220c77410401",
                    "sha256:abe48b9a212b71b02ad960d8c8fafc2baeb23c6d8350aeeef040f14d25e65978"
                ]
            },
            "variant": "v8"
        },
        "build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:55.313938868Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:24.953165088Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:39.889589426Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:41.066579567Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.143975176Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.264080976Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.273232403Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.300416726Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.309131727Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.309131727Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:41.947858824Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:42.063596406Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:55.220000137Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:55.220000137Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:55.313938868Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:86b0ada2f7f14805b83f2cfb8ef1f8a73afde8caf6c3f049cc3a11383864786c",
                    "sha256:ebc7a54252402a1816bfc35b5446dce363bfd6c5935ac7904fd329ac20bedc1a",
                    "sha256:a15a838560110aaa53aa3ba5694c4e6892e26f88e6b6d56ee689f97ecedc2a8b",
                    "sha256:571583e4c8c85d43870ac914ded5e81b0379d26dbc0a89f2b103ec5b0457a6fe",
                    "sha256:43f682e9e440b8bb7a3033c22d474f4d2c8e92fee462e107968253af616969f1",
                    "sha256:071f7b191aee9717a549ccbe52d8d7c394cb2751958451d6651e70c115482c7f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b291a6c1c9db3939164fef977dd8444e55920eb727e821275ccc19fd49bf7ca3",
                    "sha256:de31973b5af7dc7fadcaff9255f7cefff4c5748e53a69443662ecb0b5016f899",
                    "sha256:f71149996de278238e180a198943d47b663a52230e4d93ca1f0bb288c786af73",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e03e0a1d273c844ac66b77716b3e146d11d30bbf606dd7112bff99a367ee4b8",
                    "sha256:a730e990103f1d5442b52e8f0685766fa97943d189d0a181c8740828c3402a1e",
                    "sha256:45af46409fa618e0db602adfafb96aef9d8ba383f03f6ebb559cf153a65336d8"
                ]
            },
            "variant": "v8"
        },
        "build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:03.463316715Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.291405322Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:31.999296481Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.6904503Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.771880783Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.881097501Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.892466156Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.930855119Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.942378892Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.942378892Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:33.515849881Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:33.633832814Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:03.368119586Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:16:03.368119586Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:03.463316715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:56930b5dcad29e3311f6fb04ca615d7972a86bc1605e909dcdff8fd30258d045",
                    "sha256:756ba66bfc98a2afdf1ab75a4b6b4cfd056ccca172e3d8ee22390633659e3646",
                    "sha256:2b2f2eb87ce4100061a4f8f0873e1cfe881db0acff0d960c88765998f5c4f08e",
                    "sha256:9365ffcd553c34ba8db338105ed7643841e549d4ab9d6448ec58b0841352c1ef",
                    "sha256:b7340983b3a28dc104761b6982e5144961574b77477953b0607217311f953be6",
                    "sha256:114f170d8518dede364e1e325271c4f61d1c4f36d6ff064edd93a1069a1002c8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d7f11ca0dbf06b4b9921916c7a573d8d2da3b11a25006f08b8de60cab52656e7",
                    "sha256:3e83e4f4156b585c92569a9d80f258df9d9aaab0b3556c63e3a05e75d52b452a",
                    "sha256:aa503e523bef1a7611c8f0e03c23221df60a969fee09888e9fb791579cda1da4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f342a44a10739dfa4ae700c7f5dd38640608e5354614face55c827e5785bd034",
                    "sha256:090aceb56494abf075770c784017f9ee0ec152e73dcb9a1f7e9964ee3602a6a4",
                    "sha256:d4b6a5f9a5216260a6e66ae9aa0fefbd94799506c58117f98b1a0a3a53c9131c"
                ]
            },
            "variant": "v8"
        },
        "build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:39:58.680266387Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:16.696930741Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:34.389505442Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.127106593Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.202265303Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.322213113Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.36866875Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.384433538Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.977590429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:36.10345642Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:39:58.599118608Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:39:58.599118608Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:39:58.680266387Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:8118046c0c69be9888f1d9d5a1b51d47233771e8007f0fc1d1568cea72987874",
                    "sha256:6ace3ce5da9d73ad77fff9a9e1ead05c66d546a2638f8e476abc42d746fb9e0b",
                    "sha256:ba5bac65ad77adaa77dd7e72342d46e864399bb8cb963120dce00cd432062872",
                    "sha256:7c9997e72fd0e9c0f80088aa1a8c1e9ec7d5791afc6a1d64bc776e96eebf96c3",
                    "sha256:44867f45243358733796350989f5375d99bd654d3ce177454b689c8a0b5e38e5",
                    "sha256:f8c6334654e615714730d1906c472133f0569d24ad6d225d8e56acb6bad41ccb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f8af0639919c6ea8a3c94e5a9d75d4eb902a69acf123be2ff1eacefdc57e0900",
                    "sha256:b00db75f11d6652467a221628e15d27c9cf656b13d5f39b57d2ae1456c812fd9",
                    "sha256:8de1b58a8c327d1695b4465972be024744539717d676ad520eaf73e2de6c6887",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c4416f328678a4224c0b75e9b7ba68e7ccde5da7a27e3c652247e42d3c8540fa",
                    "sha256:aec65c04e88b5207417f29825ad9e9bb69c66746c8ddb1d24f4193ea35400f40",
                    "sha256:4abba8d2fa04ab0f9da149f38d460f87b2fe6e272ca5b802ce25f39f823b0062"
                ]
            },
            "variant": "v8"
        },
        "bullseye": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:13.281889517Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.176020238Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:13.176020238Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.281889517Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:6f2ebfb6fa5d8893e5bb258b80c5e32bad83feefed5c3d1505abe94c6c5414e0",
                    "sha256:24df7471595fbb4285ff34fc41a7d1ec57f6b4864230da6e39b91db98edfee50"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20231025": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-10-25T13:36:09.420556221Z",
            "history": [
                {
                    "created": "2023-09-20T02:44:28.274078277Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:024479be439b4ecb37c939e68673adc72955f3345ca0e809bd13e897709e59e4 in / "
                },
                {
                    "created": "2023-09-20T02:44:28.657109179Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.858080788Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.858080788Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.858080788Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:57.7977819Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:58.988569739Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.089168973Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.248690513Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.263148961Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.274898882Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.292459562Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.292459562Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:52:00.209049083Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:52:00.377606115Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:09.268211703Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-25T13:36:09.268211703Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:09.420556221Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6c9ad649ba0489961dd64654574cc4134f9eed47c0be4524747da2f36f5dbbd0",
                    "sha256:b08019ccec097cb7e2d80a5a373d089fb37220a87c451e9677f21788a63ab9df",
                    "sha256:e0c742e70e226c5b515d773f2f3006d09f5d14fa46ef55db6d814b2d23376fea",
                    "sha256:d9c4546ac125486649b761fe5a6f90c38596e55dda46184f1f74e8181e280683",
                    "sha256:0ae6b9f93d0a321b28e66dd6bfcad103863c464397390bd9aee58dfe74c6b505",
                    "sha256:8d55be54b11efc7d91f4661764d70c84e0a707a7b3b4fa19794fa7e02c480df7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:181ae62c3e7c3ccd2ccc64cb4ce71975047ad32a06cdc919350115c21db5d2ba",
                    "sha256:8e98c7c789b19e4ea0845c3a83024108f2f6cb5e9c9e6e3dc78fe5640c548467",
                    "sha256:ff453fa1fb8a27a41215bc06494cb580e0f5c757ce4131f234e487d5fe9cb80b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:731889e3703c8c970984ea7eff9c585c06eb8969faa3419294996530a395e2fa",
                    "sha256:9b3c66a964515f327e9bd99a2f6feb12d32c87f72a24caccbe042c8fa1557114",
                    "sha256:dbd2a7ede00626339bb5e770f75c64b10a367f4d162ea82905f4dc4c5120c61e"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-07T07:56:32.721935662Z",
            "history": [
                {
                    "created": "2023-11-01T00:39:55.82247244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:99dc83e8bb8c67d9179a265fb750c76f73fa660e13e938b6cd613be653cd077e in / "
                },
                {
                    "created": "2023-11-01T00:39:56.253202489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:03.822317888Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:03.822317888Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:03.822317888Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:16.734944758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:18.114597076Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.213178797Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.362163263Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.372736882Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.383037997Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.40658476Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.40658476Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:19.3490972Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:19.509541994Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:32.585155369Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:56:32.585155369Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:32.721935662Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:60df532890c9cca1c175cfea286e7bc7d79a2f79592acaacf5fefc399ea9c569",
                    "sha256:e56f69cd0dfb229f9fd1407fbdcbcabe5b800ac5f620151bff8b5815cedc33ec",
                    "sha256:3da07ba74a1afe2b9300064007f6be2da7dcd8abff93119dc8d93e6a21602051",
                    "sha256:19e728986e1702d927d4208485c46bc397e5a8eb5822011ce8f95c30b6a2f198",
                    "sha256:8a49b7a43e9961d024710c4ddb502e0faf5fea4159963cb6e64fac3f529adbe0",
                    "sha256:33c493aba170663dcef60484c47635c490858499f11402fa7a235b50b64456dc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0ae003343d02224abfda090742390a33faee92ee2ba48d959e820659850b5d2d",
                    "sha256:7c541fed31d184a7f501c31741d0a27601983df8133f6f9cee1f1d0c23b3de2b",
                    "sha256:94f7179c895cd2821d04c1beb708fe27ebcc62fb0fce3aaaccfb3c061bcea59a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fd6040c95d6d45c2ad435c51f7fab05be21da3bf9a017d58e48d4d8e5bf5b3cd",
                    "sha256:00caaa193ccd9b79db01a53d77f0272ecc3981f709232a538e1758f2f637646b",
                    "sha256:4692c5419fb6bb870209ec7bbf138e68402a6ba95acb703f13e2acaea7b5c330"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:22.276834456Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:58.664127799Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.465195557Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.565496734Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.70470318Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.725314262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.734132316Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:09:00.452678113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:09:00.595471645Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:22.146341921Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:39:22.146341921Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:22.276834456Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:29c36ff94b71964100e213981142e520295b15626ed1879d99c36bd5475b76c3",
                    "sha256:6397d8e27bf4ad223bb62f7601f9a3621abe07e88e09b18ee1bda45f9bf57c6b",
                    "sha256:0ef0a058e815346f39e1ba03acb0a4a422c3b87e58fc08bbe1ba4451eacb40e5",
                    "sha256:d16b22555e3d20070c2841ee0429a7e3a11588536c24a86bb6cc689ca3c5ad04",
                    "sha256:d374c74ae31322409874a4a485abd512f03004938dfa1c7d3652c3fe9f9fd673",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0cdb1b92cbde3db5db232bacdd380b6078b8c4d0b02b6e7e44891d443ae4591f",
                    "sha256:7e2f22a4da908c29da27c98aeb4d9505c91ecd820f78243c7054d9229c13d30e",
                    "sha256:8658137ac973bebf78ffa2c27c9f3d7e1671d22d756b393fdf75d11afab0a398",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9982a6f0a6244d57c31563dd7bd54e7f0bc3227a7db2aba3321e9b2fc17da0aa",
                    "sha256:f986708a8c3fcc98685c8845af5cb2091fe6baebf4d0be17387735172b37d4ef",
                    "sha256:125659da938ed144fbbee11c82eaf60f900232ddc3f144fc9b6be7c1ab6e0f77"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:10:40.032709982Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:14.626506753Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.296969131Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.407547863Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.541071217Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.550355412Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.558824236Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:16.132254001Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:16.278960973Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:39.894277473Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:39.894277473Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:40.032709982Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:ee15dd3b9b4499504e15f776e985d6d6db85d02b2af28b58e0f6840a5611ffda",
                    "sha256:3cbf5bc1dd090798d60651ba9d8e5266744467d3942b27b8af9aad2fc6eb3d94",
                    "sha256:d64e3c8a34df828f9d322c1ad2571e1c690ad3d89848e9d84abaf02dc6f46d0b",
                    "sha256:90b090bbe57ed39388a1a1d27301bd521b19acbdaf63cf04c2344039fcdb3ac2",
                    "sha256:570d5cbcd38bac7a16ce13ae8fe4232ddf645709d832e69847ce9a3b3c4dd8a5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:86fc17d12f1d13dbe119209636876d35dec06d64ed19553ebcc3efba975b7b3e",
                    "sha256:13be287764da1f3fc3368a197eefd1344959dbe6a329e8fa4e2579f7026eaaa7",
                    "sha256:ce6f79e8950a46a4564a5a5aaa489dcce75c1ee6490661c3a5b008cd82481bae",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0a7c9edc80c512f510d67fc94d27e1370fdd408b3ae2867c02e0f583401a4d7d",
                    "sha256:6bb9cafb5e209a8cf07a0767d8b36a8299265b599d567386d904ef56d9546b3d",
                    "sha256:0cb3038a33e0a1202e668333ac150f1a85c9eb7542b7fb22867e40631e15b408"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:27.486010176Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:29.555242312Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.824526678Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.900951309Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.038705894Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.082582927Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.092267272Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:32.003177354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:32.125502794Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:27.38589354Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:30:27.38589354Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:27.486010176Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:bb6ae9568bab1557dbc3d0cb8316b7966b5aa7167c857ca6a0f3f564fdf87436",
                    "sha256:d0629d243e2fe6f305c71e391ff1739374dd4b8690415fa9580f1748a9a30037",
                    "sha256:a7c6b7a4f52829976762ad6a7fe7ea2366efd1affdc49a9cde65f5fd6388752c",
                    "sha256:99ccf9bb9c67f6d195c8614560587213a77feed85322c61f75a3c3b05ad02031",
                    "sha256:74b04caea3985b1e073cadcaa10cde033dfa3b97d3466a70e4333f5397f52cf9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:35c7e94083902da8d7aaa7dc09f3463588f11b349a5f04911657c96fd7679ed0",
                    "sha256:4d18e85f41ab5a46df0ca30aa473b2caf4ecb6a139678cc81f4bcca1ce2d7101",
                    "sha256:cff8c27c938f8613028b601b55db7bc98ee912e4fb47f73b67ef2c8e3c5902d8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b799a7e836857253809f557ef671537afcf47292a93e5a3b1b4fb24c57368bbf",
                    "sha256:77831a5aff08f46e4ee5d6114092b6bb0a017575658f76b9a61870231d0ee6f9",
                    "sha256:25a3d59481b1110d7abb32afd59cac43c73b473d451b1cff04ff47a526431d61"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:01.134351349Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:15.467501006Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.126208035Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.217017231Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.338788671Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.34938903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.360698393Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.10770263Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.229328657Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:01.028169707Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:22:01.028169707Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:01.134351349Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:01243642c945e579c0451a3a4d955bd4641e99c3be13311d4b167ba8693d062f",
                    "sha256:2f80d37556a1de5f09fec2daa7e0fc3e155d3521c833adaac5feede306196d7b",
                    "sha256:f89c52ebe0e3068a36445b6f944e2db340bce429d32fd7240b30e851aafd0fcf",
                    "sha256:a1aec53fe6fef2f29fd75283f3c27743f8500ac14efb26ce2f663c7844c42987",
                    "sha256:6e5cf0c7469ee5ce96e578b5ce1ae0633c328b13528b5346393fd9e31eaaeeeb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bcba603767ed25ba528e8f15a859e907b1e72fedb01a388537532d92bb0b9dc2",
                    "sha256:2e7da9139f8e1d258d5851ddcc7843e3dee1aed7e3cbbb0d33ea5e4787014c43",
                    "sha256:9c94701d7ef86d3d9234a468757ead3d8b56f6c0909d7034f57d0c0b935cea87",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:21899b3ce1344861e903bb14b2efdd11b565a59d6ce5807af64ec376e67ad7bb",
                    "sha256:de6a37085e57dad5fc42cbe91f200fcce2ff1525e6ef50c03689e972b4386102",
                    "sha256:c29f860fc079784e30e2b1140b222e49d08ac022d168fb3782d4ff55f6eca9b2"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:21.098183689Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:21.741125507Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.517492269Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.594603603Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.697980042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.707177419Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.714737325Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:23.451931585Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:23.578406313Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:20.989215513Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:32:20.989215513Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:21.098183689Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:7a95b560dc11fe5ff0559d2f6537c1efc83ac7aaad51b45a5917e009c0c06f50",
                    "sha256:f6031278a7707d1a6e07539ea7605f5f23152b27e222e41b6ae7de3e420b1ea3",
                    "sha256:21a99779a9767f9d83a5c911ff51d8913cf9d14aad33222a637f2e1d35a6e7c2",
                    "sha256:b4a309d2fce81e65a4957fbddc32a36ad3270ca8af70ff8b4b7b8036dd32cfd1",
                    "sha256:9fa7bf55497b544bde5f87788625c52fef31cd9a358c938fcad8e8c28654d184",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:77d57246a64bbe2f4f853d61f11398dc52b60dd9c570783a62321f1ce29d4412",
                    "sha256:8fbecbc914005ea0fdc87c421d160c414237e51547092ae9f58eec8659798ed4",
                    "sha256:617f6c14453696a372688649e81a54ddd9dc6290525c211a3c5be2b03141291f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3f41648683764f9b2f994bf34f3da567cdb788fb3004028ebced710d86f368cb",
                    "sha256:f200cee6f4fbabf8e69e5a179c7d425dee37e0afd71c343172a4f9e34918fda9",
                    "sha256:f52ca34206c81f2a436344e9a0948e1c414abf64a8adf7d7ff16c73bae67b331"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:57.897429552Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:57.783533164Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:57.783533164Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:57.897429552Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:fbffb08257a5c92284a41591aaa0b3710e07c8d07d6edc3b448342a0fc8b5b35",
                    "sha256:1c757983748130f1404140ddf3e14288d06d1848d42c7342d75d533d169ccf6b"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:35.919065732Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:37.612406454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.235239371Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.327380141Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.444407777Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.455821747Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.489249886Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:39.054577625Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:39.175091463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:35.810346277Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:35.810346277Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:35.919065732Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:3667705b92b777b9857445986385fa3544fe745de824ed9e48b74d48e233a73b",
                    "sha256:a8f393213fd8f42444b9081c3d25da37b97dbec4b8639fe0f0e3a7589d5440fd",
                    "sha256:9e491949c039a6555bfc9e8d7edc810a1157e4de0e5a1c481e4a9da99f8dc49f",
                    "sha256:9d1103a6c6fb53d9a95de8b92fef5116bca54e0566ab3c9ba1697738c9c49934",
                    "sha256:34b6b50b96caed9ea8b06be9b87ec63932717d466f5059fcce4e49d0b8b1fe0a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:648567a88a80c3aedc7a65bfa28ed87413bf435dc5a1cb88738e3c5896c0c076",
                    "sha256:03d885cb57438349695f4729f2c71f343028df5dbb15b096c1d538eabb3058bd",
                    "sha256:d10c87bc3a1b034fb2d7a2b64156472e0744796c40aa33beedccda60556fa259",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d88ebe737a29be3e76f6b02f3591509f373fd4b840fb08406f33169dcd0cd78f",
                    "sha256:48cab8f4281636a899bd689974b153a1fca219fe12423b0c24707409e719aeeb",
                    "sha256:6651233a11f55b902e6e420f598dd42c27d10e98cc21e0c31d3fe5419b132e9f"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:11.481917014Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.151462719Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.83609249Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.924579316Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.040114112Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.053934176Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.066241153Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:19.805586345Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.93208375Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:11.383908462Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:11.383908462Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:11.481917014Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:0f12b4245fa0a3cc547f2a1e523735b954a9327e222c9499e29df367c992fc25",
                    "sha256:e718ad40e3c90a1cd1ecacf3a26fab120e1dea3923670a16a4c8ca50b6aa9d15",
                    "sha256:94c43fe224b59dec6cae014ab2c49387ad78dc326e460a610de6fc06495c0c1e",
                    "sha256:fe063efa4d53e9a11ecb850c83c6dd1b8b9cf17ec889889f949361d332a5b185",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f767c7f76af4a12cb0e1199b0fc93840a3e5a2f502f98489563422b710c7c82",
                    "sha256:eebaafdb21b5c124a4063b6c1f0639260a303dd72ba00c9ec5ad78515f70a2e1",
                    "sha256:8c39f39f8c6773437573033b4459016bd870d9bd6b9034b07c451bd5a636ff53",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:88062171c3eea1172e399dc542b1a51a8e61572ea372e1516f5b57248db85766",
                    "sha256:9f9f9939f4dc2b1ea2b23e3fc7a7627547fe4771b5e60a57cef4abe19de95f0a",
                    "sha256:54ef0ce651ff47e577439a5a9ec24b5dffeb4a31cc2ca15967214aba59b89e1f"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:50.71203736Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:13.879662253Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.586745871Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.670518036Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.790637458Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.799775231Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.830003625Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:15.53078113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:15.644511102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:50.609020295Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:50.609020295Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:50.71203736Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:ed4cf4bf4b8884bdd10c62b3d9f3f64dcad62f08c9184d6e8c4e3edd498d6ae7",
                    "sha256:e3ff77460733b5c70568a050c25cbfbba938cfb55a53dd793006cf80ce8cc1fd",
                    "sha256:769ee8ef4da51e9377ca4f5d7e5b438c1bac43f38546dfe5b6ddb3ae5fc17d03",
                    "sha256:2faf27c705413cfe35a57bebf1d6dc6e5fed15c26b907de4e87eb462c4c8203f",
                    "sha256:c057d9490c0d6264b7858e1b24696718ce0623763d48f86d0eab46db57cc6697",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7333a928fdb22e11f1eb14ab19de0aeece67b74f04ae6800a48f3626b6204619",
                    "sha256:7d1b2cfc6f4a702dbc3c9da3af6ce40ed072aea5b43739a0f749f0f5a410074a",
                    "sha256:1faec101bbd8a81f2c905ae2146f8736e838f567a8b2f856533f8c07e083cc3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1dc00d63c3226fece7e9b01c6df138f48bb6914b96abf29daae86c6c2331068e",
                    "sha256:797ab5c9a9ac54e19dfc51dfee7076d4c2efae77fe13399f77b03f617df83788",
                    "sha256:ac8c0e12ba7892c39161fde7f5b19e2ce12876134e0ab5f0ef7ae50839c51b17"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:06.289822757Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.743482327Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.498252335Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.585989395Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.739473042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.787312463Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.797563821Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:22.394772002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:22.511272459Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:06.188737929Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:16:06.188737929Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:06.289822757Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:d04befff2a5273eded40c865c563f0d50276b31e32180679474e889fe080da1d",
                    "sha256:7b0c6c50c04ed7bf4b021ee99132e0366bf6ae4768e6a29e52e27fb6a1569aa3",
                    "sha256:2b57aa920cc2cddb5cf11eac876be5662fcb346e000afb2b1ced7b1295ed5a3d",
                    "sha256:9ad61a9af1dc63ddeb51e6fe9bbc82df2e37f1d0b967166d78ee356b54e2e32f",
                    "sha256:2011ae045dbd2ec46399c6e0e93d9cbef0dc64a181ee72a298737b86a13cadc1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71dc71c4129f2ba46a54c086463f9f61a15ea4ed70e3ad2fbf06fefc3ebda46e",
                    "sha256:46974ccfee6d4c0f3231897a3366bb38c4424b87355d0e626e0ae0d9fa0b7224",
                    "sha256:222ca016ec867e88cf844f487bab87a5460e34afed1ce08d1e7db271a366db23",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2af796bc84c5e90eb57e23c8d3adbf9050db0d14fa44a31e95248234ea6447a2",
                    "sha256:12aef4a7dd4d7aba50b7d32032292f9390c9cf5b0cff1b43ed39b331f27b3887",
                    "sha256:e1012b6262d2135f95d3bcb60bdf6f40c972ba99047c23291ab40da945c70765"
                ]
            },
            "variant": "v8"
        },
        "bullseye-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:13.281889517Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.176020238Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:13.176020238Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.281889517Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:6f2ebfb6fa5d8893e5bb258b80c5e32bad83feefed5c3d1505abe94c6c5414e0",
                    "sha256:24df7471595fbb4285ff34fc41a7d1ec57f6b4864230da6e39b91db98edfee50"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:39:58.680266387Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:16.696930741Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:34.389505442Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.127106593Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.202265303Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.322213113Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.36866875Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.384433538Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.977590429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:36.10345642Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:39:58.599118608Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:39:58.599118608Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:39:58.680266387Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:8118046c0c69be9888f1d9d5a1b51d47233771e8007f0fc1d1568cea72987874",
                    "sha256:6ace3ce5da9d73ad77fff9a9e1ead05c66d546a2638f8e476abc42d746fb9e0b",
                    "sha256:ba5bac65ad77adaa77dd7e72342d46e864399bb8cb963120dce00cd432062872",
                    "sha256:7c9997e72fd0e9c0f80088aa1a8c1e9ec7d5791afc6a1d64bc776e96eebf96c3",
                    "sha256:44867f45243358733796350989f5375d99bd654d3ce177454b689c8a0b5e38e5",
                    "sha256:f8c6334654e615714730d1906c472133f0569d24ad6d225d8e56acb6bad41ccb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f8af0639919c6ea8a3c94e5a9d75d4eb902a69acf123be2ff1eacefdc57e0900",
                    "sha256:b00db75f11d6652467a221628e15d27c9cf656b13d5f39b57d2ae1456c812fd9",
                    "sha256:8de1b58a8c327d1695b4465972be024744539717d676ad520eaf73e2de6c6887",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c4416f328678a4224c0b75e9b7ba68e7ccde5da7a27e3c652247e42d3c8540fa",
                    "sha256:aec65c04e88b5207417f29825ad9e9bb69c66746c8ddb1d24f4193ea35400f40",
                    "sha256:4abba8d2fa04ab0f9da149f38d460f87b2fe6e272ca5b802ce25f39f823b0062"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20231025": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-10-25T13:36:09.464410915Z",
            "history": [
                {
                    "created": "2023-09-20T02:44:28.274078277Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:024479be439b4ecb37c939e68673adc72955f3345ca0e809bd13e897709e59e4 in / "
                },
                {
                    "created": "2023-09-20T02:44:28.657109179Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:50.777379821Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:50.777379821Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:50.777379821Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:52:35.57862626Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:57:58.349581561Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:57:59.873464686Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:57:59.873464686Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:57:59.873464686Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:57:59.873464686Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:58:00.00236953Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:58:00.13969742Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:58:00.306125617Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:58:00.321372282Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:58:00.345127196Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:58:00.36434833Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:58:00.36434833Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:58:01.496070429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:58:01.687852267Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:09.370335011Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-25T13:36:09.370335011Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:09.464410915Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6c9ad649ba0489961dd64654574cc4134f9eed47c0be4524747da2f36f5dbbd0",
                    "sha256:c2ec1e38c4bcabaa778a5f0c88ed8ffc97bb8ce0483f681386606c89deb96045",
                    "sha256:33aa922b69ea06922be97091584047cc2cfedd591ff85fe2d1479be8d6761ec3",
                    "sha256:64308748351afb6f2158b9323380e79ebff955a81c976e4e4af6fb887c5d5939",
                    "sha256:65bf34eabd30a41a79563fe6f5216e4a59a72610e36a402d9dc246b7a8557bc8",
                    "sha256:81b8a59ec4bcfbcbf83ba8eab06a915531f4bf8d450852ea9cc01cb47e7546c2",
                    "sha256:8a9bd8e8a45f4f71f310af475b01f31d5529a2ff2d6a3a60bc6e501dec9cb064",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:03cc0980c67b2951087fc08e340e59d72232f7a6b5c397022861fba224c1a232",
                    "sha256:2d6e7427c3c2c49a4a73503862b7ac566238ca0391198ff8a46a02d7fac95622",
                    "sha256:6acadd3c46f15bbbd32c6a48169f20f931b60734ac188a61c3c63fcfe77bd3c0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b55a5fa31b83a856f35a73902d376b8b23be4ca4661b4fe4e946270deb6869dd",
                    "sha256:6569d6e17fa03349dc819be7ef58dab0154ff0e1f14fd930fcb92124a3bcfaa4",
                    "sha256:dcb4a26978327ac7c9a5bfa2870f3b2935ab07b480cd890276477f2a4e10307c"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-07T07:56:21.567525055Z",
            "history": [
                {
                    "created": "2023-11-01T00:39:55.82247244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:99dc83e8bb8c67d9179a265fb750c76f73fa660e13e938b6cd613be653cd077e in / "
                },
                {
                    "created": "2023-11-01T00:39:56.253202489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:44.81518649Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:44.81518649Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:44.81518649Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:15:20.056215532Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:30.974177089Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:31.69115062Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:31.69115062Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:18:31.69115062Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:18:31.69115062Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:18:31.811143846Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:31.909836381Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:32.054732838Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:32.064012957Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:32.07454669Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:32.083094128Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:32.083094128Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:18:32.743734Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:32.875140733Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:21.481717169Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:56:21.481717169Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:21.567525055Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:60df532890c9cca1c175cfea286e7bc7d79a2f79592acaacf5fefc399ea9c569",
                    "sha256:05e381ad01d458d4028996d057aa5f6e28e50c339b7558c6f5e9f4fab0e2d6fe",
                    "sha256:a45d349c4958365835d509574014b5ab0fba254f58e8ab051f5b22a6809e58a8",
                    "sha256:75260199f5f065940463f6d0f2f8efa24bfb329ab2a9f94c5b664512a54c9178",
                    "sha256:592ecc9b8e0c74765df6eb2e359db11c5b5e91f6a02c6801500af1d885dcd03d",
                    "sha256:f69f22c25d941ae2abcba0327c3248054e016b819c79b17cfc9d394f2e33a51c",
                    "sha256:e2ac2a408b5adb733093691f1f29aaaa9be84b479ca0d2b004929f441f34a005",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:66b76b4a3d37f92399908b09a8cb3b27a9aa205831c424ee9d1f7c85c526e90a",
                    "sha256:45cb1e789667ced88693908617ecdf08f43e1735f9674da87298d4f7b4cca4a0",
                    "sha256:16ad390d9b6eb3c1a30f97d1f781ed5a4da255d74a11d1ef2c44ea096c9ebe6d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0ca227d18f482e081f837e0e869d509eda6c5144190489ab256e6a764184200b",
                    "sha256:e42e562c325074406efb88b6cfb1a9ed93e3e984dce135b82ce18bb4eb9eb824",
                    "sha256:124aac625b8c33bf538f113037b5df0d38d0e01e24e6efcc76cbdf8e59f0c44a"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:25.770406149Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:19.185585151Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:19.185585151Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:19.185585151Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:53.593522423Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:03.578664428Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:04.346536518Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.453335285Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.61096714Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.620135356Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.666915734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.675666558Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.675666558Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:05.286716179Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:05.42797061Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:25.676979411Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:39:25.676979411Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:25.770406149Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:8a7ef35bddc112bc2b5431fcd390b9065fbda13786e903966196fc5dea6c6ff7",
                    "sha256:7cfc8e6c3d60b5caf28fa87975f88f0bce672613d3fe5e43dcba3004c1a241c2",
                    "sha256:095440987c66a3da4b60dbcb1573c3f317725bef1b582527987bcb61232897b8",
                    "sha256:fdc851e31b9f8daca232f41c4331a41ce0b7d6ae39c6934e26b3b00ea83607c2",
                    "sha256:81f5a9a1455c7edc5a2b23fb1d25cf133960a48cca8b20beec4402d4600bdbab",
                    "sha256:5072066d883433d394dd39e61d315d510d65477455d1ebbfbc975661c0e5d6e5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8a927bbd12e93e3bf2e0198bcbd29fc4da974e841b35e06753ebfa5d8497c8e8",
                    "sha256:5f331de56e31b06abd6639a649c8206602181ca42a24e9e5bcd53c8cb0d95117",
                    "sha256:b88d431a371254c9fb9c2c2e740f85d47d78fdd8d630f43f25d2875280155428",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2e76d16263914442ebe25f79121fb8f6e5c3bdb2fa92b42fb0299d85e1ae66db",
                    "sha256:8ca4a91dc44ef7c20cbf1967fcc0bb8d57b528133e9b46fb828827730564f409",
                    "sha256:f436366511e70d668e46029f8089a00d536733410f4911738c33289f3ec1bddd"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:10:41.587469638Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:40.697278979Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:40.697278979Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:40.697278979Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.517978404Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:25.677995698Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:26.784147927Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:26.885450105Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.00433604Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.013309924Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.021080443Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.029043166Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.029043166Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:27.789559574Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.935595776Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:41.48064894Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:41.48064894Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:41.587469638Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:d1bdc2c7daa01f1a34a743e068fba88eed6cae429a78ffaf1026438559e7079a",
                    "sha256:eac3b3efd93a07317becfaedb2134d2a36d626351201f53287a9549d27fd6b1e",
                    "sha256:d9afa0523f9365ceb09cbe55188000e2926bf566515bb96b22378399794b829f",
                    "sha256:56b8f1d66272dc0cb7dcc0a6c8dc62d0dffe95a4dadca792aea661ffa657e9b6",
                    "sha256:41f19aa4c6a781766a40b89056880de7381f82b80e25e911bed681c262b50808",
                    "sha256:114bbb7284a385061a40b3318241707806b11718e8429d2530403a1e1af396ed",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c36bb5822245b307f3f5cb02d270ef7b054e4c8c0c5a19b9afe2f700e7a0c8e7",
                    "sha256:12c4d981b996ad6f0694ea3bfc642bd029c189166382a03510961af463a6ad6c",
                    "sha256:cc297fa682932c85eb7e47d6065e550836e86b822afa332454fe5f26065d5a90",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fcca4139646935ce3cc12873f462c82729def6262014ec15b614cbdc62973fb3",
                    "sha256:70e91ca319c46451eb73e5bf0e062c658c23b62053c26f68c61a339f327eb9a6",
                    "sha256:719cb5282d9b2fe4099ad166aea600509a12306f2dfdd83ccfda79d6c1dcb1ea"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:21.246822078Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.902423274Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.902423274Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.902423274Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:18.48032328Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:29.733050906Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:30.46634935Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.552360377Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.683110102Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.743003008Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.754119398Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.765383835Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.765383835Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:31.344858628Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:31.464992595Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:21.156624798Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:30:21.156624798Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:21.246822078Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:81824f6357af09e5f194cb6f6e0be2dc47db7a062fa4a0c78124fbb2b1bf1f9a",
                    "sha256:cfec8dc9675f1e7619cbfb27645cb2cece178566824212487b746a0ede92ffee",
                    "sha256:2724a7dd652ba165ac374bcbe1860c24553c9f3aebff4d66ad2ac127b333f978",
                    "sha256:65a14a718d427e7364a3e89eb98c0ed1a72d6dbfee605a93e7a27e3718ef2638",
                    "sha256:131acd714ec7176998398a67bb88983aec4768336e426a62c5402f4f9b0d4c63",
                    "sha256:c1106c57741bc52e2de61538583d82986fc689e99e5f63e4e5e644c3b547d398",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e0dbeb1c535388174228b102c48591e56d8d448b4ad149c16aaac0a995717a15",
                    "sha256:bd064ab2393e57585a3c1adeb6bb53a305af4fb4403c06184441d4002582d7e3",
                    "sha256:fc5cbf0c19b36eb461d982a340a21e334c2f9cc58516775e307abf559c20bf06",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:617b08cc28ac11075c97b20a72084cc361d5ca3832a625b99b5d9e2f13086af6",
                    "sha256:875ed482ff62e7688962e712d70d85e25d5ae74e07555fa7900cfa8b7324b438",
                    "sha256:e9203a637abdebeeaa1e937ecbb4b7aadb81df43a3afe3ca876331b5db15b389"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:07.806226102Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:54.221921571Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:54.221921571Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:54.221921571Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:29.245783563Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:41.546976334Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:42.289886613Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.379547722Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.520074185Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.571982732Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.58238599Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.594172868Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.594172868Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:43.179794438Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:43.297796316Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:07.720307917Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:22:07.720307917Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:07.806226102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:5b97ef633d062667252ac892f9a1ce68a2cb725edb1e0c284cb1770298e976bd",
                    "sha256:790337396924c5628e9dc010d9782d9d5b95551ccc10b248efe6bab82c824591",
                    "sha256:821a76bd989a560faf7bcf222b61bfcaa31aecc8e57b4775fc537133bbea6eba",
                    "sha256:d223892836322619baad183eccbf309657c7860d70afcd305a6042aefd1f5e6a",
                    "sha256:bf6be2c324807a030b5f3ec09ed6c5de269924db993ec3197327ce2954b115e3",
                    "sha256:bc3ee1f23e85c7a98cebf0445864891d0a0498becb1c4737ea1585a1658e5449",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c1f0c0f6899ee6ed82434ec530cd50409a3bfb73446cecfc94ec8348e3f6114d",
                    "sha256:11567a5a2dcda33387d4726465290138c2e2316fffb61cf0e166187db41f12fc",
                    "sha256:c5d5dba74ff3b7dbedd230f49db99e1dd15fb9ebe6f6c9683bb076daa2a9e957",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9cf6e219b3954f213e7fb6420806c6b66a738dbb0f746104f3a939409f5c8fce",
                    "sha256:e82d16ed3324a9557e3b2d342f344c11c46f879d1ec18ec1d7b32997e378fc3e",
                    "sha256:dc2af0d530584e0ee8e3eec0d0a4e1925a78c3eab772f6455c35ab90dbf4e9dc"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:21.23225931Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.025503011Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.025503011Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.025503011Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:19.594197447Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.121877758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:32.842173236Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.925821388Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.038421369Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.048575517Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.058735555Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.102236086Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.102236086Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:33.679211525Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.805687062Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:21.144022406Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:32:21.144022406Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:21.23225931Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:57c54fd382a74bcf84fcb39c0782c665ef25b930d8ffd930798c98cecd5b2f77",
                    "sha256:6a4f4bec2884881d645ed43ca1dbb9618a162907b280048d4ea679a4d769cb8c",
                    "sha256:ea990f59d187379cb7fc6d90d63db1c2bc13645f29665d18a270c086c935a0aa",
                    "sha256:69fead2cd05696e8a1d34b2d74fcfb35a0dc12e2e80cfcf219e9d0eaeac4f98f",
                    "sha256:e55005ed90f3fea99d88c503dbef56615f4128da5a849f869d8dd2e9da61d668",
                    "sha256:1a0474a6ff95afc1337c3250daf4d364f8210ad0a9142e0cabe71d85413c217c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:de4954d1ae82c61cf470bd812ef6979451beac1b20a7bae2ee7ba13b2cd6bf41",
                    "sha256:526050c42b9c5c8cb4ac7336163e5bc710cdb925839b6a773b884648cf96d98a",
                    "sha256:5f94905656bf80058a4304b82b7ba8c0649a26d58e16b5a354505b091af89d70",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bb9e0cb11ba93b5b05bce4341b4209e75fb04841f7a7f1584b31b1ae21f8a96a",
                    "sha256:b0d6ad417fa5defb05d1bfef38f07f90663edc68abd19560ec66318b1890677c",
                    "sha256:c82299cb4aed0e6475ba5a15d1b6f6807e9eb8835d11f49b731917891ade8125"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:55.038186369Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:27:03.918436093Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.147151639Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.895859375Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.980508392Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.112265798Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.14030823Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.15151525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:18.718999272Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.843510162Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:54.948806232Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:54.948806232Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:55.038186369Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:98a8b5f61ea9c06c6ca5426a9b3fe983826c3213543669a8a869eb06b13ffde9",
                    "sha256:abf88002fbe7341686bbe52b32081a56454a64faf6b1aff81f25e877ea2d1eef",
                    "sha256:cdb57f4820cf792cf321bd24ad74790c4e443c0921841c200c7b4b3c3a80777c",
                    "sha256:e048235ea6afed524c6ffee9b267b41e34b7f5f8f446a015faf4d3a2dcec118b",
                    "sha256:2abfcfd44fc60e992fd3ab15cb28b4a70a6b06ca667cfbf5cc50438649b3e70b",
                    "sha256:4864885d65cc529f1b9ddd924b1142f47f61b3842eae08cc9ef2a3b4af8149b5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:db9b57190ddc50cfcb4e2e0f8d68f83cc68587d069f1d9d7da6fa9d5c9d265ea",
                    "sha256:6fa058d45ae7200f46f6472179d216e73556d98a0a5957f483d7dd0490768611",
                    "sha256:b32903eacd2484f955709867d7a2cb449fbf9765b6b59a8140984e57fc69756f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d6750bce19b22f81e30a090e28a497287094759dbba841d427ce35f360ae3362",
                    "sha256:e67a42e80313255fa916d8ef47bff5ee170ffb4a61d3cc08768de717f801cb2a",
                    "sha256:bb0269eeae779661ababcfc7e52b3c00fe8facb3817261327ec744ba06aa41ee"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:31.608008848Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.852195309Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.038043115Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.780304725Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.857536001Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.973909727Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.984190839Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.039552477Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.048349925Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.048349925Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:48.621429861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.755642095Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:31.520393206Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:31.520393206Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:31.608008848Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:065c0c8ee90b6a88729dcedeec49c1a8f45ba003549af640e2810d4fc6ff3bba",
                    "sha256:7095239a88b7763efeed9d9b9e966c78d55dc94e12d326381f3118139e438f96",
                    "sha256:4ca5d10fb0a0db28f3e65e6dbf1cdb692555a729a52a09e593e5af2ef4b4506d",
                    "sha256:ae1f08cc91ab849fb2eede5fb48afbeab9fed4053546cae3fccc599069c44210",
                    "sha256:7464529b9f9f9be667fe699f5f15afd6d8b7a38ed1073dadedb0e860a29d4c76",
                    "sha256:4402f591566cbc4f1a643b3ee7806fa2ef88ba4bf941aeb37a165c8682ef904f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:423e14c8252e188d33a5ec559ff6d28ea1a0821f704c1475e338975276f812be",
                    "sha256:b85b0d37ae706ac760dbc383b8ec12bac3bf23e56777b00f4e4a929d7e2b8eb9",
                    "sha256:23806f2c24d9bb5468f5003446742e59aee46f2da7a644c4a87138b489baafd6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:633033d186aafd501aa9434c8d5cc3844afcc5a42062655071dcc140e45bbdfa",
                    "sha256:81d2216bc5c791ca2fd1b8648b6844c0e4dc340bfb8a9246ea2d2a68479905b3",
                    "sha256:1abdf3529c2fe7d15dd26b187d822ea6ef9559ef1ffaefedf732a47325b186e0"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:08.524438802Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:26.423694552Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:38.364945598Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.086463913Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.165507188Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.277193879Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.286148976Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.294528672Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.328288018Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.328288018Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.90114596Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:40.025798109Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:08.435318086Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:08.435318086Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:08.524438802Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:e99690ff6bdf5117585c68a1f892149696d79cf3ed0c61661f9122e0a88e36e9",
                    "sha256:9a0c2b9b1cdbbc0db2dae309f62fd8631c29412d2f4d46032aa03ed409e35d36",
                    "sha256:0f1d8d6a7257621c084288626d17e7f27bd6147303a5c9158c529e401dbbed38",
                    "sha256:675bb67cb795bbe75be175fb93b12dabbc8607b96623ce313d4666b233f06a6b",
                    "sha256:e86a967f2b4a1e0de82f8149600bda5b07d3cdc443bf2a786285f5bd20df93a0",
                    "sha256:fb4b9b650fe26b6b6160d748da63edf5ac57dd26fcbfe3c63b4e7aeaf1992984",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5ebb16a9051aaf2b8497bbd9fd2f6df2355739793782a531d3de32b7328a50f9",
                    "sha256:767598c00b3c0217baf8b11080fdec7f4a087779a4c9022f53a753bba9092cf3",
                    "sha256:9e147bca8fc5daa8c6f66a786d5dbacbb9e45c22e9dd63e75c05ba9e572f0893",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8a7479558835f4c2f031e76f4929e630796da2c0bcbb6d7d10342c603b21c215",
                    "sha256:193b74179703042ee38fe8cde96f8898262beb2d4acf00371dd1220c77410401",
                    "sha256:abe48b9a212b71b02ad960d8c8fafc2baeb23c6d8350aeeef040f14d25e65978"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:55.313938868Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:24.953165088Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:39.889589426Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:41.066579567Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.143975176Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.264080976Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.273232403Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.300416726Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.309131727Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.309131727Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:41.947858824Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:42.063596406Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:55.220000137Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:55.220000137Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:55.313938868Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:86b0ada2f7f14805b83f2cfb8ef1f8a73afde8caf6c3f049cc3a11383864786c",
                    "sha256:ebc7a54252402a1816bfc35b5446dce363bfd6c5935ac7904fd329ac20bedc1a",
                    "sha256:a15a838560110aaa53aa3ba5694c4e6892e26f88e6b6d56ee689f97ecedc2a8b",
                    "sha256:571583e4c8c85d43870ac914ded5e81b0379d26dbc0a89f2b103ec5b0457a6fe",
                    "sha256:43f682e9e440b8bb7a3033c22d474f4d2c8e92fee462e107968253af616969f1",
                    "sha256:071f7b191aee9717a549ccbe52d8d7c394cb2751958451d6651e70c115482c7f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b291a6c1c9db3939164fef977dd8444e55920eb727e821275ccc19fd49bf7ca3",
                    "sha256:de31973b5af7dc7fadcaff9255f7cefff4c5748e53a69443662ecb0b5016f899",
                    "sha256:f71149996de278238e180a198943d47b663a52230e4d93ca1f0bb288c786af73",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e03e0a1d273c844ac66b77716b3e146d11d30bbf606dd7112bff99a367ee4b8",
                    "sha256:a730e990103f1d5442b52e8f0685766fa97943d189d0a181c8740828c3402a1e",
                    "sha256:45af46409fa618e0db602adfafb96aef9d8ba383f03f6ebb559cf153a65336d8"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:03.463316715Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.291405322Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:31.999296481Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.6904503Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.771880783Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.881097501Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.892466156Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.930855119Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.942378892Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.942378892Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:33.515849881Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:33.633832814Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:03.368119586Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:16:03.368119586Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:03.463316715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:56930b5dcad29e3311f6fb04ca615d7972a86bc1605e909dcdff8fd30258d045",
                    "sha256:756ba66bfc98a2afdf1ab75a4b6b4cfd056ccca172e3d8ee22390633659e3646",
                    "sha256:2b2f2eb87ce4100061a4f8f0873e1cfe881db0acff0d960c88765998f5c4f08e",
                    "sha256:9365ffcd553c34ba8db338105ed7643841e549d4ab9d6448ec58b0841352c1ef",
                    "sha256:b7340983b3a28dc104761b6982e5144961574b77477953b0607217311f953be6",
                    "sha256:114f170d8518dede364e1e325271c4f61d1c4f36d6ff064edd93a1069a1002c8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d7f11ca0dbf06b4b9921916c7a573d8d2da3b11a25006f08b8de60cab52656e7",
                    "sha256:3e83e4f4156b585c92569a9d80f258df9d9aaab0b3556c63e3a05e75d52b452a",
                    "sha256:aa503e523bef1a7611c8f0e03c23221df60a969fee09888e9fb791579cda1da4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f342a44a10739dfa4ae700c7f5dd38640608e5354614face55c827e5785bd034",
                    "sha256:090aceb56494abf075770c784017f9ee0ec152e73dcb9a1f7e9964ee3602a6a4",
                    "sha256:d4b6a5f9a5216260a6e66ae9aa0fefbd94799506c58117f98b1a0a3a53c9131c"
                ]
            },
            "variant": "v8"
        },
        "bullseye-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:39:58.680266387Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:16.696930741Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:34.389505442Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.127106593Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.202265303Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.322213113Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.36866875Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.384433538Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.977590429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:36.10345642Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:39:58.599118608Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:39:58.599118608Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:39:58.680266387Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:8118046c0c69be9888f1d9d5a1b51d47233771e8007f0fc1d1568cea72987874",
                    "sha256:6ace3ce5da9d73ad77fff9a9e1ead05c66d546a2638f8e476abc42d746fb9e0b",
                    "sha256:ba5bac65ad77adaa77dd7e72342d46e864399bb8cb963120dce00cd432062872",
                    "sha256:7c9997e72fd0e9c0f80088aa1a8c1e9ec7d5791afc6a1d64bc776e96eebf96c3",
                    "sha256:44867f45243358733796350989f5375d99bd654d3ce177454b689c8a0b5e38e5",
                    "sha256:f8c6334654e615714730d1906c472133f0569d24ad6d225d8e56acb6bad41ccb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f8af0639919c6ea8a3c94e5a9d75d4eb902a69acf123be2ff1eacefdc57e0900",
                    "sha256:b00db75f11d6652467a221628e15d27c9cf656b13d5f39b57d2ae1456c812fd9",
                    "sha256:8de1b58a8c327d1695b4465972be024744539717d676ad520eaf73e2de6c6887",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c4416f328678a4224c0b75e9b7ba68e7ccde5da7a27e3c652247e42d3c8540fa",
                    "sha256:aec65c04e88b5207417f29825ad9e9bb69c66746c8ddb1d24f4193ea35400f40",
                    "sha256:4abba8d2fa04ab0f9da149f38d460f87b2fe6e272ca5b802ce25f39f823b0062"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:13.281889517Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.176020238Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:13.176020238Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.281889517Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:6f2ebfb6fa5d8893e5bb258b80c5e32bad83feefed5c3d1505abe94c6c5414e0",
                    "sha256:24df7471595fbb4285ff34fc41a7d1ec57f6b4864230da6e39b91db98edfee50"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20231025": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-10-25T13:36:09.420556221Z",
            "history": [
                {
                    "created": "2023-09-20T02:44:28.274078277Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:024479be439b4ecb37c939e68673adc72955f3345ca0e809bd13e897709e59e4 in / "
                },
                {
                    "created": "2023-09-20T02:44:28.657109179Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.858080788Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.858080788Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.858080788Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:57.7977819Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:58.988569739Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.089168973Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.248690513Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.263148961Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.274898882Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.292459562Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.292459562Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:52:00.209049083Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:52:00.377606115Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:09.268211703Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-25T13:36:09.268211703Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:09.420556221Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6c9ad649ba0489961dd64654574cc4134f9eed47c0be4524747da2f36f5dbbd0",
                    "sha256:b08019ccec097cb7e2d80a5a373d089fb37220a87c451e9677f21788a63ab9df",
                    "sha256:e0c742e70e226c5b515d773f2f3006d09f5d14fa46ef55db6d814b2d23376fea",
                    "sha256:d9c4546ac125486649b761fe5a6f90c38596e55dda46184f1f74e8181e280683",
                    "sha256:0ae6b9f93d0a321b28e66dd6bfcad103863c464397390bd9aee58dfe74c6b505",
                    "sha256:8d55be54b11efc7d91f4661764d70c84e0a707a7b3b4fa19794fa7e02c480df7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:181ae62c3e7c3ccd2ccc64cb4ce71975047ad32a06cdc919350115c21db5d2ba",
                    "sha256:8e98c7c789b19e4ea0845c3a83024108f2f6cb5e9c9e6e3dc78fe5640c548467",
                    "sha256:ff453fa1fb8a27a41215bc06494cb580e0f5c757ce4131f234e487d5fe9cb80b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:731889e3703c8c970984ea7eff9c585c06eb8969faa3419294996530a395e2fa",
                    "sha256:9b3c66a964515f327e9bd99a2f6feb12d32c87f72a24caccbe042c8fa1557114",
                    "sha256:dbd2a7ede00626339bb5e770f75c64b10a367f4d162ea82905f4dc4c5120c61e"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-07T07:56:32.721935662Z",
            "history": [
                {
                    "created": "2023-11-01T00:39:55.82247244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:99dc83e8bb8c67d9179a265fb750c76f73fa660e13e938b6cd613be653cd077e in / "
                },
                {
                    "created": "2023-11-01T00:39:56.253202489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:03.822317888Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:03.822317888Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:03.822317888Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:16.734944758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:18.114597076Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.213178797Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.362163263Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.372736882Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.383037997Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.40658476Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.40658476Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:19.3490972Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:19.509541994Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:32.585155369Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:56:32.585155369Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:32.721935662Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:60df532890c9cca1c175cfea286e7bc7d79a2f79592acaacf5fefc399ea9c569",
                    "sha256:e56f69cd0dfb229f9fd1407fbdcbcabe5b800ac5f620151bff8b5815cedc33ec",
                    "sha256:3da07ba74a1afe2b9300064007f6be2da7dcd8abff93119dc8d93e6a21602051",
                    "sha256:19e728986e1702d927d4208485c46bc397e5a8eb5822011ce8f95c30b6a2f198",
                    "sha256:8a49b7a43e9961d024710c4ddb502e0faf5fea4159963cb6e64fac3f529adbe0",
                    "sha256:33c493aba170663dcef60484c47635c490858499f11402fa7a235b50b64456dc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0ae003343d02224abfda090742390a33faee92ee2ba48d959e820659850b5d2d",
                    "sha256:7c541fed31d184a7f501c31741d0a27601983df8133f6f9cee1f1d0c23b3de2b",
                    "sha256:94f7179c895cd2821d04c1beb708fe27ebcc62fb0fce3aaaccfb3c061bcea59a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fd6040c95d6d45c2ad435c51f7fab05be21da3bf9a017d58e48d4d8e5bf5b3cd",
                    "sha256:00caaa193ccd9b79db01a53d77f0272ecc3981f709232a538e1758f2f637646b",
                    "sha256:4692c5419fb6bb870209ec7bbf138e68402a6ba95acb703f13e2acaea7b5c330"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:22.276834456Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:58.664127799Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.465195557Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.565496734Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.70470318Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.725314262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.734132316Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:09:00.452678113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:09:00.595471645Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:22.146341921Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:39:22.146341921Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:22.276834456Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:29c36ff94b71964100e213981142e520295b15626ed1879d99c36bd5475b76c3",
                    "sha256:6397d8e27bf4ad223bb62f7601f9a3621abe07e88e09b18ee1bda45f9bf57c6b",
                    "sha256:0ef0a058e815346f39e1ba03acb0a4a422c3b87e58fc08bbe1ba4451eacb40e5",
                    "sha256:d16b22555e3d20070c2841ee0429a7e3a11588536c24a86bb6cc689ca3c5ad04",
                    "sha256:d374c74ae31322409874a4a485abd512f03004938dfa1c7d3652c3fe9f9fd673",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0cdb1b92cbde3db5db232bacdd380b6078b8c4d0b02b6e7e44891d443ae4591f",
                    "sha256:7e2f22a4da908c29da27c98aeb4d9505c91ecd820f78243c7054d9229c13d30e",
                    "sha256:8658137ac973bebf78ffa2c27c9f3d7e1671d22d756b393fdf75d11afab0a398",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9982a6f0a6244d57c31563dd7bd54e7f0bc3227a7db2aba3321e9b2fc17da0aa",
                    "sha256:f986708a8c3fcc98685c8845af5cb2091fe6baebf4d0be17387735172b37d4ef",
                    "sha256:125659da938ed144fbbee11c82eaf60f900232ddc3f144fc9b6be7c1ab6e0f77"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:10:40.032709982Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:14.626506753Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.296969131Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.407547863Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.541071217Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.550355412Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.558824236Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:16.132254001Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:16.278960973Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:39.894277473Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:39.894277473Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:40.032709982Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:ee15dd3b9b4499504e15f776e985d6d6db85d02b2af28b58e0f6840a5611ffda",
                    "sha256:3cbf5bc1dd090798d60651ba9d8e5266744467d3942b27b8af9aad2fc6eb3d94",
                    "sha256:d64e3c8a34df828f9d322c1ad2571e1c690ad3d89848e9d84abaf02dc6f46d0b",
                    "sha256:90b090bbe57ed39388a1a1d27301bd521b19acbdaf63cf04c2344039fcdb3ac2",
                    "sha256:570d5cbcd38bac7a16ce13ae8fe4232ddf645709d832e69847ce9a3b3c4dd8a5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:86fc17d12f1d13dbe119209636876d35dec06d64ed19553ebcc3efba975b7b3e",
                    "sha256:13be287764da1f3fc3368a197eefd1344959dbe6a329e8fa4e2579f7026eaaa7",
                    "sha256:ce6f79e8950a46a4564a5a5aaa489dcce75c1ee6490661c3a5b008cd82481bae",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0a7c9edc80c512f510d67fc94d27e1370fdd408b3ae2867c02e0f583401a4d7d",
                    "sha256:6bb9cafb5e209a8cf07a0767d8b36a8299265b599d567386d904ef56d9546b3d",
                    "sha256:0cb3038a33e0a1202e668333ac150f1a85c9eb7542b7fb22867e40631e15b408"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:27.486010176Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:29.555242312Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.824526678Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.900951309Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.038705894Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.082582927Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.092267272Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:32.003177354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:32.125502794Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:27.38589354Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:30:27.38589354Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:27.486010176Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:bb6ae9568bab1557dbc3d0cb8316b7966b5aa7167c857ca6a0f3f564fdf87436",
                    "sha256:d0629d243e2fe6f305c71e391ff1739374dd4b8690415fa9580f1748a9a30037",
                    "sha256:a7c6b7a4f52829976762ad6a7fe7ea2366efd1affdc49a9cde65f5fd6388752c",
                    "sha256:99ccf9bb9c67f6d195c8614560587213a77feed85322c61f75a3c3b05ad02031",
                    "sha256:74b04caea3985b1e073cadcaa10cde033dfa3b97d3466a70e4333f5397f52cf9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:35c7e94083902da8d7aaa7dc09f3463588f11b349a5f04911657c96fd7679ed0",
                    "sha256:4d18e85f41ab5a46df0ca30aa473b2caf4ecb6a139678cc81f4bcca1ce2d7101",
                    "sha256:cff8c27c938f8613028b601b55db7bc98ee912e4fb47f73b67ef2c8e3c5902d8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b799a7e836857253809f557ef671537afcf47292a93e5a3b1b4fb24c57368bbf",
                    "sha256:77831a5aff08f46e4ee5d6114092b6bb0a017575658f76b9a61870231d0ee6f9",
                    "sha256:25a3d59481b1110d7abb32afd59cac43c73b473d451b1cff04ff47a526431d61"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:01.134351349Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:15.467501006Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.126208035Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.217017231Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.338788671Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.34938903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.360698393Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.10770263Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.229328657Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:01.028169707Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:22:01.028169707Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:01.134351349Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:01243642c945e579c0451a3a4d955bd4641e99c3be13311d4b167ba8693d062f",
                    "sha256:2f80d37556a1de5f09fec2daa7e0fc3e155d3521c833adaac5feede306196d7b",
                    "sha256:f89c52ebe0e3068a36445b6f944e2db340bce429d32fd7240b30e851aafd0fcf",
                    "sha256:a1aec53fe6fef2f29fd75283f3c27743f8500ac14efb26ce2f663c7844c42987",
                    "sha256:6e5cf0c7469ee5ce96e578b5ce1ae0633c328b13528b5346393fd9e31eaaeeeb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bcba603767ed25ba528e8f15a859e907b1e72fedb01a388537532d92bb0b9dc2",
                    "sha256:2e7da9139f8e1d258d5851ddcc7843e3dee1aed7e3cbbb0d33ea5e4787014c43",
                    "sha256:9c94701d7ef86d3d9234a468757ead3d8b56f6c0909d7034f57d0c0b935cea87",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:21899b3ce1344861e903bb14b2efdd11b565a59d6ce5807af64ec376e67ad7bb",
                    "sha256:de6a37085e57dad5fc42cbe91f200fcce2ff1525e6ef50c03689e972b4386102",
                    "sha256:c29f860fc079784e30e2b1140b222e49d08ac022d168fb3782d4ff55f6eca9b2"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:21.098183689Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:21.741125507Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.517492269Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.594603603Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.697980042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.707177419Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.714737325Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:23.451931585Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:23.578406313Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:20.989215513Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:32:20.989215513Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:21.098183689Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:7a95b560dc11fe5ff0559d2f6537c1efc83ac7aaad51b45a5917e009c0c06f50",
                    "sha256:f6031278a7707d1a6e07539ea7605f5f23152b27e222e41b6ae7de3e420b1ea3",
                    "sha256:21a99779a9767f9d83a5c911ff51d8913cf9d14aad33222a637f2e1d35a6e7c2",
                    "sha256:b4a309d2fce81e65a4957fbddc32a36ad3270ca8af70ff8b4b7b8036dd32cfd1",
                    "sha256:9fa7bf55497b544bde5f87788625c52fef31cd9a358c938fcad8e8c28654d184",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:77d57246a64bbe2f4f853d61f11398dc52b60dd9c570783a62321f1ce29d4412",
                    "sha256:8fbecbc914005ea0fdc87c421d160c414237e51547092ae9f58eec8659798ed4",
                    "sha256:617f6c14453696a372688649e81a54ddd9dc6290525c211a3c5be2b03141291f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3f41648683764f9b2f994bf34f3da567cdb788fb3004028ebced710d86f368cb",
                    "sha256:f200cee6f4fbabf8e69e5a179c7d425dee37e0afd71c343172a4f9e34918fda9",
                    "sha256:f52ca34206c81f2a436344e9a0948e1c414abf64a8adf7d7ff16c73bae67b331"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:57.897429552Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:57.783533164Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:57.783533164Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:57.897429552Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:fbffb08257a5c92284a41591aaa0b3710e07c8d07d6edc3b448342a0fc8b5b35",
                    "sha256:1c757983748130f1404140ddf3e14288d06d1848d42c7342d75d533d169ccf6b"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:35.919065732Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:37.612406454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.235239371Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.327380141Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.444407777Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.455821747Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.489249886Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:39.054577625Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:39.175091463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:35.810346277Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:35.810346277Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:35.919065732Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:3667705b92b777b9857445986385fa3544fe745de824ed9e48b74d48e233a73b",
                    "sha256:a8f393213fd8f42444b9081c3d25da37b97dbec4b8639fe0f0e3a7589d5440fd",
                    "sha256:9e491949c039a6555bfc9e8d7edc810a1157e4de0e5a1c481e4a9da99f8dc49f",
                    "sha256:9d1103a6c6fb53d9a95de8b92fef5116bca54e0566ab3c9ba1697738c9c49934",
                    "sha256:34b6b50b96caed9ea8b06be9b87ec63932717d466f5059fcce4e49d0b8b1fe0a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:648567a88a80c3aedc7a65bfa28ed87413bf435dc5a1cb88738e3c5896c0c076",
                    "sha256:03d885cb57438349695f4729f2c71f343028df5dbb15b096c1d538eabb3058bd",
                    "sha256:d10c87bc3a1b034fb2d7a2b64156472e0744796c40aa33beedccda60556fa259",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d88ebe737a29be3e76f6b02f3591509f373fd4b840fb08406f33169dcd0cd78f",
                    "sha256:48cab8f4281636a899bd689974b153a1fca219fe12423b0c24707409e719aeeb",
                    "sha256:6651233a11f55b902e6e420f598dd42c27d10e98cc21e0c31d3fe5419b132e9f"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:11.481917014Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.151462719Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.83609249Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.924579316Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.040114112Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.053934176Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.066241153Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:19.805586345Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.93208375Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:11.383908462Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:11.383908462Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:11.481917014Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:0f12b4245fa0a3cc547f2a1e523735b954a9327e222c9499e29df367c992fc25",
                    "sha256:e718ad40e3c90a1cd1ecacf3a26fab120e1dea3923670a16a4c8ca50b6aa9d15",
                    "sha256:94c43fe224b59dec6cae014ab2c49387ad78dc326e460a610de6fc06495c0c1e",
                    "sha256:fe063efa4d53e9a11ecb850c83c6dd1b8b9cf17ec889889f949361d332a5b185",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f767c7f76af4a12cb0e1199b0fc93840a3e5a2f502f98489563422b710c7c82",
                    "sha256:eebaafdb21b5c124a4063b6c1f0639260a303dd72ba00c9ec5ad78515f70a2e1",
                    "sha256:8c39f39f8c6773437573033b4459016bd870d9bd6b9034b07c451bd5a636ff53",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:88062171c3eea1172e399dc542b1a51a8e61572ea372e1516f5b57248db85766",
                    "sha256:9f9f9939f4dc2b1ea2b23e3fc7a7627547fe4771b5e60a57cef4abe19de95f0a",
                    "sha256:54ef0ce651ff47e577439a5a9ec24b5dffeb4a31cc2ca15967214aba59b89e1f"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:50.71203736Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:13.879662253Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.586745871Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.670518036Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.790637458Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.799775231Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.830003625Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:15.53078113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:15.644511102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:50.609020295Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:50.609020295Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:50.71203736Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:ed4cf4bf4b8884bdd10c62b3d9f3f64dcad62f08c9184d6e8c4e3edd498d6ae7",
                    "sha256:e3ff77460733b5c70568a050c25cbfbba938cfb55a53dd793006cf80ce8cc1fd",
                    "sha256:769ee8ef4da51e9377ca4f5d7e5b438c1bac43f38546dfe5b6ddb3ae5fc17d03",
                    "sha256:2faf27c705413cfe35a57bebf1d6dc6e5fed15c26b907de4e87eb462c4c8203f",
                    "sha256:c057d9490c0d6264b7858e1b24696718ce0623763d48f86d0eab46db57cc6697",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7333a928fdb22e11f1eb14ab19de0aeece67b74f04ae6800a48f3626b6204619",
                    "sha256:7d1b2cfc6f4a702dbc3c9da3af6ce40ed072aea5b43739a0f749f0f5a410074a",
                    "sha256:1faec101bbd8a81f2c905ae2146f8736e838f567a8b2f856533f8c07e083cc3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1dc00d63c3226fece7e9b01c6df138f48bb6914b96abf29daae86c6c2331068e",
                    "sha256:797ab5c9a9ac54e19dfc51dfee7076d4c2efae77fe13399f77b03f617df83788",
                    "sha256:ac8c0e12ba7892c39161fde7f5b19e2ce12876134e0ab5f0ef7ae50839c51b17"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:06.289822757Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.743482327Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.498252335Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.585989395Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.739473042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.787312463Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.797563821Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:22.394772002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:22.511272459Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:06.188737929Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:16:06.188737929Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:06.289822757Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:d04befff2a5273eded40c865c563f0d50276b31e32180679474e889fe080da1d",
                    "sha256:7b0c6c50c04ed7bf4b021ee99132e0366bf6ae4768e6a29e52e27fb6a1569aa3",
                    "sha256:2b57aa920cc2cddb5cf11eac876be5662fcb346e000afb2b1ced7b1295ed5a3d",
                    "sha256:9ad61a9af1dc63ddeb51e6fe9bbc82df2e37f1d0b967166d78ee356b54e2e32f",
                    "sha256:2011ae045dbd2ec46399c6e0e93d9cbef0dc64a181ee72a298737b86a13cadc1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71dc71c4129f2ba46a54c086463f9f61a15ea4ed70e3ad2fbf06fefc3ebda46e",
                    "sha256:46974ccfee6d4c0f3231897a3366bb38c4424b87355d0e626e0ae0d9fa0b7224",
                    "sha256:222ca016ec867e88cf844f487bab87a5460e34afed1ce08d1e7db271a366db23",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2af796bc84c5e90eb57e23c8d3adbf9050db0d14fa44a31e95248234ea6447a2",
                    "sha256:12aef4a7dd4d7aba50b7d32032292f9390c9cf5b0cff1b43ed39b331f27b3887",
                    "sha256:e1012b6262d2135f95d3bcb60bdf6f40c972ba99047c23291ab40da945c70765"
                ]
            },
            "variant": "v8"
        },
        "bullseye-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:13.281889517Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.176020238Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:13.176020238Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.281889517Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:6f2ebfb6fa5d8893e5bb258b80c5e32bad83feefed5c3d1505abe94c6c5414e0",
                    "sha256:24df7471595fbb4285ff34fc41a7d1ec57f6b4864230da6e39b91db98edfee50"
                ]
            },
            "variant": "v8"
        },
        "buster": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:04.776356372Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:06.74670097Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd84662eb5c566f361c169149ba683475c50ddc528270daf67d40c8e98ed12a7 in / "
                },
                {
                    "created": "2024-04-24T04:11:07.11563544Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:19.638450997Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.549934048Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.629066055Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.741959901Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.750514997Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.758506762Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:21.457163607Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:21.592600612Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:04.670252287Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:04.670252287Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:04.776356372Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dccc8e6afcd181b24eb0b68b1c1381436dd209e768d16a34564ddac1a3fd75c9",
                    "sha256:39ca7c242be0ea6bd197d83f318c319ec9339c72dd98edd9c6be27f4c9a2336b",
                    "sha256:c5516df564cd16e10d84cf5d24b64295b1ecdaef53f8f05bea94bbd390079ae1",
                    "sha256:a549fc4249cd27572a3b3064ea14b8e909a07cfc4e9dd8d6d39100579978c1c7",
                    "sha256:716a0add12a51c3e2bd20c03b488420bb169916ea5bfaf23453afc7d132a36c9",
                    "sha256:38d69d87aac50f95e6e1c9017ed000b305bece9f2c7313144d743a110d0f8ec0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:81404df39f5b136b6e8202bc2ab80a602f8a862a0fefd3310a9f63eebbd22ca4",
                    "sha256:20b495f7e8f7f614a200a027bde0ea84be7f4242950e1e64726fba48678a1806",
                    "sha256:84668ead4d5526ea42d74565244059204af40d4212d6e322562285628824c139",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c67a9035c17fd6b4f86d70ce1ac722142ed08ff01a980a623ca86a2249de75cd",
                    "sha256:4436e92d1d917b486e047f5bba3586ddd2ec80e20cdb6d1e12181fac9bdb9bb0",
                    "sha256:5d87a44ace856bcec498e029030d6107cbce4e31857dcccb0b46d2240f6e7850"
                ]
            },
            "variant": "v8"
        },
        "buster-20231025": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-10-25T13:36:06.880657028Z",
            "history": [
                {
                    "created": "2023-09-20T02:44:42.531099803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:22373577ebc4a88322b8e7e5a349667740deade289df65952593aa5fa355e161 in / "
                },
                {
                    "created": "2023-09-20T02:44:42.858890971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.290887517Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.290887517Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.290887517Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:56.027927197Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:57.148858761Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:57.148858761Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:57.148858761Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:57.148858761Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:57.281871156Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:57.376910353Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:57.522282748Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:57.532286848Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:57.542350748Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:57.569870847Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:57.569870847Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:58.507811616Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:58.667351611Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:06.733948156Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-25T13:36:06.733948156Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:06.880657028Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e9f82cdc53f715f510c7a6eb3b4b3e020f9558f8b700a509f08e02273492143d",
                    "sha256:b08019ccec097cb7e2d80a5a373d089fb37220a87c451e9677f21788a63ab9df",
                    "sha256:305865f8f275d5cbd39955a3565d194654b3d3986a50fd03579072de4c784daf",
                    "sha256:4ad047d91dbf71267d1cdceed6d2d759a3cf4b6d06b9e83c5dcdacf4b1f76b3e",
                    "sha256:90fcd68cae4b001ae3bb3e5a7c65fc53c14457f43a22972b4b0cbe56289149df",
                    "sha256:1f39b61a64bc17138806fa29ee4a2c0e6c0b81436edc20d2ef261df770d91c09",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:69f9728dc5eb999a5731b9031cc612efff4b7d266e4d4226d4562c8e7a307b8a",
                    "sha256:662fc70d93ebc1bf663ad48b2c2402f8b0d9c65a7f5e9a7949e2a3d6c79826ee",
                    "sha256:25294bb4ac36fb1bdcb1f8e5ffc296c7e3ea76eac40d1313122fbb0766de9f3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a4f81f82384a30768e9a119a1143e7c0f9cf2a125c13817a103fd262294e383c",
                    "sha256:2072511d410b9e9daf28a4b14e590549155ecebf3f05f8897524e86d0f900e36",
                    "sha256:716c17f048c5cbaaecbb4c099d687b8c637b4022d7c2ba63ca0bb2740b2e1293"
                ]
            },
            "variant": "v8"
        },
        "buster-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-07T07:56:22.38179955Z",
            "history": [
                {
                    "created": "2023-11-01T00:40:09.889058119Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ad1947b1fc97bcc228c004c15afeb2d9006d47167db69cf7b05c3e634c648166 in / "
                },
                {
                    "created": "2023-11-01T00:40:10.201336152Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:53.564958479Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:53.564958479Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:53.564958479Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:07.670942728Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:08.774858931Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:08.774858931Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:08.774858931Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:08.774858931Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:08.909856337Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:09.037276973Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:09.187124608Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:09.197587981Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:09.207562436Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:09.217742798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:09.217742798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:10.100550629Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:10.24915922Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:22.249300438Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:56:22.249300438Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:22.38179955Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c0c5bb6ac2148eb48475b6b9f6b4cee9ee471ed1c22e9c7961217f2f3051ad29",
                    "sha256:637656773b7cb462a7743160bb2e611798c689a33634a9c37f480a5ba7d96702",
                    "sha256:7578239c9b3902b49e1450476e9b73682a7c44bc36d5906ff0ab4ab3bd0f7be4",
                    "sha256:bba32e91abbdad154e0b75360fe2ce962789f676e091b47e78a50c15bf5e746d",
                    "sha256:f7c658d369d9dc5084bec212a4394fd1f1916eb3df91faaf730262a3f05a7e99",
                    "sha256:e411e93878349d765f8a86803b2b7a96e4d07ec86ecba7ba6590a98a17834387",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fd3f7f88926cbe69e16162533df6f2bed24ac941cfbd09f96223d65a38b885aa",
                    "sha256:cd08a8e6a153f1a360b9b301adf73067489e59d1e1888655c97d365c02086a3e",
                    "sha256:ffd7c37f4378013f083109b01514efa786e790d6dfabb295a81e352235cca60c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a179bf256fe69626fc04e34b6a620a5836a22b22cd04d02225ac77c12f7ade2f",
                    "sha256:9a288f743501ce79ebc085af391aa209550b1b8eafc731c35139570fef85a590",
                    "sha256:9154a29f75b4a7f1e0c8553e23bdf2f0c7dbbd928a1e5f96401daa9b131137bb"
                ]
            },
            "variant": "v8"
        },
        "buster-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:26.751955704Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:34.926992039Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:475e94b9a8f65c7cd4d4156af31e83190240ff35d8038f3fa86ad124d4d5d299 in / "
                },
                {
                    "created": "2023-11-21T06:27:35.290927258Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.283092808Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.283092808Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.283092808Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:55.464611292Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.090339981Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.090339981Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:56.090339981Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:56.090339981Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:56.175637552Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.265434925Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.379534812Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.388358474Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.396129991Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.403968324Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.403968324Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:57.011330178Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:57.129002331Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:26.650101065Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:39:26.650101065Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:26.751955704Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c1db3d8c88b9b9ba18e87c33a343ff1d40a2505339fb78a7b222f9fe67817090",
                    "sha256:61acbe232cc383f45ae0f242e3a1c3b044cf8f41734ab5c8d5ce4993e4e3dba5",
                    "sha256:f64b741d550631e9f8b5cce58dc90f34cec56cf7bccadae57955d4eb76732a70",
                    "sha256:ec3195ade3dea7221e271c9aebf52782a34ab13e83d0f715f9c1c340f9d634b0",
                    "sha256:a44c2272725a5c13968a0e4dbca40630b5eebc5a0635c08b766e00209d835b8a",
                    "sha256:dbe9e9f443597353ebb4b0bfab43cf3cd86cab44a9b262883d1406ad939f474b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5c696a556843095fd60c2ba3a547087f613f5a6c857edc988fb77c06b03bb7b6",
                    "sha256:3e5209c8a681d22499721063ce36fd1c6e1f780583260ea9864e5f02aa3bb5ec",
                    "sha256:15ff42dbb181be1af16798438c134f322c548d8d81021f1c53c83c74e00559ad",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac9507ad5a25b3bc9ff80471388523d5a499523762be7491f687526ae04cd14b",
                    "sha256:c79f647e82d935e8e413c593729a854636e27db3ee70c3bd0aa8fd14c61103e9",
                    "sha256:cf2b3c79ce2a96a52271f266cdd3b8e28bd2a4b79c971c3e9a93840ecc92842a"
                ]
            },
            "variant": "v8"
        },
        "buster-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:10:46.676537908Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:34.926992039Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:475e94b9a8f65c7cd4d4156af31e83190240ff35d8038f3fa86ad124d4d5d299 in / "
                },
                {
                    "created": "2023-11-21T06:27:35.290927258Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:35.288664093Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:35.288664093Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:35.288664093Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:12.191120326Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:12.863264068Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:12.863264068Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:12.863264068Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:12.863264068Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:12.957570467Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.051555456Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.237355092Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.246097145Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.254003784Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.26188932Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.26188932Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:13.887024396Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:14.031525593Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:46.570544306Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:46.570544306Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:46.676537908Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c1db3d8c88b9b9ba18e87c33a343ff1d40a2505339fb78a7b222f9fe67817090",
                    "sha256:451b8ffffee9f8506833158d79dbade97c675d277f7a6ec567da48c1d51d61b8",
                    "sha256:887f00e3039b3f4900ce590e16e4a79c68f499414ac260b5e15c30710ed3f2ca",
                    "sha256:96dba296bc32b32211a9a15854bee92962655e32c8b3dd63b67bce0d7877eebc",
                    "sha256:f46f15220d0a34b9e7777594720590a4e06ec743a9b7d27ebd8b6f262dccbb0c",
                    "sha256:2dd7e8a42ca9de9888af6676f97a1971d1d45d9d23e5040f82e9bedc49ad6cf8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:be2e1a79cbda0044e0f33834afca89e76b0ea21743f935b142ae8d62f3ca32d9",
                    "sha256:cfd745522c22fa0b8d56045c33cb9bb867fa1cb08e78de950980b773ee266956",
                    "sha256:c58f1cbae9187ef47e2cf809105138a5bc02b4d18255a5b4c70afd59812197dd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0030fa92bf7aaa822bf9dcd52fc4ed951e7b4c27c622598171772ccef8a36165",
                    "sha256:3210fc4b3b794f623f4b3837fcbcebad9e3adba01d8fa61df99a9084ba3f01cf",
                    "sha256:bed1b26fccfac78957daa62b394a018842c3930fe20f494ed56faf92b5055dab"
                ]
            },
            "variant": "v8"
        },
        "buster-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:22.570269381Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:39.799070348Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f60673c303a98b4e4c676e3403bc1b7cb316335aba1202205188176810494c07 in / "
                },
                {
                    "created": "2023-12-19T01:41:40.098329745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:45.350249416Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:45.350249416Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:45.350249416Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:19.88668639Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.469756976Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.469756976Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:20.469756976Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:20.469756976Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:20.548785628Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.622793661Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.738479962Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.747877063Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.756409Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.796185339Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.796185339Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:21.389329746Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:21.50701353Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:22.465590997Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:30:22.465590997Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:22.570269381Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7a6d9d2cc833d8f60d28a82073623d22ce5ac0781bfe3111af9e24fbaeaed360",
                    "sha256:ba46c9028aa7674523e38ac780676a3076306a397f02a421eb21a348f9bd2fe2",
                    "sha256:1ff8a9cf2891cfde0660f8660adfc23770420afade9c26788dc7a2f0e6cff5f5",
                    "sha256:86be0f974d3e3fe0a5917c4ebbef38d2ab10b3fbdaa77cff64542bac9695a442",
                    "sha256:8cfd72b823a6982b9801bf8e93cc7bb963f0d6eceec2c2a77e1f9c908b8d3cf0",
                    "sha256:888e1ca85508d079641196f87819357e9c4123d69b9e96b74c48a71ec750cef5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4b4487904f0bd97cae16bf2303d03e93919b2f4584e94d28b6dfcbbf046b191b",
                    "sha256:6352f688e29cb01b59680ed8bb1ca7fe5ed62b740c8284d5fd5385ffc13bf8ba",
                    "sha256:efb425c6768f2365ee09041df09964fb1e0ee52137157a06b35881b74020d488",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0b2ae898a37ac25f4d831c9c3816614aee65125625ed0dd7a32dae2e24fbe019",
                    "sha256:7eb55d30de4bd00ad26669e18675fee9df1783cf878b33ff0773608f6e9f2f01",
                    "sha256:79d3f4b012b91a9606fa2e3a829b74fe14488cc7cff934f7494a8f8f451fb690"
                ]
            },
            "variant": "v8"
        },
        "buster-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:21:55.328358395Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:39.799070348Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f60673c303a98b4e4c676e3403bc1b7cb316335aba1202205188176810494c07 in / "
                },
                {
                    "created": "2023-12-19T01:41:40.098329745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.075203686Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.075203686Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.075203686Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.069961947Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.643835848Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.643835848Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.643835848Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.643835848Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.738752729Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.816608091Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.923412005Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.934806877Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.968250381Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.979196431Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.979196431Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:18.528439354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:18.648690815Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:55.221202921Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:21:55.221202921Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:55.328358395Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7a6d9d2cc833d8f60d28a82073623d22ce5ac0781bfe3111af9e24fbaeaed360",
                    "sha256:5c7e1e272f19dd29f9f46757a7c76a894d654dc498c4d847f806d17b944a0dee",
                    "sha256:b2d052daaebc4d1bf1f6b2f4020caf7145ecb5529c92620ac13b49a66590910a",
                    "sha256:69a5aba8ec206f81819760e4bea2e093f77093175087124f3812352d69511347",
                    "sha256:818895baff25299f57cedc83cab4cbfc0291342661beb0f861a5a34edb8cd239",
                    "sha256:dfb090e17c7a0a34d9bcfbe267ee6ce3bb49f76d405a99379d0a5578df422ae3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bc04aafcd62dbd3218ecc8df7e6987eca747f3ba2e678e92ac4ae49794fb2e72",
                    "sha256:7e55cece18e33523cb26737a8d62ffbba864a0bafba8f5146932ce38f532be09",
                    "sha256:b040c6a579b8f9260cb98130cb32ce2e2f5b7851cb1e50c314cead14c9dff101",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:681de681ae2dda038cf895625f7585829a3a6de7a51f6890750b6b0e4ad18ed7",
                    "sha256:57bc469aceca9fc73967a8a3a891aedd2e2cc80673404eed8b080c2f9501ee17",
                    "sha256:268647e38760adf4487156e72fabcc53669c7e6099932c60aa3fbb3946476c0c"
                ]
            },
            "variant": "v8"
        },
        "buster-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:20.728656749Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:39.799070348Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f60673c303a98b4e4c676e3403bc1b7cb316335aba1202205188176810494c07 in / "
                },
                {
                    "created": "2023-12-19T01:41:40.098329745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:52.663484882Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:52.663484882Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:52.663484882Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:28.519195181Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.57580957Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.57580957Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:29.57580957Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:29.57580957Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:29.652350826Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.732008111Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.847937493Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.856529027Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.885941565Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.894080725Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.894080725Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:30.480265417Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:30.609538155Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:20.623100282Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:32:20.623100282Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:20.728656749Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7a6d9d2cc833d8f60d28a82073623d22ce5ac0781bfe3111af9e24fbaeaed360",
                    "sha256:3972a045f3866b7456b0e94a9ab4c870706dceab1e16236e834cee1d9fbd1630",
                    "sha256:18dec0fd1e834501b7d2f138843b6fb5b57160aee0a24c3e92fccf5da2db323b",
                    "sha256:13d006a7b7882ee42d1f19cf794c4193a16b5931b2893a9c9155a581d62afef5",
                    "sha256:8cfe72fd4573263941028461fcb59095d124ffc7bda51117a3d8c2b273d88a9f",
                    "sha256:3a22e2e4427c0fd0f15a64bb92f6ad1758a9af281d827ec8b4e6edfab18c299a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b936e5993fa53c82e5ab880ce782227c9cdc3940fbff37d2826d8bc34605b022",
                    "sha256:108143e801bbe691a90e9184218a587e75855630431edb4ce93138fd99b27fb7",
                    "sha256:483c521f9cdf812d79d1090eb69b48450597de777c1939f10d16bd29c7d394b1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1796eab314253027fe59611b94065a80cf3f8f8ffe6f3aa2cd4ebfff782c0311",
                    "sha256:e40f8886d83ee0a4c0f0671099f0d803c53b2f66637bc3b838ef7855ccc0ce53",
                    "sha256:619d4274ddaa6d8108f67f1df23720a9f85c91513ef7ac12d363c83f3b80f791"
                ]
            },
            "variant": "v8"
        },
        "buster-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:03:02.418638164Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:56.988274449Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:de90e50e142aa92c29d5128e1cd025fd5c5b91f879a19a06a8b49451a4e6afb9 in / "
                },
                {
                    "created": "2024-01-31T22:44:57.403511419Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.807489748Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.478585285Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.556229271Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.68311975Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.712162198Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.763984121Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.772790466Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.772790466Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.381935653Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.506598635Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:03:02.313108492Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:03:02.313108492Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:03:02.418638164Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9d885bab887af47b9c3317a8a0e9e9af888daba2b6c8434b01c923eba48482c1",
                    "sha256:235b27c5214e3fe2bf3908b99eeaf3944e9db6c30afae6739c6e7a1ca2d98428",
                    "sha256:9bf4ba3924a9c7e50df5c96156314f1d81683e8bae5a096710f1bf4f89f966c3",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac35dd0c10fa3bfaeb1b0539aa6073cadb37522da44b0ca385cced25649dac09",
                    "sha256:a8fe42031a9a0382755bd09b3a56a73a6a20c0684145c1b27db24eaee76e9c33",
                    "sha256:dc768cc55a37c95171083ebe681d0e8a4e628131e13efd6ffde2d652362dab00"
                ]
            },
            "variant": "v8"
        },
        "buster-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:34.234573436Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:49.5791897Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:56f9fb4bf0b803f4553b7fe668c34676467e662e3ab02af10e815a93ebbde1d6 in / "
                },
                {
                    "created": "2024-02-13T00:41:49.91043912Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.185468205Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.185468205Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.185468205Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:33.341738469Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:34.06965774Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.148051312Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.255785689Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.265654245Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.283258079Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.311215271Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.311215271Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:34.921396647Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:35.056925015Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:34.142182723Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:34.142182723Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:34.234573436Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1d7e79c78824d3d36e78d14b1c53b639ec71e51d619cc32e58087307c7302b08",
                    "sha256:14d1b16b913edcb6e374ad911eb8a78c95fc068e5a679810dd57abc6253eb4fb",
                    "sha256:96ab9d2c17973eeef04268583375793e136fafd5eb03eea349b25f42616df5ad",
                    "sha256:5d3f391e169dbaca51d1a3a645fca5eecedfe8bfbd5180553be4546776a47ec6",
                    "sha256:aefd933866e4321e224ef844e38f5adf5a8887aaf4a9eaa98a656554bb7ff8a4",
                    "sha256:1eab6fb8eb3d730ae5093688afa5ba3ab43f046408eab222d027b66f502df98d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:398934f37feb07325fbfff2a1f0904f40919bf8d63582ddff8f1600d93d4e0a5",
                    "sha256:e9ec797cfcec4be78cec5aac408134f03bfa55c194fb540201a3d71425e896b2",
                    "sha256:705ae3611f17b2fb0cc363de116e17074a27187b8a3155e1f2a589a6f383b461",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b561a4c5da54fc916c73fa182d8dd0eb904033e917d66d4682cb445ecdddf42d",
                    "sha256:c27f6a43a64cf21f3444117499115398cfc2e3b1828623f4d2d60aa0c6be09d6",
                    "sha256:f435198d3345d2bf89a41e65d291b097775694dcb952a5823002c7d77702519a"
                ]
            },
            "variant": "v8"
        },
        "buster-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:14.888588544Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:49.5791897Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:56f9fb4bf0b803f4553b7fe668c34676467e662e3ab02af10e815a93ebbde1d6 in / "
                },
                {
                    "created": "2024-02-13T00:41:49.91043912Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:53.398035992Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:53.398035992Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:53.398035992Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:31.92811446Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:33.001212821Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.09994039Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.213963358Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.225289874Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.25981882Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.270035018Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.270035018Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:33.96930786Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:34.10268171Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:14.783245568Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:14.783245568Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:14.888588544Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1d7e79c78824d3d36e78d14b1c53b639ec71e51d619cc32e58087307c7302b08",
                    "sha256:959f47d59254072ce02e886b00cde7d294b2d7981aa4984cba5288cad830ba72",
                    "sha256:d17c410fa6f698a182a45cc74212055a61b521874fcef1af2f39e341ba6bdb83",
                    "sha256:0cd206a03975038b1b7bb7dd5f9cf4daac0a33a8e97a3939383e637e9a1be45c",
                    "sha256:4a9d5e6ecdaab0bf5d5768ff2bc1c0c7afcaab2873c4405bcad103e0f1e2d952",
                    "sha256:891fc4fbd97a494a81189d0a395580075c87502de3c65992e66ee690a6b370b0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:122e109ce76a1397a3342083493ebf205d24923cce42dbc32cce0516dd64fc7b",
                    "sha256:0ca013a72afe6ffa351b48a50a76ec9cf4bb516aa2cb125f4d20af4d57a9fd49",
                    "sha256:f9e1994a5e113cdad592781be8287712029653c9ddb1c9122c6422cb7128f3ee",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:27cd25e8c7f418d7b31d552410b9319e3e873281224cb5bef4e16b86692d65b3",
                    "sha256:5b4b46c38303863bc6e399b72c7864ecaaee829b213b02798757cebc71bf7d2a",
                    "sha256:4e926f542d92f9bd637ce9615fa00f8f5d206c410541955269006d17a290630f"
                ]
            },
            "variant": "v8"
        },
        "buster-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:54.746168575Z",
            "history": [
                {
                    "created": "2024-03-12T00:46:05.707971696Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:01e6303e5bd3d7bb8200a616ab1d931421cd756c837936b3f897727814cb89c3 in / "
                },
                {
                    "created": "2024-03-12T00:46:06.078462584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:56.76409807Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:56.76409807Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:56.76409807Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:35.720788962Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:36.338217232Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.432805206Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.551892522Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.562123104Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.604765219Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.615520541Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.615520541Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:37.159112058Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:37.282597476Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:54.645159109Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:54.645159109Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:54.746168575Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07bbd89cd181761fde72ddcf9318c9871c105da00bd52744d7437907c33deee0",
                    "sha256:960983cc0a3bb2f61698359bb8f9cbc8fbd2766293219d50b4354eefe3c4d3e7",
                    "sha256:29a6bcb6f166ef3ed97d319b2e9bf37a75f247e5ca1e5a847bf50ef37d9777a5",
                    "sha256:3c33bf028bcdb28b31c820c9f35fb1227bbcacc496899206b89ec914194e8cc7",
                    "sha256:c9a6c8eb8acb5842ce755b08beb4b8816f965da772c45a1f95641bb5fbc19086",
                    "sha256:95fa78911b8769bf8a9394cba57919630c544b1f8194fe33896cfeb0baa8c657",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:809baad34543e9ce78ca187c6bc44c7c886cd13966040c3350522ebd7b57c55d",
                    "sha256:7603ab81332aa002a982a0ad5a3890b62a9b0836867b7d6c5a0a9055784409d1",
                    "sha256:76772dfe739308052c1cf53ced9def39c4631cc633f8c9d7d33f4c120220479f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c58a19ddc1136bafacc7ed08d32fbf9722ffc37b641b7f79a35b9e6234d16938",
                    "sha256:f63b4d2199c001d2c359fe6cf92f989d8adae8c97bea0407fe0a3a6be55d59c0",
                    "sha256:909b9a35b6bcf8bad8bbafa1d9e783c684db4520b453b76ba3fa27b540358466"
                ]
            },
            "variant": "v8"
        },
        "buster-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:06.753727563Z",
            "history": [
                {
                    "created": "2024-03-12T00:46:05.707971696Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:01e6303e5bd3d7bb8200a616ab1d931421cd756c837936b3f897727814cb89c3 in / "
                },
                {
                    "created": "2024-03-12T00:46:06.078462584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.01815645Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.01815645Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.01815645Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:26.479258758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:27.43638791Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.531691693Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.649243392Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.675293651Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.723390648Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.7355834Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.7355834Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:28.34054638Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:28.467024475Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:06.653787018Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:16:06.653787018Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:06.753727563Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07bbd89cd181761fde72ddcf9318c9871c105da00bd52744d7437907c33deee0",
                    "sha256:8e273a8f93effd59553a4a31f5c7229ec2e16e01444284ea97daf932ab9d0d63",
                    "sha256:8c0566b447b5ec12362ff50ba0ce88967215d95b7e9f2ad334c603ecdb8435ca",
                    "sha256:7834afd8a758b2941d565a3592f4ab65a4cd2de41f19769132d0e357e882f15f",
                    "sha256:b4ea6ac278174f2a0b223d3ccc6a797ac2f091da944936e46544b1c48318f459",
                    "sha256:cd2b62f7a338d065f76532c443babf37cc00b3a4963490a61293cc4ef1ea743a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:60ccadccf558f03e50caaf1f2a9d6d741d20f83c71e794e1a9241c6f2315ee5d",
                    "sha256:9f919f5997f4e9927817d9b057abfd137f52c6764c0cada86333097be36d4c28",
                    "sha256:0a531293b84afc04eab37e450f83f367919d1b6a7215a0166673c1684ffa35e1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2a4df97b13cdbcb05d806c48aa3c03eeb9029bbabc4129c1a532ce09894fe13f",
                    "sha256:47dd369c0039a631dc68ef031f9b8b2389efc44b60f1d0a393d4ac0c0be89454",
                    "sha256:002689cb9979d1a8769861e708d2bc1eb56c93e44ed8bea2330951ea2ef9cc73"
                ]
            },
            "variant": "v8"
        },
        "buster-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:04.776356372Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:06.74670097Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd84662eb5c566f361c169149ba683475c50ddc528270daf67d40c8e98ed12a7 in / "
                },
                {
                    "created": "2024-04-24T04:11:07.11563544Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:19.638450997Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.549934048Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.629066055Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.741959901Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.750514997Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.758506762Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:21.457163607Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:21.592600612Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:04.670252287Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:04.670252287Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:04.776356372Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dccc8e6afcd181b24eb0b68b1c1381436dd209e768d16a34564ddac1a3fd75c9",
                    "sha256:39ca7c242be0ea6bd197d83f318c319ec9339c72dd98edd9c6be27f4c9a2336b",
                    "sha256:c5516df564cd16e10d84cf5d24b64295b1ecdaef53f8f05bea94bbd390079ae1",
                    "sha256:a549fc4249cd27572a3b3064ea14b8e909a07cfc4e9dd8d6d39100579978c1c7",
                    "sha256:716a0add12a51c3e2bd20c03b488420bb169916ea5bfaf23453afc7d132a36c9",
                    "sha256:38d69d87aac50f95e6e1c9017ed000b305bece9f2c7313144d743a110d0f8ec0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:81404df39f5b136b6e8202bc2ab80a602f8a862a0fefd3310a9f63eebbd22ca4",
                    "sha256:20b495f7e8f7f614a200a027bde0ea84be7f4242950e1e64726fba48678a1806",
                    "sha256:84668ead4d5526ea42d74565244059204af40d4212d6e322562285628824c139",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c67a9035c17fd6b4f86d70ce1ac722142ed08ff01a980a623ca86a2249de75cd",
                    "sha256:4436e92d1d917b486e047f5bba3586ddd2ec80e20cdb6d1e12181fac9bdb9bb0",
                    "sha256:5d87a44ace856bcec498e029030d6107cbce4e31857dcccb0b46d2240f6e7850"
                ]
            },
            "variant": "v8"
        },
        "buster-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:09.678655316Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:06.74670097Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd84662eb5c566f361c169149ba683475c50ddc528270daf67d40c8e98ed12a7 in / "
                },
                {
                    "created": "2024-04-24T04:11:07.11563544Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:45.809776659Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:45.809776659Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:45.809776659Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.066819565Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:18.920158375Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:20.089821396Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.180293941Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.297773545Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.306398153Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.314409136Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.339418308Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.339418308Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:21.093856096Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:21.208979982Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:09.591769982Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:09.591769982Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:09.678655316Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dccc8e6afcd181b24eb0b68b1c1381436dd209e768d16a34564ddac1a3fd75c9",
                    "sha256:b68528658e05ffc98d8dcfed1bc08af5f6c80aee662bacad115c6e81e646b02d",
                    "sha256:e680b67f6e2e37636a3810df963b97612febef96b17a1a83c71bd42d8fc83a46",
                    "sha256:e16849ebf7aa27328e38161674734295b43eb6b807b0c23f8c684ffc44aa4b68",
                    "sha256:280367c9a37e3236a7d439c5093ab121093a31931c3fe70f0c287ab05a9ce322",
                    "sha256:5ed22cba7aa9002c98a9a906a94aefbdee2a3d1d545f4695f6e8a6d25a81694f",
                    "sha256:2798d612330c766827116cc001cff81155fecafed480594a43c5c96eeabca015",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8eaf6f4c245a14e422c66a43cd196dcb9dd011cac75ab8772cdb502332b9326c",
                    "sha256:9738a6d816dbd2199fa0e779518f059e5052709ea0eb884d7cabe97c15c42f70",
                    "sha256:ce7c63474d5cd9357a22f6f4927b840466b27125915c27b4c1d3d1fbdfe3d909",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71880a6d135176b5ec3eaf3e468da95421047a70462246357f5a99e837607051",
                    "sha256:9f5aa46422bf89f52e741692efb96137b386c7f82a35d56374a81022ab6bde79",
                    "sha256:c78d7e3580cd575e5c6ca4260f2587d68f86497a70686ab09f8fef62d754ebcf"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20231025": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-10-25T13:36:08.179255152Z",
            "history": [
                {
                    "created": "2023-09-20T02:44:42.531099803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:22373577ebc4a88322b8e7e5a349667740deade289df65952593aa5fa355e161 in / "
                },
                {
                    "created": "2023-09-20T02:44:42.858890971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:44.346957152Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:44.346957152Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:44.346957152Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:52:00.554210875Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:55:57.524088167Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:55:58.747068842Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:55:58.747068842Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:55:58.747068842Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:55:58.747068842Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:55:58.849308973Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:55:58.958795292Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:55:59.110222141Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:55:59.121125023Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:55:59.130579707Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:55:59.143134787Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:55:59.143134787Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:55:59.896373371Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:56:00.06038281Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:08.073358118Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-25T13:36:08.073358118Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:08.179255152Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e9f82cdc53f715f510c7a6eb3b4b3e020f9558f8b700a509f08e02273492143d",
                    "sha256:77d29408e5790ea804564dad5ba28fad36d014e2fa0d5673b1358959b14e1d39",
                    "sha256:7eb3a27265805bdcaca685716052af885db02bf62c86e867c0dddf8fd8b20b3a",
                    "sha256:f5ff3a75c0140196795d937d7a9d513e633dcce9ae8b917cea7e747be161e7b3",
                    "sha256:557cf1dfdd80cd8f1e5e9e7440e8aca81d4c90aa4b96aac260b994fa63fe68b6",
                    "sha256:d39f545adf79043f33a63e5653b0495a5dd5aab7ee513b657fb28754d9ed1a35",
                    "sha256:cf6ba7c19ee92523f2e3be767978b426d3f517064ff7e8560f92a70fb912b153",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:299337fcc8226d148c6d3c56a762933c3df9204c53dadc2c374a11a2d3f54f0b",
                    "sha256:23f9ba1ad37b1cfd88582d76d12a44441fe1d9dee0c8297671d9794e26350242",
                    "sha256:cabb01d2ea99c48d2ec76d571ae6c0a1c1e126aa6445b5999d297c2abb8528cd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:592c627b1c9afd3fae0dd99daba1bdffde537cbb9173e5a77ed4350f3e7ef436",
                    "sha256:8a27551d556f6373ff3536640adb91d2bfe080a5e3588c73ca592c41dcaf3c85",
                    "sha256:46e5e58f67fee32e2a8005df5889f46f4ee0ccb973acb07b2f51c6c52a4e3312"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-07T07:56:59.204758444Z",
            "history": [
                {
                    "created": "2023-11-01T00:40:09.889058119Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ad1947b1fc97bcc228c004c15afeb2d9006d47167db69cf7b05c3e634c648166 in / "
                },
                {
                    "created": "2023-11-01T00:40:10.201336152Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:07.508309015Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:07.508309015Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:07.508309015Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:55.433315813Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:21:47.258176936Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:21:48.265647286Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:21:48.265647286Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:21:48.265647286Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:21:48.265647286Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:21:48.389448336Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:21:48.518695133Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:21:48.740403315Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:21:48.761839297Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:21:48.792063653Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:21:48.81528845Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:21:48.81528845Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:21:49.805808056Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:21:50.014920531Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:59.062546004Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:56:59.062546004Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:59.204758444Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c0c5bb6ac2148eb48475b6b9f6b4cee9ee471ed1c22e9c7961217f2f3051ad29",
                    "sha256:69205708ccd403da75898e597283f9bafe600d980891e9f987c62725ef6d311a",
                    "sha256:9412e85c64c02dad0b20e438fb1d94d9248dddd2e500502dc6d2355f3c3fd1ef",
                    "sha256:08d7a9c9c4dc5c0a546e24710e49d0757da78e9f2a3f2527d33a52b4f77206b8",
                    "sha256:864b496b91a7aba479ab50187137c5e8ace429a0b251d4fbf669b661e8ce3c3f",
                    "sha256:8ba482558d5e3644600ca0afed7b231a11b8803f1e6d736c99ef868896d70796",
                    "sha256:f7606ad0c9deabf60df2ca69f756eeadd0110d5311135f99af3cc4823b04833e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1413232a0319bbd7820b1e1d231a2bc5ff3ad240b51ba176dee33c6dfea6d1f2",
                    "sha256:b557e542b9be2f3fc002f83fa6fb78c8caa9158a30de3d54b1857d6012d1ccdd",
                    "sha256:4a66590272c929e892df860f5c0c26771f081c4b619aac6f30e84044239c0cf6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2de74307c1f032feeaf48bc15548396b47b6ad9863c00ab128984ebb0c46af43",
                    "sha256:fd492265fd516686e58184c79526467830bfd8329fdd8a69ac32494cb4d5dbbd",
                    "sha256:3e7eafb4642decdacaf6954e5bd6ba7a7bdec6d49b912253c2461b7f6714115d"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:24.931731579Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:34.926992039Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:475e94b9a8f65c7cd4d4156af31e83190240ff35d8038f3fa86ad124d4d5d299 in / "
                },
                {
                    "created": "2023-11-21T06:27:35.290927258Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:20.899641489Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:20.899641489Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:20.899641489Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.707284772Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:51.025556913Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:51.990018102Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:51.990018102Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:51.990018102Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:51.990018102Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:52.088649819Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:52.193152222Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:52.343844432Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:52.365663308Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:52.375306914Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:52.384306374Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:52.384306374Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:11:52.903850238Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:11:53.052998775Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:24.833139127Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:39:24.833139127Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:24.931731579Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c1db3d8c88b9b9ba18e87c33a343ff1d40a2505339fb78a7b222f9fe67817090",
                    "sha256:663d431480fff55f2c9ae934edc32a50049c577b48c5d30ab9d70f7927e10bb5",
                    "sha256:d25b094e8e918aabcebcdc6af57b08be30ea8dedc672a8abbb86817a677fe7eb",
                    "sha256:16ffdfc19236efd4cc3d4471a12f7116d0a7408f0792661d78918240e112f1f2",
                    "sha256:7569d0ee4e01089cc669bb951ad02d3360d6bce3657fd43fb8400f7fcbe2ecff",
                    "sha256:1985aadf6f691fd206738f5d3cabe40d450864295f86a2235490d5403ac48a9b",
                    "sha256:ba351082e79aa2a448e215616d6ae0e189eb98e526bebf97a2ce285f34da6556",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0136431193aa3b9456f889d6b68d8763e72dec997ddffe8adfbc950d3c2fa36d",
                    "sha256:272acdfd41922784076d48cfa2c2ed28ed8c943a99d4dde3d1b8a71d89e9a799",
                    "sha256:18427e545fc2637848498fa4ff31bcf44f4165a4d30db7550c825908d3559e4c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:467db0d4aa41e9b3693ffcf1afe58934e53230f593d7e69bfe1ffbe7106fcab7",
                    "sha256:e9800b992611983552b9845d3eb32a21001a131bab91b40ba38b2ccfbeff006c",
                    "sha256:cf16104700bcd33133d7d58785e55300da3fa940c79c0479111519ba1853d8cd"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:10:44.877734101Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:34.926992039Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:475e94b9a8f65c7cd4d4156af31e83190240ff35d8038f3fa86ad124d4d5d299 in / "
                },
                {
                    "created": "2023-11-21T06:27:35.290927258Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.636831778Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.636831778Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.636831778Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:17.085556371Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:13.192674948Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:14.062537008Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:14.062537008Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:14.062537008Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:14.062537008Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:14.170392999Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:14.289035005Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:14.412016807Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:14.422762818Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:14.43210199Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:14.44234928Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:14.44234928Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:15.109317321Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:15.248240619Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:44.784966222Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:44.784966222Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:44.877734101Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c1db3d8c88b9b9ba18e87c33a343ff1d40a2505339fb78a7b222f9fe67817090",
                    "sha256:ad5c50cf6e2148edc847c9204ca6ff9c23e54540906662ca7ed5201df68ab243",
                    "sha256:eb7ee9e203b58ab3b17635d5a85931fb17f955f6e6247e2442f0a6f16be866be",
                    "sha256:ed78747885af47eccdd508fb6427af1a4d1a28cbfdbe543a9e4ff941a3634259",
                    "sha256:7a4307cb16079e2639037f70289d3afbb0984ebe44007089f035bd925ff88167",
                    "sha256:a47c095dabc86f634c0993ca67785fd0713eb1323fd131dbe459e004fc2f52c2",
                    "sha256:7f20cda495df22ddaa30c5d004cd89907d1af89b6e177d2ee07bc096d9503972",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:74763a507d6e82809d8cd5c4fa6e30a48aeaf282398f7fb5d43886cf313964e6",
                    "sha256:0244b418c7efe06f110928a7f5857904b191086f507d1c9e0781848ddc907be5",
                    "sha256:f276e2f618f6b3b9df4e5f916893414fb7f124230f50ea96504cb4dbcbcdfe8a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0dcd339246e422104c259ad8a33b5f0123adcfb6508bfaed23e56bae34586375",
                    "sha256:bee4b11f52c2ab58a9d7ca2fc9cd2934bcb0d082ded87fa0326f38c7545782fd",
                    "sha256:324aa02baea0dd067e106563e83b47aa8e01c1b2f9faec86ed0608fb7c4552db"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:22.633351083Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:39.799070348Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f60673c303a98b4e4c676e3403bc1b7cb316335aba1202205188176810494c07 in / "
                },
                {
                    "created": "2023-12-19T01:41:40.098329745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.547452109Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.547452109Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.547452109Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:17.950504686Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:12.670193824Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:13.300760817Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:13.300760817Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:13.300760817Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:13.300760817Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:13.391331741Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:13.476226941Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:13.596794613Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:13.623567601Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:13.671482703Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:13.68077557Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:13.68077557Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:14.182157272Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:14.302077759Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:22.549463576Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:30:22.549463576Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:22.633351083Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7a6d9d2cc833d8f60d28a82073623d22ce5ac0781bfe3111af9e24fbaeaed360",
                    "sha256:775ca23a77ca1942c1169d254803bb281cfc2662577839618d2e7a523bc2ccc4",
                    "sha256:d78285a246be6ecb2675fc4bd24fd3405f761e3ac5728f96961564ae9998c85c",
                    "sha256:661c0f2510c3d027c4a72069394a20008e11fc800debc8e7907f2c61ffae9db3",
                    "sha256:2e4d8030c5c0ae98a1779c1fb6ef99424dab6f9b530638306a316d275ec88c7b",
                    "sha256:014395463410272b75b0a571940fed25bd13de64383b467047cba876927689e5",
                    "sha256:d579878e336e97d3c880bc8f5278518be75db6581ce2fc947d6c0b536368a17d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d175e60471d5057b4e4ce7b2bc4b517299bee1a0e9213f7ce5d82049cbd37903",
                    "sha256:5a56f2fe8e62ee3072e43f2daeb17c8f2d7d47b30a2167f818f5daa6e41c5d74",
                    "sha256:b8625fc2c525f1ee70ba18c57fdf03e1d958560304cc17de718f3a1b3c5022b8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:80164e06dfa259e5f8c2c01659f513c276ea77d9379fd0061e60ca37383fc05f",
                    "sha256:1db97a10fc9e54b2d98e1e0f2b80f61b69fc0576b4b165aea957d2b3f005b859",
                    "sha256:2fc560b8b6c5108c6dce514fa21588ce57d7301bee33ae5171cc12bff6923be4"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:00.306516408Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:39.799070348Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f60673c303a98b4e4c676e3403bc1b7cb316335aba1202205188176810494c07 in / "
                },
                {
                    "created": "2023-12-19T01:41:40.098329745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:51.561013109Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:51.561013109Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:51.561013109Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:27.963478773Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:26.865700188Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:27.887488375Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:27.887488375Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:27.887488375Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:27.887488375Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:27.966529339Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:28.060976967Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:28.165064112Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:28.174685689Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:28.229860004Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:28.239271559Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:28.239271559Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:28.765502939Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:28.877933515Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:00.220253121Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:22:00.220253121Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:00.306516408Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7a6d9d2cc833d8f60d28a82073623d22ce5ac0781bfe3111af9e24fbaeaed360",
                    "sha256:cc17b4af85a49459a9699f58e90a9c2c3c5a8f4234ab51ffc6c574887d63d3fe",
                    "sha256:e382c0fb00e0337ca2b2990ad96934b5c18877d64b116eae56f8bed49d3ca848",
                    "sha256:2f18292610a5e2b8c20ea37e361e5b77acc5056f1b385c60ce2f65ada08ebec4",
                    "sha256:86095e8a591204c11618c095f959e7691df5b060e4588ebe1cbc2299ccd7700d",
                    "sha256:930d6f4638387df15023f418a04231fc9da8ed5da509671d707b93d9ff47ee30",
                    "sha256:868014a47eeea74dba10782f24f74cefac1c40c78a19874bdf3c9ff5faa9b2ca",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a208bd3d30af9428c16827c1ea1f1fabc97a4944491fb0998b440e4b0e4c804a",
                    "sha256:30d17597d3a685d9b20369aeaa0ea6065ac489f3bae8bf59f3e3e5440ea08e14",
                    "sha256:51952ca8ebd5b8b43258dbc48f9b00e0c2f874df057db63c92cf2033cd530e37",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0cb1d317da51ebddaf5fa8672ee8a87240fcbe24b4e2c1d157108c63c85ddaf6",
                    "sha256:f0215a6d7428e2084ced4934845a3e428509ecea9169b99177010becc53840c9",
                    "sha256:e56973db7252e38650a6b1f1d5e17ca4780fe6a4b2525ac8f974b1fa67700dcb"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:25.089557913Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:39.799070348Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f60673c303a98b4e4c676e3403bc1b7cb316335aba1202205188176810494c07 in / "
                },
                {
                    "created": "2023-12-19T01:41:40.098329745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.538579983Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.538579983Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.538579983Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.039448219Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:21.939711886Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:23.081801105Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:23.081801105Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:23.081801105Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:23.081801105Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:23.158791143Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:23.247188568Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:23.354168939Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:23.364272067Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:23.373906079Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:23.384195653Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:23.384195653Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:23.88713414Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:24.001748331Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:25.000406213Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:32:25.000406213Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:25.089557913Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7a6d9d2cc833d8f60d28a82073623d22ce5ac0781bfe3111af9e24fbaeaed360",
                    "sha256:7a95b560dc11fe5ff0559d2f6537c1efc83ac7aaad51b45a5917e009c0c06f50",
                    "sha256:33b94dc64bff8b357d5ea5ac78fd10b1448602b0c18e26f09e8274919f4e1a40",
                    "sha256:81e715114d9df619c1abba51200716d2ea52dba08ccb358165e7ac1bfd798cf1",
                    "sha256:838864abedbb0dbdaa86660cc14daf61fc56775c2609bdf720381da5d482648d",
                    "sha256:8688758797bea5cc8d42ab49b3ebe1098eef1a4381016dab68330981dfddc2fe",
                    "sha256:ce725462c2937e8eb639a3f218290b58c44e7336daf2f6edcdbe9dff7cb9203f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2e93cffa85150860f2e798d98caacaa532a99ab232ef88d0fa933823438b9bde",
                    "sha256:911d8763e2b106980f6a3a180cf8e893f5d1ac205a11d73fede3c6f5086f599d",
                    "sha256:1ee550237dcfcaab61f889ad8de0425a5af7c38383a5854d55a7e2d6747351de",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6d58174102c513caacc65c91fefed247131c935988fca6ac746eaf90d1b3db96",
                    "sha256:0eca4dfc5eafe60a27c5e60d44a42697a770ca30007b370ab8a46b652142ef67",
                    "sha256:67f8bb39f9e3e3ddcf634cba642b78fb17e36c19ece09678be35440f61ca8861"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:57.466028234Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:56.988274449Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:de90e50e142aa92c29d5128e1cd025fd5c5b91f879a19a06a8b49451a4e6afb9 in / "
                },
                {
                    "created": "2024-01-31T22:44:57.403511419Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:24.450475977Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:24.450475977Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:24.450475977Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:27:02.080878171Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:00.730108488Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.546267528Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.546267528Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:01.546267528Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:01.546267528Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:01.6373298Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.726081355Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.843716447Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.853871198Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.889100994Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.898620738Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:01.898620738Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:02.518508129Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:02.641876532Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:57.373978466Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:57.373978466Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:57.466028234Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9d885bab887af47b9c3317a8a0e9e9af888daba2b6c8434b01c923eba48482c1",
                    "sha256:bfd3b7513138ecde418dc9c1954baef6538803a0bc918a573b2129d300beb824",
                    "sha256:619f66a8664bf98fff4ffb0925bb1bce6d84187b9b5e7c1e13781b19317c1341",
                    "sha256:27fe588fdb860fa6186c5e60633a00bdb5bd7be38ebc8cd7a14bca0d37e974e1",
                    "sha256:5ff02d000baf9397c7634a8a164e1b2faeaffe6577bb97eeb5c4293528593229",
                    "sha256:0e8e4d9ce0ce1e7018a5d960053edee92c80dcbcf3f40fc8ffe804df3f7388f9",
                    "sha256:f919ca613be98068f8e1d71170471405ebcd105a72c7652cb5224274ab40586b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:da15a00a582d89918c29e5c3af955e210fd6ca1678d4824c1cd3669ddcbb3728",
                    "sha256:9c0e56da42e0d3a0cff795c7ff8eb4d9f55974100f3bbf38bbc3a9f078695ad9",
                    "sha256:af01aaa8d6429eb082ef35ec5f868ba4c53330a4b93a05a4c2a57d1eef63a7bd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ed8825067405a4357cbcd06bed8c8424169584aa3eef730e0b6f0b50a47957c3",
                    "sha256:2241433c9f73ef1e7a25f69ec03831b8bec191340817bbfafce510d0be08b1d1",
                    "sha256:12b0fea5642498d32f234675d74bcd4c94b09c0763187499aee45b6578c678c4"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:36.033139776Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:49.5791897Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:56f9fb4bf0b803f4553b7fe668c34676467e662e3ab02af10e815a93ebbde1d6 in / "
                },
                {
                    "created": "2024-02-13T00:41:49.91043912Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.407104143Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.407104143Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.407104143Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:37.623356129Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:35.285777748Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.169524006Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.169524006Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:36.169524006Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:36.169524006Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:36.248177335Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.321125203Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.435978221Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.445850901Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.485723422Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.495059969Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:36.495059969Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:37.112799936Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:37.232755366Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:35.949995827Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:35.949995827Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:36.033139776Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1d7e79c78824d3d36e78d14b1c53b639ec71e51d619cc32e58087307c7302b08",
                    "sha256:24fb88b45bc91c912b602a42d6733f0071d4a4aebea02fe430f22406b2b90a88",
                    "sha256:4999626c6eb61bd558eb5f9e19da741786584333e1d33be6c27eab10d836cc10",
                    "sha256:e34e20be7a8dbeaf385b05be7a76cd222388a96925b449c1832e788282af745a",
                    "sha256:d92db7827a3867f9f077235ba942dfdd1b107befd7e63a56f44947717009bcff",
                    "sha256:6777d12ae1fb045d6c3858d096c642c5ea8047b454260909c7274319f701c7ab",
                    "sha256:119c8f5daeac78104f977c9bc3ebbd25540df03165a93bfe60beda27a1dad449",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:43858c92eeba765c832cfd74c635694cc1fbdc84568b0564486047ab4757de55",
                    "sha256:c4036174b531f2c568d919ef7dd016f782ef2692899081723b82cdb84ec8a8ff",
                    "sha256:497a99c246d69e1b20f4acc7bdcfa574dd72726f02d6db3414e838b4b482efd2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:57fa20d8291fd47e29caecf6d5b97b4bda4b5fbab2a75520f9f7625d364a76fb",
                    "sha256:2bc59f352b6700c1374bb37352d2268f756e672b4713b3e359c773e6a7dc9304",
                    "sha256:fcf9dac976e57e114f2a750ca1adfec9787856dc121dd9708a117905cca7de4b"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:15.976260178Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:49.5791897Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:56f9fb4bf0b803f4553b7fe668c34676467e662e3ab02af10e815a93ebbde1d6 in / "
                },
                {
                    "created": "2024-02-13T00:41:49.91043912Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:52.452722501Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:52.452722501Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:52.452722501Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:28.461808725Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:26.245036143Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.320901321Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.320901321Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:27.320901321Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:27.320901321Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:27.408609106Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.507560774Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.628377274Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.642286284Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.676700208Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.686697105Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:27.686697105Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:28.196729081Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:28.321647032Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:15.89157603Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:15.89157603Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:15.976260178Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1d7e79c78824d3d36e78d14b1c53b639ec71e51d619cc32e58087307c7302b08",
                    "sha256:9fd34b510abf214c4867027968d660bd642c08430e97cb28ccbe9cc8937e75ad",
                    "sha256:bdd37b91483a1421d57a76dddf0ed03a368aaa181732695d5406693f7326d0c0",
                    "sha256:70b1fee0c1e3684fbcf920cf7325e45bb85612e5a12224291ed59fd4b14362da",
                    "sha256:a41b7aead45637d0ee36b280f180580f345d8f3621431d99fb7e7384c48b405a",
                    "sha256:9f07c26266c466eee3306bf5b277b02724c0860a1572057f6d10045ed24c534f",
                    "sha256:3e39672680358e3c8c13a6c34c3d0f0c3fa11dc21655fe95b781d840bcff3f62",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:765814db0bfc6b36a4242de3e0ddb04e11fca9236efcf54f980149c1f28bf863",
                    "sha256:8d676623bcd3c71604dd591ada8767fc76d28a3bd5a2a75b29494f3b3e3795ce",
                    "sha256:9d9a9c94c0edbe7cdfd578737375f9abe98f50b7a05eb4b6d0262212fdcafe98",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ec137555f62c59e4f2f2cc3a849ef6c291cfc43ec6c1d4871a896431e6ecc383",
                    "sha256:fe7fe8d3a16d34a198dac39f1e31b05ad25638f3663575d4c72025f5f9a856fb",
                    "sha256:f8c5b83d6e5cb72df8dbc7b0b34fba2e4589150a63d73de54512fdad712b61fa"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:57.064983099Z",
            "history": [
                {
                    "created": "2024-03-12T00:46:05.707971696Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:01e6303e5bd3d7bb8200a616ab1d931421cd756c837936b3f897727814cb89c3 in / "
                },
                {
                    "created": "2024-03-12T00:46:06.078462584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:30.308288443Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:30.308288443Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:30.308288443Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:08.069852926Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:06.18555576Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:06.993811329Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:06.993811329Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:06.993811329Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:06.993811329Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:07.076720674Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:07.156824471Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:07.266984689Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:07.298368503Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:07.346409368Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:07.356208481Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:07.356208481Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:07.965956635Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:08.086792896Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:56.972013759Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:56.972013759Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:57.064983099Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07bbd89cd181761fde72ddcf9318c9871c105da00bd52744d7437907c33deee0",
                    "sha256:d17e9b189c1a5a4c64d7870b7b9a1a0110e63eb6451629f2c92b5050c6b76690",
                    "sha256:d974555cad55706dce172322835601f67d07a2a479c94ec11d3b8e19550d8af8",
                    "sha256:381e1d974890c3063dd43e21beabc70acd6b1058fc1156025d8b92bcb2e9901e",
                    "sha256:43be4b47a746357a75b855c0bd4317711b4532de73eca21a415c89793c6a3387",
                    "sha256:d192c50f88ea8dffb41cbcb09244b4a39cf2f100adc6f3a89f426ed982043f30",
                    "sha256:b92fc39dc5c793eba74b83506c3e55b3e226e250c3119564769ea02500aea19b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6a7ca6e600a0aa1c22047176d2f31aa48e320e445cd71b1ea0038749408a161e",
                    "sha256:c3a4615cd0d94c547336c2f41f79bbab4d18713c36e57678508ec33e0fb630fd",
                    "sha256:5ae45b54aa1f320b18dfbf523afc32a85cac30397637ad69e150eb031dfa678e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:dbb22bf5e1c40b9171bce7d12bbb237ba1551d3f8e4f4ff0b25e777d10e30c32",
                    "sha256:0732f54524af7b4f3ef4f815ba2fcc60ad22ed6a6dbdf9ce8e4343530bda2dda",
                    "sha256:85da2b3c401407fc079a095b88d76ba711717031b88a9af2ef45e6e3cda8f909"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:06.493155774Z",
            "history": [
                {
                    "created": "2024-03-12T00:46:05.707971696Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:01e6303e5bd3d7bb8200a616ab1d931421cd756c837936b3f897727814cb89c3 in / "
                },
                {
                    "created": "2024-03-12T00:46:06.078462584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.11531727Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.11531727Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:41.11531727Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:16.626552183Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.01177144Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.616768704Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.616768704Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:16.616768704Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:16.616768704Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:16.698280163Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.772235781Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.896379269Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.906740466Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.915608611Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.946554518Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:16.946554518Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:17.493922103Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:17.605909111Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:06.341679101Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:16:06.341679101Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:06.493155774Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07bbd89cd181761fde72ddcf9318c9871c105da00bd52744d7437907c33deee0",
                    "sha256:c2085f329c3cca62a0c600b9ba4a733a0b33d040ecbf4de1d7ce01959c479919",
                    "sha256:4c745b9e5ff78d1d9fc37d4833b50d0f9c2447dd800d3d026450c39f8ff74e4c",
                    "sha256:68f99f242f279803c6fb8d66fcd1b51cbb028ff21fe54faf44ae85b1d4743839",
                    "sha256:5b49272b856dd4b79e288a48f746ca47d706014f670b8ebf34c87e731534b4b7",
                    "sha256:119a82bcf0bb432117e542114491827ef347c71ee6c2e4e8e036bd61afd6c140",
                    "sha256:c84a449f20482b8f9ff9459a3b232db6daae72c1140cd3522fc4a5eb0ab1d82b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1bffe48d22eb41acbe7cf17bc40cf1d9dcae8f14ba4e4bcd236e9e4347cbc13b",
                    "sha256:deb495121f51277a1d6dc88c2c84e7f802ffd6fa9255654e9ebc68d60645d792",
                    "sha256:71d5320d34b1168dee5b754d0d4e2ba7da8d1ae34fb9f197ac9aa04cb5abaa72",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:59b0a66b819c5ba6adc4c076b9625c4df3ee147a8c9715e1f31b9b955e022089",
                    "sha256:ae8a6855df6ef52b2d7369c29b9e2ad94a08e847ed8110c765f2839dd320b64b",
                    "sha256:5cc6e7dd627d02a65e5207c04d7abc9e3a88956b3f05621d2c316a2078e20a09"
                ]
            },
            "variant": "v8"
        },
        "buster-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:09.678655316Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:06.74670097Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd84662eb5c566f361c169149ba683475c50ddc528270daf67d40c8e98ed12a7 in / "
                },
                {
                    "created": "2024-04-24T04:11:07.11563544Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:45.809776659Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:45.809776659Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:45.809776659Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.066819565Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:18.920158375Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:20.000659748Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:20.089821396Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.180293941Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.297773545Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.306398153Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.314409136Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.339418308Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:20.339418308Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:21.093856096Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:21.208979982Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:09.591769982Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:09.591769982Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:09.678655316Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dccc8e6afcd181b24eb0b68b1c1381436dd209e768d16a34564ddac1a3fd75c9",
                    "sha256:b68528658e05ffc98d8dcfed1bc08af5f6c80aee662bacad115c6e81e646b02d",
                    "sha256:e680b67f6e2e37636a3810df963b97612febef96b17a1a83c71bd42d8fc83a46",
                    "sha256:e16849ebf7aa27328e38161674734295b43eb6b807b0c23f8c684ffc44aa4b68",
                    "sha256:280367c9a37e3236a7d439c5093ab121093a31931c3fe70f0c287ab05a9ce322",
                    "sha256:5ed22cba7aa9002c98a9a906a94aefbdee2a3d1d545f4695f6e8a6d25a81694f",
                    "sha256:2798d612330c766827116cc001cff81155fecafed480594a43c5c96eeabca015",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8eaf6f4c245a14e422c66a43cd196dcb9dd011cac75ab8772cdb502332b9326c",
                    "sha256:9738a6d816dbd2199fa0e779518f059e5052709ea0eb884d7cabe97c15c42f70",
                    "sha256:ce7c63474d5cd9357a22f6f4927b840466b27125915c27b4c1d3d1fbdfe3d909",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71880a6d135176b5ec3eaf3e468da95421047a70462246357f5a99e837607051",
                    "sha256:9f5aa46422bf89f52e741692efb96137b386c7f82a35d56374a81022ab6bde79",
                    "sha256:c78d7e3580cd575e5c6ca4260f2587d68f86497a70686ab09f8fef62d754ebcf"
                ]
            },
            "variant": "v8"
        },
        "buster-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:04.776356372Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:06.74670097Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd84662eb5c566f361c169149ba683475c50ddc528270daf67d40c8e98ed12a7 in / "
                },
                {
                    "created": "2024-04-24T04:11:07.11563544Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:19.638450997Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.549934048Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.629066055Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.741959901Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.750514997Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.758506762Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:21.457163607Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:21.592600612Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:04.670252287Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:04.670252287Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:04.776356372Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dccc8e6afcd181b24eb0b68b1c1381436dd209e768d16a34564ddac1a3fd75c9",
                    "sha256:39ca7c242be0ea6bd197d83f318c319ec9339c72dd98edd9c6be27f4c9a2336b",
                    "sha256:c5516df564cd16e10d84cf5d24b64295b1ecdaef53f8f05bea94bbd390079ae1",
                    "sha256:a549fc4249cd27572a3b3064ea14b8e909a07cfc4e9dd8d6d39100579978c1c7",
                    "sha256:716a0add12a51c3e2bd20c03b488420bb169916ea5bfaf23453afc7d132a36c9",
                    "sha256:38d69d87aac50f95e6e1c9017ed000b305bece9f2c7313144d743a110d0f8ec0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:81404df39f5b136b6e8202bc2ab80a602f8a862a0fefd3310a9f63eebbd22ca4",
                    "sha256:20b495f7e8f7f614a200a027bde0ea84be7f4242950e1e64726fba48678a1806",
                    "sha256:84668ead4d5526ea42d74565244059204af40d4212d6e322562285628824c139",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c67a9035c17fd6b4f86d70ce1ac722142ed08ff01a980a623ca86a2249de75cd",
                    "sha256:4436e92d1d917b486e047f5bba3586ddd2ec80e20cdb6d1e12181fac9bdb9bb0",
                    "sha256:5d87a44ace856bcec498e029030d6107cbce4e31857dcccb0b46d2240f6e7850"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20231025": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-10-25T13:36:06.880657028Z",
            "history": [
                {
                    "created": "2023-09-20T02:44:42.531099803Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:22373577ebc4a88322b8e7e5a349667740deade289df65952593aa5fa355e161 in / "
                },
                {
                    "created": "2023-09-20T02:44:42.858890971Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.290887517Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.290887517Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.290887517Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:56.027927197Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:57.148858761Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:57.148858761Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:57.148858761Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:57.148858761Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:57.281871156Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:57.376910353Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:57.522282748Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:57.532286848Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:57.542350748Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:57.569870847Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:57.569870847Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:58.507811616Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:58.667351611Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:06.733948156Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-25T13:36:06.733948156Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:06.880657028Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:e9f82cdc53f715f510c7a6eb3b4b3e020f9558f8b700a509f08e02273492143d",
                    "sha256:b08019ccec097cb7e2d80a5a373d089fb37220a87c451e9677f21788a63ab9df",
                    "sha256:305865f8f275d5cbd39955a3565d194654b3d3986a50fd03579072de4c784daf",
                    "sha256:4ad047d91dbf71267d1cdceed6d2d759a3cf4b6d06b9e83c5dcdacf4b1f76b3e",
                    "sha256:90fcd68cae4b001ae3bb3e5a7c65fc53c14457f43a22972b4b0cbe56289149df",
                    "sha256:1f39b61a64bc17138806fa29ee4a2c0e6c0b81436edc20d2ef261df770d91c09",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:69f9728dc5eb999a5731b9031cc612efff4b7d266e4d4226d4562c8e7a307b8a",
                    "sha256:662fc70d93ebc1bf663ad48b2c2402f8b0d9c65a7f5e9a7949e2a3d6c79826ee",
                    "sha256:25294bb4ac36fb1bdcb1f8e5ffc296c7e3ea76eac40d1313122fbb0766de9f3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a4f81f82384a30768e9a119a1143e7c0f9cf2a125c13817a103fd262294e383c",
                    "sha256:2072511d410b9e9daf28a4b14e590549155ecebf3f05f8897524e86d0f900e36",
                    "sha256:716c17f048c5cbaaecbb4c099d687b8c637b4022d7c2ba63ca0bb2740b2e1293"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-07T07:56:22.38179955Z",
            "history": [
                {
                    "created": "2023-11-01T00:40:09.889058119Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ad1947b1fc97bcc228c004c15afeb2d9006d47167db69cf7b05c3e634c648166 in / "
                },
                {
                    "created": "2023-11-01T00:40:10.201336152Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:53.564958479Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:53.564958479Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:53.564958479Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:07.670942728Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:08.774858931Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:08.774858931Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:08.774858931Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:08.774858931Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:08.909856337Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:09.037276973Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:09.187124608Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:09.197587981Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:09.207562436Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:09.217742798Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:09.217742798Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:10.100550629Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:10.24915922Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:22.249300438Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:56:22.249300438Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:22.38179955Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c0c5bb6ac2148eb48475b6b9f6b4cee9ee471ed1c22e9c7961217f2f3051ad29",
                    "sha256:637656773b7cb462a7743160bb2e611798c689a33634a9c37f480a5ba7d96702",
                    "sha256:7578239c9b3902b49e1450476e9b73682a7c44bc36d5906ff0ab4ab3bd0f7be4",
                    "sha256:bba32e91abbdad154e0b75360fe2ce962789f676e091b47e78a50c15bf5e746d",
                    "sha256:f7c658d369d9dc5084bec212a4394fd1f1916eb3df91faaf730262a3f05a7e99",
                    "sha256:e411e93878349d765f8a86803b2b7a96e4d07ec86ecba7ba6590a98a17834387",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fd3f7f88926cbe69e16162533df6f2bed24ac941cfbd09f96223d65a38b885aa",
                    "sha256:cd08a8e6a153f1a360b9b301adf73067489e59d1e1888655c97d365c02086a3e",
                    "sha256:ffd7c37f4378013f083109b01514efa786e790d6dfabb295a81e352235cca60c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:a179bf256fe69626fc04e34b6a620a5836a22b22cd04d02225ac77c12f7ade2f",
                    "sha256:9a288f743501ce79ebc085af391aa209550b1b8eafc731c35139570fef85a590",
                    "sha256:9154a29f75b4a7f1e0c8553e23bdf2f0c7dbbd928a1e5f96401daa9b131137bb"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:26.751955704Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:34.926992039Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:475e94b9a8f65c7cd4d4156af31e83190240ff35d8038f3fa86ad124d4d5d299 in / "
                },
                {
                    "created": "2023-11-21T06:27:35.290927258Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.283092808Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.283092808Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.283092808Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:55.464611292Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.090339981Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.090339981Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:56.090339981Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:56.090339981Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:56.175637552Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.265434925Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.379534812Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.388358474Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.396129991Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.403968324Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:56.403968324Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:57.011330178Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:57.129002331Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:26.650101065Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:39:26.650101065Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:26.751955704Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c1db3d8c88b9b9ba18e87c33a343ff1d40a2505339fb78a7b222f9fe67817090",
                    "sha256:61acbe232cc383f45ae0f242e3a1c3b044cf8f41734ab5c8d5ce4993e4e3dba5",
                    "sha256:f64b741d550631e9f8b5cce58dc90f34cec56cf7bccadae57955d4eb76732a70",
                    "sha256:ec3195ade3dea7221e271c9aebf52782a34ab13e83d0f715f9c1c340f9d634b0",
                    "sha256:a44c2272725a5c13968a0e4dbca40630b5eebc5a0635c08b766e00209d835b8a",
                    "sha256:dbe9e9f443597353ebb4b0bfab43cf3cd86cab44a9b262883d1406ad939f474b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5c696a556843095fd60c2ba3a547087f613f5a6c857edc988fb77c06b03bb7b6",
                    "sha256:3e5209c8a681d22499721063ce36fd1c6e1f780583260ea9864e5f02aa3bb5ec",
                    "sha256:15ff42dbb181be1af16798438c134f322c548d8d81021f1c53c83c74e00559ad",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac9507ad5a25b3bc9ff80471388523d5a499523762be7491f687526ae04cd14b",
                    "sha256:c79f647e82d935e8e413c593729a854636e27db3ee70c3bd0aa8fd14c61103e9",
                    "sha256:cf2b3c79ce2a96a52271f266cdd3b8e28bd2a4b79c971c3e9a93840ecc92842a"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:10:46.676537908Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:34.926992039Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:475e94b9a8f65c7cd4d4156af31e83190240ff35d8038f3fa86ad124d4d5d299 in / "
                },
                {
                    "created": "2023-11-21T06:27:35.290927258Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:35.288664093Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:35.288664093Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:35.288664093Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:12.191120326Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:12.863264068Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:12.863264068Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:12.863264068Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:12.863264068Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:12.957570467Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.051555456Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.237355092Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.246097145Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.254003784Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.26188932Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:13.26188932Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:13.887024396Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:14.031525593Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:46.570544306Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:46.570544306Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:46.676537908Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:c1db3d8c88b9b9ba18e87c33a343ff1d40a2505339fb78a7b222f9fe67817090",
                    "sha256:451b8ffffee9f8506833158d79dbade97c675d277f7a6ec567da48c1d51d61b8",
                    "sha256:887f00e3039b3f4900ce590e16e4a79c68f499414ac260b5e15c30710ed3f2ca",
                    "sha256:96dba296bc32b32211a9a15854bee92962655e32c8b3dd63b67bce0d7877eebc",
                    "sha256:f46f15220d0a34b9e7777594720590a4e06ec743a9b7d27ebd8b6f262dccbb0c",
                    "sha256:2dd7e8a42ca9de9888af6676f97a1971d1d45d9d23e5040f82e9bedc49ad6cf8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:be2e1a79cbda0044e0f33834afca89e76b0ea21743f935b142ae8d62f3ca32d9",
                    "sha256:cfd745522c22fa0b8d56045c33cb9bb867fa1cb08e78de950980b773ee266956",
                    "sha256:c58f1cbae9187ef47e2cf809105138a5bc02b4d18255a5b4c70afd59812197dd",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0030fa92bf7aaa822bf9dcd52fc4ed951e7b4c27c622598171772ccef8a36165",
                    "sha256:3210fc4b3b794f623f4b3837fcbcebad9e3adba01d8fa61df99a9084ba3f01cf",
                    "sha256:bed1b26fccfac78957daa62b394a018842c3930fe20f494ed56faf92b5055dab"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:22.570269381Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:39.799070348Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f60673c303a98b4e4c676e3403bc1b7cb316335aba1202205188176810494c07 in / "
                },
                {
                    "created": "2023-12-19T01:41:40.098329745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:45.350249416Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:45.350249416Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:45.350249416Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:19.88668639Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.469756976Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.469756976Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:20.469756976Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:20.469756976Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:20.548785628Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.622793661Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.738479962Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.747877063Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.756409Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.796185339Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:20.796185339Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:21.389329746Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:21.50701353Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:22.465590997Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:30:22.465590997Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:22.570269381Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7a6d9d2cc833d8f60d28a82073623d22ce5ac0781bfe3111af9e24fbaeaed360",
                    "sha256:ba46c9028aa7674523e38ac780676a3076306a397f02a421eb21a348f9bd2fe2",
                    "sha256:1ff8a9cf2891cfde0660f8660adfc23770420afade9c26788dc7a2f0e6cff5f5",
                    "sha256:86be0f974d3e3fe0a5917c4ebbef38d2ab10b3fbdaa77cff64542bac9695a442",
                    "sha256:8cfd72b823a6982b9801bf8e93cc7bb963f0d6eceec2c2a77e1f9c908b8d3cf0",
                    "sha256:888e1ca85508d079641196f87819357e9c4123d69b9e96b74c48a71ec750cef5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4b4487904f0bd97cae16bf2303d03e93919b2f4584e94d28b6dfcbbf046b191b",
                    "sha256:6352f688e29cb01b59680ed8bb1ca7fe5ed62b740c8284d5fd5385ffc13bf8ba",
                    "sha256:efb425c6768f2365ee09041df09964fb1e0ee52137157a06b35881b74020d488",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0b2ae898a37ac25f4d831c9c3816614aee65125625ed0dd7a32dae2e24fbe019",
                    "sha256:7eb55d30de4bd00ad26669e18675fee9df1783cf878b33ff0773608f6e9f2f01",
                    "sha256:79d3f4b012b91a9606fa2e3a829b74fe14488cc7cff934f7494a8f8f451fb690"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:21:55.328358395Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:39.799070348Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f60673c303a98b4e4c676e3403bc1b7cb316335aba1202205188176810494c07 in / "
                },
                {
                    "created": "2023-12-19T01:41:40.098329745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.075203686Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.075203686Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.075203686Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.069961947Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.643835848Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.643835848Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.643835848Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.643835848Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.738752729Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.816608091Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.923412005Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.934806877Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.968250381Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.979196431Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.979196431Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:18.528439354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:18.648690815Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:55.221202921Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:21:55.221202921Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:21:55.328358395Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7a6d9d2cc833d8f60d28a82073623d22ce5ac0781bfe3111af9e24fbaeaed360",
                    "sha256:5c7e1e272f19dd29f9f46757a7c76a894d654dc498c4d847f806d17b944a0dee",
                    "sha256:b2d052daaebc4d1bf1f6b2f4020caf7145ecb5529c92620ac13b49a66590910a",
                    "sha256:69a5aba8ec206f81819760e4bea2e093f77093175087124f3812352d69511347",
                    "sha256:818895baff25299f57cedc83cab4cbfc0291342661beb0f861a5a34edb8cd239",
                    "sha256:dfb090e17c7a0a34d9bcfbe267ee6ce3bb49f76d405a99379d0a5578df422ae3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bc04aafcd62dbd3218ecc8df7e6987eca747f3ba2e678e92ac4ae49794fb2e72",
                    "sha256:7e55cece18e33523cb26737a8d62ffbba864a0bafba8f5146932ce38f532be09",
                    "sha256:b040c6a579b8f9260cb98130cb32ce2e2f5b7851cb1e50c314cead14c9dff101",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:681de681ae2dda038cf895625f7585829a3a6de7a51f6890750b6b0e4ad18ed7",
                    "sha256:57bc469aceca9fc73967a8a3a891aedd2e2cc80673404eed8b080c2f9501ee17",
                    "sha256:268647e38760adf4487156e72fabcc53669c7e6099932c60aa3fbb3946476c0c"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:20.728656749Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:39.799070348Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f60673c303a98b4e4c676e3403bc1b7cb316335aba1202205188176810494c07 in / "
                },
                {
                    "created": "2023-12-19T01:41:40.098329745Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:52.663484882Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:52.663484882Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:52.663484882Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:28.519195181Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.57580957Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.57580957Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:29.57580957Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:29.57580957Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:29.652350826Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.732008111Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.847937493Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.856529027Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.885941565Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.894080725Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:29.894080725Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:30.480265417Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:30.609538155Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:20.623100282Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:32:20.623100282Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:20.728656749Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:7a6d9d2cc833d8f60d28a82073623d22ce5ac0781bfe3111af9e24fbaeaed360",
                    "sha256:3972a045f3866b7456b0e94a9ab4c870706dceab1e16236e834cee1d9fbd1630",
                    "sha256:18dec0fd1e834501b7d2f138843b6fb5b57160aee0a24c3e92fccf5da2db323b",
                    "sha256:13d006a7b7882ee42d1f19cf794c4193a16b5931b2893a9c9155a581d62afef5",
                    "sha256:8cfe72fd4573263941028461fcb59095d124ffc7bda51117a3d8c2b273d88a9f",
                    "sha256:3a22e2e4427c0fd0f15a64bb92f6ad1758a9af281d827ec8b4e6edfab18c299a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b936e5993fa53c82e5ab880ce782227c9cdc3940fbff37d2826d8bc34605b022",
                    "sha256:108143e801bbe691a90e9184218a587e75855630431edb4ce93138fd99b27fb7",
                    "sha256:483c521f9cdf812d79d1090eb69b48450597de777c1939f10d16bd29c7d394b1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1796eab314253027fe59611b94065a80cf3f8f8ffe6f3aa2cd4ebfff782c0311",
                    "sha256:e40f8886d83ee0a4c0f0671099f0d803c53b2f66637bc3b838ef7855ccc0ce53",
                    "sha256:619d4274ddaa6d8108f67f1df23720a9f85c91513ef7ac12d363c83f3b80f791"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:03:02.418638164Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:56.988274449Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:de90e50e142aa92c29d5128e1cd025fd5c5b91f879a19a06a8b49451a4e6afb9 in / "
                },
                {
                    "created": "2024-01-31T22:44:57.403511419Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.026349614Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.807489748Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.394944151Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.478585285Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.556229271Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.68311975Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.712162198Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.763984121Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.772790466Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.772790466Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.381935653Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.506598635Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:03:02.313108492Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:03:02.313108492Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:03:02.418638164Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9d885bab887af47b9c3317a8a0e9e9af888daba2b6c8434b01c923eba48482c1",
                    "sha256:235b27c5214e3fe2bf3908b99eeaf3944e9db6c30afae6739c6e7a1ca2d98428",
                    "sha256:9bf4ba3924a9c7e50df5c96156314f1d81683e8bae5a096710f1bf4f89f966c3",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ac35dd0c10fa3bfaeb1b0539aa6073cadb37522da44b0ca385cced25649dac09",
                    "sha256:a8fe42031a9a0382755bd09b3a56a73a6a20c0684145c1b27db24eaee76e9c33",
                    "sha256:dc768cc55a37c95171083ebe681d0e8a4e628131e13efd6ffde2d652362dab00"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:34.234573436Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:49.5791897Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:56f9fb4bf0b803f4553b7fe668c34676467e662e3ab02af10e815a93ebbde1d6 in / "
                },
                {
                    "created": "2024-02-13T00:41:49.91043912Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.185468205Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.185468205Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.185468205Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:33.341738469Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:33.97399776Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:34.06965774Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.148051312Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.255785689Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.265654245Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.283258079Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.311215271Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.311215271Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:34.921396647Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:35.056925015Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:34.142182723Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:34.142182723Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:34.234573436Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1d7e79c78824d3d36e78d14b1c53b639ec71e51d619cc32e58087307c7302b08",
                    "sha256:14d1b16b913edcb6e374ad911eb8a78c95fc068e5a679810dd57abc6253eb4fb",
                    "sha256:96ab9d2c17973eeef04268583375793e136fafd5eb03eea349b25f42616df5ad",
                    "sha256:5d3f391e169dbaca51d1a3a645fca5eecedfe8bfbd5180553be4546776a47ec6",
                    "sha256:aefd933866e4321e224ef844e38f5adf5a8887aaf4a9eaa98a656554bb7ff8a4",
                    "sha256:1eab6fb8eb3d730ae5093688afa5ba3ab43f046408eab222d027b66f502df98d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:398934f37feb07325fbfff2a1f0904f40919bf8d63582ddff8f1600d93d4e0a5",
                    "sha256:e9ec797cfcec4be78cec5aac408134f03bfa55c194fb540201a3d71425e896b2",
                    "sha256:705ae3611f17b2fb0cc363de116e17074a27187b8a3155e1f2a589a6f383b461",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b561a4c5da54fc916c73fa182d8dd0eb904033e917d66d4682cb445ecdddf42d",
                    "sha256:c27f6a43a64cf21f3444117499115398cfc2e3b1828623f4d2d60aa0c6be09d6",
                    "sha256:f435198d3345d2bf89a41e65d291b097775694dcb952a5823002c7d77702519a"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:14.888588544Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:49.5791897Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:56f9fb4bf0b803f4553b7fe668c34676467e662e3ab02af10e815a93ebbde1d6 in / "
                },
                {
                    "created": "2024-02-13T00:41:49.91043912Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:53.398035992Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:53.398035992Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:53.398035992Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:31.92811446Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:32.91661611Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:33.001212821Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.09994039Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.213963358Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.225289874Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.25981882Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.270035018Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:33.270035018Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:33.96930786Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:34.10268171Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:14.783245568Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:14.783245568Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:14.888588544Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1d7e79c78824d3d36e78d14b1c53b639ec71e51d619cc32e58087307c7302b08",
                    "sha256:959f47d59254072ce02e886b00cde7d294b2d7981aa4984cba5288cad830ba72",
                    "sha256:d17c410fa6f698a182a45cc74212055a61b521874fcef1af2f39e341ba6bdb83",
                    "sha256:0cd206a03975038b1b7bb7dd5f9cf4daac0a33a8e97a3939383e637e9a1be45c",
                    "sha256:4a9d5e6ecdaab0bf5d5768ff2bc1c0c7afcaab2873c4405bcad103e0f1e2d952",
                    "sha256:891fc4fbd97a494a81189d0a395580075c87502de3c65992e66ee690a6b370b0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:122e109ce76a1397a3342083493ebf205d24923cce42dbc32cce0516dd64fc7b",
                    "sha256:0ca013a72afe6ffa351b48a50a76ec9cf4bb516aa2cb125f4d20af4d57a9fd49",
                    "sha256:f9e1994a5e113cdad592781be8287712029653c9ddb1c9122c6422cb7128f3ee",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:27cd25e8c7f418d7b31d552410b9319e3e873281224cb5bef4e16b86692d65b3",
                    "sha256:5b4b46c38303863bc6e399b72c7864ecaaee829b213b02798757cebc71bf7d2a",
                    "sha256:4e926f542d92f9bd637ce9615fa00f8f5d206c410541955269006d17a290630f"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:54.746168575Z",
            "history": [
                {
                    "created": "2024-03-12T00:46:05.707971696Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:01e6303e5bd3d7bb8200a616ab1d931421cd756c837936b3f897727814cb89c3 in / "
                },
                {
                    "created": "2024-03-12T00:46:06.078462584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:56.76409807Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:56.76409807Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:56.76409807Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:35.720788962Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:36.253748024Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:36.338217232Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.432805206Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.551892522Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.562123104Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.604765219Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.615520541Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:36.615520541Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:37.159112058Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:37.282597476Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:54.645159109Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:54.645159109Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:54.746168575Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07bbd89cd181761fde72ddcf9318c9871c105da00bd52744d7437907c33deee0",
                    "sha256:960983cc0a3bb2f61698359bb8f9cbc8fbd2766293219d50b4354eefe3c4d3e7",
                    "sha256:29a6bcb6f166ef3ed97d319b2e9bf37a75f247e5ca1e5a847bf50ef37d9777a5",
                    "sha256:3c33bf028bcdb28b31c820c9f35fb1227bbcacc496899206b89ec914194e8cc7",
                    "sha256:c9a6c8eb8acb5842ce755b08beb4b8816f965da772c45a1f95641bb5fbc19086",
                    "sha256:95fa78911b8769bf8a9394cba57919630c544b1f8194fe33896cfeb0baa8c657",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:809baad34543e9ce78ca187c6bc44c7c886cd13966040c3350522ebd7b57c55d",
                    "sha256:7603ab81332aa002a982a0ad5a3890b62a9b0836867b7d6c5a0a9055784409d1",
                    "sha256:76772dfe739308052c1cf53ced9def39c4631cc633f8c9d7d33f4c120220479f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c58a19ddc1136bafacc7ed08d32fbf9722ffc37b641b7f79a35b9e6234d16938",
                    "sha256:f63b4d2199c001d2c359fe6cf92f989d8adae8c97bea0407fe0a3a6be55d59c0",
                    "sha256:909b9a35b6bcf8bad8bbafa1d9e783c684db4520b453b76ba3fa27b540358466"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:06.753727563Z",
            "history": [
                {
                    "created": "2024-03-12T00:46:05.707971696Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:01e6303e5bd3d7bb8200a616ab1d931421cd756c837936b3f897727814cb89c3 in / "
                },
                {
                    "created": "2024-03-12T00:46:06.078462584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.01815645Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.01815645Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:48.01815645Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:26.479258758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:27.354792802Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:27.43638791Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.531691693Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.649243392Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.675293651Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.723390648Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.7355834Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:27.7355834Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:28.34054638Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:28.467024475Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:06.653787018Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:16:06.653787018Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:06.753727563Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:07bbd89cd181761fde72ddcf9318c9871c105da00bd52744d7437907c33deee0",
                    "sha256:8e273a8f93effd59553a4a31f5c7229ec2e16e01444284ea97daf932ab9d0d63",
                    "sha256:8c0566b447b5ec12362ff50ba0ce88967215d95b7e9f2ad334c603ecdb8435ca",
                    "sha256:7834afd8a758b2941d565a3592f4ab65a4cd2de41f19769132d0e357e882f15f",
                    "sha256:b4ea6ac278174f2a0b223d3ccc6a797ac2f091da944936e46544b1c48318f459",
                    "sha256:cd2b62f7a338d065f76532c443babf37cc00b3a4963490a61293cc4ef1ea743a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:60ccadccf558f03e50caaf1f2a9d6d741d20f83c71e794e1a9241c6f2315ee5d",
                    "sha256:9f919f5997f4e9927817d9b057abfd137f52c6764c0cada86333097be36d4c28",
                    "sha256:0a531293b84afc04eab37e450f83f367919d1b6a7215a0166673c1684ffa35e1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2a4df97b13cdbcb05d806c48aa3c03eeb9029bbabc4129c1a532ce09894fe13f",
                    "sha256:47dd369c0039a631dc68ef031f9b8b2389efc44b60f1d0a393d4ac0c0be89454",
                    "sha256:002689cb9979d1a8769861e708d2bc1eb56c93e44ed8bea2330951ea2ef9cc73"
                ]
            },
            "variant": "v8"
        },
        "buster-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:04.776356372Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:06.74670097Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:bd84662eb5c566f361c169149ba683475c50ddc528270daf67d40c8e98ed12a7 in / "
                },
                {
                    "created": "2024-04-24T04:11:07.11563544Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:44.120867515Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:19.638450997Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.474971276Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:20.549934048Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.629066055Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.741959901Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.750514997Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.758506762Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:20.796553312Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:21.457163607Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian buster   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:21.592600612Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:04.670252287Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:04.670252287Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:04.776356372Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Buster \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:dccc8e6afcd181b24eb0b68b1c1381436dd209e768d16a34564ddac1a3fd75c9",
                    "sha256:39ca7c242be0ea6bd197d83f318c319ec9339c72dd98edd9c6be27f4c9a2336b",
                    "sha256:c5516df564cd16e10d84cf5d24b64295b1ecdaef53f8f05bea94bbd390079ae1",
                    "sha256:a549fc4249cd27572a3b3064ea14b8e909a07cfc4e9dd8d6d39100579978c1c7",
                    "sha256:716a0add12a51c3e2bd20c03b488420bb169916ea5bfaf23453afc7d132a36c9",
                    "sha256:38d69d87aac50f95e6e1c9017ed000b305bece9f2c7313144d743a110d0f8ec0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:81404df39f5b136b6e8202bc2ab80a602f8a862a0fefd3310a9f63eebbd22ca4",
                    "sha256:20b495f7e8f7f614a200a027bde0ea84be7f4242950e1e64726fba48678a1806",
                    "sha256:84668ead4d5526ea42d74565244059204af40d4212d6e322562285628824c139",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c67a9035c17fd6b4f86d70ce1ac722142ed08ff01a980a623ca86a2249de75cd",
                    "sha256:4436e92d1d917b486e047f5bba3586ddd2ec80e20cdb6d1e12181fac9bdb9bb0",
                    "sha256:5d87a44ace856bcec498e029030d6107cbce4e31857dcccb0b46d2240f6e7850"
                ]
            },
            "variant": "v8"
        },
        "latest": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:13.281889517Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.176020238Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:13.176020238Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.281889517Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:6f2ebfb6fa5d8893e5bb258b80c5e32bad83feefed5c3d1505abe94c6c5414e0",
                    "sha256:24df7471595fbb4285ff34fc41a7d1ec57f6b4864230da6e39b91db98edfee50"
                ]
            },
            "variant": "v8"
        },
        "latest-20231025": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-10-25T13:36:09.420556221Z",
            "history": [
                {
                    "created": "2023-09-20T02:44:28.274078277Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:024479be439b4ecb37c939e68673adc72955f3345ca0e809bd13e897709e59e4 in / "
                },
                {
                    "created": "2023-09-20T02:44:28.657109179Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.858080788Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.858080788Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.858080788Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:57.7977819Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:58.988569739Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.089168973Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.248690513Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.263148961Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.274898882Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.292459562Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.292459562Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:52:00.209049083Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:52:00.377606115Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:09.268211703Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-25T13:36:09.268211703Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:09.420556221Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6c9ad649ba0489961dd64654574cc4134f9eed47c0be4524747da2f36f5dbbd0",
                    "sha256:b08019ccec097cb7e2d80a5a373d089fb37220a87c451e9677f21788a63ab9df",
                    "sha256:e0c742e70e226c5b515d773f2f3006d09f5d14fa46ef55db6d814b2d23376fea",
                    "sha256:d9c4546ac125486649b761fe5a6f90c38596e55dda46184f1f74e8181e280683",
                    "sha256:0ae6b9f93d0a321b28e66dd6bfcad103863c464397390bd9aee58dfe74c6b505",
                    "sha256:8d55be54b11efc7d91f4661764d70c84e0a707a7b3b4fa19794fa7e02c480df7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:181ae62c3e7c3ccd2ccc64cb4ce71975047ad32a06cdc919350115c21db5d2ba",
                    "sha256:8e98c7c789b19e4ea0845c3a83024108f2f6cb5e9c9e6e3dc78fe5640c548467",
                    "sha256:ff453fa1fb8a27a41215bc06494cb580e0f5c757ce4131f234e487d5fe9cb80b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:731889e3703c8c970984ea7eff9c585c06eb8969faa3419294996530a395e2fa",
                    "sha256:9b3c66a964515f327e9bd99a2f6feb12d32c87f72a24caccbe042c8fa1557114",
                    "sha256:dbd2a7ede00626339bb5e770f75c64b10a367f4d162ea82905f4dc4c5120c61e"
                ]
            },
            "variant": "v8"
        },
        "latest-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-07T07:56:32.721935662Z",
            "history": [
                {
                    "created": "2023-11-01T00:39:55.82247244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:99dc83e8bb8c67d9179a265fb750c76f73fa660e13e938b6cd613be653cd077e in / "
                },
                {
                    "created": "2023-11-01T00:39:56.253202489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:03.822317888Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:03.822317888Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:03.822317888Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:16.734944758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:18.114597076Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.213178797Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.362163263Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.372736882Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.383037997Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.40658476Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.40658476Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:19.3490972Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:19.509541994Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:32.585155369Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:56:32.585155369Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:32.721935662Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:60df532890c9cca1c175cfea286e7bc7d79a2f79592acaacf5fefc399ea9c569",
                    "sha256:e56f69cd0dfb229f9fd1407fbdcbcabe5b800ac5f620151bff8b5815cedc33ec",
                    "sha256:3da07ba74a1afe2b9300064007f6be2da7dcd8abff93119dc8d93e6a21602051",
                    "sha256:19e728986e1702d927d4208485c46bc397e5a8eb5822011ce8f95c30b6a2f198",
                    "sha256:8a49b7a43e9961d024710c4ddb502e0faf5fea4159963cb6e64fac3f529adbe0",
                    "sha256:33c493aba170663dcef60484c47635c490858499f11402fa7a235b50b64456dc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0ae003343d02224abfda090742390a33faee92ee2ba48d959e820659850b5d2d",
                    "sha256:7c541fed31d184a7f501c31741d0a27601983df8133f6f9cee1f1d0c23b3de2b",
                    "sha256:94f7179c895cd2821d04c1beb708fe27ebcc62fb0fce3aaaccfb3c061bcea59a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fd6040c95d6d45c2ad435c51f7fab05be21da3bf9a017d58e48d4d8e5bf5b3cd",
                    "sha256:00caaa193ccd9b79db01a53d77f0272ecc3981f709232a538e1758f2f637646b",
                    "sha256:4692c5419fb6bb870209ec7bbf138e68402a6ba95acb703f13e2acaea7b5c330"
                ]
            },
            "variant": "v8"
        },
        "latest-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:22.276834456Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:58.664127799Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.465195557Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.565496734Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.70470318Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.725314262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.734132316Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:09:00.452678113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:09:00.595471645Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:22.146341921Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:39:22.146341921Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:22.276834456Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:29c36ff94b71964100e213981142e520295b15626ed1879d99c36bd5475b76c3",
                    "sha256:6397d8e27bf4ad223bb62f7601f9a3621abe07e88e09b18ee1bda45f9bf57c6b",
                    "sha256:0ef0a058e815346f39e1ba03acb0a4a422c3b87e58fc08bbe1ba4451eacb40e5",
                    "sha256:d16b22555e3d20070c2841ee0429a7e3a11588536c24a86bb6cc689ca3c5ad04",
                    "sha256:d374c74ae31322409874a4a485abd512f03004938dfa1c7d3652c3fe9f9fd673",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0cdb1b92cbde3db5db232bacdd380b6078b8c4d0b02b6e7e44891d443ae4591f",
                    "sha256:7e2f22a4da908c29da27c98aeb4d9505c91ecd820f78243c7054d9229c13d30e",
                    "sha256:8658137ac973bebf78ffa2c27c9f3d7e1671d22d756b393fdf75d11afab0a398",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9982a6f0a6244d57c31563dd7bd54e7f0bc3227a7db2aba3321e9b2fc17da0aa",
                    "sha256:f986708a8c3fcc98685c8845af5cb2091fe6baebf4d0be17387735172b37d4ef",
                    "sha256:125659da938ed144fbbee11c82eaf60f900232ddc3f144fc9b6be7c1ab6e0f77"
                ]
            },
            "variant": "v8"
        },
        "latest-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:10:40.032709982Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:14.626506753Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.296969131Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.407547863Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.541071217Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.550355412Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.558824236Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:16.132254001Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:16.278960973Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:39.894277473Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:39.894277473Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:40.032709982Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:ee15dd3b9b4499504e15f776e985d6d6db85d02b2af28b58e0f6840a5611ffda",
                    "sha256:3cbf5bc1dd090798d60651ba9d8e5266744467d3942b27b8af9aad2fc6eb3d94",
                    "sha256:d64e3c8a34df828f9d322c1ad2571e1c690ad3d89848e9d84abaf02dc6f46d0b",
                    "sha256:90b090bbe57ed39388a1a1d27301bd521b19acbdaf63cf04c2344039fcdb3ac2",
                    "sha256:570d5cbcd38bac7a16ce13ae8fe4232ddf645709d832e69847ce9a3b3c4dd8a5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:86fc17d12f1d13dbe119209636876d35dec06d64ed19553ebcc3efba975b7b3e",
                    "sha256:13be287764da1f3fc3368a197eefd1344959dbe6a329e8fa4e2579f7026eaaa7",
                    "sha256:ce6f79e8950a46a4564a5a5aaa489dcce75c1ee6490661c3a5b008cd82481bae",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0a7c9edc80c512f510d67fc94d27e1370fdd408b3ae2867c02e0f583401a4d7d",
                    "sha256:6bb9cafb5e209a8cf07a0767d8b36a8299265b599d567386d904ef56d9546b3d",
                    "sha256:0cb3038a33e0a1202e668333ac150f1a85c9eb7542b7fb22867e40631e15b408"
                ]
            },
            "variant": "v8"
        },
        "latest-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:27.486010176Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:29.555242312Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.824526678Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.900951309Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.038705894Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.082582927Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.092267272Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:32.003177354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:32.125502794Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:27.38589354Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:30:27.38589354Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:27.486010176Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:bb6ae9568bab1557dbc3d0cb8316b7966b5aa7167c857ca6a0f3f564fdf87436",
                    "sha256:d0629d243e2fe6f305c71e391ff1739374dd4b8690415fa9580f1748a9a30037",
                    "sha256:a7c6b7a4f52829976762ad6a7fe7ea2366efd1affdc49a9cde65f5fd6388752c",
                    "sha256:99ccf9bb9c67f6d195c8614560587213a77feed85322c61f75a3c3b05ad02031",
                    "sha256:74b04caea3985b1e073cadcaa10cde033dfa3b97d3466a70e4333f5397f52cf9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:35c7e94083902da8d7aaa7dc09f3463588f11b349a5f04911657c96fd7679ed0",
                    "sha256:4d18e85f41ab5a46df0ca30aa473b2caf4ecb6a139678cc81f4bcca1ce2d7101",
                    "sha256:cff8c27c938f8613028b601b55db7bc98ee912e4fb47f73b67ef2c8e3c5902d8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b799a7e836857253809f557ef671537afcf47292a93e5a3b1b4fb24c57368bbf",
                    "sha256:77831a5aff08f46e4ee5d6114092b6bb0a017575658f76b9a61870231d0ee6f9",
                    "sha256:25a3d59481b1110d7abb32afd59cac43c73b473d451b1cff04ff47a526431d61"
                ]
            },
            "variant": "v8"
        },
        "latest-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:01.134351349Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:15.467501006Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.126208035Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.217017231Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.338788671Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.34938903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.360698393Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.10770263Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.229328657Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:01.028169707Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:22:01.028169707Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:01.134351349Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:01243642c945e579c0451a3a4d955bd4641e99c3be13311d4b167ba8693d062f",
                    "sha256:2f80d37556a1de5f09fec2daa7e0fc3e155d3521c833adaac5feede306196d7b",
                    "sha256:f89c52ebe0e3068a36445b6f944e2db340bce429d32fd7240b30e851aafd0fcf",
                    "sha256:a1aec53fe6fef2f29fd75283f3c27743f8500ac14efb26ce2f663c7844c42987",
                    "sha256:6e5cf0c7469ee5ce96e578b5ce1ae0633c328b13528b5346393fd9e31eaaeeeb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bcba603767ed25ba528e8f15a859e907b1e72fedb01a388537532d92bb0b9dc2",
                    "sha256:2e7da9139f8e1d258d5851ddcc7843e3dee1aed7e3cbbb0d33ea5e4787014c43",
                    "sha256:9c94701d7ef86d3d9234a468757ead3d8b56f6c0909d7034f57d0c0b935cea87",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:21899b3ce1344861e903bb14b2efdd11b565a59d6ce5807af64ec376e67ad7bb",
                    "sha256:de6a37085e57dad5fc42cbe91f200fcce2ff1525e6ef50c03689e972b4386102",
                    "sha256:c29f860fc079784e30e2b1140b222e49d08ac022d168fb3782d4ff55f6eca9b2"
                ]
            },
            "variant": "v8"
        },
        "latest-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:21.098183689Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:21.741125507Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.517492269Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.594603603Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.697980042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.707177419Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.714737325Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:23.451931585Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:23.578406313Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:20.989215513Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:32:20.989215513Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:21.098183689Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:7a95b560dc11fe5ff0559d2f6537c1efc83ac7aaad51b45a5917e009c0c06f50",
                    "sha256:f6031278a7707d1a6e07539ea7605f5f23152b27e222e41b6ae7de3e420b1ea3",
                    "sha256:21a99779a9767f9d83a5c911ff51d8913cf9d14aad33222a637f2e1d35a6e7c2",
                    "sha256:b4a309d2fce81e65a4957fbddc32a36ad3270ca8af70ff8b4b7b8036dd32cfd1",
                    "sha256:9fa7bf55497b544bde5f87788625c52fef31cd9a358c938fcad8e8c28654d184",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:77d57246a64bbe2f4f853d61f11398dc52b60dd9c570783a62321f1ce29d4412",
                    "sha256:8fbecbc914005ea0fdc87c421d160c414237e51547092ae9f58eec8659798ed4",
                    "sha256:617f6c14453696a372688649e81a54ddd9dc6290525c211a3c5be2b03141291f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3f41648683764f9b2f994bf34f3da567cdb788fb3004028ebced710d86f368cb",
                    "sha256:f200cee6f4fbabf8e69e5a179c7d425dee37e0afd71c343172a4f9e34918fda9",
                    "sha256:f52ca34206c81f2a436344e9a0948e1c414abf64a8adf7d7ff16c73bae67b331"
                ]
            },
            "variant": "v8"
        },
        "latest-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:57.897429552Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:57.783533164Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:57.783533164Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:57.897429552Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:fbffb08257a5c92284a41591aaa0b3710e07c8d07d6edc3b448342a0fc8b5b35",
                    "sha256:1c757983748130f1404140ddf3e14288d06d1848d42c7342d75d533d169ccf6b"
                ]
            },
            "variant": "v8"
        },
        "latest-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:35.919065732Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:37.612406454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.235239371Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.327380141Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.444407777Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.455821747Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.489249886Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:39.054577625Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:39.175091463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:35.810346277Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:35.810346277Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:35.919065732Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:3667705b92b777b9857445986385fa3544fe745de824ed9e48b74d48e233a73b",
                    "sha256:a8f393213fd8f42444b9081c3d25da37b97dbec4b8639fe0f0e3a7589d5440fd",
                    "sha256:9e491949c039a6555bfc9e8d7edc810a1157e4de0e5a1c481e4a9da99f8dc49f",
                    "sha256:9d1103a6c6fb53d9a95de8b92fef5116bca54e0566ab3c9ba1697738c9c49934",
                    "sha256:34b6b50b96caed9ea8b06be9b87ec63932717d466f5059fcce4e49d0b8b1fe0a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:648567a88a80c3aedc7a65bfa28ed87413bf435dc5a1cb88738e3c5896c0c076",
                    "sha256:03d885cb57438349695f4729f2c71f343028df5dbb15b096c1d538eabb3058bd",
                    "sha256:d10c87bc3a1b034fb2d7a2b64156472e0744796c40aa33beedccda60556fa259",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d88ebe737a29be3e76f6b02f3591509f373fd4b840fb08406f33169dcd0cd78f",
                    "sha256:48cab8f4281636a899bd689974b153a1fca219fe12423b0c24707409e719aeeb",
                    "sha256:6651233a11f55b902e6e420f598dd42c27d10e98cc21e0c31d3fe5419b132e9f"
                ]
            },
            "variant": "v8"
        },
        "latest-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:11.481917014Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.151462719Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.83609249Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.924579316Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.040114112Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.053934176Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.066241153Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:19.805586345Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.93208375Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:11.383908462Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:11.383908462Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:11.481917014Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:0f12b4245fa0a3cc547f2a1e523735b954a9327e222c9499e29df367c992fc25",
                    "sha256:e718ad40e3c90a1cd1ecacf3a26fab120e1dea3923670a16a4c8ca50b6aa9d15",
                    "sha256:94c43fe224b59dec6cae014ab2c49387ad78dc326e460a610de6fc06495c0c1e",
                    "sha256:fe063efa4d53e9a11ecb850c83c6dd1b8b9cf17ec889889f949361d332a5b185",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f767c7f76af4a12cb0e1199b0fc93840a3e5a2f502f98489563422b710c7c82",
                    "sha256:eebaafdb21b5c124a4063b6c1f0639260a303dd72ba00c9ec5ad78515f70a2e1",
                    "sha256:8c39f39f8c6773437573033b4459016bd870d9bd6b9034b07c451bd5a636ff53",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:88062171c3eea1172e399dc542b1a51a8e61572ea372e1516f5b57248db85766",
                    "sha256:9f9f9939f4dc2b1ea2b23e3fc7a7627547fe4771b5e60a57cef4abe19de95f0a",
                    "sha256:54ef0ce651ff47e577439a5a9ec24b5dffeb4a31cc2ca15967214aba59b89e1f"
                ]
            },
            "variant": "v8"
        },
        "latest-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:50.71203736Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:13.879662253Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.586745871Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.670518036Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.790637458Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.799775231Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.830003625Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:15.53078113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:15.644511102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:50.609020295Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:50.609020295Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:50.71203736Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:ed4cf4bf4b8884bdd10c62b3d9f3f64dcad62f08c9184d6e8c4e3edd498d6ae7",
                    "sha256:e3ff77460733b5c70568a050c25cbfbba938cfb55a53dd793006cf80ce8cc1fd",
                    "sha256:769ee8ef4da51e9377ca4f5d7e5b438c1bac43f38546dfe5b6ddb3ae5fc17d03",
                    "sha256:2faf27c705413cfe35a57bebf1d6dc6e5fed15c26b907de4e87eb462c4c8203f",
                    "sha256:c057d9490c0d6264b7858e1b24696718ce0623763d48f86d0eab46db57cc6697",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7333a928fdb22e11f1eb14ab19de0aeece67b74f04ae6800a48f3626b6204619",
                    "sha256:7d1b2cfc6f4a702dbc3c9da3af6ce40ed072aea5b43739a0f749f0f5a410074a",
                    "sha256:1faec101bbd8a81f2c905ae2146f8736e838f567a8b2f856533f8c07e083cc3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1dc00d63c3226fece7e9b01c6df138f48bb6914b96abf29daae86c6c2331068e",
                    "sha256:797ab5c9a9ac54e19dfc51dfee7076d4c2efae77fe13399f77b03f617df83788",
                    "sha256:ac8c0e12ba7892c39161fde7f5b19e2ce12876134e0ab5f0ef7ae50839c51b17"
                ]
            },
            "variant": "v8"
        },
        "latest-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:06.289822757Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.743482327Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.498252335Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.585989395Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.739473042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.787312463Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.797563821Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:22.394772002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:22.511272459Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:06.188737929Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:16:06.188737929Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:06.289822757Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:d04befff2a5273eded40c865c563f0d50276b31e32180679474e889fe080da1d",
                    "sha256:7b0c6c50c04ed7bf4b021ee99132e0366bf6ae4768e6a29e52e27fb6a1569aa3",
                    "sha256:2b57aa920cc2cddb5cf11eac876be5662fcb346e000afb2b1ced7b1295ed5a3d",
                    "sha256:9ad61a9af1dc63ddeb51e6fe9bbc82df2e37f1d0b967166d78ee356b54e2e32f",
                    "sha256:2011ae045dbd2ec46399c6e0e93d9cbef0dc64a181ee72a298737b86a13cadc1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71dc71c4129f2ba46a54c086463f9f61a15ea4ed70e3ad2fbf06fefc3ebda46e",
                    "sha256:46974ccfee6d4c0f3231897a3366bb38c4424b87355d0e626e0ae0d9fa0b7224",
                    "sha256:222ca016ec867e88cf844f487bab87a5460e34afed1ce08d1e7db271a366db23",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2af796bc84c5e90eb57e23c8d3adbf9050db0d14fa44a31e95248234ea6447a2",
                    "sha256:12aef4a7dd4d7aba50b7d32032292f9390c9cf5b0cff1b43ed39b331f27b3887",
                    "sha256:e1012b6262d2135f95d3bcb60bdf6f40c972ba99047c23291ab40da945c70765"
                ]
            },
            "variant": "v8"
        },
        "latest-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:13.281889517Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.176020238Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:13.176020238Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.281889517Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:6f2ebfb6fa5d8893e5bb258b80c5e32bad83feefed5c3d1505abe94c6c5414e0",
                    "sha256:24df7471595fbb4285ff34fc41a7d1ec57f6b4864230da6e39b91db98edfee50"
                ]
            },
            "variant": "v8"
        },
        "latest-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:39:58.680266387Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:16.696930741Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:34.389505442Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.127106593Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.202265303Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.322213113Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.36866875Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.384433538Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.977590429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:36.10345642Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:39:58.599118608Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:39:58.599118608Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:39:58.680266387Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:8118046c0c69be9888f1d9d5a1b51d47233771e8007f0fc1d1568cea72987874",
                    "sha256:6ace3ce5da9d73ad77fff9a9e1ead05c66d546a2638f8e476abc42d746fb9e0b",
                    "sha256:ba5bac65ad77adaa77dd7e72342d46e864399bb8cb963120dce00cd432062872",
                    "sha256:7c9997e72fd0e9c0f80088aa1a8c1e9ec7d5791afc6a1d64bc776e96eebf96c3",
                    "sha256:44867f45243358733796350989f5375d99bd654d3ce177454b689c8a0b5e38e5",
                    "sha256:f8c6334654e615714730d1906c472133f0569d24ad6d225d8e56acb6bad41ccb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f8af0639919c6ea8a3c94e5a9d75d4eb902a69acf123be2ff1eacefdc57e0900",
                    "sha256:b00db75f11d6652467a221628e15d27c9cf656b13d5f39b57d2ae1456c812fd9",
                    "sha256:8de1b58a8c327d1695b4465972be024744539717d676ad520eaf73e2de6c6887",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c4416f328678a4224c0b75e9b7ba68e7ccde5da7a27e3c652247e42d3c8540fa",
                    "sha256:aec65c04e88b5207417f29825ad9e9bb69c66746c8ddb1d24f4193ea35400f40",
                    "sha256:4abba8d2fa04ab0f9da149f38d460f87b2fe6e272ca5b802ce25f39f823b0062"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20231025": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-10-25T13:36:09.464410915Z",
            "history": [
                {
                    "created": "2023-09-20T02:44:28.274078277Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:024479be439b4ecb37c939e68673adc72955f3345ca0e809bd13e897709e59e4 in / "
                },
                {
                    "created": "2023-09-20T02:44:28.657109179Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:50.777379821Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:50.777379821Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:50.777379821Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:52:35.57862626Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:57:58.349581561Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:57:59.873464686Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:57:59.873464686Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:57:59.873464686Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:57:59.873464686Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:58:00.00236953Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:58:00.13969742Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:58:00.306125617Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:58:00.321372282Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:58:00.345127196Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:58:00.36434833Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:58:00.36434833Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:58:01.496070429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:58:01.687852267Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:09.370335011Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-25T13:36:09.370335011Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:09.464410915Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6c9ad649ba0489961dd64654574cc4134f9eed47c0be4524747da2f36f5dbbd0",
                    "sha256:c2ec1e38c4bcabaa778a5f0c88ed8ffc97bb8ce0483f681386606c89deb96045",
                    "sha256:33aa922b69ea06922be97091584047cc2cfedd591ff85fe2d1479be8d6761ec3",
                    "sha256:64308748351afb6f2158b9323380e79ebff955a81c976e4e4af6fb887c5d5939",
                    "sha256:65bf34eabd30a41a79563fe6f5216e4a59a72610e36a402d9dc246b7a8557bc8",
                    "sha256:81b8a59ec4bcfbcbf83ba8eab06a915531f4bf8d450852ea9cc01cb47e7546c2",
                    "sha256:8a9bd8e8a45f4f71f310af475b01f31d5529a2ff2d6a3a60bc6e501dec9cb064",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:03cc0980c67b2951087fc08e340e59d72232f7a6b5c397022861fba224c1a232",
                    "sha256:2d6e7427c3c2c49a4a73503862b7ac566238ca0391198ff8a46a02d7fac95622",
                    "sha256:6acadd3c46f15bbbd32c6a48169f20f931b60734ac188a61c3c63fcfe77bd3c0",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b55a5fa31b83a856f35a73902d376b8b23be4ca4661b4fe4e946270deb6869dd",
                    "sha256:6569d6e17fa03349dc819be7ef58dab0154ff0e1f14fd930fcb92124a3bcfaa4",
                    "sha256:dcb4a26978327ac7c9a5bfa2870f3b2935ab07b480cd890276477f2a4e10307c"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-07T07:56:21.567525055Z",
            "history": [
                {
                    "created": "2023-11-01T00:39:55.82247244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:99dc83e8bb8c67d9179a265fb750c76f73fa660e13e938b6cd613be653cd077e in / "
                },
                {
                    "created": "2023-11-01T00:39:56.253202489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:44.81518649Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:44.81518649Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:44.81518649Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:15:20.056215532Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:30.974177089Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:31.69115062Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:31.69115062Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:18:31.69115062Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:18:31.69115062Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:18:31.811143846Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:31.909836381Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:32.054732838Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:32.064012957Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:32.07454669Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:32.083094128Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:32.083094128Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:18:32.743734Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:18:32.875140733Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:21.481717169Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:56:21.481717169Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:21.567525055Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:60df532890c9cca1c175cfea286e7bc7d79a2f79592acaacf5fefc399ea9c569",
                    "sha256:05e381ad01d458d4028996d057aa5f6e28e50c339b7558c6f5e9f4fab0e2d6fe",
                    "sha256:a45d349c4958365835d509574014b5ab0fba254f58e8ab051f5b22a6809e58a8",
                    "sha256:75260199f5f065940463f6d0f2f8efa24bfb329ab2a9f94c5b664512a54c9178",
                    "sha256:592ecc9b8e0c74765df6eb2e359db11c5b5e91f6a02c6801500af1d885dcd03d",
                    "sha256:f69f22c25d941ae2abcba0327c3248054e016b819c79b17cfc9d394f2e33a51c",
                    "sha256:e2ac2a408b5adb733093691f1f29aaaa9be84b479ca0d2b004929f441f34a005",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:66b76b4a3d37f92399908b09a8cb3b27a9aa205831c424ee9d1f7c85c526e90a",
                    "sha256:45cb1e789667ced88693908617ecdf08f43e1735f9674da87298d4f7b4cca4a0",
                    "sha256:16ad390d9b6eb3c1a30f97d1f781ed5a4da255d74a11d1ef2c44ea096c9ebe6d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0ca227d18f482e081f837e0e869d509eda6c5144190489ab256e6a764184200b",
                    "sha256:e42e562c325074406efb88b6cfb1a9ed93e3e984dce135b82ce18bb4eb9eb824",
                    "sha256:124aac625b8c33bf538f113037b5df0d38d0e01e24e6efcc76cbdf8e59f0c44a"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:25.770406149Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:19.185585151Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:19.185585151Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:19.185585151Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:53.593522423Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:03.578664428Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:04.23991116Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:04.346536518Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.453335285Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.61096714Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.620135356Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.666915734Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.675666558Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:04.675666558Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:12:05.286716179Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:12:05.42797061Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:25.676979411Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:39:25.676979411Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:25.770406149Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:8a7ef35bddc112bc2b5431fcd390b9065fbda13786e903966196fc5dea6c6ff7",
                    "sha256:7cfc8e6c3d60b5caf28fa87975f88f0bce672613d3fe5e43dcba3004c1a241c2",
                    "sha256:095440987c66a3da4b60dbcb1573c3f317725bef1b582527987bcb61232897b8",
                    "sha256:fdc851e31b9f8daca232f41c4331a41ce0b7d6ae39c6934e26b3b00ea83607c2",
                    "sha256:81f5a9a1455c7edc5a2b23fb1d25cf133960a48cca8b20beec4402d4600bdbab",
                    "sha256:5072066d883433d394dd39e61d315d510d65477455d1ebbfbc975661c0e5d6e5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8a927bbd12e93e3bf2e0198bcbd29fc4da974e841b35e06753ebfa5d8497c8e8",
                    "sha256:5f331de56e31b06abd6639a649c8206602181ca42a24e9e5bcd53c8cb0d95117",
                    "sha256:b88d431a371254c9fb9c2c2e740f85d47d78fdd8d630f43f25d2875280155428",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2e76d16263914442ebe25f79121fb8f6e5c3bdb2fa92b42fb0299d85e1ae66db",
                    "sha256:8ca4a91dc44ef7c20cbf1967fcc0bb8d57b528133e9b46fb828827730564f409",
                    "sha256:f436366511e70d668e46029f8089a00d536733410f4911738c33289f3ec1bddd"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:10:41.587469638Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:40.697278979Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:40.697278979Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:40.697278979Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.517978404Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:25.677995698Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:26.685196Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:26.784147927Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:26.885450105Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.00433604Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.013309924Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.021080443Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.029043166Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.029043166Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:36:27.789559574Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:36:27.935595776Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:41.48064894Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:41.48064894Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:41.587469638Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:d1bdc2c7daa01f1a34a743e068fba88eed6cae429a78ffaf1026438559e7079a",
                    "sha256:eac3b3efd93a07317becfaedb2134d2a36d626351201f53287a9549d27fd6b1e",
                    "sha256:d9afa0523f9365ceb09cbe55188000e2926bf566515bb96b22378399794b829f",
                    "sha256:56b8f1d66272dc0cb7dcc0a6c8dc62d0dffe95a4dadca792aea661ffa657e9b6",
                    "sha256:41f19aa4c6a781766a40b89056880de7381f82b80e25e911bed681c262b50808",
                    "sha256:114bbb7284a385061a40b3318241707806b11718e8429d2530403a1e1af396ed",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c36bb5822245b307f3f5cb02d270ef7b054e4c8c0c5a19b9afe2f700e7a0c8e7",
                    "sha256:12c4d981b996ad6f0694ea3bfc642bd029c189166382a03510961af463a6ad6c",
                    "sha256:cc297fa682932c85eb7e47d6065e550836e86b822afa332454fe5f26065d5a90",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fcca4139646935ce3cc12873f462c82729def6262014ec15b614cbdc62973fb3",
                    "sha256:70e91ca319c46451eb73e5bf0e062c658c23b62053c26f68c61a339f327eb9a6",
                    "sha256:719cb5282d9b2fe4099ad166aea600509a12306f2dfdd83ccfda79d6c1dcb1ea"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:21.246822078Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.902423274Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.902423274Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:42.902423274Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:18.48032328Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:29.733050906Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:30.38083857Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:30.46634935Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.552360377Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.683110102Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.743003008Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.754119398Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.765383835Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:30.765383835Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:57:31.344858628Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:57:31.464992595Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:21.156624798Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:30:21.156624798Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:21.246822078Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:81824f6357af09e5f194cb6f6e0be2dc47db7a062fa4a0c78124fbb2b1bf1f9a",
                    "sha256:cfec8dc9675f1e7619cbfb27645cb2cece178566824212487b746a0ede92ffee",
                    "sha256:2724a7dd652ba165ac374bcbe1860c24553c9f3aebff4d66ad2ac127b333f978",
                    "sha256:65a14a718d427e7364a3e89eb98c0ed1a72d6dbfee605a93e7a27e3718ef2638",
                    "sha256:131acd714ec7176998398a67bb88983aec4768336e426a62c5402f4f9b0d4c63",
                    "sha256:c1106c57741bc52e2de61538583d82986fc689e99e5f63e4e5e644c3b547d398",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e0dbeb1c535388174228b102c48591e56d8d448b4ad149c16aaac0a995717a15",
                    "sha256:bd064ab2393e57585a3c1adeb6bb53a305af4fb4403c06184441d4002582d7e3",
                    "sha256:fc5cbf0c19b36eb461d982a340a21e334c2f9cc58516775e307abf559c20bf06",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:617b08cc28ac11075c97b20a72084cc361d5ca3832a625b99b5d9e2f13086af6",
                    "sha256:875ed482ff62e7688962e712d70d85e25d5ae74e07555fa7900cfa8b7324b438",
                    "sha256:e9203a637abdebeeaa1e937ecbb4b7aadb81df43a3afe3ca876331b5db15b389"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:07.806226102Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:54.221921571Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:54.221921571Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:54.221921571Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:29.245783563Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:41.546976334Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:42.193041885Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:42.289886613Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.379547722Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.520074185Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.571982732Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.58238599Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.594172868Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:42.594172868Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:48:43.179794438Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:48:43.297796316Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:07.720307917Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:22:07.720307917Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:07.806226102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:5b97ef633d062667252ac892f9a1ce68a2cb725edb1e0c284cb1770298e976bd",
                    "sha256:790337396924c5628e9dc010d9782d9d5b95551ccc10b248efe6bab82c824591",
                    "sha256:821a76bd989a560faf7bcf222b61bfcaa31aecc8e57b4775fc537133bbea6eba",
                    "sha256:d223892836322619baad183eccbf309657c7860d70afcd305a6042aefd1f5e6a",
                    "sha256:bf6be2c324807a030b5f3ec09ed6c5de269924db993ec3197327ce2954b115e3",
                    "sha256:bc3ee1f23e85c7a98cebf0445864891d0a0498becb1c4737ea1585a1658e5449",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c1f0c0f6899ee6ed82434ec530cd50409a3bfb73446cecfc94ec8348e3f6114d",
                    "sha256:11567a5a2dcda33387d4726465290138c2e2316fffb61cf0e166187db41f12fc",
                    "sha256:c5d5dba74ff3b7dbedd230f49db99e1dd15fb9ebe6f6c9683bb076daa2a9e957",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9cf6e219b3954f213e7fb6420806c6b66a738dbb0f746104f3a939409f5c8fce",
                    "sha256:e82d16ed3324a9557e3b2d342f344c11c46f879d1ec18ec1d7b32997e378fc3e",
                    "sha256:dc2af0d530584e0ee8e3eec0d0a4e1925a78c3eab772f6455c35ab90dbf4e9dc"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:21.23225931Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.025503011Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.025503011Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:43.025503011Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:19.594197447Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.121877758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:32.755778196Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:32.842173236Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:32.925821388Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.038421369Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.048575517Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.058735555Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.102236086Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.102236086Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:59:33.679211525Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:59:33.805687062Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:21.144022406Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:32:21.144022406Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:21.23225931Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:57c54fd382a74bcf84fcb39c0782c665ef25b930d8ffd930798c98cecd5b2f77",
                    "sha256:6a4f4bec2884881d645ed43ca1dbb9618a162907b280048d4ea679a4d769cb8c",
                    "sha256:ea990f59d187379cb7fc6d90d63db1c2bc13645f29665d18a270c086c935a0aa",
                    "sha256:69fead2cd05696e8a1d34b2d74fcfb35a0dc12e2e80cfcf219e9d0eaeac4f98f",
                    "sha256:e55005ed90f3fea99d88c503dbef56615f4128da5a849f869d8dd2e9da61d668",
                    "sha256:1a0474a6ff95afc1337c3250daf4d364f8210ad0a9142e0cabe71d85413c217c",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:de4954d1ae82c61cf470bd812ef6979451beac1b20a7bae2ee7ba13b2cd6bf41",
                    "sha256:526050c42b9c5c8cb4ac7336163e5bc710cdb925839b6a773b884648cf96d98a",
                    "sha256:5f94905656bf80058a4304b82b7ba8c0649a26d58e16b5a354505b091af89d70",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bb9e0cb11ba93b5b05bce4341b4209e75fb04841f7a7f1584b31b1ae21f8a96a",
                    "sha256:b0d6ad417fa5defb05d1bfef38f07f90663edc68abd19560ec66318b1890677c",
                    "sha256:c82299cb4aed0e6475ba5a15d1b6f6807e9eb8835d11f49b731917891ade8125"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:55.038186369Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.680274602Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:27:03.918436093Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.147151639Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.802766355Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:17.895859375Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:17.980508392Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.112265798Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.14030823Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.15151525Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.163819124Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:30:18.718999272Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:30:18.843510162Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:54.948806232Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:54.948806232Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:55.038186369Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:98a8b5f61ea9c06c6ca5426a9b3fe983826c3213543669a8a869eb06b13ffde9",
                    "sha256:abf88002fbe7341686bbe52b32081a56454a64faf6b1aff81f25e877ea2d1eef",
                    "sha256:cdb57f4820cf792cf321bd24ad74790c4e443c0921841c200c7b4b3c3a80777c",
                    "sha256:e048235ea6afed524c6ffee9b267b41e34b7f5f8f446a015faf4d3a2dcec118b",
                    "sha256:2abfcfd44fc60e992fd3ab15cb28b4a70a6b06ca667cfbf5cc50438649b3e70b",
                    "sha256:4864885d65cc529f1b9ddd924b1142f47f61b3842eae08cc9ef2a3b4af8149b5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:db9b57190ddc50cfcb4e2e0f8d68f83cc68587d069f1d9d7da6fa9d5c9d265ea",
                    "sha256:6fa058d45ae7200f46f6472179d216e73556d98a0a5957f483d7dd0490768611",
                    "sha256:b32903eacd2484f955709867d7a2cb449fbf9765b6b59a8140984e57fc69756f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d6750bce19b22f81e30a090e28a497287094759dbba841d427ce35f360ae3362",
                    "sha256:e67a42e80313255fa916d8ef47bff5ee170ffb4a61d3cc08768de717f801cb2a",
                    "sha256:bb0269eeae779661ababcfc7e52b3c00fe8facb3817261327ec744ba06aa41ee"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:31.608008848Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:30:58.476636647Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:34.852195309Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.038043115Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.692585838Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:47.780304725Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.857536001Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.973909727Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:47.984190839Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.039552477Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.048349925Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.048349925Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:35:48.621429861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:35:48.755642095Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:31.520393206Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:31.520393206Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:31.608008848Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:065c0c8ee90b6a88729dcedeec49c1a8f45ba003549af640e2810d4fc6ff3bba",
                    "sha256:7095239a88b7763efeed9d9b9e966c78d55dc94e12d326381f3118139e438f96",
                    "sha256:4ca5d10fb0a0db28f3e65e6dbf1cdb692555a729a52a09e593e5af2ef4b4506d",
                    "sha256:ae1f08cc91ab849fb2eede5fb48afbeab9fed4053546cae3fccc599069c44210",
                    "sha256:7464529b9f9f9be667fe699f5f15afd6d8b7a38ed1073dadedb0e860a29d4c76",
                    "sha256:4402f591566cbc4f1a643b3ee7806fa2ef88ba4bf941aeb37a165c8682ef904f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:423e14c8252e188d33a5ec559ff6d28ea1a0821f704c1475e338975276f812be",
                    "sha256:b85b0d37ae706ac760dbc383b8ec12bac3bf23e56777b00f4e4a929d7e2b8eb9",
                    "sha256:23806f2c24d9bb5468f5003446742e59aee46f2da7a644c4a87138b489baafd6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:633033d186aafd501aa9434c8d5cc3844afcc5a42062655071dcc140e45bbdfa",
                    "sha256:81d2216bc5c791ca2fd1b8648b6844c0e4dc340bfb8a9246ea2d2a68479905b3",
                    "sha256:1abdf3529c2fe7d15dd26b187d822ea6ef9559ef1ffaefedf732a47325b186e0"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:08.524438802Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:50.004250398Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:26.423694552Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:38.364945598Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.0043861Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.086463913Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.165507188Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.277193879Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.286148976Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.294528672Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.328288018Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:39.328288018Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:53:39.90114596Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:53:40.025798109Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:08.435318086Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:08.435318086Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:08.524438802Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:e99690ff6bdf5117585c68a1f892149696d79cf3ed0c61661f9122e0a88e36e9",
                    "sha256:9a0c2b9b1cdbbc0db2dae309f62fd8631c29412d2f4d46032aa03ed409e35d36",
                    "sha256:0f1d8d6a7257621c084288626d17e7f27bd6147303a5c9158c529e401dbbed38",
                    "sha256:675bb67cb795bbe75be175fb93b12dabbc8607b96623ce313d4666b233f06a6b",
                    "sha256:e86a967f2b4a1e0de82f8149600bda5b07d3cdc443bf2a786285f5bd20df93a0",
                    "sha256:fb4b9b650fe26b6b6160d748da63edf5ac57dd26fcbfe3c63b4e7aeaf1992984",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5ebb16a9051aaf2b8497bbd9fd2f6df2355739793782a531d3de32b7328a50f9",
                    "sha256:767598c00b3c0217baf8b11080fdec7f4a087779a4c9022f53a753bba9092cf3",
                    "sha256:9e147bca8fc5daa8c6f66a786d5dbacbb9e45c22e9dd63e75c05ba9e572f0893",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8a7479558835f4c2f031e76f4929e630796da2c0bcbb6d7d10342c603b21c215",
                    "sha256:193b74179703042ee38fe8cde96f8898262beb2d4acf00371dd1220c77410401",
                    "sha256:abe48b9a212b71b02ad960d8c8fafc2baeb23c6d8350aeeef040f14d25e65978"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:55.313938868Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:47.474814739Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:24.953165088Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:39.889589426Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:40.985998738Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:41.066579567Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.143975176Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.264080976Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.273232403Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.300416726Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.309131727Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:41.309131727Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:45:41.947858824Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:45:42.063596406Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:55.220000137Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:55.220000137Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:55.313938868Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:86b0ada2f7f14805b83f2cfb8ef1f8a73afde8caf6c3f049cc3a11383864786c",
                    "sha256:ebc7a54252402a1816bfc35b5446dce363bfd6c5935ac7904fd329ac20bedc1a",
                    "sha256:a15a838560110aaa53aa3ba5694c4e6892e26f88e6b6d56ee689f97ecedc2a8b",
                    "sha256:571583e4c8c85d43870ac914ded5e81b0379d26dbc0a89f2b103ec5b0457a6fe",
                    "sha256:43f682e9e440b8bb7a3033c22d474f4d2c8e92fee462e107968253af616969f1",
                    "sha256:071f7b191aee9717a549ccbe52d8d7c394cb2751958451d6651e70c115482c7f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b291a6c1c9db3939164fef977dd8444e55920eb727e821275ccc19fd49bf7ca3",
                    "sha256:de31973b5af7dc7fadcaff9255f7cefff4c5748e53a69443662ecb0b5016f899",
                    "sha256:f71149996de278238e180a198943d47b663a52230e4d93ca1f0bb288c786af73",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3e03e0a1d273c844ac66b77716b3e146d11d30bbf606dd7112bff99a367ee4b8",
                    "sha256:a730e990103f1d5442b52e8f0685766fa97943d189d0a181c8740828c3402a1e",
                    "sha256:45af46409fa618e0db602adfafb96aef9d8ba383f03f6ebb559cf153a65336d8"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:03.463316715Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.942201787Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.291405322Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:31.999296481Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.59627212Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:32.6904503Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.771880783Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.881097501Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.892466156Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.930855119Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.942378892Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:32.942378892Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:39:33.515849881Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:39:33.633832814Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:03.368119586Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:16:03.368119586Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:03.463316715Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:56930b5dcad29e3311f6fb04ca615d7972a86bc1605e909dcdff8fd30258d045",
                    "sha256:756ba66bfc98a2afdf1ab75a4b6b4cfd056ccca172e3d8ee22390633659e3646",
                    "sha256:2b2f2eb87ce4100061a4f8f0873e1cfe881db0acff0d960c88765998f5c4f08e",
                    "sha256:9365ffcd553c34ba8db338105ed7643841e549d4ab9d6448ec58b0841352c1ef",
                    "sha256:b7340983b3a28dc104761b6982e5144961574b77477953b0607217311f953be6",
                    "sha256:114f170d8518dede364e1e325271c4f61d1c4f36d6ff064edd93a1069a1002c8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d7f11ca0dbf06b4b9921916c7a573d8d2da3b11a25006f08b8de60cab52656e7",
                    "sha256:3e83e4f4156b585c92569a9d80f258df9d9aaab0b3556c63e3a05e75d52b452a",
                    "sha256:aa503e523bef1a7611c8f0e03c23221df60a969fee09888e9fb791579cda1da4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f342a44a10739dfa4ae700c7f5dd38640608e5354614face55c827e5785bd034",
                    "sha256:090aceb56494abf075770c784017f9ee0ec152e73dcb9a1f7e9964ee3602a6a4",
                    "sha256:d4b6a5f9a5216260a6e66ae9aa0fefbd94799506c58117f98b1a0a3a53c9131c"
                ]
            },
            "variant": "v8"
        },
        "latest-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:39:58.680266387Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.462092976Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:16.696930741Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:34.389505442Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.04645866Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.127106593Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.202265303Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.322213113Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.36866875Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.384433538Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:35.396649267Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:03:35.977590429Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:03:36.10345642Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:39:58.599118608Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:39:58.599118608Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:39:58.680266387Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:8118046c0c69be9888f1d9d5a1b51d47233771e8007f0fc1d1568cea72987874",
                    "sha256:6ace3ce5da9d73ad77fff9a9e1ead05c66d546a2638f8e476abc42d746fb9e0b",
                    "sha256:ba5bac65ad77adaa77dd7e72342d46e864399bb8cb963120dce00cd432062872",
                    "sha256:7c9997e72fd0e9c0f80088aa1a8c1e9ec7d5791afc6a1d64bc776e96eebf96c3",
                    "sha256:44867f45243358733796350989f5375d99bd654d3ce177454b689c8a0b5e38e5",
                    "sha256:f8c6334654e615714730d1906c472133f0569d24ad6d225d8e56acb6bad41ccb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f8af0639919c6ea8a3c94e5a9d75d4eb902a69acf123be2ff1eacefdc57e0900",
                    "sha256:b00db75f11d6652467a221628e15d27c9cf656b13d5f39b57d2ae1456c812fd9",
                    "sha256:8de1b58a8c327d1695b4465972be024744539717d676ad520eaf73e2de6c6887",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c4416f328678a4224c0b75e9b7ba68e7ccde5da7a27e3c652247e42d3c8540fa",
                    "sha256:aec65c04e88b5207417f29825ad9e9bb69c66746c8ddb1d24f4193ea35400f40",
                    "sha256:4abba8d2fa04ab0f9da149f38d460f87b2fe6e272ca5b802ce25f39f823b0062"
                ]
            },
            "variant": "v8"
        },
        "latest-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:13.281889517Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.176020238Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:13.176020238Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.281889517Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:6f2ebfb6fa5d8893e5bb258b80c5e32bad83feefed5c3d1505abe94c6c5414e0",
                    "sha256:24df7471595fbb4285ff34fc41a7d1ec57f6b4864230da6e39b91db98edfee50"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20231025": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-10-25T13:36:09.420556221Z",
            "history": [
                {
                    "created": "2023-09-20T02:44:28.274078277Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:024479be439b4ecb37c939e68673adc72955f3345ca0e809bd13e897709e59e4 in / "
                },
                {
                    "created": "2023-09-20T02:44:28.657109179Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.858080788Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.858080788Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.858080788Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:57.7977819Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:58.988569739Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.089168973Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.248690513Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.263148961Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.274898882Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.292459562Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.292459562Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:52:00.209049083Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:52:00.377606115Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:09.268211703Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-25T13:36:09.268211703Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:09.420556221Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6c9ad649ba0489961dd64654574cc4134f9eed47c0be4524747da2f36f5dbbd0",
                    "sha256:b08019ccec097cb7e2d80a5a373d089fb37220a87c451e9677f21788a63ab9df",
                    "sha256:e0c742e70e226c5b515d773f2f3006d09f5d14fa46ef55db6d814b2d23376fea",
                    "sha256:d9c4546ac125486649b761fe5a6f90c38596e55dda46184f1f74e8181e280683",
                    "sha256:0ae6b9f93d0a321b28e66dd6bfcad103863c464397390bd9aee58dfe74c6b505",
                    "sha256:8d55be54b11efc7d91f4661764d70c84e0a707a7b3b4fa19794fa7e02c480df7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:181ae62c3e7c3ccd2ccc64cb4ce71975047ad32a06cdc919350115c21db5d2ba",
                    "sha256:8e98c7c789b19e4ea0845c3a83024108f2f6cb5e9c9e6e3dc78fe5640c548467",
                    "sha256:ff453fa1fb8a27a41215bc06494cb580e0f5c757ce4131f234e487d5fe9cb80b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:731889e3703c8c970984ea7eff9c585c06eb8969faa3419294996530a395e2fa",
                    "sha256:9b3c66a964515f327e9bd99a2f6feb12d32c87f72a24caccbe042c8fa1557114",
                    "sha256:dbd2a7ede00626339bb5e770f75c64b10a367f4d162ea82905f4dc4c5120c61e"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-07T07:56:32.721935662Z",
            "history": [
                {
                    "created": "2023-11-01T00:39:55.82247244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:99dc83e8bb8c67d9179a265fb750c76f73fa660e13e938b6cd613be653cd077e in / "
                },
                {
                    "created": "2023-11-01T00:39:56.253202489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:03.822317888Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:03.822317888Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:03.822317888Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:16.734944758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:18.114597076Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.213178797Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.362163263Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.372736882Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.383037997Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.40658476Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.40658476Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:19.3490972Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:19.509541994Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:32.585155369Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:56:32.585155369Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:32.721935662Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:60df532890c9cca1c175cfea286e7bc7d79a2f79592acaacf5fefc399ea9c569",
                    "sha256:e56f69cd0dfb229f9fd1407fbdcbcabe5b800ac5f620151bff8b5815cedc33ec",
                    "sha256:3da07ba74a1afe2b9300064007f6be2da7dcd8abff93119dc8d93e6a21602051",
                    "sha256:19e728986e1702d927d4208485c46bc397e5a8eb5822011ce8f95c30b6a2f198",
                    "sha256:8a49b7a43e9961d024710c4ddb502e0faf5fea4159963cb6e64fac3f529adbe0",
                    "sha256:33c493aba170663dcef60484c47635c490858499f11402fa7a235b50b64456dc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0ae003343d02224abfda090742390a33faee92ee2ba48d959e820659850b5d2d",
                    "sha256:7c541fed31d184a7f501c31741d0a27601983df8133f6f9cee1f1d0c23b3de2b",
                    "sha256:94f7179c895cd2821d04c1beb708fe27ebcc62fb0fce3aaaccfb3c061bcea59a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fd6040c95d6d45c2ad435c51f7fab05be21da3bf9a017d58e48d4d8e5bf5b3cd",
                    "sha256:00caaa193ccd9b79db01a53d77f0272ecc3981f709232a538e1758f2f637646b",
                    "sha256:4692c5419fb6bb870209ec7bbf138e68402a6ba95acb703f13e2acaea7b5c330"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:22.276834456Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:58.664127799Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.465195557Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.565496734Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.70470318Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.725314262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.734132316Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:09:00.452678113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:09:00.595471645Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:22.146341921Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:39:22.146341921Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:22.276834456Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:29c36ff94b71964100e213981142e520295b15626ed1879d99c36bd5475b76c3",
                    "sha256:6397d8e27bf4ad223bb62f7601f9a3621abe07e88e09b18ee1bda45f9bf57c6b",
                    "sha256:0ef0a058e815346f39e1ba03acb0a4a422c3b87e58fc08bbe1ba4451eacb40e5",
                    "sha256:d16b22555e3d20070c2841ee0429a7e3a11588536c24a86bb6cc689ca3c5ad04",
                    "sha256:d374c74ae31322409874a4a485abd512f03004938dfa1c7d3652c3fe9f9fd673",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0cdb1b92cbde3db5db232bacdd380b6078b8c4d0b02b6e7e44891d443ae4591f",
                    "sha256:7e2f22a4da908c29da27c98aeb4d9505c91ecd820f78243c7054d9229c13d30e",
                    "sha256:8658137ac973bebf78ffa2c27c9f3d7e1671d22d756b393fdf75d11afab0a398",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9982a6f0a6244d57c31563dd7bd54e7f0bc3227a7db2aba3321e9b2fc17da0aa",
                    "sha256:f986708a8c3fcc98685c8845af5cb2091fe6baebf4d0be17387735172b37d4ef",
                    "sha256:125659da938ed144fbbee11c82eaf60f900232ddc3f144fc9b6be7c1ab6e0f77"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:10:40.032709982Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:14.626506753Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.296969131Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.407547863Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.541071217Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.550355412Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.558824236Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:16.132254001Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:16.278960973Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:39.894277473Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:39.894277473Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:40.032709982Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:ee15dd3b9b4499504e15f776e985d6d6db85d02b2af28b58e0f6840a5611ffda",
                    "sha256:3cbf5bc1dd090798d60651ba9d8e5266744467d3942b27b8af9aad2fc6eb3d94",
                    "sha256:d64e3c8a34df828f9d322c1ad2571e1c690ad3d89848e9d84abaf02dc6f46d0b",
                    "sha256:90b090bbe57ed39388a1a1d27301bd521b19acbdaf63cf04c2344039fcdb3ac2",
                    "sha256:570d5cbcd38bac7a16ce13ae8fe4232ddf645709d832e69847ce9a3b3c4dd8a5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:86fc17d12f1d13dbe119209636876d35dec06d64ed19553ebcc3efba975b7b3e",
                    "sha256:13be287764da1f3fc3368a197eefd1344959dbe6a329e8fa4e2579f7026eaaa7",
                    "sha256:ce6f79e8950a46a4564a5a5aaa489dcce75c1ee6490661c3a5b008cd82481bae",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0a7c9edc80c512f510d67fc94d27e1370fdd408b3ae2867c02e0f583401a4d7d",
                    "sha256:6bb9cafb5e209a8cf07a0767d8b36a8299265b599d567386d904ef56d9546b3d",
                    "sha256:0cb3038a33e0a1202e668333ac150f1a85c9eb7542b7fb22867e40631e15b408"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:27.486010176Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:29.555242312Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.824526678Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.900951309Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.038705894Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.082582927Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.092267272Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:32.003177354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:32.125502794Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:27.38589354Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:30:27.38589354Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:27.486010176Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:bb6ae9568bab1557dbc3d0cb8316b7966b5aa7167c857ca6a0f3f564fdf87436",
                    "sha256:d0629d243e2fe6f305c71e391ff1739374dd4b8690415fa9580f1748a9a30037",
                    "sha256:a7c6b7a4f52829976762ad6a7fe7ea2366efd1affdc49a9cde65f5fd6388752c",
                    "sha256:99ccf9bb9c67f6d195c8614560587213a77feed85322c61f75a3c3b05ad02031",
                    "sha256:74b04caea3985b1e073cadcaa10cde033dfa3b97d3466a70e4333f5397f52cf9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:35c7e94083902da8d7aaa7dc09f3463588f11b349a5f04911657c96fd7679ed0",
                    "sha256:4d18e85f41ab5a46df0ca30aa473b2caf4ecb6a139678cc81f4bcca1ce2d7101",
                    "sha256:cff8c27c938f8613028b601b55db7bc98ee912e4fb47f73b67ef2c8e3c5902d8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b799a7e836857253809f557ef671537afcf47292a93e5a3b1b4fb24c57368bbf",
                    "sha256:77831a5aff08f46e4ee5d6114092b6bb0a017575658f76b9a61870231d0ee6f9",
                    "sha256:25a3d59481b1110d7abb32afd59cac43c73b473d451b1cff04ff47a526431d61"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:01.134351349Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:15.467501006Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.126208035Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.217017231Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.338788671Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.34938903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.360698393Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.10770263Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.229328657Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:01.028169707Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:22:01.028169707Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:01.134351349Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:01243642c945e579c0451a3a4d955bd4641e99c3be13311d4b167ba8693d062f",
                    "sha256:2f80d37556a1de5f09fec2daa7e0fc3e155d3521c833adaac5feede306196d7b",
                    "sha256:f89c52ebe0e3068a36445b6f944e2db340bce429d32fd7240b30e851aafd0fcf",
                    "sha256:a1aec53fe6fef2f29fd75283f3c27743f8500ac14efb26ce2f663c7844c42987",
                    "sha256:6e5cf0c7469ee5ce96e578b5ce1ae0633c328b13528b5346393fd9e31eaaeeeb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bcba603767ed25ba528e8f15a859e907b1e72fedb01a388537532d92bb0b9dc2",
                    "sha256:2e7da9139f8e1d258d5851ddcc7843e3dee1aed7e3cbbb0d33ea5e4787014c43",
                    "sha256:9c94701d7ef86d3d9234a468757ead3d8b56f6c0909d7034f57d0c0b935cea87",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:21899b3ce1344861e903bb14b2efdd11b565a59d6ce5807af64ec376e67ad7bb",
                    "sha256:de6a37085e57dad5fc42cbe91f200fcce2ff1525e6ef50c03689e972b4386102",
                    "sha256:c29f860fc079784e30e2b1140b222e49d08ac022d168fb3782d4ff55f6eca9b2"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:21.098183689Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:21.741125507Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.517492269Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.594603603Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.697980042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.707177419Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.714737325Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:23.451931585Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:23.578406313Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:20.989215513Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:32:20.989215513Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:21.098183689Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:7a95b560dc11fe5ff0559d2f6537c1efc83ac7aaad51b45a5917e009c0c06f50",
                    "sha256:f6031278a7707d1a6e07539ea7605f5f23152b27e222e41b6ae7de3e420b1ea3",
                    "sha256:21a99779a9767f9d83a5c911ff51d8913cf9d14aad33222a637f2e1d35a6e7c2",
                    "sha256:b4a309d2fce81e65a4957fbddc32a36ad3270ca8af70ff8b4b7b8036dd32cfd1",
                    "sha256:9fa7bf55497b544bde5f87788625c52fef31cd9a358c938fcad8e8c28654d184",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:77d57246a64bbe2f4f853d61f11398dc52b60dd9c570783a62321f1ce29d4412",
                    "sha256:8fbecbc914005ea0fdc87c421d160c414237e51547092ae9f58eec8659798ed4",
                    "sha256:617f6c14453696a372688649e81a54ddd9dc6290525c211a3c5be2b03141291f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3f41648683764f9b2f994bf34f3da567cdb788fb3004028ebced710d86f368cb",
                    "sha256:f200cee6f4fbabf8e69e5a179c7d425dee37e0afd71c343172a4f9e34918fda9",
                    "sha256:f52ca34206c81f2a436344e9a0948e1c414abf64a8adf7d7ff16c73bae67b331"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:57.897429552Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:57.783533164Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:57.783533164Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:57.897429552Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:fbffb08257a5c92284a41591aaa0b3710e07c8d07d6edc3b448342a0fc8b5b35",
                    "sha256:1c757983748130f1404140ddf3e14288d06d1848d42c7342d75d533d169ccf6b"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:35.919065732Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:37.612406454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.235239371Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.327380141Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.444407777Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.455821747Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.489249886Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:39.054577625Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:39.175091463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:35.810346277Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:35.810346277Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:35.919065732Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:3667705b92b777b9857445986385fa3544fe745de824ed9e48b74d48e233a73b",
                    "sha256:a8f393213fd8f42444b9081c3d25da37b97dbec4b8639fe0f0e3a7589d5440fd",
                    "sha256:9e491949c039a6555bfc9e8d7edc810a1157e4de0e5a1c481e4a9da99f8dc49f",
                    "sha256:9d1103a6c6fb53d9a95de8b92fef5116bca54e0566ab3c9ba1697738c9c49934",
                    "sha256:34b6b50b96caed9ea8b06be9b87ec63932717d466f5059fcce4e49d0b8b1fe0a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:648567a88a80c3aedc7a65bfa28ed87413bf435dc5a1cb88738e3c5896c0c076",
                    "sha256:03d885cb57438349695f4729f2c71f343028df5dbb15b096c1d538eabb3058bd",
                    "sha256:d10c87bc3a1b034fb2d7a2b64156472e0744796c40aa33beedccda60556fa259",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d88ebe737a29be3e76f6b02f3591509f373fd4b840fb08406f33169dcd0cd78f",
                    "sha256:48cab8f4281636a899bd689974b153a1fca219fe12423b0c24707409e719aeeb",
                    "sha256:6651233a11f55b902e6e420f598dd42c27d10e98cc21e0c31d3fe5419b132e9f"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:11.481917014Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.151462719Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.83609249Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.924579316Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.040114112Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.053934176Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.066241153Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:19.805586345Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.93208375Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:11.383908462Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:11.383908462Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:11.481917014Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:0f12b4245fa0a3cc547f2a1e523735b954a9327e222c9499e29df367c992fc25",
                    "sha256:e718ad40e3c90a1cd1ecacf3a26fab120e1dea3923670a16a4c8ca50b6aa9d15",
                    "sha256:94c43fe224b59dec6cae014ab2c49387ad78dc326e460a610de6fc06495c0c1e",
                    "sha256:fe063efa4d53e9a11ecb850c83c6dd1b8b9cf17ec889889f949361d332a5b185",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f767c7f76af4a12cb0e1199b0fc93840a3e5a2f502f98489563422b710c7c82",
                    "sha256:eebaafdb21b5c124a4063b6c1f0639260a303dd72ba00c9ec5ad78515f70a2e1",
                    "sha256:8c39f39f8c6773437573033b4459016bd870d9bd6b9034b07c451bd5a636ff53",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:88062171c3eea1172e399dc542b1a51a8e61572ea372e1516f5b57248db85766",
                    "sha256:9f9f9939f4dc2b1ea2b23e3fc7a7627547fe4771b5e60a57cef4abe19de95f0a",
                    "sha256:54ef0ce651ff47e577439a5a9ec24b5dffeb4a31cc2ca15967214aba59b89e1f"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:50.71203736Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:13.879662253Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.586745871Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.670518036Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.790637458Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.799775231Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.830003625Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:15.53078113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:15.644511102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:50.609020295Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:50.609020295Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:50.71203736Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:ed4cf4bf4b8884bdd10c62b3d9f3f64dcad62f08c9184d6e8c4e3edd498d6ae7",
                    "sha256:e3ff77460733b5c70568a050c25cbfbba938cfb55a53dd793006cf80ce8cc1fd",
                    "sha256:769ee8ef4da51e9377ca4f5d7e5b438c1bac43f38546dfe5b6ddb3ae5fc17d03",
                    "sha256:2faf27c705413cfe35a57bebf1d6dc6e5fed15c26b907de4e87eb462c4c8203f",
                    "sha256:c057d9490c0d6264b7858e1b24696718ce0623763d48f86d0eab46db57cc6697",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7333a928fdb22e11f1eb14ab19de0aeece67b74f04ae6800a48f3626b6204619",
                    "sha256:7d1b2cfc6f4a702dbc3c9da3af6ce40ed072aea5b43739a0f749f0f5a410074a",
                    "sha256:1faec101bbd8a81f2c905ae2146f8736e838f567a8b2f856533f8c07e083cc3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1dc00d63c3226fece7e9b01c6df138f48bb6914b96abf29daae86c6c2331068e",
                    "sha256:797ab5c9a9ac54e19dfc51dfee7076d4c2efae77fe13399f77b03f617df83788",
                    "sha256:ac8c0e12ba7892c39161fde7f5b19e2ce12876134e0ab5f0ef7ae50839c51b17"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:06.289822757Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.743482327Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.498252335Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.585989395Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.739473042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.787312463Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.797563821Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:22.394772002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:22.511272459Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:06.188737929Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:16:06.188737929Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:06.289822757Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:d04befff2a5273eded40c865c563f0d50276b31e32180679474e889fe080da1d",
                    "sha256:7b0c6c50c04ed7bf4b021ee99132e0366bf6ae4768e6a29e52e27fb6a1569aa3",
                    "sha256:2b57aa920cc2cddb5cf11eac876be5662fcb346e000afb2b1ced7b1295ed5a3d",
                    "sha256:9ad61a9af1dc63ddeb51e6fe9bbc82df2e37f1d0b967166d78ee356b54e2e32f",
                    "sha256:2011ae045dbd2ec46399c6e0e93d9cbef0dc64a181ee72a298737b86a13cadc1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71dc71c4129f2ba46a54c086463f9f61a15ea4ed70e3ad2fbf06fefc3ebda46e",
                    "sha256:46974ccfee6d4c0f3231897a3366bb38c4424b87355d0e626e0ae0d9fa0b7224",
                    "sha256:222ca016ec867e88cf844f487bab87a5460e34afed1ce08d1e7db271a366db23",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2af796bc84c5e90eb57e23c8d3adbf9050db0d14fa44a31e95248234ea6447a2",
                    "sha256:12aef4a7dd4d7aba50b7d32032292f9390c9cf5b0cff1b43ed39b331f27b3887",
                    "sha256:e1012b6262d2135f95d3bcb60bdf6f40c972ba99047c23291ab40da945c70765"
                ]
            },
            "variant": "v8"
        },
        "latest-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:13.281889517Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.176020238Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:13.176020238Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.281889517Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:6f2ebfb6fa5d8893e5bb258b80c5e32bad83feefed5c3d1505abe94c6c5414e0",
                    "sha256:24df7471595fbb4285ff34fc41a7d1ec57f6b4864230da6e39b91db98edfee50"
                ]
            },
            "variant": "v8"
        },
        "run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:13.281889517Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.176020238Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:13.176020238Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.281889517Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:6f2ebfb6fa5d8893e5bb258b80c5e32bad83feefed5c3d1505abe94c6c5414e0",
                    "sha256:24df7471595fbb4285ff34fc41a7d1ec57f6b4864230da6e39b91db98edfee50"
                ]
            },
            "variant": "v8"
        },
        "run-20231025": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-10-25T13:36:09.420556221Z",
            "history": [
                {
                    "created": "2023-09-20T02:44:28.274078277Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:024479be439b4ecb37c939e68673adc72955f3345ca0e809bd13e897709e59e4 in / "
                },
                {
                    "created": "2023-09-20T02:44:28.657109179Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.858080788Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.858080788Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:43.858080788Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:57.7977819Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:58.863292351Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:51:58.988569739Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.089168973Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.248690513Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.263148961Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.274898882Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.292459562Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:51:59.292459562Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:52:00.209049083Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T15:52:00.377606115Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:09.268211703Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-25T13:36:09.268211703Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:36:09.420556221Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:6c9ad649ba0489961dd64654574cc4134f9eed47c0be4524747da2f36f5dbbd0",
                    "sha256:b08019ccec097cb7e2d80a5a373d089fb37220a87c451e9677f21788a63ab9df",
                    "sha256:e0c742e70e226c5b515d773f2f3006d09f5d14fa46ef55db6d814b2d23376fea",
                    "sha256:d9c4546ac125486649b761fe5a6f90c38596e55dda46184f1f74e8181e280683",
                    "sha256:0ae6b9f93d0a321b28e66dd6bfcad103863c464397390bd9aee58dfe74c6b505",
                    "sha256:8d55be54b11efc7d91f4661764d70c84e0a707a7b3b4fa19794fa7e02c480df7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:181ae62c3e7c3ccd2ccc64cb4ce71975047ad32a06cdc919350115c21db5d2ba",
                    "sha256:8e98c7c789b19e4ea0845c3a83024108f2f6cb5e9c9e6e3dc78fe5640c548467",
                    "sha256:ff453fa1fb8a27a41215bc06494cb580e0f5c757ce4131f234e487d5fe9cb80b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:731889e3703c8c970984ea7eff9c585c06eb8969faa3419294996530a395e2fa",
                    "sha256:9b3c66a964515f327e9bd99a2f6feb12d32c87f72a24caccbe042c8fa1557114",
                    "sha256:dbd2a7ede00626339bb5e770f75c64b10a367f4d162ea82905f4dc4c5120c61e"
                ]
            },
            "variant": "v8"
        },
        "run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-07T07:56:32.721935662Z",
            "history": [
                {
                    "created": "2023-11-01T00:39:55.82247244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:99dc83e8bb8c67d9179a265fb750c76f73fa660e13e938b6cd613be653cd077e in / "
                },
                {
                    "created": "2023-11-01T00:39:56.253202489Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:03.822317888Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:03.822317888Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:14:03.822317888Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:16.734944758Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:17.981121656Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:18.114597076Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.213178797Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.362163263Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.372736882Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.383037997Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.40658476Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:18.40658476Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:16:19.3490972Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:16:19.509541994Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:32.585155369Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:56:32.585155369Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:56:32.721935662Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:60df532890c9cca1c175cfea286e7bc7d79a2f79592acaacf5fefc399ea9c569",
                    "sha256:e56f69cd0dfb229f9fd1407fbdcbcabe5b800ac5f620151bff8b5815cedc33ec",
                    "sha256:3da07ba74a1afe2b9300064007f6be2da7dcd8abff93119dc8d93e6a21602051",
                    "sha256:19e728986e1702d927d4208485c46bc397e5a8eb5822011ce8f95c30b6a2f198",
                    "sha256:8a49b7a43e9961d024710c4ddb502e0faf5fea4159963cb6e64fac3f529adbe0",
                    "sha256:33c493aba170663dcef60484c47635c490858499f11402fa7a235b50b64456dc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0ae003343d02224abfda090742390a33faee92ee2ba48d959e820659850b5d2d",
                    "sha256:7c541fed31d184a7f501c31741d0a27601983df8133f6f9cee1f1d0c23b3de2b",
                    "sha256:94f7179c895cd2821d04c1beb708fe27ebcc62fb0fce3aaaccfb3c061bcea59a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fd6040c95d6d45c2ad435c51f7fab05be21da3bf9a017d58e48d4d8e5bf5b3cd",
                    "sha256:00caaa193ccd9b79db01a53d77f0272ecc3981f709232a538e1758f2f637646b",
                    "sha256:4692c5419fb6bb870209ec7bbf138e68402a6ba95acb703f13e2acaea7b5c330"
                ]
            },
            "variant": "v8"
        },
        "run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:39:22.276834456Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:22.13209068Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:58.664127799Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.364488633Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:08:59.465195557Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.565496734Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.70470318Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.725314262Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.734132316Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:08:59.743443608Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:09:00.452678113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:09:00.595471645Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:22.146341921Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:39:22.146341921Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:39:22.276834456Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:29c36ff94b71964100e213981142e520295b15626ed1879d99c36bd5475b76c3",
                    "sha256:6397d8e27bf4ad223bb62f7601f9a3621abe07e88e09b18ee1bda45f9bf57c6b",
                    "sha256:0ef0a058e815346f39e1ba03acb0a4a422c3b87e58fc08bbe1ba4451eacb40e5",
                    "sha256:d16b22555e3d20070c2841ee0429a7e3a11588536c24a86bb6cc689ca3c5ad04",
                    "sha256:d374c74ae31322409874a4a485abd512f03004938dfa1c7d3652c3fe9f9fd673",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0cdb1b92cbde3db5db232bacdd380b6078b8c4d0b02b6e7e44891d443ae4591f",
                    "sha256:7e2f22a4da908c29da27c98aeb4d9505c91ecd820f78243c7054d9229c13d30e",
                    "sha256:8658137ac973bebf78ffa2c27c9f3d7e1671d22d756b393fdf75d11afab0a398",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9982a6f0a6244d57c31563dd7bd54e7f0bc3227a7db2aba3321e9b2fc17da0aa",
                    "sha256:f986708a8c3fcc98685c8845af5cb2091fe6baebf4d0be17387735172b37d4ef",
                    "sha256:125659da938ed144fbbee11c82eaf60f900232ddc3f144fc9b6be7c1ab6e0f77"
                ]
            },
            "variant": "v8"
        },
        "run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:10:40.032709982Z",
            "history": [
                {
                    "created": "2023-11-21T06:27:20.721480513Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7b5bbc3b85f671aaf7b38dbe3fc76aae162bbff29c525bcd127f8a26a53bc664 in / "
                },
                {
                    "created": "2023-11-21T06:27:21.082147029Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:38.64375936Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:14.626506753Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.197261971Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:15.296969131Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.407547863Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.541071217Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.550355412Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.558824236Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:15.566789501Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:33:16.132254001Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:33:16.278960973Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:39.894277473Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:10:39.894277473Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:10:40.032709982Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:37b505004d4b0283ed5853aa69eddeb1a9e399ce4d5a27752e7bf8edd30096be",
                    "sha256:ee15dd3b9b4499504e15f776e985d6d6db85d02b2af28b58e0f6840a5611ffda",
                    "sha256:3cbf5bc1dd090798d60651ba9d8e5266744467d3942b27b8af9aad2fc6eb3d94",
                    "sha256:d64e3c8a34df828f9d322c1ad2571e1c690ad3d89848e9d84abaf02dc6f46d0b",
                    "sha256:90b090bbe57ed39388a1a1d27301bd521b19acbdaf63cf04c2344039fcdb3ac2",
                    "sha256:570d5cbcd38bac7a16ce13ae8fe4232ddf645709d832e69847ce9a3b3c4dd8a5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:86fc17d12f1d13dbe119209636876d35dec06d64ed19553ebcc3efba975b7b3e",
                    "sha256:13be287764da1f3fc3368a197eefd1344959dbe6a329e8fa4e2579f7026eaaa7",
                    "sha256:ce6f79e8950a46a4564a5a5aaa489dcce75c1ee6490661c3a5b008cd82481bae",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:0a7c9edc80c512f510d67fc94d27e1370fdd408b3ae2867c02e0f583401a4d7d",
                    "sha256:6bb9cafb5e209a8cf07a0767d8b36a8299265b599d567386d904ef56d9546b3d",
                    "sha256:0cb3038a33e0a1202e668333ac150f1a85c9eb7542b7fb22867e40631e15b408"
                ]
            },
            "variant": "v8"
        },
        "run-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:30:27.486010176Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:52.937643051Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:29.555242312Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.744925096Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:30.824526678Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:30.900951309Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.038705894Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.082582927Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.092267272Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:31.100757454Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:54:32.003177354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T18:54:32.125502794Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:27.38589354Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:30:27.38589354Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:30:27.486010176Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:bb6ae9568bab1557dbc3d0cb8316b7966b5aa7167c857ca6a0f3f564fdf87436",
                    "sha256:d0629d243e2fe6f305c71e391ff1739374dd4b8690415fa9580f1748a9a30037",
                    "sha256:a7c6b7a4f52829976762ad6a7fe7ea2366efd1affdc49a9cde65f5fd6388752c",
                    "sha256:99ccf9bb9c67f6d195c8614560587213a77feed85322c61f75a3c3b05ad02031",
                    "sha256:74b04caea3985b1e073cadcaa10cde033dfa3b97d3466a70e4333f5397f52cf9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:35c7e94083902da8d7aaa7dc09f3463588f11b349a5f04911657c96fd7679ed0",
                    "sha256:4d18e85f41ab5a46df0ca30aa473b2caf4ecb6a139678cc81f4bcca1ce2d7101",
                    "sha256:cff8c27c938f8613028b601b55db7bc98ee912e4fb47f73b67ef2c8e3c5902d8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b799a7e836857253809f557ef671537afcf47292a93e5a3b1b4fb24c57368bbf",
                    "sha256:77831a5aff08f46e4ee5d6114092b6bb0a017575658f76b9a61870231d0ee6f9",
                    "sha256:25a3d59481b1110d7abb32afd59cac43c73b473d451b1cff04ff47a526431d61"
                ]
            },
            "variant": "v8"
        },
        "run-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:01.134351349Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.049590699Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:15.467501006Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.039529036Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:16.126208035Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.217017231Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.338788671Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.34938903Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.360698393Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:16.39412244Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:45:17.10770263Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:45:17.229328657Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:01.028169707Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:22:01.028169707Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:01.134351349Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:01243642c945e579c0451a3a4d955bd4641e99c3be13311d4b167ba8693d062f",
                    "sha256:2f80d37556a1de5f09fec2daa7e0fc3e155d3521c833adaac5feede306196d7b",
                    "sha256:f89c52ebe0e3068a36445b6f944e2db340bce429d32fd7240b30e851aafd0fcf",
                    "sha256:a1aec53fe6fef2f29fd75283f3c27743f8500ac14efb26ce2f663c7844c42987",
                    "sha256:6e5cf0c7469ee5ce96e578b5ce1ae0633c328b13528b5346393fd9e31eaaeeeb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:bcba603767ed25ba528e8f15a859e907b1e72fedb01a388537532d92bb0b9dc2",
                    "sha256:2e7da9139f8e1d258d5851ddcc7843e3dee1aed7e3cbbb0d33ea5e4787014c43",
                    "sha256:9c94701d7ef86d3d9234a468757ead3d8b56f6c0909d7034f57d0c0b935cea87",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:21899b3ce1344861e903bb14b2efdd11b565a59d6ce5807af64ec376e67ad7bb",
                    "sha256:de6a37085e57dad5fc42cbe91f200fcce2ff1525e6ef50c03689e972b4386102",
                    "sha256:c29f860fc079784e30e2b1140b222e49d08ac022d168fb3782d4ff55f6eca9b2"
                ]
            },
            "variant": "v8"
        },
        "run-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:32:21.098183689Z",
            "history": [
                {
                    "created": "2023-12-19T01:41:25.583042341Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:4dd1c5e17a5e57644787f37e8ad290baef6c93f4f112b976f19136480a293713 in / "
                },
                {
                    "created": "2023-12-19T01:41:25.927209649Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:46.436428658Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:21.741125507Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.42261056Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:22.517492269Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.594603603Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.697980042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.707177419Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.714737325Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:22.748034532Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:56:23.451931585Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T19:56:23.578406313Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:20.989215513Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:32:20.989215513Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:32:21.098183689Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:2499505346125c89e4605d9edd7eccae454fa555ea1a7d912efed2f1832c60e6",
                    "sha256:7a95b560dc11fe5ff0559d2f6537c1efc83ac7aaad51b45a5917e009c0c06f50",
                    "sha256:f6031278a7707d1a6e07539ea7605f5f23152b27e222e41b6ae7de3e420b1ea3",
                    "sha256:21a99779a9767f9d83a5c911ff51d8913cf9d14aad33222a637f2e1d35a6e7c2",
                    "sha256:b4a309d2fce81e65a4957fbddc32a36ad3270ca8af70ff8b4b7b8036dd32cfd1",
                    "sha256:9fa7bf55497b544bde5f87788625c52fef31cd9a358c938fcad8e8c28654d184",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:77d57246a64bbe2f4f853d61f11398dc52b60dd9c570783a62321f1ce29d4412",
                    "sha256:8fbecbc914005ea0fdc87c421d160c414237e51547092ae9f58eec8659798ed4",
                    "sha256:617f6c14453696a372688649e81a54ddd9dc6290525c211a3c5be2b03141291f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3f41648683764f9b2f994bf34f3da567cdb788fb3004028ebced710d86f368cb",
                    "sha256:f200cee6f4fbabf8e69e5a179c7d425dee37e0afd71c343172a4f9e34918fda9",
                    "sha256:f52ca34206c81f2a436344e9a0948e1c414abf64a8adf7d7ff16c73bae67b331"
                ]
            },
            "variant": "v8"
        },
        "run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:02:57.897429552Z",
            "history": [
                {
                    "created": "2024-01-31T22:44:42.206183025Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:cd15b20717eb0882336030832e3d3e6ce8213537a76be44b281f8162903db36c in / "
                },
                {
                    "created": "2024-01-31T22:44:42.651321548Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:22.708383493Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:57.773342763Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.407060256Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:58.497535914Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.602483677Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.713242525Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.725111226Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.762366239Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:58.77505306Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:26:59.395927324Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:26:59.522568177Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:57.783533164Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:02:57.783533164Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:02:57.897429552Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:0e3753d47c267efdb46ef9af1e6b2370fc347ba6d78ee8f157686cb9059fe39e",
                    "sha256:c3e7b00dedb8c14234e77c8be608b314416961002d6e3bc78e3de209acaaa103",
                    "sha256:a8260d5bda4ea55597c19d652747aca938d5e390ab81588a04b37da13bb8b65c",
                    "sha256:caa4672c029bed6b79232ae56b1394e960acbb9bb4ae1e0a761a778ca2516245",
                    "sha256:b3600e44791416e56ed4d3db7f6356be3fd76c448b28e1ea61b26f5aee18501a",
                    "sha256:964aea52ec01d8ed07e1ce5872d1ee38352ce50d91335ffce5c34cb66f3a7e67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:56982e9bf84ac24428fe003c9bb5469579ca1b95a04263fbf01ca8e2e7290d7c",
                    "sha256:e6450a2274b94574eb1e2884929a8e519b2b6a7584d39496ce0eaf92adbb4a7b",
                    "sha256:0fe6bad9122336076654bfa2107ea2c7abc8c97cf0637284429582ef47fa5a38",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e1f70a51fb6c23e254bfe03542db7bb238fa1f8312e0e176cc4dca799d95ff57",
                    "sha256:fbffb08257a5c92284a41591aaa0b3710e07c8d07d6edc3b448342a0fc8b5b35",
                    "sha256:1c757983748130f1404140ddf3e14288d06d1848d42c7342d75d533d169ccf6b"
                ]
            },
            "variant": "v8"
        },
        "run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:08:35.919065732Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:01.564690982Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:37.612406454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.15683654Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:38.235239371Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.327380141Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.444407777Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.455821747Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.489249886Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:38.498742262Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:32:39.054577625Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:32:39.175091463Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:35.810346277Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:08:35.810346277Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:08:35.919065732Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:3667705b92b777b9857445986385fa3544fe745de824ed9e48b74d48e233a73b",
                    "sha256:a8f393213fd8f42444b9081c3d25da37b97dbec4b8639fe0f0e3a7589d5440fd",
                    "sha256:9e491949c039a6555bfc9e8d7edc810a1157e4de0e5a1c481e4a9da99f8dc49f",
                    "sha256:9d1103a6c6fb53d9a95de8b92fef5116bca54e0566ab3c9ba1697738c9c49934",
                    "sha256:34b6b50b96caed9ea8b06be9b87ec63932717d466f5059fcce4e49d0b8b1fe0a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:648567a88a80c3aedc7a65bfa28ed87413bf435dc5a1cb88738e3c5896c0c076",
                    "sha256:03d885cb57438349695f4729f2c71f343028df5dbb15b096c1d538eabb3058bd",
                    "sha256:d10c87bc3a1b034fb2d7a2b64156472e0744796c40aa33beedccda60556fa259",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d88ebe737a29be3e76f6b02f3591509f373fd4b840fb08406f33169dcd0cd78f",
                    "sha256:48cab8f4281636a899bd689974b153a1fca219fe12423b0c24707409e719aeeb",
                    "sha256:6651233a11f55b902e6e420f598dd42c27d10e98cc21e0c31d3fe5419b132e9f"
                ]
            },
            "variant": "v8"
        },
        "run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:45:11.481917014Z",
            "history": [
                {
                    "created": "2024-02-13T00:41:34.96456205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:ef14ef2abd4725ea6056637e44d9261e2b025853230ea45636b67a735b3d4918 in / "
                },
                {
                    "created": "2024-02-13T00:41:35.38115797Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.071794575Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.151462719Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.754235229Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:18.83609249Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:18.924579316Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.040114112Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.053934176Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.066241153Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.097477443Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:50:19.805586345Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:50:19.93208375Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:11.383908462Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:45:11.383908462Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:45:11.481917014Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:808d90f9d0f824985f5c8e919099ceeae0c8eb70ab8afafb50979c5d9bf821f3",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:0f12b4245fa0a3cc547f2a1e523735b954a9327e222c9499e29df367c992fc25",
                    "sha256:e718ad40e3c90a1cd1ecacf3a26fab120e1dea3923670a16a4c8ca50b6aa9d15",
                    "sha256:94c43fe224b59dec6cae014ab2c49387ad78dc326e460a610de6fc06495c0c1e",
                    "sha256:fe063efa4d53e9a11ecb850c83c6dd1b8b9cf17ec889889f949361d332a5b185",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f767c7f76af4a12cb0e1199b0fc93840a3e5a2f502f98489563422b710c7c82",
                    "sha256:eebaafdb21b5c124a4063b6c1f0639260a303dd72ba00c9ec5ad78515f70a2e1",
                    "sha256:8c39f39f8c6773437573033b4459016bd870d9bd6b9034b07c451bd5a636ff53",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:88062171c3eea1172e399dc542b1a51a8e61572ea372e1516f5b57248db85766",
                    "sha256:9f9f9939f4dc2b1ea2b23e3fc7a7627547fe4771b5e60a57cef4abe19de95f0a",
                    "sha256:54ef0ce651ff47e577439a5a9ec24b5dffeb4a31cc2ca15967214aba59b89e1f"
                ]
            },
            "variant": "v8"
        },
        "run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:23:50.71203736Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:33.175418367Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:13.879662253Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.503419354Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:14.586745871Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.670518036Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.790637458Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.799775231Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.830003625Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:14.839297912Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:42:15.53078113Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:42:15.644511102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:50.609020295Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:23:50.609020295Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:23:50.71203736Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:ed4cf4bf4b8884bdd10c62b3d9f3f64dcad62f08c9184d6e8c4e3edd498d6ae7",
                    "sha256:e3ff77460733b5c70568a050c25cbfbba938cfb55a53dd793006cf80ce8cc1fd",
                    "sha256:769ee8ef4da51e9377ca4f5d7e5b438c1bac43f38546dfe5b6ddb3ae5fc17d03",
                    "sha256:2faf27c705413cfe35a57bebf1d6dc6e5fed15c26b907de4e87eb462c4c8203f",
                    "sha256:c057d9490c0d6264b7858e1b24696718ce0623763d48f86d0eab46db57cc6697",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7333a928fdb22e11f1eb14ab19de0aeece67b74f04ae6800a48f3626b6204619",
                    "sha256:7d1b2cfc6f4a702dbc3c9da3af6ce40ed072aea5b43739a0f749f0f5a410074a",
                    "sha256:1faec101bbd8a81f2c905ae2146f8736e838f567a8b2f856533f8c07e083cc3e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1dc00d63c3226fece7e9b01c6df138f48bb6914b96abf29daae86c6c2331068e",
                    "sha256:797ab5c9a9ac54e19dfc51dfee7076d4c2efae77fe13399f77b03f617df83788",
                    "sha256:ac8c0e12ba7892c39161fde7f5b19e2ce12876134e0ab5f0ef7ae50839c51b17"
                ]
            },
            "variant": "v8"
        },
        "run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:06.289822757Z",
            "history": [
                {
                    "created": "2024-03-12T00:45:51.34944398Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e5a8bb54381b61b31ee885b2841ecde6315a03685b0e7f33f736889d8e7768a2 in / "
                },
                {
                    "created": "2024-03-12T00:45:51.727392788Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:43.232715583Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:20.743482327Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.423937322Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:21.498252335Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.585989395Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.739473042Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.787312463Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.797563821Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:21.806317487Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:36:22.394772002Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:36:22.511272459Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:06.188737929Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:16:06.188737929Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:06.289822757Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:45a542daae8c876c635029a215bea92491f4f40b8f53043515168bb9c93a6218",
                    "sha256:d04befff2a5273eded40c865c563f0d50276b31e32180679474e889fe080da1d",
                    "sha256:7b0c6c50c04ed7bf4b021ee99132e0366bf6ae4768e6a29e52e27fb6a1569aa3",
                    "sha256:2b57aa920cc2cddb5cf11eac876be5662fcb346e000afb2b1ced7b1295ed5a3d",
                    "sha256:9ad61a9af1dc63ddeb51e6fe9bbc82df2e37f1d0b967166d78ee356b54e2e32f",
                    "sha256:2011ae045dbd2ec46399c6e0e93d9cbef0dc64a181ee72a298737b86a13cadc1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:71dc71c4129f2ba46a54c086463f9f61a15ea4ed70e3ad2fbf06fefc3ebda46e",
                    "sha256:46974ccfee6d4c0f3231897a3366bb38c4424b87355d0e626e0ae0d9fa0b7224",
                    "sha256:222ca016ec867e88cf844f487bab87a5460e34afed1ce08d1e7db271a366db23",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:2af796bc84c5e90eb57e23c8d3adbf9050db0d14fa44a31e95248234ea6447a2",
                    "sha256:12aef4a7dd4d7aba50b7d32032292f9390c9cf5b0cff1b43ed39b331f27b3887",
                    "sha256:e1012b6262d2135f95d3bcb60bdf6f40c972ba99047c23291ab40da945c70765"
                ]
            },
            "variant": "v8"
        },
        "run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:40:13.281889517Z",
            "history": [
                {
                    "created": "2024-04-24T04:10:54.234410656Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:e8990741de71fcc1884f30fcd1b6c5ea411bfa752419a82e9748fcd378ca100a in / "
                },
                {
                    "created": "2024-04-24T04:10:54.597136947Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:46.901085362Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:22.722172094Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.571319787Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:23.654933282Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.730894949Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.868708201Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.91649979Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.928474874Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:23.944501683Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:00:24.510905211Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian bullseye   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:00:24.633968413Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.176020238Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:40:13.176020238Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:40:13.281889517Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Bullseye \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:1a35117cf67cafb896c700e58a93667566889f849f46e270d2ee8bdb51d620ca",
                    "sha256:373d572f09b390776126ce4391bdeadd2fbdb98116dee4029cfb56e038c02147",
                    "sha256:8f572cf56b3ccaef652a23f7cf1ab05469ea6d7c828dbb5a85076442d84399bc",
                    "sha256:cd545ef6070fac4fd57dd0786ae2dde9b46f65c347591e719fded034ae0158a5",
                    "sha256:3aac6cfacc56dfc39f47318851871084e9ae931f1929aeebb25ecf04f1e1173f",
                    "sha256:96c3956791cb57a7f05babb28780010ed852d6b44ad117b9ca2a9f2e3de93ca7",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9f7a60107ac21cf440a4460a817eb6b29dc94d60591c0b7fcf66e23020a15690",
                    "sha256:cc445d6f289849d2d65700cc120111df0df0a7f66f3392773110b03fc88e8dcc",
                    "sha256:8c43a36723f5192fbbffd343fb3eea80764ffd0b37e314278241ea484bf6e564",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:76a98fcb9275499fc9f2312a3725f6cccc0df0952a7d7b0e20562180d3a2ad6a",
                    "sha256:6f2ebfb6fa5d8893e5bb258b80c5e32bad83feefed5c3d1505abe94c6c5414e0",
                    "sha256:24df7471595fbb4285ff34fc41a7d1ec57f6b4864230da6e39b91db98edfee50"
                ]
            },
            "variant": "v8"
        },
        "sid": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:01.019176566Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:46.549693015Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d9288b588fabaa08e04cb672bc35a2097342b3f02f41139eb43d57de6da8c81 in / "
                },
                {
                    "created": "2024-04-24T04:11:46.888411048Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:29.356936454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.181878158Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.264965848Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.405205375Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.444959158Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.457933015Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:31.760909982Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:31.900039891Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:00.90244188Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:41:00.90244188Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:01.019176566Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9a62ed1b29f3183a736f710a1ecbee6c64eeb410707ef36a1efbd2569c514f4e",
                    "sha256:5b578891d4c96f360d32e6765110a48a94e797bb65d704e0052143856e4c478b",
                    "sha256:9bd0d3a024c6d5c7b0d983a205069c8a81481bfcefec3526d45251dc5f3b5888",
                    "sha256:eaa995956e31981bcfd010bf69f2abb4a65c9f41f1ed53653695c69bb9ea4544",
                    "sha256:df5999b6e8e895cbb929edd2daa274878fe6c357ee79dfef1b9b26c51fcc96b5",
                    "sha256:c9568c957fbf55941583edd4edd6fd10b4207315d103484d27a9c6aa2ef56d19",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:935b9ff01ce4f98d41938bf1aef95c5a0b90d4c9d9793e1fa252c8f358516c81",
                    "sha256:745bb669cf154a6b1a0219368923e35b5fc375dd557248565b549b4f46b5f52c",
                    "sha256:542ad24d729f72e1c11b049e7c44b87821487b16fcf7dd922d6a4c5ba6aa391d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:549089fb1ee3ed008f80472bc7a312bf28a29d9996dde8fc5872fee1b9ede208",
                    "sha256:5b33e1568e10cf0b569cb46c00bd844100c17a4105d4e02f856e8eeb446af627",
                    "sha256:717d9b9203307bbcc4d1bc4e2a0cc56dea9cbbff65426b4cc1a743f3e37927b8"
                ]
            },
            "variant": "v8"
        },
        "sid-20231025": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-10-25T13:37:36.37280216Z",
            "history": [
                {
                    "created": "2023-09-20T02:45:22.667065441Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a755d77081b4ecd0ef0a9f252d63e52edde2f734a107af8e710fac98a7662076 in / "
                },
                {
                    "created": "2023-09-20T02:45:23.069333543Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:47.266142218Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:47.266142218Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:47.266142218Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:09:37.588502993Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:09:38.581962706Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:09:38.581962706Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T16:09:38.581962706Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T16:09:38.581962706Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T16:09:38.683178197Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:09:38.795327187Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:09:38.938043074Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:09:38.99224007Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:09:39.001993169Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:09:39.013117868Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:09:39.013117868Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T16:09:43.355650904Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:09:43.505847909Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:37:36.206055712Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-25T13:37:36.206055712Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:37:36.37280216Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:99a19093336c1ec25c5b376de093445ba2a3543aa98c9135a34ff2e27028e08e",
                    "sha256:a71351fd3c7ffa364d7c18a6283fda2ba0f13046d690e21a3b508f1d823bbcb4",
                    "sha256:3671a97e6238f4e5a4bbc4cb217de7a8b3554e99cc2ef5736dec86638bf76339",
                    "sha256:439a5acda0247b9fe2b01bc5f625a409b24586abd440ec7f3bdd49e0cf2d14c1",
                    "sha256:ea8922d7a0f0080c451f80d9a2f7f719aa7ebb3375c8e0249dbfed082821bd72",
                    "sha256:57cb61ed3dbe878df050b744536bb6d2e172dfe7678c032d6a29e8c538ad2cea",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c0d1a5d78e971a0793487525abfc9cc7501e8aa241ff69ff4b0a8826ca789e34",
                    "sha256:a2d6a1aa103f1080c35da5a9b1a0704b6767c4c688cacc6d49cf9e44991b90d9",
                    "sha256:eb33d4dd744b5290af46fa578e2dec299795f78e995da9c51bf92ba6892cdf67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cfb1aa22bbace470570734975250db2aaf2838f5a1a7f729d3ddd8ec19cdf6ed",
                    "sha256:1fbd5e9414ad4be884f61fb4b4e10074a540899e69f8078aece43ca868df92bb",
                    "sha256:ffc1738392329fdfb9f6c682786656ba701419154114db90ec2bb7a9c22ada20"
                ]
            },
            "variant": "v8"
        },
        "sid-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-07T07:57:37.140996849Z",
            "history": [
                {
                    "created": "2023-11-01T00:40:51.142385972Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b78b25720d414357defe525a7c7f509b1e5666dcb2b0d31ebd409378a8b70a47 in / "
                },
                {
                    "created": "2023-11-01T00:40:51.541259066Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:52.795503283Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:52.795503283Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:52.795503283Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:28:14.066022282Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:28:14.736917425Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:28:14.736917425Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:28:14.736917425Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:28:14.736917425Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:28:14.834078561Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:28:14.94114496Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:28:15.075164615Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:28:15.085923804Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:28:15.096485829Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:28:15.11147321Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:28:15.11147321Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:28:18.141179592Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:28:18.281317857Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:57:36.986966018Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:57:36.986966018Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:57:37.140996849Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:24f74d3ffdf979c27de532c40cf584a7f430ac073dfda9c3e5c7d7684b7b40f6",
                    "sha256:64ecfa91fc6732d0653a525736ae732e130a31d85c9d0012d64bcaffff2c915c",
                    "sha256:570567b6aac9e04ce3dba1b58618b3380dd0c64629701b2bc3e6e3656346cea1",
                    "sha256:6d91b0708a31764655a668ee60e999ff68beec7d02b125ace910d0f3d404f46f",
                    "sha256:662a823dc6be1530e8f3fffb469f972296f8397a397c6b5e2e60ffa1c8c07d76",
                    "sha256:394401f41bc81f485376f4fd6ff62514074296168e31d38a82a6c93e587c3aa1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:18615609aa51b8772c61687a02ecb1b6a2b62ba209a45b6d5f8b7dd13fd4483f",
                    "sha256:49b8c7f0001442001f8d2faebfa3fbe54e75383e9050cadf8f1e301e78e6bc65",
                    "sha256:29760ea11061c6ab3364a510ff6f832340971e765aa869b82c1ac6f55b392459",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4b40cf86f31e16308b3f7b99f93f5a4089e62b73a54ea72c471433e30f803939",
                    "sha256:799722b009573ad18bcfaed0c870124b4871a9d5018d3f74b47f8163ea2aed70",
                    "sha256:abb4aa6176ac2e1ef10b0493cd61d37f66f56f7e5d561221cf99b9300d2b02da"
                ]
            },
            "variant": "v8"
        },
        "sid-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:40:04.536375456Z",
            "history": [
                {
                    "created": "2023-11-21T06:28:15.789131205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f91ce1fc939cf47fa3e65fc897fe15d50189c5c43311f1c5e2556c65aed93cc0 in / "
                },
                {
                    "created": "2023-11-21T06:28:16.253991764Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:29.356144865Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:29.356144865Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:29.356144865Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:51.381449321Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.50023723Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.50023723Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:15:52.50023723Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:15:52.50023723Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:15:52.646272684Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.757385708Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.902782372Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.931877359Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.971842121Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.982190419Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.982190419Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:15:54.884832282Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:55.050519517Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:40:04.389545944Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:40:04.389545944Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:40:04.536375456Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:86d175f9abce2fb22e461a982e6d4c26451edede133cae6f0e681f49fd76ab62",
                    "sha256:6d08810a1dedfd66ee906213e2bee9fd49e15a9cae2c424502adf14bb0412e1b",
                    "sha256:ac476feecd719a11ea7bc02dd6fb737fda88d4a091e9e17537839476eec9eade",
                    "sha256:24399c1a2c767b4a0e835b127efcb9e960c6643060ef5550a30d4113f06afd18",
                    "sha256:fc27773c4d33d54205385456bff597530e89257f65f3184bf03b0e44748d71c9",
                    "sha256:c118693f04c0063f41694e1d07fb5a30a88346eadeda635ac9f249432b36204f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:985eea47b1c37db7d1fae5d089edecb0e6e6a0f7fe4baa8f8afec541f80db279",
                    "sha256:84b6ba60f3fefb3b87de0e05ce98a717fcfa09cd94d671ec3594e06c44dd5e61",
                    "sha256:c02c210e437435a571ebf8c6eda2e49cf67f946135e8752d387ade4efbbc17b8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d9fa925072e1b3230361ad4e367563f12b9ef58df53e86bb190e5f6eb81e9919",
                    "sha256:89620efb5f2ab06db7e88653776ed24aa3e913bc1d46a40151a22b0b669ac87b",
                    "sha256:caf1eb1d892ca5d3bfcf00670febf2972f4df90aa505117e9336df5fc39080c2"
                ]
            },
            "variant": "v8"
        },
        "sid-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:11:27.437213917Z",
            "history": [
                {
                    "created": "2023-11-21T06:28:15.789131205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f91ce1fc939cf47fa3e65fc897fe15d50189c5c43311f1c5e2556c65aed93cc0 in / "
                },
                {
                    "created": "2023-11-21T06:28:16.253991764Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:36.916801374Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:36.916801374Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:36.916801374Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:18.538174217Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.202184724Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.202184724Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:39:19.202184724Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:39:19.202184724Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:39:19.31347439Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.409655654Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.562308675Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.570760343Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.578661103Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.606179148Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.606179148Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:39:21.168235704Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:21.300453839Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:27.277227037Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:11:27.277227037Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:27.437213917Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:86d175f9abce2fb22e461a982e6d4c26451edede133cae6f0e681f49fd76ab62",
                    "sha256:7e2330a459d2671d1e02b3766a3adbfc668995b941240adfc059983703565906",
                    "sha256:61b8d351ea9601238a57597e74dae9bbd24b65eb67e49b6a19b307873c8e3dbe",
                    "sha256:f8a649475b8e264f6ab3b1b6c6d3206f4c668b988508ecde63bce54b59f9223f",
                    "sha256:be1317d4842ccd06c8f11cc25913e9a84780f3d933e2461b9928cc7fc1701d46",
                    "sha256:09341cdd42ed071bff6ffc9616069b68575ea3e5387d58dc1bf86f76dbbb11c1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1d67a6c9f64b6e848a905d9ce533409c7295aead01d797ec4edbf1fec3651ef3",
                    "sha256:2eb172fd58ec86a0255b004e1f9216ba3d91018f8360ef7ed15122c5d51d1606",
                    "sha256:1c1a88009afb339f6e58d3a085d13e0c422718f2a9181375c22d37e6283fb4f3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:63a2ddf0f2792977d2aff1f1709d1ddf303694c5e1ca856745431c27e7293f24",
                    "sha256:723dd98be2578fd6197e8c8d308c627ebfeeef0f8a7258da03cb846b1b1617ce",
                    "sha256:56941a79832742bd392830700decd93d1d564355d5d36730874ece082afdc3fb"
                ]
            },
            "variant": "v8"
        },
        "sid-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:31:02.773163501Z",
            "history": [
                {
                    "created": "2023-12-19T01:42:19.701164244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:87315e5e167fd91a3d1ede646c973d59238e8028ae596756114a38fc3f547a78 in / "
                },
                {
                    "created": "2023-12-19T01:42:20.083157584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.021589653Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.021589653Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.021589653Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.046043631Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.600762194Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.600762194Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:00:18.600762194Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:00:18.600762194Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:00:18.686286857Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.784004493Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.924002974Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.963996778Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.974260081Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.984197425Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.984197425Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:00:20.515553304Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:20.660112651Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:31:02.667206481Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:31:02.667206481Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:31:02.773163501Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bd5003216fd207ce863e6e32eba76fbb5b03c14c8a9c4bddd8f96fa122fd853f",
                    "sha256:81824f6357af09e5f194cb6f6e0be2dc47db7a062fa4a0c78124fbb2b1bf1f9a",
                    "sha256:dd97a1c1be3575d4c4e4c291416fb404538fb09e23c40c0c322f2e56077b6fde",
                    "sha256:ea4cc0f208420cfec860bd0ee0048e614b33c17b2cf83491322ab1f31d0e8e25",
                    "sha256:1b56705331f46e72b538c3b1514cde105103972c23ea9c8d8e1a8aca31f7c8a3",
                    "sha256:39874499c48465ea85373af3255a1fa3c2d71e008b6b0ad47d3cd355bb84d912",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3a472f646dd37e8f907b9e285a43c73a18d93c76f4431ef3eb89f2e211e72287",
                    "sha256:1c6428f23e3224a2083ed9ca96b09e6b8d8499275ccd4f02cfd265b80cacb3f5",
                    "sha256:f7d586a15ebefc6793ec74a036b28de3d993eaaab14d4a15f55c7762e9f01dc5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fa3556a7812f045fc25911a5d66ab7295cba58532377711cf0fb9cdd2e56664a",
                    "sha256:928c91e73190a293bb0fb7783c1974868ae0d06e0b060152fa09aa09b2a5ed11",
                    "sha256:a3f81a58ef686987b0045aacea01198ccb2d67d7a845e087cf44126fa7813efd"
                ]
            },
            "variant": "v8"
        },
        "sid-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:39.595588681Z",
            "history": [
                {
                    "created": "2023-12-19T01:42:19.701164244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:87315e5e167fd91a3d1ede646c973d59238e8028ae596756114a38fc3f547a78 in / "
                },
                {
                    "created": "2023-12-19T01:42:20.083157584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.454891553Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.454891553Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.454891553Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:13.161712714Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:13.726063272Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:13.726063272Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:51:13.726063272Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:51:13.726063272Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:51:13.815026825Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:13.900797018Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:14.013367999Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:14.024694045Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:14.045276788Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:14.073252613Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:14.073252613Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:51:15.597160732Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:15.712267169Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:39.487703688Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:22:39.487703688Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:39.595588681Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bd5003216fd207ce863e6e32eba76fbb5b03c14c8a9c4bddd8f96fa122fd853f",
                    "sha256:768243a0f0fd3fe4770c5a5996e8518789e02897b309aa9469bc53e151de3131",
                    "sha256:b8fa6592e8cd705d4e647ea3036f9d9f94923ba8bd01b60a17829650073be55a",
                    "sha256:83a4d104825b6755af8ee16fba9f57cca55e01e47c703f365709439cfbf4beb8",
                    "sha256:a3a8acd80267f5fe0044a0f957eb05e7161a96f55fc239855b8f370c5091f3fc",
                    "sha256:b672a6422020617c530257ae3d37f0fcacedf4537ba992cc437b5c6579875683",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aca9f10ee7fa3894eff21e00c4fdad1f10699a7d5fe9e735198da79a602f1e22",
                    "sha256:569765eaea52a01bdcc35e59e7c260f063a18de5da78de2859543547138b0dc7",
                    "sha256:f07f78d45b019498d722ccd318f59062193e75e795349f5c643a3aced643bfcb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1e0e86e2601673d46b13d030362111c831871b57eacc63b924d45b8483f92b5d",
                    "sha256:36d589660488faafcaa05bfc8fed0a7080f933adb410ac721934e9b29c449032",
                    "sha256:70a5caf379db3560870f4d56f3823c83037025e818e3418b34282d850881c505"
                ]
            },
            "variant": "v8"
        },
        "sid-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:33:17.812528674Z",
            "history": [
                {
                    "created": "2023-12-19T01:42:19.701164244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:87315e5e167fd91a3d1ede646c973d59238e8028ae596756114a38fc3f547a78 in / "
                },
                {
                    "created": "2023-12-19T01:42:20.083157584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:42.413434254Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:42.413434254Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:42.413434254Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:24.829060013Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.410435744Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.410435744Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:02:25.410435744Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:02:25.410435744Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:02:25.485137412Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.566658591Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.690309431Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.713401075Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.757367126Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.76550826Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.76550826Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:02:27.3123863Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:27.43183628Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:33:17.707654013Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:33:17.707654013Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:33:17.812528674Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bd5003216fd207ce863e6e32eba76fbb5b03c14c8a9c4bddd8f96fa122fd853f",
                    "sha256:57c54fd382a74bcf84fcb39c0782c665ef25b930d8ffd930798c98cecd5b2f77",
                    "sha256:e0c665897629d49338dd976bdf2c8227652531b5a21965b7020cd3c1817c37f8",
                    "sha256:f6387863feebfbf2d4d3625017cc68624341239a4a32ab6ff3752934024ce1eb",
                    "sha256:c36be7ec2803c3519b5c512c7c1be8e04bbfae5e2259e016db140da54a94d0e2",
                    "sha256:07ef3a4c92324c7b943d00ae38c3b20355f1cc5e94ccb917f98cff270fba6927",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fc2a4faf93a5cfb355bb9868a4b2013ba665de8aee67f46fd312e41526a7b6e4",
                    "sha256:6fb33811229b7c63ebe73e4ad757961db37ebed7e409d5365e6420dcc9767e64",
                    "sha256:1e11cbef07312b1220400ec0b5811cfe24fe12eb6a42e3b7bf81f4ee0c78d285",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b65d92a183bfa656d30400bc4187478477939671ddf9d4b9650e7a69f722e9a2",
                    "sha256:2159fd6e3a34fac3ba000ba53c6a9c664706c6750825e6edd1e3a69ed3856272",
                    "sha256:2dc5afb3a45fc7cc3763e43e5cd2fbb760fa06ae900f601f98081b25e881ed05"
                ]
            },
            "variant": "v8"
        },
        "sid-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:03:44.160601687Z",
            "history": [
                {
                    "created": "2024-01-31T22:45:41.002396011Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:404098f18a319d87b54f468c2d47bc702383a93bba61beb9ae65c9b6bd1b08d5 in / "
                },
                {
                    "created": "2024-01-31T22:45:41.436970054Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:18.789686303Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.832651832Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.949861869Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.079134393Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.09135224Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.125740798Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.139415495Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.139415495Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:21.955425341Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:22.078187708Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:03:44.054333952Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:03:44.054333952Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:03:44.160601687Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5271b2435f69bff7e11108cbf4784d51bc5367eb3dc8aaa71d8da2f76d86751c",
                    "sha256:167c04478fdddae9bc0eac451a7c0fe932c5b5c8ba1f00859ca1f9449d7a1971",
                    "sha256:6c186a33d3148c201b6ba142b90bfbde32e114a46d55c0bd218e33ad45c34618",
                    "sha256:68a12e8558ac4f8d81dfc1085d9ce023631e4da42056b11382a169d01884f681",
                    "sha256:c350458d5becc3b6f2cf5aa3c46e09a5a7169037f22e65ca998fea34e7e67815",
                    "sha256:77065778d26f965bcb0a3f1d015f8011edb394860c4994c6b20dcbdda35066b8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f16ca79ca4245a03e2cae12c12b2dca48fd25c2c04deeabfd46558f95a542913",
                    "sha256:58bfd280c2c81be65e5cf6f4a479948fee14d27a5e221fdf571260ac7464e866",
                    "sha256:07a3cb15be5f14bbd6768cd36948b99a6fa6ecfbae362a4035f13fe827d6164f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:edb02e4be2dfaa9d4a374c81cc2f5a06735f42e2ea612c18cfba223ce17d2858",
                    "sha256:9d70cfd3465f88dddcaf1b84a3178b7d163444af4ed21c71692d027ba8a626dd",
                    "sha256:61801af29ca6df231d0fb7b9be45ab7d9062eb8bed19765cf3ea73455d17efd1"
                ]
            },
            "variant": "v8"
        },
        "sid-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:09:24.99946652Z",
            "history": [
                {
                    "created": "2024-02-13T00:42:31.927314001Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9845794117f07a74f4253366621af46ecf348594efafc251d5e08491bf8dddc in / "
                },
                {
                    "created": "2024-02-13T00:42:32.344218278Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:03.704688113Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:03.704688113Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:03.704688113Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:19.618704135Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:20.278888116Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.371147367Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.512017328Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.547809396Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.558442816Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.575377034Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.575377034Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:22.151449583Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:22.26936068Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:24.895286699Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:09:24.895286699Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:24.99946652Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce14b055581c44de7e9c862cb652f77db386dff14fc4cf01e1ad21b660ec3f38",
                    "sha256:e9e6853672a2970e38c9888492638eef6ad56962f74c18600d29cb2a86570649",
                    "sha256:b40d1d1caf10abda5930e85015d96a22c3dfa64d47d82f35be4a2f6183b13f2e",
                    "sha256:06b98a02a22f071505d6be98ea829c27247ff0dc141dbb0fb2943702e092af59",
                    "sha256:8187f996a8db65a72444f4a36770d0bf6d3a3d314358eefb683b24ed4d3a4e91",
                    "sha256:60ab886784832860bb31a0278868645d8089b5eb651d99c25341bb4e3ddf2a02",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:39587871f11cb4433b34c0cf8361197422183998de3e5d78d27ed15976e976d3",
                    "sha256:270db374ec8346792d1095479fc9636d5b8b86bc7b6750b376b972c1096d9270",
                    "sha256:5261b5ac040425531992ecc29ea60a5470c906b08127f35365778a9568229d34",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9af9cf531c57a3ef41f87618689b5c484507edf21a6c4e59b1a5cd67e85d6ea9",
                    "sha256:e6b99b993e11a9d586c50d4d026f85902bef65a7d9061e70b0fea4a313ca0c9c",
                    "sha256:439c3932e9e5e592453565838f7330bba6f2eeb56701dea4b962127cab812d25"
                ]
            },
            "variant": "v8"
        },
        "sid-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:03.003338098Z",
            "history": [
                {
                    "created": "2024-02-13T00:42:31.927314001Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9845794117f07a74f4253366621af46ecf348594efafc251d5e08491bf8dddc in / "
                },
                {
                    "created": "2024-02-13T00:42:32.344218278Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:42.288221705Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:42.288221705Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:42.288221705Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:04.75478048Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:05.435777962Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.522438412Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.638196364Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.648544997Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.687212348Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.696272732Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.696272732Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:07.335540496Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:07.45302794Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:02.899284235Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:46:02.899284235Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:03.003338098Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce14b055581c44de7e9c862cb652f77db386dff14fc4cf01e1ad21b660ec3f38",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:50d2a0a3945dc9c8c5467074aa71080c817c5fe615727383825f03e7ac559c6b",
                    "sha256:0187b4463836ee4d50726fac3d6027508efd2b7cdaa7e9c5524481569929089d",
                    "sha256:f1833770787ec1190b1a76f092c0325dfae8f80dbe568911aaa36eefcad66586",
                    "sha256:63f8596acb3cba5d3b5819ccb2c250d5be580e21a92b3ddbc4f7d6ef060dea7f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:987e0eb53e78e8ed04be665707e9b3e03320faa467729cfec7fb75fd45ae48df",
                    "sha256:097115b2dee01ffbacc8913f9e8c5242d0090497b9530c50251d08595f386ee0",
                    "sha256:497398cfb7038e71d858fa80cb140e912cf26e08a744905d4a483c8f62b30788",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:37e5bb2f19ac31b98b6fcfb877e24b4e2a9b03068fcd0fc541649ae3e670e1dc",
                    "sha256:c2a0932934d9f23ec03afcd35d9b6e52bb4fc43c01c807e627093aa9066cdcbb",
                    "sha256:cfe51f8cd60b0d08a514f852bcff3c6fc366479d53476be6f9904fddc812498c"
                ]
            },
            "variant": "v8"
        },
        "sid-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:24:45.994671534Z",
            "history": [
                {
                    "created": "2024-03-30T20:55:09.619182834Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:97ce7c2b141aefce55d96aa0d48aa3f2d80e8c2fbab838f8223e7bc6028eb6c0 in / "
                },
                {
                    "created": "2024-03-30T20:55:10.036508597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:29.810171521Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:29.810171521Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:29.810171521Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:30.734417352Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:31.391413657Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.472194476Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.616112719Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.660036125Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.66935303Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.678706291Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.678706291Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:33.261807476Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:33.378867874Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:24:45.874104554Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:24:45.874104554Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:24:45.994671534Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7b2113408632e421b96b4973140d4b4f7bc42d16eac94c362a78f873a7db3c4",
                    "sha256:21a499b362d1e69fe14f4bbf239d71b304f325e506988993eff8dbc2bcb8d9fb",
                    "sha256:08b0c4079b2097326a452c280cd17b5a3e2fe0a87acf5fc6479b6cff495a5608",
                    "sha256:8f3b87227fde99f7c074caff5b8bd0b1f5eedd46c0d2a648a7ec5d37291df352",
                    "sha256:09b0ae2f710df1f1dfe8baa1d90f9332478e8c1c9c53d820a823b9b7f743c87c",
                    "sha256:02b108f1473fe61b3b9e537da30ad471164cd2d3fdc762e408f6de0843738ebf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b7bc96e7361581ef0315f0d50235bfae2d6e6de9f13a5b821963b5b6475380c8",
                    "sha256:ab6073fffae2a300096ca07b8f883f13ecf8a442967f5a461779ce1260bf3d79",
                    "sha256:d9d289ecb10d221723e06edb9ba13a75c06d46d7858196c409931e08b42eedc5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fed66ee707abf3b5e1c8d61a0ae45186c2c17f386110ab7d155dc925ba3fc425",
                    "sha256:8abecd709ad410d16c99fd98db5cd502f214b5bbc6eb48496f644f13570b0e2f",
                    "sha256:4fbd91d359cb8c71b5ca181fb5b064d09bd75ad706df64c01f7ccdd4394f7ed1"
                ]
            },
            "variant": "v8"
        },
        "sid-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:55.127867907Z",
            "history": [
                {
                    "created": "2024-03-30T20:55:09.619182834Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:97ce7c2b141aefce55d96aa0d48aa3f2d80e8c2fbab838f8223e7bc6028eb6c0 in / "
                },
                {
                    "created": "2024-03-30T20:55:10.036508597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.991196861Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.991196861Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.991196861Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:37.929365647Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:38.622493586Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.713383634Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.86440518Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.904376089Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.915460785Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.926290554Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.926290554Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:40.241916774Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:40.365158356Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:55.023502844Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:16:55.023502844Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:55.127867907Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7b2113408632e421b96b4973140d4b4f7bc42d16eac94c362a78f873a7db3c4",
                    "sha256:e478c6e0380e9a6132a7b7595bdfdaa69afbff7a59589b5aa61ed9034934ea8d",
                    "sha256:6311f1da69cd036e597129cc2f028e7dc015cdeb084a113953d65fa7c6aa44b3",
                    "sha256:cc33373bf50b19f19fd773424ea43726dba236a24654efe53d644de99b9c7e92",
                    "sha256:d79a55f9d489f679a91d8ba40933b7b9a95ee64ef3fe4fba82cc0c68be2b23fc",
                    "sha256:ce60876772934b93095da76edac9e7dfb43757bcd16c9707c674df8a9a2dc616",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e73359ffaa50388b28e656b20344334a03cbc4098b800e1c4d01d8170e827a46",
                    "sha256:7f16b9d269c15ab1868a29df18371fb142d8dcdc46d96d6a0f9c8f966f6ca0c2",
                    "sha256:10582767685d8caa5283790f703f75daf9e2d69d0483cd6168d4da798e4db138",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5c7f3e7e22e3e169f50791f8b0d4f60a6be2e72976fce852dc748b0d25a0e8f3",
                    "sha256:8356c332d1183862ffa1a024e5c3fa514c54cbf61598cad53efd7b0a49bbdbdb",
                    "sha256:af62bf551ae0f112ff59675c39a2dcd6f3dc2258feb09fe7d4948ce0ead6b54c"
                ]
            },
            "variant": "v8"
        },
        "sid-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:01.019176566Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:46.549693015Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d9288b588fabaa08e04cb672bc35a2097342b3f02f41139eb43d57de6da8c81 in / "
                },
                {
                    "created": "2024-04-24T04:11:46.888411048Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:29.356936454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.181878158Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.264965848Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.405205375Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.444959158Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.457933015Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:31.760909982Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:31.900039891Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:00.90244188Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:41:00.90244188Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:01.019176566Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9a62ed1b29f3183a736f710a1ecbee6c64eeb410707ef36a1efbd2569c514f4e",
                    "sha256:5b578891d4c96f360d32e6765110a48a94e797bb65d704e0052143856e4c478b",
                    "sha256:9bd0d3a024c6d5c7b0d983a205069c8a81481bfcefec3526d45251dc5f3b5888",
                    "sha256:eaa995956e31981bcfd010bf69f2abb4a65c9f41f1ed53653695c69bb9ea4544",
                    "sha256:df5999b6e8e895cbb929edd2daa274878fe6c357ee79dfef1b9b26c51fcc96b5",
                    "sha256:c9568c957fbf55941583edd4edd6fd10b4207315d103484d27a9c6aa2ef56d19",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:935b9ff01ce4f98d41938bf1aef95c5a0b90d4c9d9793e1fa252c8f358516c81",
                    "sha256:745bb669cf154a6b1a0219368923e35b5fc375dd557248565b549b4f46b5f52c",
                    "sha256:542ad24d729f72e1c11b049e7c44b87821487b16fcf7dd922d6a4c5ba6aa391d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:549089fb1ee3ed008f80472bc7a312bf28a29d9996dde8fc5872fee1b9ede208",
                    "sha256:5b33e1568e10cf0b569cb46c00bd844100c17a4105d4e02f856e8eeb446af627",
                    "sha256:717d9b9203307bbcc4d1bc4e2a0cc56dea9cbbff65426b4cc1a743f3e37927b8"
                ]
            },
            "variant": "v8"
        },
        "sid-build": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:05.91359837Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:46.549693015Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d9288b588fabaa08e04cb672bc35a2097342b3f02f41139eb43d57de6da8c81 in / "
                },
                {
                    "created": "2024-04-24T04:11:46.888411048Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:47.614245815Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:47.614245815Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:47.614245815Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:34.136809299Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:13.279155064Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:14.484950386Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.580819739Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.701658215Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.716123681Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.757179902Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.785056332Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.785056332Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:16.257806296Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:16.384235703Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:05.831641291Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:41:05.831641291Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:05.91359837Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9a62ed1b29f3183a736f710a1ecbee6c64eeb410707ef36a1efbd2569c514f4e",
                    "sha256:89ca9b3c86afe3f160757936e3ad9f8c828ba55bcd5f4da8ba3eadc793625cbd",
                    "sha256:cd55c4e9bb37c3b1ab5c7753c9d17b56a7d023f9c715e51510082bf87d728ec5",
                    "sha256:5ff1d32dc7a12eee967a2076490cb7977d55b6ff29ab48c7f6cd53de235bab3c",
                    "sha256:48c3a98f2fcf54a4b97e6ae0a4916691049da33cb0bcf0efd6264eb801d9ea02",
                    "sha256:8179347e11ea633f4cdc9e902d567a3052e4f40f9e849d4748b6bb9b6b686f08",
                    "sha256:1e83b1b94b9f2b54ef744345756707ca590701db481d14f1b2de57e79f3a6592",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:dfb2b6ef345c5ff05de875ccbf85d6975a31f0a2598e11627cbeec1d71c149b9",
                    "sha256:e1c964431f0ee49a10165c6a76e281914b971c8a41c2c2e046669b374c254935",
                    "sha256:1faf5c460615b75e4d3c51ddbcfce375ac228cfa706b81bb8d1648d332514dd5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e401cb908f7db6f0d079c4936850d486f68b92bf8bffa4f33baa8edd95aafbed",
                    "sha256:14538bfa270980faee376c3171939ea5a4be2be6e0b992c6db22db5e7a1b2930",
                    "sha256:df8b11b700b18507cb08acac1d48e65a1c1142ccf5e08d9cdf03aa56fcddff10"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20231025": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-10-25T13:37:29.489684824Z",
            "history": [
                {
                    "created": "2023-09-20T02:45:22.667065441Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a755d77081b4ecd0ef0a9f252d63e52edde2f734a107af8e710fac98a7662076 in / "
                },
                {
                    "created": "2023-09-20T02:45:23.069333543Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:40.023683259Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:40.023683259Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:40.023683259Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:08:00.981886801Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:20:37.54210199Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:20:38.468214652Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:20:38.468214652Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T16:20:38.468214652Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T16:20:38.468214652Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T16:20:38.573359821Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:20:38.686471694Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:20:38.839073982Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:20:38.848774408Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:20:38.859040142Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:20:38.877557883Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:20:38.877557883Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T16:20:42.844123404Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:20:43.002721001Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:37:29.352358274Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-25T13:37:29.352358274Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:37:29.489684824Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:99a19093336c1ec25c5b376de093445ba2a3543aa98c9135a34ff2e27028e08e",
                    "sha256:9af62b4826742259cd7d165fab215e0eb9e1953ddec62202f3f1b675eb17bb36",
                    "sha256:63f4a6587b6a92c6b01734f190ca8f6ab2f8f95cbb1f96dce6c2d8337a75e12c",
                    "sha256:e072acb753b7c8f97c7775f0cbfdd3a2d5c20be63fd5156541f1e90d5404aa32",
                    "sha256:e8b707912590d91c70ab9678ff3e53bda265ee4093e2ba689a8e7a88366732e3",
                    "sha256:0f6f1468fd7d2c9aa80d1427759f7374cc24d2772caa373a0dd2015bd660c184",
                    "sha256:53f3aa4d6deeb97c2ffa23d6d245370f4dc6a5c83f03529c6847f6ff77f5944a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7e03801f3e000c4e25293b6a50f086a8591b7a73a5ea01ee10777ab470727c31",
                    "sha256:8f4a1df21d5e21493409b9f8bb45a54c1a2f5c770932ac87e66ce0b8d6cfb5aa",
                    "sha256:4afb0f60991b2a08d2f19235da5f8ad5ff87a219957044a5bf3de4669ad8f389",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6a276b40a783f96dc5af50a39f82e196d07ad09b9d1a2df214d33386fa314394",
                    "sha256:6f76923ef0c792bba5e5f66eb666b3b003f690ba80245a94a2caec0a1a68bc4e",
                    "sha256:47b2a2be7ad21e40312bfb8c056a66417539ce8837d3f047fe54ce44bad837aa"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-07T07:58:08.126896277Z",
            "history": [
                {
                    "created": "2023-11-01T00:40:51.142385972Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b78b25720d414357defe525a7c7f509b1e5666dcb2b0d31ebd409378a8b70a47 in / "
                },
                {
                    "created": "2023-11-01T00:40:51.541259066Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:47.987591637Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:47.987591637Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:47.987591637Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:28:13.226617159Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:37:55.770209781Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:37:56.616578555Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:37:56.616578555Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:37:56.616578555Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:37:56.616578555Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:37:56.721778944Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:37:56.831357704Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:37:57.065908103Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:37:57.08106054Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:37:57.092374888Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:37:57.128446823Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:37:57.128446823Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:38:00.266094119Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:38:00.417332965Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:58:08.009324919Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:58:08.009324919Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:58:08.126896277Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:24f74d3ffdf979c27de532c40cf584a7f430ac073dfda9c3e5c7d7684b7b40f6",
                    "sha256:becdf916bf7ef5f3eb4859959567a5c97ad8bc289dbc1e27b929635b3090de6e",
                    "sha256:60ec53f71dc1ad5643e4888c29daf3588d76861585c05a57191b69113f88a693",
                    "sha256:4b148187844342789545b01f5ba8dcddaaedf25b1c2344602a2153046a6d6be0",
                    "sha256:3590b1e8ffb181708bee8520deea4de9500a7a70b91e4167e09b912cdb2328c4",
                    "sha256:897e5f5186b78050fd82671616c0ea284b18c7a2e91a8b3f05291d217e53cd98",
                    "sha256:b43506d048dd9413d98b04ec7ae2eeef1cfe8c6f2625c5b7a083f03cb7b594fa",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:faed1ea048b42d7cb19e0c72f5fb33c3f35bec39922fd1bac88fb8bb93f1ae77",
                    "sha256:ae0f4f64b41f8ed6fd4e518dfd60c45629b83ba1e7fb08fc8e16e0f5447ac68f",
                    "sha256:1e00063caadcd4a2c9a388368e752da5f3de558d970dd49406ba5ed2e46f5847",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:85eee0704831450b72aa7dd79fd076a2d1000eeefd12cef02140049464f4b7f9",
                    "sha256:6d7f1f23cfc799c777821d0ce9d6b76679aba3fd0a9af99175b79721e671a9fc",
                    "sha256:352ebb60805d8e685d5c4c6d4452b05852f5ff41a5679e2d7efb108015a0cdac"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:40:20.147047062Z",
            "history": [
                {
                    "created": "2023-11-21T06:28:15.789131205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f91ce1fc939cf47fa3e65fc897fe15d50189c5c43311f1c5e2556c65aed93cc0 in / "
                },
                {
                    "created": "2023-11-21T06:28:16.253991764Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:23.642010041Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:23.642010041Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:23.642010041Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:14:58.971057149Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:24:43.138568353Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:24:43.950483483Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:24:43.950483483Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:24:43.950483483Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:24:43.950483483Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:24:44.051421088Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:24:44.149707684Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:24:44.280935567Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:24:44.290857029Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:24:44.299677132Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:24:44.308908952Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:24:44.308908952Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:24:45.944766626Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:24:46.085237002Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:40:20.048748342Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:40:20.048748342Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:40:20.147047062Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:86d175f9abce2fb22e461a982e6d4c26451edede133cae6f0e681f49fd76ab62",
                    "sha256:7818b6fb00157b3a560bb5729fbba0ea5351cc30c1b8f4a898136529a944e6a7",
                    "sha256:f4d9f8e47f10d88a593caaa60391a710dd54e5520e57855044c2518334656e76",
                    "sha256:8d1ca26352a82764b9ea6f335a756d3d9b81696eb458db9119e97dd54c3f301a",
                    "sha256:5441816436622ac7dfb779846bfd157ce08b0dbe29d89b7c0a1b654a2508bd07",
                    "sha256:8fe4dbc675c8b7c4009c9354bccad646e5591dd6c1711536b1d947474e5dba14",
                    "sha256:5b77afcef02ff94894176bafd2478bf4798d2cc799a94df88fb66da006f64c34",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aa2feaf71c10b77845dd0bae6dfa0c2068f07d22181b807cbb49f7b2c13f7f4b",
                    "sha256:6099277078dcfe2daf2e42b2b799057e8f97621a2b8ad290af4b50c7c0a9aad6",
                    "sha256:73f0c3ccd5e50f83f5a2ac95e80ea2d42d6849263351f51921e325e0b2a26ee2",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6e332c28703c1233ad76d955ce144a14588398c067ce61176ed10683ec5ebd14",
                    "sha256:8a981bd0fe0da557200eff8d2d4719d28726db5fa5c6a8c736190413fa2f2d5d",
                    "sha256:478489ef69278693aafe1bd99887152129d90e17d1bf32f21a13c2f21ef68712"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:11:31.013630012Z",
            "history": [
                {
                    "created": "2023-11-21T06:28:15.789131205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f91ce1fc939cf47fa3e65fc897fe15d50189c5c43311f1c5e2556c65aed93cc0 in / "
                },
                {
                    "created": "2023-11-21T06:28:16.253991764Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:36.576427468Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:36.576427468Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:36.576427468Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.737605223Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:54:28.095635674Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:54:28.883308001Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:54:28.883308001Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:54:28.883308001Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:54:28.883308001Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:54:28.992135308Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:54:29.093522562Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:54:29.226777477Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:54:29.238113145Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:54:29.248919373Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:54:29.258303323Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:54:29.258303323Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:54:30.879220622Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:54:31.031031634Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:30.898463318Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:11:30.898463318Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:31.013630012Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:86d175f9abce2fb22e461a982e6d4c26451edede133cae6f0e681f49fd76ab62",
                    "sha256:7e2330a459d2671d1e02b3766a3adbfc668995b941240adfc059983703565906",
                    "sha256:53b9dd3e4736ad0746b1bf23fc11d3aa72045b5faf14daabf303e5a9d6bc9a58",
                    "sha256:d34619e975ff5c86a5b5e664dad62113ab67bb447005fbae6de2ce29e6925f3a",
                    "sha256:dffa7d2312f4aec87f1baf646fcc433591f6bd13fa2b8366038ba3a1a3f7a16f",
                    "sha256:30f1786ec038dded7b34d3c56c46c93b2710ad5f84387d24cecad1503dd8792f",
                    "sha256:5f642a3dd5c4c2728909ad921159aaea7c89243d19affcea0e7d8ff7d690c2bc",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e4dc90b9ea2b55b382aaf37c8bb3c6d275254399efe77cf0b553b90e11d8a51b",
                    "sha256:4bb21c9e0d50be8a7898be9f1525139950c2643a258708dfdd609702b7fe1e01",
                    "sha256:be00d711c8e3b756677a5d9f9d12ff8a4ef4e8a411d78950b4214b0b38dfdc16",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:62dad3978c07a1a74b14403755ae1a38aed8044368f9343e7dbd06d5472112c6",
                    "sha256:fb27de723d02894b760c66930554255065587f8445fb7e972c405d0460413d71",
                    "sha256:cee23b0038d094718bc4f906d2a4f217cb9e95ac61a6a2872059bee5e60a6baf"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:31:05.950075018Z",
            "history": [
                {
                    "created": "2023-12-19T01:42:19.701164244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:87315e5e167fd91a3d1ede646c973d59238e8028ae596756114a38fc3f547a78 in / "
                },
                {
                    "created": "2023-12-19T01:42:20.083157584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.29373107Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.29373107Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.29373107Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:17.940727821Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:15:19.865140021Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:15:20.622783266Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:15:20.622783266Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:15:20.622783266Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:15:20.622783266Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:15:20.707254857Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:15:20.801652367Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:15:20.921774114Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:15:20.93626186Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:15:20.969467426Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:15:20.981210141Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:15:20.981210141Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:15:22.594038399Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:15:22.720997808Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:31:05.860207912Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:31:05.860207912Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:31:05.950075018Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bd5003216fd207ce863e6e32eba76fbb5b03c14c8a9c4bddd8f96fa122fd853f",
                    "sha256:a8831bc4b02053919cdc5b288fbb2ac73a9447cafe2139e83d82d15a3220e9e6",
                    "sha256:4a8b6bcdddee4fb700f03db9b736e84401b1b4916698127811f45e4690623706",
                    "sha256:2d0d444284493d431d8379db529fc8ebc0b67d5960df04790ea65c63543273f9",
                    "sha256:ea6c96ec2889611f36a3e7301bf5827b402454b9300c15e69f69ba8991776409",
                    "sha256:54f83f9425e47bf15ed520844a45eeb8c675bbbff3fbd52e21c0bf24e418ce11",
                    "sha256:2ffadb24a8a54ff619aac491952ede0aa5af548b7e6992fc6aaada801a3335e9",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:7d7e72f2be87cc8484a85b384f5ead7f2f04575f12c7054ed4aed353ea00379a",
                    "sha256:ff3c9d6917b8fe865a11c469a1d5d206893436d1e5fb7d03e743a5bb9bfccdcd",
                    "sha256:b60e0abe26f08e795fe9358194c6e3883f4ab54302ef5fe41c90b9c6e830911e",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cc3375d8e78631b7dc8852422240679dbdd3472e190969c1339d3ad125eec3b4",
                    "sha256:57d0f7001912117fb7eb638ed83cb11fdfd85a049d529d9419b267c76d166670",
                    "sha256:5d80f2e27cc3b953bfd5dd039cca28f29ecf649bbcae719ca7455cb35800bdd1"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:41.507837949Z",
            "history": [
                {
                    "created": "2023-12-19T01:42:19.701164244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:87315e5e167fd91a3d1ede646c973d59238e8028ae596756114a38fc3f547a78 in / "
                },
                {
                    "created": "2023-12-19T01:42:20.083157584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:44.708958619Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:44.708958619Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:44.708958619Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:23.839896938Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:06:43.153597847Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:06:44.524224416Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:06:44.524224416Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:06:44.524224416Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:06:44.524224416Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:06:44.62032058Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:06:44.709176974Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:06:44.832016413Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:06:44.871414073Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:06:44.882625268Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:06:44.893874907Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:06:44.893874907Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:06:46.633172628Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:06:46.762423442Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:41.422699891Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:22:41.422699891Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:41.507837949Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bd5003216fd207ce863e6e32eba76fbb5b03c14c8a9c4bddd8f96fa122fd853f",
                    "sha256:2a8b34f86b54241b1df0867cccacf5df1798e6e0f440c1857c2ca35afcda5656",
                    "sha256:d575724e457bc0adae73f4daac9695f82ad16b825cd8fe407e3f1b7ccc1ae332",
                    "sha256:5107276da57736f1e4ff85afc8756af1e5cab6f3201b4033952ea08f988c0325",
                    "sha256:f7a860f40c3d10c4d26cb752269229377fd3c8c96ad485fb92ce69ae4164686d",
                    "sha256:df999ecf08abefe6af9895073ac1947b71bc0e4f1f62219df080fd9a0ae13332",
                    "sha256:cd0698236e11cbec50f506798142e8050efe7f1f78b9ef971c4b9a806b86585d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b4fc203daa17a03ea6ffe12b28d3ec48bfd5b13069c867fa7d3e4ab3e279abc9",
                    "sha256:206a8bdae77c4b1a51b58dd6a5cd4a289b4336384b316bf59f47e324bbe4970f",
                    "sha256:7240e790621b7629a55a8c6d3bb68fb471340487a8666588fa37eee1dd772a8b",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:8cf4bc6a25ea2455910757886e2b81c0ce5725e1e9303109cb972ff5a0b2b3fa",
                    "sha256:bd3f8575fe09c8cf9f9d3e80f35643eba00fa4546c23e6cc28fdf54a28153e29",
                    "sha256:eff8a1d8e01fe7465ac24698bccc9414093c5c22aa1c7b35cad8a1517ae066f7"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:33:14.592190102Z",
            "history": [
                {
                    "created": "2023-12-19T01:42:19.701164244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:87315e5e167fd91a3d1ede646c973d59238e8028ae596756114a38fc3f547a78 in / "
                },
                {
                    "created": "2023-12-19T01:42:20.083157584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:47.378274579Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:47.378274579Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:47.378274579Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:31.611252192Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:17:37.014812717Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:17:38.107114973Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:17:38.107114973Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:17:38.107114973Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:17:38.107114973Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:17:38.186012722Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:17:38.265553706Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:17:38.380805Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:17:38.392774463Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:17:38.404769056Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:17:38.437570402Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:17:38.437570402Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:17:40.157814784Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:17:40.284047569Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:33:14.490296895Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:33:14.490296895Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:33:14.592190102Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bd5003216fd207ce863e6e32eba76fbb5b03c14c8a9c4bddd8f96fa122fd853f",
                    "sha256:ae8d66c1c1149d3e25d4dac24281c534893c5bb9cc87c4fe76e9eb097e10ead5",
                    "sha256:f5e8b32679675a864bb54f9a46e935cf64103e88e4a5e00580847e4326880c59",
                    "sha256:1aa31094792b40c0b493e62192d66e7b233b4b0255988632504a31ecde7c66e1",
                    "sha256:2b25768531d7d0bf86fb01422710bcef804f4095d49fa3da494b448dc7fd7d69",
                    "sha256:d30df9b177b5870c2f8ffafd4ff53afce2d8a0882700d4f766bea8683c7744f7",
                    "sha256:7a4d9b883cd2e681d6efc68f4ea0dbc78957d9ea523f52065a9c0e0d1d8b8fba",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:37f3b35e9766f54f4e0353f07721cc391374617388f812ec55aadecf76802afc",
                    "sha256:91e6b51aab7e906c723d835cacf91c9431a17fd3bb408d6594895b13122ccfd3",
                    "sha256:b625e24a107421692180e3706edd0ccd1535167e2d024dd970bf52e5791e3cbe",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:23faa26c5c2fc79eead75c7c8835af69ab29a69eaa5c14cbaacb3aaeb75d3721",
                    "sha256:469fbcd8764e7cce598c50dd67f092c39522966dc68f3386fd0f86ef7f1b2229",
                    "sha256:237c2b3eac6a91623f3d1cf0225a1b23c04d5e606c131c798783a204bfb0fc77"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:03:51.045619453Z",
            "history": [
                {
                    "created": "2024-01-31T22:45:41.002396011Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:404098f18a319d87b54f468c2d47bc702383a93bba61beb9ae65c9b6bd1b08d5 in / "
                },
                {
                    "created": "2024-01-31T22:45:41.436970054Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.360233107Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.360233107Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:27.360233107Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:06.150734064Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:21.109900957Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.327382506Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.327382506Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:48:22.327382506Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:48:22.327382506Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:48:22.419576145Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.507475525Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.629382955Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.645509288Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.658485381Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.671134226Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:22.671134226Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:48:24.339793595Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:48:24.460102976Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:03:50.960358345Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:03:50.960358345Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:03:51.045619453Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5271b2435f69bff7e11108cbf4784d51bc5367eb3dc8aaa71d8da2f76d86751c",
                    "sha256:2e55ad6098929cea35d055f04be64d1d009cb2b08e4e7580918581b8e76d45bd",
                    "sha256:e862b13ee21fc6d00626ed800baa54b8925bacd5b148828b7b5746f415ce7924",
                    "sha256:53fd770dfb8390e3e28d5fe8d4e3f4127337754535bca52f03aa45c5f8c16f08",
                    "sha256:2549c1a2afae7cabbcd2cef9f837eecc9b4021c24c59ca15926be5e1a522fff4",
                    "sha256:81830960cbbf8cae2626763432ebcd9c9d0b9ee977d8508e2d8cdf4484f33c08",
                    "sha256:fceb0a4eb81c9eeb4d392f6d79e7ae149a4523f4bcbbd20e8256c186ef9c2a09",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9626b9f9e8ee00f46397995cd06c96ea8ec61172b0e8c78ebb445c68ca724d6d",
                    "sha256:821d03340820d4ee95ef41f347c1c5e6945e07f7ef41d0aa68091d35c2c57f10",
                    "sha256:dee50a91b3e7bdebd2f0c5eda064a548a26d2aba5607f3f147046079fa287bba",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:ddb0cf29e702d83a54375162d94ac1dd3b5aa2e7ef773088f4760a944b4d6682",
                    "sha256:c6da51de6db7ba24a7e06ce1781c8e7dd8f23ac48caa2640347f638ea8d44fef",
                    "sha256:68562aa7f6570a01e385c37183dd59e4e29558295a71b21eceb9dd9c07ecce64"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:09:36.087765575Z",
            "history": [
                {
                    "created": "2024-02-13T00:42:31.927314001Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9845794117f07a74f4253366621af46ecf348594efafc251d5e08491bf8dddc in / "
                },
                {
                    "created": "2024-02-13T00:42:32.344218278Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:06.232116184Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:06.232116184Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:06.232116184Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:24.702054985Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:03.683944436Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:04.954659523Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:04.954659523Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:55:04.954659523Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:55:04.954659523Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:55:05.036907008Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:05.124744323Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:05.240567147Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:05.250185612Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:05.258588575Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:05.293909559Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:05.293909559Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:55:07.024584641Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:55:07.144436399Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:35.999432926Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:09:35.999432926Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:36.087765575Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce14b055581c44de7e9c862cb652f77db386dff14fc4cf01e1ad21b660ec3f38",
                    "sha256:6124e0ef078177c96769fe59dd5d1c4388364eaed36d0a41820ec1540ee7f7a9",
                    "sha256:e88fb7f32458386d70ce4ea605541bd50e841aa3659c9cf3f48b359b8f881073",
                    "sha256:8718054879ae26dbe2cf59e15d38ee47ce1b425fc0142c3eb1fdf4d4fddbe679",
                    "sha256:0421b78184bedb272930db29251f461007042b0f06ef779cadaf5dcbbe0c6ef7",
                    "sha256:ff55801f3816d08a5a0c696cf5f4c714370be31479ab31078c4620ce4130f3b6",
                    "sha256:3a7383ac5e661a1b582d5404a71d58e68a90b7f6e5e454d19fe67e262dc5369a",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:85560bc6d1617f5788b44b92d46fa83b608d90bcafd724fdc5415e66bb45fc4e",
                    "sha256:6d2e212ac896f4196f6bdc0dd05f524c6b5520e88bf374f6e4120bcbace698f6",
                    "sha256:657f5ca344c6b0f7c457540315bcc480e75e681035e6f79ad484bc7dc6f303eb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3bd5f62a5c2b87364594fb0fa9cdb8de6a270bd98c16bafd012e032293aff31d",
                    "sha256:12c687901ed858f28bbc8040fdaae2aaa072a08b8f0227e58b0e6f6b49a9151e",
                    "sha256:888ca44ca398ffe4b25b93804de8b082480016b6b32df2527fb0bca162cfebd9"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:04.312993726Z",
            "history": [
                {
                    "created": "2024-02-13T00:42:31.927314001Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9845794117f07a74f4253366621af46ecf348594efafc251d5e08491bf8dddc in / "
                },
                {
                    "created": "2024-02-13T00:42:32.344218278Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.877327987Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.877327987Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:43.877327987Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:04.873802481Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:27.503744636Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.2471064Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.2471064Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:28:28.2471064Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:28:28.2471064Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:28:28.326274161Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.430472776Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.544556086Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.553685489Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.561670361Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.594391478Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:28.594391478Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:28:30.236574932Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:28:30.364605757Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:04.228442086Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:46:04.228442086Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:04.312993726Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce14b055581c44de7e9c862cb652f77db386dff14fc4cf01e1ad21b660ec3f38",
                    "sha256:7d4f7982334e1f907718a483851602439207f7ec70b3f0a8559614f9dd255d30",
                    "sha256:b13b33e795933c4688327e8254b3a4aaa2c6064c705e5be93fdf242466d9c618",
                    "sha256:fd70fca9f465edc329fdee69f86026569f6e78d73e7feb61b297f4b53ff2777f",
                    "sha256:78b532aeda69743c326326e486330070bec1d5e0132ea997acdedf63efe5fd83",
                    "sha256:46b49611bceb8bf3122cc8751f39686e2fc4f6dccc434a5ea1d85b40f253c9db",
                    "sha256:a0194bd4b898b4690eba8393bf0d5b0c63aaeec2c99f2728563b89e93d418325",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b8015cf0de3f3d63d47d152896ccd1df2e389ccfea04ffbfdefdb32b8506f9dc",
                    "sha256:41a2d1eba37067517544de349e287e46a82e507561c2894f45a4c6e839e7719b",
                    "sha256:f2af847b7f5dd6fe8f30fe4d7850f68005a0e3d3e08857a5ed1b6bdd41425768",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3119b4ef5945dbffeb51f1f62d720e1ce343473795fc48a08353cd3f04367dea",
                    "sha256:a8dcbec9bad824137710ee64a743fce9d8b2e30c9535df98d538bc2a803e42ad",
                    "sha256:5ea424f6a86b23a116bf55126c5c821da3d147f11629fcad04c2378e784a4eff"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:24:48.341047248Z",
            "history": [
                {
                    "created": "2024-03-30T20:55:09.619182834Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:97ce7c2b141aefce55d96aa0d48aa3f2d80e8c2fbab838f8223e7bc6028eb6c0 in / "
                },
                {
                    "created": "2024-03-30T20:55:10.036508597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:31.047245208Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:31.047245208Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:31.047245208Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:32.721625308Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:40.444204213Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.126779713Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.126779713Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:06:41.126779713Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:06:41.126779713Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:06:41.210595639Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.295834461Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.435598931Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.471503791Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.483495254Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.496057201Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:41.496057201Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:06:43.156053533Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:06:43.282803146Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:24:48.253603996Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:24:48.253603996Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:24:48.341047248Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7b2113408632e421b96b4973140d4b4f7bc42d16eac94c362a78f873a7db3c4",
                    "sha256:86ae7b0949bcbead5e76b4afadc9df92ea698fbbc77cecbcf5caeee4f6afde4b",
                    "sha256:0ab88cdea47afd7291e46c7ea22e50292220a395e01da3193c7b70946245bfbd",
                    "sha256:066d020b41897ea4d4ffa5e233cf03ffeea5dea8a636a25796530761db3d0981",
                    "sha256:e0d8c550891749f7eeab062114d3bb54bc521ed09ec47ed90612e5fdc1688f1a",
                    "sha256:12edb9da32c7c7f14d4f6150e2ad2219636e0056ca387e9ed81fcf4ae10f997a",
                    "sha256:fe7728bedee4c718f9bd6c370a8510a432fccf53a76ee43d286c98ddd7144ea4",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fbf1169163e775d22c5e0942182d7d2eb74a3046c74a1dad7af374fb15220c23",
                    "sha256:12deb041a7e48969050866d4b4b27f777cb69cccf0921c4fb6c91f6042b728fb",
                    "sha256:fa68d8ff867c49381a7d88491a9edfa09da241733a1880fa6c6acd3b111ab9d6",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3fa65e3d6deb051faf8998afe1e4b3c1ca65d03110483781b44f50bee59a6966",
                    "sha256:3f055e94cb85ea105186ec28f20d1ca99d8265d364776462d804cb79b536e068",
                    "sha256:6016753f45dc9182d401e3c020b51c93ceac613b191b68b014aec9c1afd69aea"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:47.692993877Z",
            "history": [
                {
                    "created": "2024-03-30T20:55:09.619182834Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:97ce7c2b141aefce55d96aa0d48aa3f2d80e8c2fbab838f8223e7bc6028eb6c0 in / "
                },
                {
                    "created": "2024-03-30T20:55:10.036508597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.244794509Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.244794509Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:47.244794509Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:33.754138635Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:54.926154667Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.125844524Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.125844524Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:59:56.125844524Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:59:56.125844524Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:59:56.207622712Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.287944727Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.411270965Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.421782799Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.452576845Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.462270928Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:56.462270928Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:59:57.855892581Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:59:58.008648987Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:47.603663563Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:16:47.603663563Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:47.692993877Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7b2113408632e421b96b4973140d4b4f7bc42d16eac94c362a78f873a7db3c4",
                    "sha256:6eaa333c979825dda7016737e8809208f1e2f20184370fe199235cee48f1299d",
                    "sha256:23b25ff3ecca36fc0112555fccae30e604fbfe8252ed60bbe37b173192aed241",
                    "sha256:666b72c346d6d5652dbe86040f0057b944d0f68716cd481e8016852058adb3e8",
                    "sha256:1692fc77852e6f7524e6c9bea077a8ae74ec6e2814f6245bfc574f0340843386",
                    "sha256:b187d423d040e942b55cc1de9fe09b0b16395b4f1373b400907abff7f44849a3",
                    "sha256:e64b704b9da29ee9601d7d7ba78b5df42ee3f43df9acde471d7bace19f74c045",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:314d83d41e395d075ca112d082b5afe583f54f1102fd36e2c5e0fbe08715440b",
                    "sha256:95e34243bfeecb67ef34046456751ee58c8473a3289f7893eb7fc5da705cc9f9",
                    "sha256:52614d0cefa66c14e5410dba3c397ecc2fd0f4cecd582e478203cceb7c5eae60",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:6db02f02e38f328332fbd48ea663ccae779d8ee47be95c5f3a8b378ec75d0ce8",
                    "sha256:23144772b2ace0381b7f1d011066b26501fe05ce4313c9e8db718c57e6eea5b5",
                    "sha256:0393e15f88960377c56028936f70e628353c993c1bea8cea94fce9ce95b69ad7"
                ]
            },
            "variant": "v8"
        },
        "sid-build-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:05.91359837Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:46.549693015Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d9288b588fabaa08e04cb672bc35a2097342b3f02f41139eb43d57de6da8c81 in / "
                },
                {
                    "created": "2024-04-24T04:11:46.888411048Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:47.614245815Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:47.614245815Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:47.614245815Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:34.136809299Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:13.279155064Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tca-certificates \t\tcurl \t\twget \t\tbzr \t\tgit \t\tmercurial \t\topenssh-client \t\tsubversion \t\tautoconf \t\tbuild-essential \t\timagemagick \t\tlibbz2-dev \t\tlibcurl4-openssl-dev \t\tlibevent-dev \t\tlibffi-dev \t\tlibglib2.0-dev \t\tlibjpeg-dev \t\tlibmagickcore-dev \t\tlibmagickwand-dev \t\tlibncurses-dev \t\tlibpq-dev \t\tlibreadline-dev \t\tlibsqlite3-dev \t\tlibssl-dev \t\tlibxml2-dev \t\tlibxslt-dev \t\tlibyaml-dev \t\tzlib1g-dev \t\t$( \t\t\tif apt-cache show 'default-libmysqlclient-dev' 2>/dev/null | grep -q '^Version:'; then \t\t\t\techo 'default-libmysqlclient-dev'; \t\t\telse \t\t\t\techo 'libmysqlclient-dev'; \t\t\tfi \t\t) \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:14.412673143Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:14.484950386Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.580819739Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.701658215Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.716123681Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.757179902Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.785056332Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:14.785056332Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:24:16.257806296Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:24:16.384235703Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:05.831641291Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:41:05.831641291Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:05.91359837Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: build variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9a62ed1b29f3183a736f710a1ecbee6c64eeb410707ef36a1efbd2569c514f4e",
                    "sha256:89ca9b3c86afe3f160757936e3ad9f8c828ba55bcd5f4da8ba3eadc793625cbd",
                    "sha256:cd55c4e9bb37c3b1ab5c7753c9d17b56a7d023f9c715e51510082bf87d728ec5",
                    "sha256:5ff1d32dc7a12eee967a2076490cb7977d55b6ff29ab48c7f6cd53de235bab3c",
                    "sha256:48c3a98f2fcf54a4b97e6ae0a4916691049da33cb0bcf0efd6264eb801d9ea02",
                    "sha256:8179347e11ea633f4cdc9e902d567a3052e4f40f9e849d4748b6bb9b6b686f08",
                    "sha256:1e83b1b94b9f2b54ef744345756707ca590701db481d14f1b2de57e79f3a6592",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:dfb2b6ef345c5ff05de875ccbf85d6975a31f0a2598e11627cbeec1d71c149b9",
                    "sha256:e1c964431f0ee49a10165c6a76e281914b971c8a41c2c2e046669b374c254935",
                    "sha256:1faf5c460615b75e4d3c51ddbcfce375ac228cfa706b81bb8d1648d332514dd5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e401cb908f7db6f0d079c4936850d486f68b92bf8bffa4f33baa8edd95aafbed",
                    "sha256:14538bfa270980faee376c3171939ea5a4be2be6e0b992c6db22db5e7a1b2930",
                    "sha256:df8b11b700b18507cb08acac1d48e65a1c1142ccf5e08d9cdf03aa56fcddff10"
                ]
            },
            "variant": "v8"
        },
        "sid-run": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:01.019176566Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:46.549693015Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d9288b588fabaa08e04cb672bc35a2097342b3f02f41139eb43d57de6da8c81 in / "
                },
                {
                    "created": "2024-04-24T04:11:46.888411048Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:29.356936454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.181878158Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.264965848Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.405205375Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.444959158Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.457933015Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:31.760909982Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:31.900039891Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:00.90244188Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:41:00.90244188Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:01.019176566Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9a62ed1b29f3183a736f710a1ecbee6c64eeb410707ef36a1efbd2569c514f4e",
                    "sha256:5b578891d4c96f360d32e6765110a48a94e797bb65d704e0052143856e4c478b",
                    "sha256:9bd0d3a024c6d5c7b0d983a205069c8a81481bfcefec3526d45251dc5f3b5888",
                    "sha256:eaa995956e31981bcfd010bf69f2abb4a65c9f41f1ed53653695c69bb9ea4544",
                    "sha256:df5999b6e8e895cbb929edd2daa274878fe6c357ee79dfef1b9b26c51fcc96b5",
                    "sha256:c9568c957fbf55941583edd4edd6fd10b4207315d103484d27a9c6aa2ef56d19",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:935b9ff01ce4f98d41938bf1aef95c5a0b90d4c9d9793e1fa252c8f358516c81",
                    "sha256:745bb669cf154a6b1a0219368923e35b5fc375dd557248565b549b4f46b5f52c",
                    "sha256:542ad24d729f72e1c11b049e7c44b87821487b16fcf7dd922d6a4c5ba6aa391d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:549089fb1ee3ed008f80472bc7a312bf28a29d9996dde8fc5872fee1b9ede208",
                    "sha256:5b33e1568e10cf0b569cb46c00bd844100c17a4105d4e02f856e8eeb446af627",
                    "sha256:717d9b9203307bbcc4d1bc4e2a0cc56dea9cbbff65426b4cc1a743f3e37927b8"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20231025": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-10-25T13:37:36.37280216Z",
            "history": [
                {
                    "created": "2023-09-20T02:45:22.667065441Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a755d77081b4ecd0ef0a9f252d63e52edde2f734a107af8e710fac98a7662076 in / "
                },
                {
                    "created": "2023-09-20T02:45:23.069333543Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:47.266142218Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:47.266142218Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T15:49:47.266142218Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:09:37.588502993Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:09:38.581962706Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:09:38.581962706Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T16:09:38.581962706Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T16:09:38.581962706Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T16:09:38.683178197Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:09:38.795327187Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:09:38.938043074Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:09:38.99224007Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:09:39.001993169Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:09:39.013117868Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:09:39.013117868Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-07T16:09:43.355650904Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-07T16:09:43.505847909Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:37:36.206055712Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-10-25T13:37:36.206055712Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-10-25T13:37:36.37280216Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:99a19093336c1ec25c5b376de093445ba2a3543aa98c9135a34ff2e27028e08e",
                    "sha256:a71351fd3c7ffa364d7c18a6283fda2ba0f13046d690e21a3b508f1d823bbcb4",
                    "sha256:3671a97e6238f4e5a4bbc4cb217de7a8b3554e99cc2ef5736dec86638bf76339",
                    "sha256:439a5acda0247b9fe2b01bc5f625a409b24586abd440ec7f3bdd49e0cf2d14c1",
                    "sha256:ea8922d7a0f0080c451f80d9a2f7f719aa7ebb3375c8e0249dbfed082821bd72",
                    "sha256:57cb61ed3dbe878df050b744536bb6d2e172dfe7678c032d6a29e8c538ad2cea",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:c0d1a5d78e971a0793487525abfc9cc7501e8aa241ff69ff4b0a8826ca789e34",
                    "sha256:a2d6a1aa103f1080c35da5a9b1a0704b6767c4c688cacc6d49cf9e44991b90d9",
                    "sha256:eb33d4dd744b5290af46fa578e2dec299795f78e995da9c51bf92ba6892cdf67",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:cfb1aa22bbace470570734975250db2aaf2838f5a1a7f729d3ddd8ec19cdf6ed",
                    "sha256:1fbd5e9414ad4be884f61fb4b4e10074a540899e69f8078aece43ca868df92bb",
                    "sha256:ffc1738392329fdfb9f6c682786656ba701419154114db90ec2bb7a9c22ada20"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20231106": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-11-07T07:57:37.140996849Z",
            "history": [
                {
                    "created": "2023-11-01T00:40:51.142385972Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:b78b25720d414357defe525a7c7f509b1e5666dcb2b0d31ebd409378a8b70a47 in / "
                },
                {
                    "created": "2023-11-01T00:40:51.541259066Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:52.795503283Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:52.795503283Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:13:52.795503283Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:28:14.066022282Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:28:14.736917425Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:28:14.736917425Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:28:14.736917425Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:28:14.736917425Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:28:14.834078561Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:28:14.94114496Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:28:15.075164615Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:28:15.085923804Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:28:15.096485829Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:28:15.11147321Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:28:15.11147321Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:28:18.141179592Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:28:18.281317857Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:57:36.986966018Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-11-07T07:57:36.986966018Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-11-07T07:57:37.140996849Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:24f74d3ffdf979c27de532c40cf584a7f430ac073dfda9c3e5c7d7684b7b40f6",
                    "sha256:64ecfa91fc6732d0653a525736ae732e130a31d85c9d0012d64bcaffff2c915c",
                    "sha256:570567b6aac9e04ce3dba1b58618b3380dd0c64629701b2bc3e6e3656346cea1",
                    "sha256:6d91b0708a31764655a668ee60e999ff68beec7d02b125ace910d0f3d404f46f",
                    "sha256:662a823dc6be1530e8f3fffb469f972296f8397a397c6b5e2e60ffa1c8c07d76",
                    "sha256:394401f41bc81f485376f4fd6ff62514074296168e31d38a82a6c93e587c3aa1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:18615609aa51b8772c61687a02ecb1b6a2b62ba209a45b6d5f8b7dd13fd4483f",
                    "sha256:49b8c7f0001442001f8d2faebfa3fbe54e75383e9050cadf8f1e301e78e6bc65",
                    "sha256:29760ea11061c6ab3364a510ff6f832340971e765aa869b82c1ac6f55b392459",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:4b40cf86f31e16308b3f7b99f93f5a4089e62b73a54ea72c471433e30f803939",
                    "sha256:799722b009573ad18bcfaed0c870124b4871a9d5018d3f74b47f8163ea2aed70",
                    "sha256:abb4aa6176ac2e1ef10b0493cd61d37f66f56f7e5d561221cf99b9300d2b02da"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20231127": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-03T15:40:04.536375456Z",
            "history": [
                {
                    "created": "2023-11-21T06:28:15.789131205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f91ce1fc939cf47fa3e65fc897fe15d50189c5c43311f1c5e2556c65aed93cc0 in / "
                },
                {
                    "created": "2023-11-21T06:28:16.253991764Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:29.356144865Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:29.356144865Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:07:29.356144865Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:51.381449321Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.50023723Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.50023723Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:15:52.50023723Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:15:52.50023723Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:15:52.646272684Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.757385708Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.902782372Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.931877359Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.971842121Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.982190419Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:52.982190419Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:15:54.884832282Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:15:55.050519517Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:40:04.389545944Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-03T15:40:04.389545944Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-03T15:40:04.536375456Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:86d175f9abce2fb22e461a982e6d4c26451edede133cae6f0e681f49fd76ab62",
                    "sha256:6d08810a1dedfd66ee906213e2bee9fd49e15a9cae2c424502adf14bb0412e1b",
                    "sha256:ac476feecd719a11ea7bc02dd6fb737fda88d4a091e9e17537839476eec9eade",
                    "sha256:24399c1a2c767b4a0e835b127efcb9e960c6643060ef5550a30d4113f06afd18",
                    "sha256:fc27773c4d33d54205385456bff597530e89257f65f3184bf03b0e44748d71c9",
                    "sha256:c118693f04c0063f41694e1d07fb5a30a88346eadeda635ac9f249432b36204f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:985eea47b1c37db7d1fae5d089edecb0e6e6a0f7fe4baa8f8afec541f80db279",
                    "sha256:84b6ba60f3fefb3b87de0e05ce98a717fcfa09cd94d671ec3594e06c44dd5e61",
                    "sha256:c02c210e437435a571ebf8c6eda2e49cf67f946135e8752d387ade4efbbc17b8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:d9fa925072e1b3230361ad4e367563f12b9ef58df53e86bb190e5f6eb81e9919",
                    "sha256:89620efb5f2ab06db7e88653776ed24aa3e913bc1d46a40151a22b0b669ac87b",
                    "sha256:caf1eb1d892ca5d3bfcf00670febf2972f4df90aa505117e9336df5fc39080c2"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20231204": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2023-12-06T15:11:27.437213917Z",
            "history": [
                {
                    "created": "2023-11-21T06:28:15.789131205Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:f91ce1fc939cf47fa3e65fc897fe15d50189c5c43311f1c5e2556c65aed93cc0 in / "
                },
                {
                    "created": "2023-11-21T06:28:16.253991764Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:36.916801374Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:36.916801374Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:31:36.916801374Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:18.538174217Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.202184724Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.202184724Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:39:19.202184724Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:39:19.202184724Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:39:19.31347439Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.409655654Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.562308675Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.570760343Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.578661103Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.606179148Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:19.606179148Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T14:39:21.168235704Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T14:39:21.300453839Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:27.277227037Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2023-12-06T15:11:27.277227037Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2023-12-06T15:11:27.437213917Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:86d175f9abce2fb22e461a982e6d4c26451edede133cae6f0e681f49fd76ab62",
                    "sha256:7e2330a459d2671d1e02b3766a3adbfc668995b941240adfc059983703565906",
                    "sha256:61b8d351ea9601238a57597e74dae9bbd24b65eb67e49b6a19b307873c8e3dbe",
                    "sha256:f8a649475b8e264f6ab3b1b6c6d3206f4c668b988508ecde63bce54b59f9223f",
                    "sha256:be1317d4842ccd06c8f11cc25913e9a84780f3d933e2461b9928cc7fc1701d46",
                    "sha256:09341cdd42ed071bff6ffc9616069b68575ea3e5387d58dc1bf86f76dbbb11c1",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1d67a6c9f64b6e848a905d9ce533409c7295aead01d797ec4edbf1fec3651ef3",
                    "sha256:2eb172fd58ec86a0255b004e1f9216ba3d91018f8360ef7ed15122c5d51d1606",
                    "sha256:1c1a88009afb339f6e58d3a085d13e0c422718f2a9181375c22d37e6283fb4f3",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:63a2ddf0f2792977d2aff1f1709d1ddf303694c5e1ca856745431c27e7293f24",
                    "sha256:723dd98be2578fd6197e8c8d308c627ebfeeef0f8a7258da03cb846b1b1617ce",
                    "sha256:56941a79832742bd392830700decd93d1d564355d5d36730874ece082afdc3fb"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240101": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-01T19:31:02.773163501Z",
            "history": [
                {
                    "created": "2023-12-19T01:42:19.701164244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:87315e5e167fd91a3d1ede646c973d59238e8028ae596756114a38fc3f547a78 in / "
                },
                {
                    "created": "2023-12-19T01:42:20.083157584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.021589653Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.021589653Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T18:52:43.021589653Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.046043631Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.600762194Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.600762194Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:00:18.600762194Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:00:18.600762194Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:00:18.686286857Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.784004493Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.924002974Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.963996778Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.974260081Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.984197425Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:18.984197425Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:00:20.515553304Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:00:20.660112651Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:31:02.667206481Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-01T19:31:02.667206481Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-01T19:31:02.773163501Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bd5003216fd207ce863e6e32eba76fbb5b03c14c8a9c4bddd8f96fa122fd853f",
                    "sha256:81824f6357af09e5f194cb6f6e0be2dc47db7a062fa4a0c78124fbb2b1bf1f9a",
                    "sha256:dd97a1c1be3575d4c4e4c291416fb404538fb09e23c40c0c322f2e56077b6fde",
                    "sha256:ea4cc0f208420cfec860bd0ee0048e614b33c17b2cf83491322ab1f31d0e8e25",
                    "sha256:1b56705331f46e72b538c3b1514cde105103972c23ea9c8d8e1a8aca31f7c8a3",
                    "sha256:39874499c48465ea85373af3255a1fa3c2d71e008b6b0ad47d3cd355bb84d912",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:3a472f646dd37e8f907b9e285a43c73a18d93c76f4431ef3eb89f2e211e72287",
                    "sha256:1c6428f23e3224a2083ed9ca96b09e6b8d8499275ccd4f02cfd265b80cacb3f5",
                    "sha256:f7d586a15ebefc6793ec74a036b28de3d993eaaab14d4a15f55c7762e9f01dc5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fa3556a7812f045fc25911a5d66ab7295cba58532377711cf0fb9cdd2e56664a",
                    "sha256:928c91e73190a293bb0fb7783c1974868ae0d06e0b060152fa09aa09b2a5ed11",
                    "sha256:a3f81a58ef686987b0045aacea01198ccb2d67d7a845e087cf44126fa7813efd"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240103": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-03T17:22:39.595588681Z",
            "history": [
                {
                    "created": "2023-12-19T01:42:19.701164244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:87315e5e167fd91a3d1ede646c973d59238e8028ae596756114a38fc3f547a78 in / "
                },
                {
                    "created": "2023-12-19T01:42:20.083157584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.454891553Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.454891553Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:43:40.454891553Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:13.161712714Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:13.726063272Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:13.726063272Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:51:13.726063272Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:51:13.726063272Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:51:13.815026825Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:13.900797018Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:14.013367999Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:14.024694045Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:14.045276788Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:14.073252613Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:14.073252613Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T16:51:15.597160732Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T16:51:15.712267169Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:39.487703688Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-03T17:22:39.487703688Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-03T17:22:39.595588681Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bd5003216fd207ce863e6e32eba76fbb5b03c14c8a9c4bddd8f96fa122fd853f",
                    "sha256:768243a0f0fd3fe4770c5a5996e8518789e02897b309aa9469bc53e151de3131",
                    "sha256:b8fa6592e8cd705d4e647ea3036f9d9f94923ba8bd01b60a17829650073be55a",
                    "sha256:83a4d104825b6755af8ee16fba9f57cca55e01e47c703f365709439cfbf4beb8",
                    "sha256:a3a8acd80267f5fe0044a0f957eb05e7161a96f55fc239855b8f370c5091f3fc",
                    "sha256:b672a6422020617c530257ae3d37f0fcacedf4537ba992cc437b5c6579875683",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:aca9f10ee7fa3894eff21e00c4fdad1f10699a7d5fe9e735198da79a602f1e22",
                    "sha256:569765eaea52a01bdcc35e59e7c260f063a18de5da78de2859543547138b0dc7",
                    "sha256:f07f78d45b019498d722ccd318f59062193e75e795349f5c643a3aced643bfcb",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:1e0e86e2601673d46b13d030362111c831871b57eacc63b924d45b8483f92b5d",
                    "sha256:36d589660488faafcaa05bfc8fed0a7080f933adb410ac721934e9b29c449032",
                    "sha256:70a5caf379db3560870f4d56f3823c83037025e818e3418b34282d850881c505"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240105": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-01-07T20:33:17.812528674Z",
            "history": [
                {
                    "created": "2023-12-19T01:42:19.701164244Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:87315e5e167fd91a3d1ede646c973d59238e8028ae596756114a38fc3f547a78 in / "
                },
                {
                    "created": "2023-12-19T01:42:20.083157584Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:42.413434254Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:42.413434254Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T19:54:42.413434254Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:24.829060013Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.410435744Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.410435744Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:02:25.410435744Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:02:25.410435744Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:02:25.485137412Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.566658591Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.690309431Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.713401075Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.757367126Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.76550826Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:25.76550826Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:02:27.3123863Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:02:27.43183628Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:33:17.707654013Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-01-07T20:33:17.707654013Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-01-07T20:33:17.812528674Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:bd5003216fd207ce863e6e32eba76fbb5b03c14c8a9c4bddd8f96fa122fd853f",
                    "sha256:57c54fd382a74bcf84fcb39c0782c665ef25b930d8ffd930798c98cecd5b2f77",
                    "sha256:e0c665897629d49338dd976bdf2c8227652531b5a21965b7020cd3c1817c37f8",
                    "sha256:f6387863feebfbf2d4d3625017cc68624341239a4a32ab6ff3752934024ce1eb",
                    "sha256:c36be7ec2803c3519b5c512c7c1be8e04bbfae5e2259e016db140da54a94d0e2",
                    "sha256:07ef3a4c92324c7b943d00ae38c3b20355f1cc5e94ccb917f98cff270fba6927",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fc2a4faf93a5cfb355bb9868a4b2013ba665de8aee67f46fd312e41526a7b6e4",
                    "sha256:6fb33811229b7c63ebe73e4ad757961db37ebed7e409d5365e6420dcc9767e64",
                    "sha256:1e11cbef07312b1220400ec0b5811cfe24fe12eb6a42e3b7bf81f4ee0c78d285",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b65d92a183bfa656d30400bc4187478477939671ddf9d4b9650e7a69f722e9a2",
                    "sha256:2159fd6e3a34fac3ba000ba53c6a9c664706c6750825e6edd1e3a69ed3856272",
                    "sha256:2dc5afb3a45fc7cc3763e43e5cd2fbb760fa06ae900f601f98081b25e881ed05"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240201": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-02-02T01:03:44.160601687Z",
            "history": [
                {
                    "created": "2024-01-31T22:45:41.002396011Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:404098f18a319d87b54f468c2d47bc702383a93bba61beb9ae65c9b6bd1b08d5 in / "
                },
                {
                    "created": "2024-01-31T22:45:41.436970054Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:25:29.754055834Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:18.789686303Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.748489906Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:19.832651832Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:19.949861869Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.079134393Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.09135224Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.125740798Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.139415495Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:20.139415495Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T00:33:21.955425341Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T00:33:22.078187708Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:03:44.054333952Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-02-02T01:03:44.054333952Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-02-02T01:03:44.160601687Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:5271b2435f69bff7e11108cbf4784d51bc5367eb3dc8aaa71d8da2f76d86751c",
                    "sha256:167c04478fdddae9bc0eac451a7c0fe932c5b5c8ba1f00859ca1f9449d7a1971",
                    "sha256:6c186a33d3148c201b6ba142b90bfbde32e114a46d55c0bd218e33ad45c34618",
                    "sha256:68a12e8558ac4f8d81dfc1085d9ce023631e4da42056b11382a169d01884f681",
                    "sha256:c350458d5becc3b6f2cf5aa3c46e09a5a7169037f22e65ca998fea34e7e67815",
                    "sha256:77065778d26f965bcb0a3f1d015f8011edb394860c4994c6b20dcbdda35066b8",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:f16ca79ca4245a03e2cae12c12b2dca48fd25c2c04deeabfd46558f95a542913",
                    "sha256:58bfd280c2c81be65e5cf6f4a479948fee14d27a5e221fdf571260ac7464e866",
                    "sha256:07a3cb15be5f14bbd6768cd36948b99a6fa6ecfbae362a4035f13fe827d6164f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:edb02e4be2dfaa9d4a374c81cc2f5a06735f42e2ea612c18cfba223ce17d2858",
                    "sha256:9d70cfd3465f88dddcaf1b84a3178b7d163444af4ed21c71692d027ba8a626dd",
                    "sha256:61801af29ca6df231d0fb7b9be45ab7d9062eb8bed19765cf3ea73455d17efd1"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240227": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-01T02:09:24.99946652Z",
            "history": [
                {
                    "created": "2024-02-13T00:42:31.927314001Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9845794117f07a74f4253366621af46ecf348594efafc251d5e08491bf8dddc in / "
                },
                {
                    "created": "2024-02-13T00:42:32.344218278Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:03.704688113Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:03.704688113Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:31:03.704688113Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:19.618704135Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:20.204330164Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:20.278888116Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.371147367Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.512017328Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.547809396Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.558442816Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.575377034Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:20.575377034Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T01:39:22.151449583Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T01:39:22.26936068Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:24.895286699Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-01T02:09:24.895286699Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-01T02:09:24.99946652Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce14b055581c44de7e9c862cb652f77db386dff14fc4cf01e1ad21b660ec3f38",
                    "sha256:e9e6853672a2970e38c9888492638eef6ad56962f74c18600d29cb2a86570649",
                    "sha256:b40d1d1caf10abda5930e85015d96a22c3dfa64d47d82f35be4a2f6183b13f2e",
                    "sha256:06b98a02a22f071505d6be98ea829c27247ff0dc141dbb0fb2943702e092af59",
                    "sha256:8187f996a8db65a72444f4a36770d0bf6d3a3d314358eefb683b24ed4d3a4e91",
                    "sha256:60ab886784832860bb31a0278868645d8089b5eb651d99c25341bb4e3ddf2a02",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:39587871f11cb4433b34c0cf8361197422183998de3e5d78d27ed15976e976d3",
                    "sha256:270db374ec8346792d1095479fc9636d5b8b86bc7b6750b376b972c1096d9270",
                    "sha256:5261b5ac040425531992ecc29ea60a5470c906b08127f35365778a9568229d34",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:9af9cf531c57a3ef41f87618689b5c484507edf21a6c4e59b1a5cd67e85d6ea9",
                    "sha256:e6b99b993e11a9d586c50d4d026f85902bef65a7d9061e70b0fea4a313ca0c9c",
                    "sha256:439c3932e9e5e592453565838f7330bba6f2eeb56701dea4b962127cab812d25"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240304": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                },
                "OnBuild": null
            },
            "created": "2024-03-04T13:46:03.003338098Z",
            "history": [
                {
                    "created": "2024-02-13T00:42:31.927314001Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:a9845794117f07a74f4253366621af46ecf348594efafc251d5e08491bf8dddc in / "
                },
                {
                    "created": "2024-02-13T00:42:32.344218278Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:42.288221705Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:42.288221705Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:48:42.288221705Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:04.75478048Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:05.349603257Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:05.435777962Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.522438412Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.638196364Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.648544997Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.687212348Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.696272732Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:05.696272732Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T12:57:07.335540496Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T12:57:07.45302794Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:02.899284235Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-03-04T13:46:02.899284235Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-03-04T13:46:03.003338098Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:ce14b055581c44de7e9c862cb652f77db386dff14fc4cf01e1ad21b660ec3f38",
                    "sha256:90fdcadaef4e3b9ca4d0f4a9b2b39bda6507cb875a0d5fd01caafaf67a09da2f",
                    "sha256:50d2a0a3945dc9c8c5467074aa71080c817c5fe615727383825f03e7ac559c6b",
                    "sha256:0187b4463836ee4d50726fac3d6027508efd2b7cdaa7e9c5524481569929089d",
                    "sha256:f1833770787ec1190b1a76f092c0325dfae8f80dbe568911aaa36eefcad66586",
                    "sha256:63f8596acb3cba5d3b5819ccb2c250d5be580e21a92b3ddbc4f7d6ef060dea7f",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:987e0eb53e78e8ed04be665707e9b3e03320faa467729cfec7fb75fd45ae48df",
                    "sha256:097115b2dee01ffbacc8913f9e8c5242d0090497b9530c50251d08595f386ee0",
                    "sha256:497398cfb7038e71d858fa80cb140e912cf26e08a744905d4a483c8f62b30788",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:37e5bb2f19ac31b98b6fcfb877e24b4e2a9b03068fcd0fc541649ae3e670e1dc",
                    "sha256:c2a0932934d9f23ec03afcd35d9b6e52bb4fc43c01c807e627093aa9066cdcbb",
                    "sha256:cfe51f8cd60b0d08a514f852bcff3c6fc366479d53476be6f9904fddc812498c"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240401": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-02T13:24:45.994671534Z",
            "history": [
                {
                    "created": "2024-03-30T20:55:09.619182834Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:97ce7c2b141aefce55d96aa0d48aa3f2d80e8c2fbab838f8223e7bc6028eb6c0 in / "
                },
                {
                    "created": "2024-03-30T20:55:10.036508597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:29.810171521Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:29.810171521Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:40:29.810171521Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:30.734417352Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:31.317477572Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:31.391413657Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.472194476Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.616112719Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.660036125Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.66935303Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.678706291Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:31.678706291Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T12:48:33.261807476Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T12:48:33.378867874Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:24:45.874104554Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-02T13:24:45.874104554Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-02T13:24:45.994671534Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7b2113408632e421b96b4973140d4b4f7bc42d16eac94c362a78f873a7db3c4",
                    "sha256:21a499b362d1e69fe14f4bbf239d71b304f325e506988993eff8dbc2bcb8d9fb",
                    "sha256:08b0c4079b2097326a452c280cd17b5a3e2fe0a87acf5fc6479b6cff495a5608",
                    "sha256:8f3b87227fde99f7c074caff5b8bd0b1f5eedd46c0d2a648a7ec5d37291df352",
                    "sha256:09b0ae2f710df1f1dfe8baa1d90f9332478e8c1c9c53d820a823b9b7f743c87c",
                    "sha256:02b108f1473fe61b3b9e537da30ad471164cd2d3fdc762e408f6de0843738ebf",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:b7bc96e7361581ef0315f0d50235bfae2d6e6de9f13a5b821963b5b6475380c8",
                    "sha256:ab6073fffae2a300096ca07b8f883f13ecf8a442967f5a461779ce1260bf3d79",
                    "sha256:d9d289ecb10d221723e06edb9ba13a75c06d46d7858196c409931e08b42eedc5",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:fed66ee707abf3b5e1c8d61a0ae45186c2c17f386110ab7d155dc925ba3fc425",
                    "sha256:8abecd709ad410d16c99fd98db5cd502f214b5bbc6eb48496f644f13570b0e2f",
                    "sha256:4fbd91d359cb8c71b5ca181fb5b064d09bd75ad706df64c01f7ccdd4394f7ed1"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240408": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-04-09T16:16:55.127867907Z",
            "history": [
                {
                    "created": "2024-03-30T20:55:09.619182834Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:97ce7c2b141aefce55d96aa0d48aa3f2d80e8c2fbab838f8223e7bc6028eb6c0 in / "
                },
                {
                    "created": "2024-03-30T20:55:10.036508597Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.991196861Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.991196861Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:34:44.991196861Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:37.929365647Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:38.547640166Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:38.622493586Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.713383634Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.86440518Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.904376089Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.915460785Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.926290554Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:38.926290554Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T13:41:40.241916774Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T13:41:40.365158356Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:55.023502844Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-04-09T16:16:55.023502844Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-04-09T16:16:55.127867907Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:d7b2113408632e421b96b4973140d4b4f7bc42d16eac94c362a78f873a7db3c4",
                    "sha256:e478c6e0380e9a6132a7b7595bdfdaa69afbff7a59589b5aa61ed9034934ea8d",
                    "sha256:6311f1da69cd036e597129cc2f028e7dc015cdeb084a113953d65fa7c6aa44b3",
                    "sha256:cc33373bf50b19f19fd773424ea43726dba236a24654efe53d644de99b9c7e92",
                    "sha256:d79a55f9d489f679a91d8ba40933b7b9a95ee64ef3fe4fba82cc0c68be2b23fc",
                    "sha256:ce60876772934b93095da76edac9e7dfb43757bcd16c9707c674df8a9a2dc616",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:e73359ffaa50388b28e656b20344334a03cbc4098b800e1c4d01d8170e827a46",
                    "sha256:7f16b9d269c15ab1868a29df18371fb142d8dcdc46d96d6a0f9c8f966f6ca0c2",
                    "sha256:10582767685d8caa5283790f703f75daf9e2d69d0483cd6168d4da798e4db138",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:5c7f3e7e22e3e169f50791f8b0d4f60a6be2e72976fce852dc748b0d25a0e8f3",
                    "sha256:8356c332d1183862ffa1a024e5c3fa514c54cbf61598cad53efd7b0a49bbdbdb",
                    "sha256:af62bf551ae0f112ff59675c39a2dcd6f3dc2258feb09fe7d4948ce0ead6b54c"
                ]
            },
            "variant": "v8"
        },
        "sid-run-20240429": {
            "architecture": "arm64",
            "config": {
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                    "LC_ALL=C.UTF-8",
                    "DEBIAN_FRONTEND=noninteractive",
                    "UDEV=off"
                ],
                "Entrypoint": [
                    "/usr/bin/entry.sh"
                ],
                "Labels": {
                    "io.balena.architecture": "aarch64",
                    "io.balena.device-type": "revpi-connect-s",
                    "io.balena.qemu.version": "7.0.0+balena1-aarch64"
                }
            },
            "created": "2024-05-08T00:41:01.019176566Z",
            "history": [
                {
                    "created": "2024-04-24T04:11:46.549693015Z",
                    "created_by": "/bin/sh -c #(nop) ADD file:7d9288b588fabaa08e04cb672bc35a2097342b3f02f41139eb43d57de6da8c81 in / "
                },
                {
                    "created": "2024-04-24T04:11:46.888411048Z",
                    "created_by": "/bin/sh -c #(nop)  CMD [\"bash\"]",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.architecture=aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "LABEL io.balena.qemu.version=7.0.0+balena1-aarch64",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-07T23:58:41.17547253Z",
                    "created_by": "COPY qemu-aarch64-static /usr/bin # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:29.356936454Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends   sudo   ca-certificates   findutils   gnupg   dirmngr   inetutils-ping   netbase   curl   udev   procps   $(       if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then         echo 'iproute';       else         echo 'iproute2';       fi   )   && rm -rf /var/lib/apt/lists/*   && c_rehash   && echo '#!/bin/sh\\nset -e\\nset -u\\nexport DEBIAN_FRONTEND=noninteractive\\nn=0\\nmax=2\\nuntil [ $n -gt $max ]; do\\n  set +e\\n  (\\n    apt-get update -qq &&\\n    apt-get install -y --no-install-recommends \"$@\"\\n  )\\n  CODE=$?\\n  set -e\\n  if [ $CODE -eq 0 ]; then\\n    break\\n  fi\\n  if [ $n -eq $max ]; then\\n    exit $CODE\\n  fi\\n  echo \"apt failed, retrying\"\\n  n=$(($n + 1))\\ndone\\nrm -rf /var/cache/apt/archives/* /var/lib/apt/lists/*' > /usr/sbin/install_packages   && chmod 0755 \"/usr/sbin/install_packages\" # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz\"   && echo \"1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz\" | sha256sum -c -   && tar -xzf \"resin-xbuild1.0.0.tar.gz\"   && rm \"resin-xbuild1.0.0.tar.gz\"   && chmod +x resin-xbuild   && mv resin-xbuild /usr/bin   && ln -sf resin-xbuild /usr/bin/cross-build-start   && ln -sf resin-xbuild /usr/bin/cross-build-end # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV LC_ALL=C.UTF-8",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV DEBIAN_FRONTEND=noninteractive",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.096199251Z",
                    "created_by": "ENV UDEV=off",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:30.181878158Z",
                    "created_by": "RUN /bin/sh -c echo 'path-exclude /usr/share/doc/*\\npath-include /usr/share/doc/*/copyright\\npath-exclude /usr/share/man/*\\npath-exclude /usr/share/groff/*\\npath-exclude /usr/share/info/*\\npath-exclude /usr/share/lintian/*\\npath-exclude /usr/share/linda/*\\npath-exclude /usr/share/locale/*\\npath-include /usr/share/locale/en*' > /etc/dpkg/dpkg.cfg.d/01_nodoc # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.264965848Z",
                    "created_by": "RUN /bin/sh -c echo 'APT::Get::Assume-Yes \"true\";\\nAPT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";\\nquiet \"true\";' > /etc/apt/apt.conf.d/01_buildconfig # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.405205375Z",
                    "created_by": "RUN /bin/sh -c mkdir -p /usr/share/man/man1 # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.444959158Z",
                    "created_by": "COPY entry.sh /usr/bin/entry.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.457933015Z",
                    "created_by": "COPY balena-info /usr/bin/balena-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "COPY balena-idle /usr/bin/balena-idle # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:30.470473711Z",
                    "created_by": "ENTRYPOINT [\"/usr/bin/entry.sh\"]",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:05:31.760909982Z",
                    "created_by": "RUN /bin/sh -c curl -SLO \"https://raw.githubusercontent.com/balena-io-library/base-images/a95300eda2320833e537ca20d728a870bf02177d/scripts/assets/tests/test-os.sh\"   && echo \"Running test-os\"   && chmod +x test-os.sh   && bash test-os.sh debian sid   && rm -rf test-os.sh # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:05:31.900039891Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:00.90244188Z",
                    "created_by": "LABEL io.balena.device-type=revpi-connect-s",
                    "comment": "buildkit.dockerfile.v0",
                    "empty_layer": true
                },
                {
                    "created": "2024-05-08T00:41:00.90244188Z",
                    "created_by": "RUN /bin/sh -c apt-get update && apt-get install -y --no-install-recommends \t\tless \t\tkmod \t\tnano \t\tnet-tools \t\tifupdown \t\tiputils-ping \t\ti2c-tools \t\tusbutils \t&& rm -rf /var/lib/apt/lists/* # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                },
                {
                    "created": "2024-05-08T00:41:01.019176566Z",
                    "created_by": "RUN /bin/sh -c [ ! -d /.balena/messages ] && mkdir -p /.balena/messages; echo 'Here are a few details about this Docker image (For more information please visit https://www.balena.io/docs/reference/base-images/base-images/): \\nArchitecture: ARM v8 \\nOS: Debian Sid \\nVariant: run variant \\nDefault variable(s): UDEV=off \\nExtra features: \\n- Easy way to install packages with `install_packages <package-name>` command \\n- Run anywhere with cross-build feature  (for ARM only) \\n- Keep the container idling with `balena-idle` command \\n- Show base image details with `balena-info` command' > /.balena/messages/image-info # buildkit",
                    "comment": "buildkit.dockerfile.v0"
                }
            ],
            "os": "linux",
            "rootfs": {
                "type": "layers",
                "diff_ids": [
                    "sha256:9a62ed1b29f3183a736f710a1ecbee6c64eeb410707ef36a1efbd2569c514f4e",
                    "sha256:5b578891d4c96f360d32e6765110a48a94e797bb65d704e0052143856e4c478b",
                    "sha256:9bd0d3a024c6d5c7b0d983a205069c8a81481bfcefec3526d45251dc5f3b5888",
                    "sha256:eaa995956e31981bcfd010bf69f2abb4a65c9f41f1ed53653695c69bb9ea4544",
                    "sha256:df5999b6e8e895cbb929edd2daa274878fe6c357ee79dfef1b9b26c51fcc96b5",
                    "sha256:c9568c957fbf55941583edd4edd6fd10b4207315d103484d27a9c6aa2ef56d19",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:935b9ff01ce4f98d41938bf1aef95c5a0b90d4c9d9793e1fa252c8f358516c81",
                    "sha256:745bb669cf154a6b1a0219368923e35b5fc375dd557248565b549b4f46b5f52c",
                    "sha256:542ad24d729f72e1c11b049e7c44b87821487b16fcf7dd922d6a4c5ba6aa391d",
                    "sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef",
                    "sha256:549089fb1ee3ed008f80472bc7a312bf28a29d9996dde8fc5872fee1b9ede208",
                    "sha256:5b33e1568e10cf0b569cb46c00bd844100c17a4105d4e02f856e8eeb446af627",
                    "sha256:717d9b9203307bbcc4d1bc4e2a0cc56dea9cbbff65426b4cc1a743f3e37927b8"
                ]
            },
            "variant": "v8"
        }
    }
}